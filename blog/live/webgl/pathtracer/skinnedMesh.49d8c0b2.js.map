{"mappings":"IwFOI,EAAY,EiBFZ,E/FoCA,EAAY,EAAU,EAAU,EAAQ,EAAO,EAC/C,EAAO,EACP,E,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,yB,I,G,I,E,E,S,E,E,S,E,E,S,E,E,QTtCJ,OAAM,UAA0B,EAAA,YAAW,CAE1C,aAAc,CAEb,KAAK,CAAE,CAEN,SAAU,CAET,OAAQ,CAAE,MAAO,IAAK,EACtB,KAAM,CAAE,MAAO,CAAE,CAElB,EAEA,aAAwB,CAAC;;;;;;;;GAQzB,CAAC,CAED,eAA0B,CAAC;;;;;IAK1B,EAAG,EAAA,cAAA,CAA2B;;;;;;;;;;;;GAY/B,CAAC,AAEF,EAED,CAED,CAEO,MAAM,EAEZ,YAAa,CAAQ,CAAG,CAEvB,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,cAAc,CAAG,IAAI,EAAA,cAAa,CAAG,GAC1C,IAAI,CAAC,QAAQ,CAAG,IAAI,EAAA,cAAa,CAAG,IAAI,GACxC,IAAI,CAAC,YAAY,CAAG,IAAI,EAAA,iBAAgB,CAAG,EAAG,EAAG,CAAE,KAAM,EAAA,SAAQ,CAAG,OAAQ,EAAA,UAAS,AAAE,EAExF,CAEA,SAAU,CAET,IAAI,CAAC,cAAc,CAAC,OAAO,GAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,GACrB,IAAI,CAAC,YAAY,CAAC,OAAO,EAE1B,CAEA,SAAU,CAAO,CAAE,CAAI,CAAG,CAEzB,GAAM,CAAA,eAAE,CAAc,CAAA,aAAE,CAAY,CAAA,SAAE,CAAQ,CAAA,SAAE,CAAQ,CAAE,CAAG,IAAI,CAG3D,EAAc,EAAe,mBAAmB,CAAE,GAGlD,CAAA,MAAE,CAAK,CAAA,OAAE,CAAM,CAAE,CAA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","sources":["<anon>","src/utils/BlurredEnvMapGenerator.js","src/materials/MaterialBase.js","src/shader/common/util_functions.glsl.js","node_modules/three/examples/jsm/loaders/RGBELoader.js","example/utils/generateRadialFloorTexture.js","example/utils/getScaledSettings.js","example/utils/LoaderElement.js","src/shader/common/math_functions.glsl.js","src/shader/bsdf/ggx_functions.glsl.js","example/skinnedMesh.js","node_modules/three/examples/jsm/nodes/Nodes.js","node_modules/three/examples/jsm/nodes/core/constants.js","node_modules/three/examples/jsm/nodes/core/AssignNode.js","node_modules/three/examples/jsm/nodes/core/Node.js","node_modules/three/examples/jsm/nodes/core/NodeUtils.js","node_modules/three/examples/jsm/nodes/core/TempNode.js","node_modules/three/examples/jsm/nodes/shadernode/ShaderNode.js","node_modules/three/examples/jsm/nodes/utils/ArrayElementNode.js","node_modules/three/examples/jsm/nodes/utils/ConvertNode.js","node_modules/three/examples/jsm/nodes/utils/JoinNode.js","node_modules/three/examples/jsm/nodes/utils/SplitNode.js","node_modules/three/examples/jsm/nodes/utils/SetNode.js","node_modules/three/examples/jsm/nodes/core/ConstNode.js","node_modules/three/examples/jsm/nodes/core/InputNode.js","node_modules/three/examples/jsm/nodes/core/AttributeNode.js","node_modules/three/examples/jsm/nodes/core/VaryingNode.js","node_modules/three/examples/jsm/nodes/core/BypassNode.js","node_modules/three/examples/jsm/nodes/core/CacheNode.js","node_modules/three/examples/jsm/nodes/core/NodeCache.js","node_modules/three/examples/jsm/nodes/core/ContextNode.js","node_modules/three/examples/jsm/nodes/core/IndexNode.js","node_modules/three/examples/jsm/nodes/core/LightingModel.js","node_modules/three/examples/jsm/nodes/core/VarNode.js","node_modules/three/examples/jsm/nodes/core/NodeAttribute.js","node_modules/three/examples/jsm/nodes/core/NodeBuilder.js","node_modules/three/examples/jsm/nodes/core/NodeUniform.js","node_modules/three/examples/jsm/nodes/core/NodeVarying.js","node_modules/three/examples/jsm/nodes/core/NodeVar.js","node_modules/three/examples/jsm/nodes/core/NodeCode.js","node_modules/three/examples/jsm/nodes/core/NodeKeywords.js","node_modules/three/examples/jsm/nodes/core/ParameterNode.js","node_modules/three/examples/jsm/nodes/core/PropertyNode.js","node_modules/three/examples/jsm/nodes/code/FunctionNode.js","node_modules/three/examples/jsm/nodes/code/CodeNode.js","node_modules/three/examples/jsm/nodes/materials/NodeMaterial.js","node_modules/three/examples/jsm/nodes/accessors/MaterialNode.js","node_modules/three/examples/jsm/nodes/accessors/ReferenceNode.js","node_modules/three/examples/jsm/nodes/core/UniformNode.js","node_modules/three/examples/jsm/nodes/core/UniformGroupNode.js","node_modules/three/examples/jsm/nodes/accessors/TextureNode.js","node_modules/three/examples/jsm/nodes/accessors/UVNode.js","node_modules/three/examples/jsm/nodes/accessors/TextureSizeNode.js","node_modules/three/examples/jsm/nodes/display/ColorSpaceNode.js","node_modules/three/examples/jsm/nodes/math/MathNode.js","node_modules/three/examples/jsm/nodes/math/OperatorNode.js","node_modules/three/examples/jsm/nodes/code/ExpressionNode.js","node_modules/three/examples/jsm/nodes/utils/MaxMipLevelNode.js","node_modules/three/examples/jsm/nodes/accessors/BufferNode.js","node_modules/three/examples/jsm/nodes/accessors/UniformsNode.js","node_modules/three/examples/jsm/nodes/accessors/MaterialReferenceNode.js","node_modules/three/examples/jsm/nodes/accessors/NormalNode.js","node_modules/three/examples/jsm/nodes/accessors/CameraNode.js","node_modules/three/examples/jsm/nodes/accessors/Object3DNode.js","node_modules/three/examples/jsm/nodes/accessors/ModelNode.js","node_modules/three/examples/jsm/nodes/accessors/ModelViewProjectionNode.js","node_modules/three/examples/jsm/nodes/accessors/PositionNode.js","node_modules/three/examples/jsm/nodes/accessors/InstanceNode.js","node_modules/three/examples/jsm/nodes/accessors/BufferAttributeNode.js","node_modules/three/examples/jsm/nodes/accessors/BatchNode.js","node_modules/three/examples/jsm/nodes/accessors/TangentNode.js","node_modules/three/examples/jsm/nodes/accessors/SkinningNode.js","node_modules/three/examples/jsm/nodes/accessors/MorphNode.js","node_modules/three/examples/jsm/nodes/utils/LoopNode.js","node_modules/three/examples/jsm/nodes/accessors/CubeTextureNode.js","node_modules/three/examples/jsm/nodes/accessors/ReflectVectorNode.js","node_modules/three/examples/jsm/nodes/lighting/LightsNode.js","node_modules/three/examples/jsm/nodes/lighting/AnalyticLightNode.js","node_modules/three/examples/jsm/nodes/lighting/LightingNode.js","node_modules/three/examples/jsm/nodes/lighting/AONode.js","node_modules/three/examples/jsm/nodes/lighting/LightingContextNode.js","node_modules/three/examples/jsm/nodes/lighting/EnvironmentNode.js","node_modules/three/examples/jsm/nodes/pmrem/PMREMNode.js","node_modules/three/examples/jsm/nodes/pmrem/PMREMUtils.js","node_modules/three/examples/jsm/nodes/math/CondNode.js","node_modules/three/examples/jsm/nodes/display/ViewportDepthNode.js","node_modules/three/examples/jsm/nodes/display/ViewportDepthTextureNode.js","node_modules/three/examples/jsm/nodes/display/ViewportTextureNode.js","node_modules/three/examples/jsm/nodes/display/ViewportNode.js","node_modules/three/examples/jsm/nodes/accessors/ClippingNode.js","node_modules/three/examples/jsm/nodes/display/FrontFacingNode.js","node_modules/three/examples/jsm/renderers/common/nodes/NodeUniform.js","node_modules/three/examples/jsm/renderers/common/Uniform.js","node_modules/three/examples/jsm/nodes/core/StackNode.js","node_modules/three/examples/jsm/renderers/common/CubeRenderTarget.js","node_modules/three/examples/jsm/nodes/utils/EquirectUVNode.js","node_modules/three/examples/jsm/renderers/common/ChainMap.js","node_modules/three/examples/jsm/renderers/common/extras/PMREMGenerator.js","node_modules/three/examples/jsm/nodes/core/NodeFrame.js","node_modules/three/examples/jsm/nodes/core/NodeFunctionInput.js","node_modules/three/examples/jsm/nodes/core/OutputStructNode.js","node_modules/three/examples/jsm/nodes/core/StructTypeNode.js","node_modules/three/examples/jsm/nodes/math/HashNode.js","node_modules/three/examples/jsm/nodes/math/MathUtils.js","node_modules/three/examples/jsm/nodes/math/TriNoise3D.js","node_modules/three/examples/jsm/nodes/utils/DiscardNode.js","node_modules/three/examples/jsm/nodes/utils/FunctionOverloadingNode.js","node_modules/three/examples/jsm/nodes/utils/MatcapUVNode.js","node_modules/three/examples/jsm/nodes/utils/OscNode.js","node_modules/three/examples/jsm/nodes/utils/TimerNode.js","node_modules/three/examples/jsm/nodes/utils/PackingNode.js","node_modules/three/examples/jsm/nodes/utils/RemapNode.js","node_modules/three/examples/jsm/nodes/utils/RotateUVNode.js","node_modules/three/examples/jsm/nodes/utils/RotateNode.js","node_modules/three/examples/jsm/nodes/utils/SpriteSheetUVNode.js","node_modules/three/examples/jsm/nodes/utils/StorageArrayElementNode.js","node_modules/three/examples/jsm/nodes/utils/TriplanarTexturesNode.js","node_modules/three/examples/jsm/nodes/utils/ReflectorNode.js","node_modules/three/examples/jsm/nodes/accessors/AccessorsUtils.js","node_modules/three/examples/jsm/nodes/accessors/BitangentNode.js","node_modules/three/examples/jsm/nodes/accessors/VertexColorNode.js","node_modules/three/examples/jsm/nodes/accessors/RendererReferenceNode.js","node_modules/three/examples/jsm/nodes/accessors/TextureBicubicNode.js","node_modules/three/examples/jsm/nodes/accessors/PointUVNode.js","node_modules/three/examples/jsm/nodes/accessors/SceneNode.js","node_modules/three/examples/jsm/nodes/accessors/StorageBufferNode.js","node_modules/three/examples/jsm/nodes/accessors/TextureStoreNode.js","node_modules/three/examples/jsm/nodes/accessors/UserDataNode.js","node_modules/three/examples/jsm/nodes/display/BlendModeNode.js","node_modules/three/examples/jsm/nodes/display/BumpMapNode.js","node_modules/three/examples/jsm/nodes/display/ColorAdjustmentNode.js","node_modules/three/examples/jsm/nodes/display/NormalMapNode.js","node_modules/three/examples/jsm/nodes/display/PosterizeNode.js","node_modules/three/examples/jsm/nodes/display/ToneMappingNode.js","node_modules/three/examples/jsm/nodes/display/ViewportSharedTextureNode.js","node_modules/three/examples/jsm/nodes/display/GaussianBlurNode.js","node_modules/three/examples/jsm/nodes/display/PassNode.js","node_modules/three/examples/jsm/objects/QuadMesh.js","node_modules/three/examples/jsm/nodes/display/AfterImageNode.js","node_modules/three/examples/jsm/nodes/display/AnamorphicNode.js","node_modules/three/examples/jsm/nodes/code/FunctionCallNode.js","node_modules/three/examples/jsm/nodes/code/ScriptableNode.js","node_modules/three/examples/jsm/nodes/code/ScriptableValueNode.js","node_modules/three/examples/jsm/nodes/fog/FogNode.js","node_modules/three/examples/jsm/nodes/fog/FogRangeNode.js","node_modules/three/examples/jsm/nodes/fog/FogExp2Node.js","node_modules/three/examples/jsm/nodes/geometry/RangeNode.js","node_modules/three/examples/jsm/nodes/gpgpu/ComputeNode.js","node_modules/three/examples/jsm/nodes/lighting/LightNode.js","node_modules/three/examples/jsm/nodes/lighting/PointLightNode.js","node_modules/three/examples/jsm/nodes/lighting/LightUtils.js","node_modules/three/examples/jsm/nodes/lighting/DirectionalLightNode.js","node_modules/three/examples/jsm/nodes/lighting/SpotLightNode.js","node_modules/three/examples/jsm/nodes/lighting/IESSpotLightNode.js","node_modules/three/examples/jsm/lights/IESSpotLight.js","node_modules/three/examples/jsm/nodes/lighting/AmbientLightNode.js","node_modules/three/examples/jsm/nodes/lighting/HemisphereLightNode.js","node_modules/three/examples/jsm/nodes/procedural/CheckerNode.js","node_modules/three/examples/jsm/nodes/loaders/NodeLoader.js","node_modules/three/examples/jsm/nodes/loaders/NodeObjectLoader.js","node_modules/three/examples/jsm/nodes/loaders/NodeMaterialLoader.js","node_modules/three/examples/jsm/nodes/materials/Materials.js","node_modules/three/examples/jsm/nodes/materials/InstancedPointsNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/LineBasicNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/LineDashedNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/Line2NodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/MeshNormalNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/MeshBasicNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/MeshLambertNodeMaterial.js","node_modules/three/examples/jsm/nodes/functions/PhongLightingModel.js","node_modules/three/examples/jsm/nodes/functions/BSDF/F_Schlick.js","node_modules/three/examples/jsm/nodes/functions/BSDF/BRDF_Lambert.js","node_modules/three/examples/jsm/nodes/materials/MeshPhongNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/MeshStandardNodeMaterial.js","node_modules/three/examples/jsm/nodes/functions/material/getRoughness.js","node_modules/three/examples/jsm/nodes/functions/material/getGeometryRoughness.js","node_modules/three/examples/jsm/nodes/functions/PhysicalLightingModel.js","node_modules/three/examples/jsm/nodes/functions/BSDF/BRDF_GGX.js","node_modules/three/examples/jsm/nodes/functions/BSDF/V_GGX_SmithCorrelated.js","node_modules/three/examples/jsm/nodes/functions/BSDF/D_GGX.js","node_modules/three/examples/jsm/nodes/functions/BSDF/DFGApprox.js","node_modules/three/examples/jsm/nodes/functions/BSDF/EnvironmentBRDF.js","node_modules/three/examples/jsm/nodes/functions/BSDF/Schlick_to_F0.js","node_modules/three/examples/jsm/nodes/functions/BSDF/BRDF_Sheen.js","node_modules/three/examples/jsm/nodes/materials/MeshPhysicalNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/MeshSSSNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/PointsNodeMaterial.js","node_modules/three/examples/jsm/nodes/materials/SpriteNodeMaterial.js","node_modules/three/examples/jsm/nodes/parsers/GLSLNodeParser.js","node_modules/three/examples/jsm/nodes/core/NodeParser.js","node_modules/three/examples/jsm/nodes/parsers/GLSLNodeFunction.js","node_modules/three/examples/jsm/nodes/core/NodeFunction.js","node_modules/three/examples/jsm/nodes/materialx/MaterialXNodes.js","node_modules/three/examples/jsm/nodes/materialx/lib/mx_noise.js","node_modules/three/examples/jsm/nodes/materialx/lib/mx_hsv.js","node_modules/three/examples/jsm/nodes/materialx/lib/mx_transform_color.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5b70\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5b70\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"eLX8K\", function(module, exports) {\n\n$parcel$export(module.exports, \"BlurredEnvMapGenerator\", () => $ac13547279de9cd0$export$13ef63fd7e562136);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $RPVlj = parcelRequire(\"RPVlj\");\n\nvar $9fZ6X = parcelRequire(\"9fZ6X\");\n\nvar $dUUQZ = parcelRequire(\"dUUQZ\");\nclass $ac13547279de9cd0$var$PMREMCopyMaterial extends (0, $9fZ6X.MaterialBase) {\n    constructor(){\n        super({\n            uniforms: {\n                envMap: {\n                    value: null\n                },\n                blur: {\n                    value: 0\n                }\n            },\n            vertexShader: /* glsl */ `\r\n\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\n            fragmentShader: /* glsl */ `\r\n\r\n\t\t\t\t#include <common>\r\n\t\t\t\t#include <cube_uv_reflection_fragment>\r\n\r\n\t\t\t\t${$dUUQZ.util_functions}\r\n\r\n\t\t\t\tuniform sampler2D envMap;\r\n\t\t\t\tuniform float blur;\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 rayDirection = equirectUvToDirection( vUv );\r\n\t\t\t\t\tgl_FragColor = textureCubeUV( envMap, rayDirection, blur );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t`\n        });\n    }\n}\nclass $ac13547279de9cd0$export$13ef63fd7e562136 {\n    constructor(renderer){\n        this.renderer = renderer;\n        this.pmremGenerator = new (0, $ilwiq.PMREMGenerator)(renderer);\n        this.copyQuad = new (0, $RPVlj.FullScreenQuad)(new $ac13547279de9cd0$var$PMREMCopyMaterial());\n        this.renderTarget = new (0, $ilwiq.WebGLRenderTarget)(1, 1, {\n            type: (0, $ilwiq.FloatType),\n            format: (0, $ilwiq.RGBAFormat)\n        });\n    }\n    dispose() {\n        this.pmremGenerator.dispose();\n        this.copyQuad.dispose();\n        this.renderTarget.dispose();\n    }\n    generate(texture, blur) {\n        const { pmremGenerator: pmremGenerator, renderTarget: renderTarget, copyQuad: copyQuad, renderer: renderer } = this;\n        // get the pmrem target\n        const pmremTarget = pmremGenerator.fromEquirectangular(texture);\n        // set up the material\n        const { width: width, height: height } = texture.image;\n        renderTarget.setSize(width, height);\n        copyQuad.material.envMap = pmremTarget.texture;\n        copyQuad.material.blur = blur;\n        // render\n        const prevRenderTarget = renderer.getRenderTarget();\n        const prevClear = renderer.autoClear;\n        renderer.setRenderTarget(renderTarget);\n        renderer.autoClear = true;\n        copyQuad.render(renderer);\n        renderer.setRenderTarget(prevRenderTarget);\n        renderer.autoClear = prevClear;\n        // read the data back\n        const buffer = new Uint16Array(width * height * 4);\n        const readBuffer = new Float32Array(width * height * 4);\n        renderer.readRenderTargetPixels(renderTarget, 0, 0, width, height, readBuffer);\n        for(let i = 0, l = readBuffer.length; i < l; i++)buffer[i] = (0, $ilwiq.DataUtils).toHalfFloat(readBuffer[i]);\n        const result = new (0, $ilwiq.DataTexture)(buffer, width, height, (0, $ilwiq.RGBAFormat), (0, $ilwiq.HalfFloatType));\n        result.minFilter = texture.minFilter;\n        result.magFilter = texture.magFilter;\n        result.wrapS = texture.wrapS;\n        result.wrapT = texture.wrapT;\n        result.mapping = (0, $ilwiq.EquirectangularReflectionMapping);\n        result.needsUpdate = true;\n        // dispose of the now unneeded target\n        pmremTarget.dispose();\n        return result;\n    }\n}\n\n});\nparcelRegister(\"9fZ6X\", function(module, exports) {\n\n$parcel$export(module.exports, \"MaterialBase\", () => $6bd4eb2914ee2835$export$f1ac3a587b6cbb5d);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $6bd4eb2914ee2835$export$f1ac3a587b6cbb5d extends (0, $ilwiq.ShaderMaterial) {\n    set needsUpdate(v) {\n        super.needsUpdate = true;\n        this.dispatchEvent({\n            type: \"recompilation\"\n        });\n    }\n    constructor(shader){\n        super(shader);\n        for(const key in this.uniforms)Object.defineProperty(this, key, {\n            get () {\n                return this.uniforms[key].value;\n            },\n            set (v) {\n                this.uniforms[key].value = v;\n            }\n        });\n    }\n    // sets the given named define value and sets \"needsUpdate\" to true if it's different\n    setDefine(name, value) {\n        if (value === undefined || value === null) {\n            if (name in this.defines) {\n                delete this.defines[name];\n                this.needsUpdate = true;\n                return true;\n            }\n        } else if (this.defines[name] !== value) {\n            this.defines[name] = value;\n            this.needsUpdate = true;\n            return true;\n        }\n        return false;\n    }\n}\n\n});\n\nparcelRegister(\"dUUQZ\", function(module, exports) {\n\n$parcel$export(module.exports, \"util_functions\", () => $a21c9b4177584031$export$fe1d788deccfbee3);\nconst $a21c9b4177584031$export$fe1d788deccfbee3 = /* glsl */ `\r\n\r\n\t// TODO: possibly this should be renamed something related to material or path tracing logic\r\n\r\n\t#ifndef RAY_OFFSET\r\n\t#define RAY_OFFSET 1e-4\r\n\t#endif\r\n\r\n\t// adjust the hit point by the surface normal by a factor of some offset and the\r\n\t// maximum component-wise value of the current point to accommodate floating point\r\n\t// error as values increase.\r\n\tvec3 stepRayOrigin( vec3 rayOrigin, vec3 rayDirection, vec3 offset, float dist ) {\r\n\r\n\t\tvec3 point = rayOrigin + rayDirection * dist;\r\n\t\tvec3 absPoint = abs( point );\r\n\t\tfloat maxPoint = max( absPoint.x, max( absPoint.y, absPoint.z ) );\r\n\t\treturn point + offset * ( maxPoint + 1.0 ) * RAY_OFFSET;\r\n\r\n\t}\r\n\r\n\t// https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_volume/README.md#attenuation\r\n\tvec3 transmissionAttenuation( float dist, vec3 attColor, float attDist ) {\r\n\r\n\t\tvec3 ot = - log( attColor ) / attDist;\r\n\t\treturn exp( - ot * dist );\r\n\r\n\t}\r\n\r\n\tvec3 getHalfVector( vec3 wi, vec3 wo, float eta ) {\r\n\r\n\t\t// get the half vector - assuming if the light incident vector is on the other side\r\n\t\t// of the that it's transmissive.\r\n\t\tvec3 h;\r\n\t\tif ( wi.z > 0.0 ) {\r\n\r\n\t\t\th = normalize( wi + wo );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Scale by the ior ratio to retrieve the appropriate half vector\r\n\t\t\t// From Section 2.2 on computing the transmission half vector:\r\n\t\t\t// https://blog.selfshadow.com/publications/s2015-shading-course/burley/s2015_pbs_disney_bsdf_notes.pdf\r\n\t\t\th = normalize( wi + wo * eta );\r\n\r\n\t\t}\r\n\r\n\t\th *= sign( h.z );\r\n\t\treturn h;\r\n\r\n\t}\r\n\r\n\tvec3 getHalfVector( vec3 a, vec3 b ) {\r\n\r\n\t\treturn normalize( a + b );\r\n\r\n\t}\r\n\r\n\t// The discrepancy between interpolated surface normal and geometry normal can cause issues when a ray\r\n\t// is cast that is on the top side of the geometry normal plane but below the surface normal plane. If\r\n\t// we find a ray like that we ignore it to avoid artifacts.\r\n\t// This function returns if the direction is on the same side of both planes.\r\n\tbool isDirectionValid( vec3 direction, vec3 surfaceNormal, vec3 geometryNormal ) {\r\n\r\n\t\tbool aboveSurfaceNormal = dot( direction, surfaceNormal ) > 0.0;\r\n\t\tbool aboveGeometryNormal = dot( direction, geometryNormal ) > 0.0;\r\n\t\treturn aboveSurfaceNormal == aboveGeometryNormal;\r\n\r\n\t}\r\n\r\n\t// ray sampling x and z are swapped to align with expected background view\r\n\tvec2 equirectDirectionToUv( vec3 direction ) {\r\n\r\n\t\t// from Spherical.setFromCartesianCoords\r\n\t\tvec2 uv = vec2( atan( direction.z, direction.x ), acos( direction.y ) );\r\n\t\tuv /= vec2( 2.0 * PI, PI );\r\n\r\n\t\t// apply adjustments to get values in range [0, 1] and y right side up\r\n\t\tuv.x += 0.5;\r\n\t\tuv.y = 1.0 - uv.y;\r\n\t\treturn uv;\r\n\r\n\t}\r\n\r\n\tvec3 equirectUvToDirection( vec2 uv ) {\r\n\r\n\t\t// undo above adjustments\r\n\t\tuv.x -= 0.5;\r\n\t\tuv.y = 1.0 - uv.y;\r\n\r\n\t\t// from Vector3.setFromSphericalCoords\r\n\t\tfloat theta = uv.x * 2.0 * PI;\r\n\t\tfloat phi = uv.y * PI;\r\n\r\n\t\tfloat sinPhi = sin( phi );\r\n\r\n\t\treturn vec3( sinPhi * cos( theta ), cos( phi ), sinPhi * sin( theta ) );\r\n\r\n\t}\r\n\r\n\t// power heuristic for multiple importance sampling\r\n\tfloat misHeuristic( float a, float b ) {\r\n\r\n\t\tfloat aa = a * a;\r\n\t\tfloat bb = b * b;\r\n\t\treturn aa / ( aa + bb );\r\n\r\n\t}\r\n\r\n\t// tentFilter from Peter Shirley's 'Realistic Ray Tracing (2nd Edition)' book, pg. 60\r\n\t// erichlof/THREE.js-PathTracing-Renderer/\r\n\tfloat tentFilter( float x ) {\r\n\r\n\t\treturn x < 0.5 ? sqrt( 2.0 * x ) - 1.0 : 1.0 - sqrt( 2.0 - ( 2.0 * x ) );\r\n\r\n\t}\r\n`;\n\n});\n\n\nparcelRegister(\"891vQ\", function(module, exports) {\n\n$parcel$export(module.exports, \"RGBELoader\", () => $5ee05658f4b0e3bf$export$d076a711b55c758a);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\nclass $5ee05658f4b0e3bf$export$d076a711b55c758a extends (0, $ilwiq.DataTextureLoader) {\n    constructor(manager){\n        super(manager);\n        this.type = (0, $ilwiq.HalfFloatType);\n    }\n    // adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n    parse(buffer) {\n        const /* default error routine.  change this to change error handling */ rgbe_read_error = 1, rgbe_write_error = 2, rgbe_format_error = 3, rgbe_memory_error = 4, rgbe_error = function(rgbe_error_code, msg) {\n            switch(rgbe_error_code){\n                case rgbe_read_error:\n                    throw new Error(\"THREE.RGBELoader: Read Error: \" + (msg || \"\"));\n                case rgbe_write_error:\n                    throw new Error(\"THREE.RGBELoader: Write Error: \" + (msg || \"\"));\n                case rgbe_format_error:\n                    throw new Error(\"THREE.RGBELoader: Bad File Format: \" + (msg || \"\"));\n                default:\n                case rgbe_memory_error:\n                    throw new Error(\"THREE.RGBELoader: Memory Error: \" + (msg || \"\"));\n            }\n        }, /* offsets to red, green, and blue components in a data (float) pixel */ //RGBE_DATA_RED = 0,\n        //RGBE_DATA_GREEN = 1,\n        //RGBE_DATA_BLUE = 2,\n        /* number of floats per pixel, use 4 since stored in rgba image format */ //RGBE_DATA_SIZE = 4,\n        /* flags indicating which fields in an rgbe_header_info are valid */ RGBE_VALID_PROGRAMTYPE = 1, RGBE_VALID_FORMAT = 2, RGBE_VALID_DIMENSIONS = 4, NEWLINE = \"\\n\", fgets = function(buffer, lineLimit, consume) {\n            const chunkSize = 128;\n            lineLimit = !lineLimit ? 1024 : lineLimit;\n            let p = buffer.pos, i = -1, len = 0, s = \"\", chunk = String.fromCharCode.apply(null, new Uint16Array(buffer.subarray(p, p + chunkSize)));\n            while(0 > (i = chunk.indexOf(NEWLINE)) && len < lineLimit && p < buffer.byteLength){\n                s += chunk;\n                len += chunk.length;\n                p += chunkSize;\n                chunk += String.fromCharCode.apply(null, new Uint16Array(buffer.subarray(p, p + chunkSize)));\n            }\n            if (-1 < i) {\n                /*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/ if (false !== consume) buffer.pos += len + i + 1;\n                return s + chunk.slice(0, i);\n            }\n            return false;\n        }, /* minimal header reading.  modify if you want to parse more information */ RGBE_ReadHeader = function(buffer) {\n            // regexes to parse header info fields\n            const magic_token_re = /^#\\?(\\S+)/, gamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/, exposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/, format_re = /^\\s*FORMAT=(\\S+)\\s*$/, dimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/, // RGBE format header struct\n            header = {\n                valid: 0,\n                /* indicate which fields are valid */ string: \"\",\n                /* the actual header string */ comments: \"\",\n                /* comments found in header */ programtype: \"RGBE\",\n                /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */ format: \"\",\n                /* RGBE format, default 32-bit_rle_rgbe */ gamma: 1.0,\n                /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */ exposure: 1.0,\n                /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */ width: 0,\n                height: 0 /* image dimensions, width/height */ \n            };\n            let line, match;\n            if (buffer.pos >= buffer.byteLength || !(line = fgets(buffer))) rgbe_error(rgbe_read_error, \"no header found\");\n            /* if you want to require the magic token then uncomment the next line */ if (!(match = line.match(magic_token_re))) rgbe_error(rgbe_format_error, \"bad initial token\");\n            header.valid |= RGBE_VALID_PROGRAMTYPE;\n            header.programtype = match[1];\n            header.string += line + \"\\n\";\n            while(true){\n                line = fgets(buffer);\n                if (false === line) break;\n                header.string += line + \"\\n\";\n                if (\"#\" === line.charAt(0)) {\n                    header.comments += line + \"\\n\";\n                    continue; // comment line\n                }\n                if (match = line.match(gamma_re)) header.gamma = parseFloat(match[1]);\n                if (match = line.match(exposure_re)) header.exposure = parseFloat(match[1]);\n                if (match = line.match(format_re)) {\n                    header.valid |= RGBE_VALID_FORMAT;\n                    header.format = match[1]; //'32-bit_rle_rgbe';\n                }\n                if (match = line.match(dimensions_re)) {\n                    header.valid |= RGBE_VALID_DIMENSIONS;\n                    header.height = parseInt(match[1], 10);\n                    header.width = parseInt(match[2], 10);\n                }\n                if (header.valid & RGBE_VALID_FORMAT && header.valid & RGBE_VALID_DIMENSIONS) break;\n            }\n            if (!(header.valid & RGBE_VALID_FORMAT)) rgbe_error(rgbe_format_error, \"missing format specifier\");\n            if (!(header.valid & RGBE_VALID_DIMENSIONS)) rgbe_error(rgbe_format_error, \"missing image size specifier\");\n            return header;\n        }, RGBE_ReadPixels_RLE = function(buffer, w, h) {\n            const scanline_width = w;\n            if (scanline_width < 8 || scanline_width > 0x7fff || // this file is not run length encoded\n            2 !== buffer[0] || 2 !== buffer[1] || buffer[2] & 0x80) // return the flat buffer\n            return new Uint8Array(buffer);\n            if (scanline_width !== (buffer[2] << 8 | buffer[3])) rgbe_error(rgbe_format_error, \"wrong scanline width\");\n            const data_rgba = new Uint8Array(4 * w * h);\n            if (!data_rgba.length) rgbe_error(rgbe_memory_error, \"unable to allocate buffer space\");\n            let offset = 0, pos = 0;\n            const ptr_end = 4 * scanline_width;\n            const rgbeStart = new Uint8Array(4);\n            const scanline_buffer = new Uint8Array(ptr_end);\n            let num_scanlines = h;\n            // read in each successive scanline\n            while(num_scanlines > 0 && pos < buffer.byteLength){\n                if (pos + 4 > buffer.byteLength) rgbe_error(rgbe_read_error);\n                rgbeStart[0] = buffer[pos++];\n                rgbeStart[1] = buffer[pos++];\n                rgbeStart[2] = buffer[pos++];\n                rgbeStart[3] = buffer[pos++];\n                if (2 != rgbeStart[0] || 2 != rgbeStart[1] || (rgbeStart[2] << 8 | rgbeStart[3]) != scanline_width) rgbe_error(rgbe_format_error, \"bad rgbe scanline format\");\n                // read each of the four channels for the scanline into the buffer\n                // first red, then green, then blue, then exponent\n                let ptr = 0, count;\n                while(ptr < ptr_end && pos < buffer.byteLength){\n                    count = buffer[pos++];\n                    const isEncodedRun = count > 128;\n                    if (isEncodedRun) count -= 128;\n                    if (0 === count || ptr + count > ptr_end) rgbe_error(rgbe_format_error, \"bad scanline data\");\n                    if (isEncodedRun) {\n                        // a (encoded) run of the same value\n                        const byteValue = buffer[pos++];\n                        for(let i = 0; i < count; i++)scanline_buffer[ptr++] = byteValue;\n                    //ptr += count;\n                    } else {\n                        // a literal-run\n                        scanline_buffer.set(buffer.subarray(pos, pos + count), ptr);\n                        ptr += count;\n                        pos += count;\n                    }\n                }\n                // now convert data from buffer into rgba\n                // first red, then green, then blue, then exponent (alpha)\n                const l = scanline_width; //scanline_buffer.byteLength;\n                for(let i = 0; i < l; i++){\n                    let off = 0;\n                    data_rgba[offset] = scanline_buffer[i + off];\n                    off += scanline_width; //1;\n                    data_rgba[offset + 1] = scanline_buffer[i + off];\n                    off += scanline_width; //1;\n                    data_rgba[offset + 2] = scanline_buffer[i + off];\n                    off += scanline_width; //1;\n                    data_rgba[offset + 3] = scanline_buffer[i + off];\n                    offset += 4;\n                }\n                num_scanlines--;\n            }\n            return data_rgba;\n        };\n        const RGBEByteToRGBFloat = function(sourceArray, sourceOffset, destArray, destOffset) {\n            const e = sourceArray[sourceOffset + 3];\n            const scale = Math.pow(2.0, e - 128.0) / 255.0;\n            destArray[destOffset + 0] = sourceArray[sourceOffset + 0] * scale;\n            destArray[destOffset + 1] = sourceArray[sourceOffset + 1] * scale;\n            destArray[destOffset + 2] = sourceArray[sourceOffset + 2] * scale;\n            destArray[destOffset + 3] = 1;\n        };\n        const RGBEByteToRGBHalf = function(sourceArray, sourceOffset, destArray, destOffset) {\n            const e = sourceArray[sourceOffset + 3];\n            const scale = Math.pow(2.0, e - 128.0) / 255.0;\n            // clamping to 65504, the maximum representable value in float16\n            destArray[destOffset + 0] = (0, $ilwiq.DataUtils).toHalfFloat(Math.min(sourceArray[sourceOffset + 0] * scale, 65504));\n            destArray[destOffset + 1] = (0, $ilwiq.DataUtils).toHalfFloat(Math.min(sourceArray[sourceOffset + 1] * scale, 65504));\n            destArray[destOffset + 2] = (0, $ilwiq.DataUtils).toHalfFloat(Math.min(sourceArray[sourceOffset + 2] * scale, 65504));\n            destArray[destOffset + 3] = (0, $ilwiq.DataUtils).toHalfFloat(1);\n        };\n        const byteArray = new Uint8Array(buffer);\n        byteArray.pos = 0;\n        const rgbe_header_info = RGBE_ReadHeader(byteArray);\n        const w = rgbe_header_info.width, h = rgbe_header_info.height, image_rgba_data = RGBE_ReadPixels_RLE(byteArray.subarray(byteArray.pos), w, h);\n        let data, type;\n        let numElements;\n        switch(this.type){\n            case 0, $ilwiq.FloatType:\n                numElements = image_rgba_data.length / 4;\n                const floatArray = new Float32Array(numElements * 4);\n                for(let j = 0; j < numElements; j++)RGBEByteToRGBFloat(image_rgba_data, j * 4, floatArray, j * 4);\n                data = floatArray;\n                type = (0, $ilwiq.FloatType);\n                break;\n            case 0, $ilwiq.HalfFloatType:\n                numElements = image_rgba_data.length / 4;\n                const halfArray = new Uint16Array(numElements * 4);\n                for(let j = 0; j < numElements; j++)RGBEByteToRGBHalf(image_rgba_data, j * 4, halfArray, j * 4);\n                data = halfArray;\n                type = (0, $ilwiq.HalfFloatType);\n                break;\n            default:\n                throw new Error(\"THREE.RGBELoader: Unsupported type: \" + this.type);\n        }\n        return {\n            width: w,\n            height: h,\n            data: data,\n            header: rgbe_header_info.string,\n            gamma: rgbe_header_info.gamma,\n            exposure: rgbe_header_info.exposure,\n            type: type\n        };\n    }\n    setDataType(value) {\n        this.type = value;\n        return this;\n    }\n    load(url, onLoad, onProgress, onError) {\n        function onLoadCallback(texture, texData) {\n            switch(texture.type){\n                case 0, $ilwiq.FloatType:\n                case 0, $ilwiq.HalfFloatType:\n                    texture.colorSpace = (0, $ilwiq.LinearSRGBColorSpace);\n                    texture.minFilter = (0, $ilwiq.LinearFilter);\n                    texture.magFilter = (0, $ilwiq.LinearFilter);\n                    texture.generateMipmaps = false;\n                    texture.flipY = true;\n                    break;\n            }\n            if (onLoad) onLoad(texture, texData);\n        }\n        return super.load(url, onLoadCallback, onProgress, onError);\n    }\n}\n\n});\n\nparcelRegister(\"1EdOY\", function(module, exports) {\n\n$parcel$export(module.exports, \"generateRadialFloorTexture\", () => $13343f7d1c4dd8ec$export$92750171fb06fc99);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nfunction $13343f7d1c4dd8ec$export$92750171fb06fc99(dim) {\n    const data = new Uint8Array(dim * dim * 4);\n    for(let x = 0; x < dim; x++)for(let y = 0; y < dim; y++){\n        const xNorm = x / (dim - 1);\n        const yNorm = y / (dim - 1);\n        const xCent = 2.0 * (xNorm - 0.5);\n        const yCent = 2.0 * (yNorm - 0.5);\n        let a = Math.max(Math.min(1.0 - Math.sqrt(xCent ** 2 + yCent ** 2), 1.0), 0.0);\n        a = a ** 2;\n        a = a * 1.5;\n        a = Math.min(a, 1.0);\n        const i = y * dim + x;\n        data[i * 4 + 0] = 255;\n        data[i * 4 + 1] = 255;\n        data[i * 4 + 2] = 255;\n        data[i * 4 + 3] = a * 255;\n    }\n    const tex = new $ilwiq.DataTexture(data, dim, dim);\n    tex.format = $ilwiq.RGBAFormat;\n    tex.type = $ilwiq.UnsignedByteType;\n    tex.minFilter = $ilwiq.LinearFilter;\n    tex.magFilter = $ilwiq.LinearFilter;\n    tex.wrapS = $ilwiq.RepeatWrapping;\n    tex.wrapT = $ilwiq.RepeatWrapping;\n    tex.needsUpdate = true;\n    return tex;\n}\n\n});\n\nparcelRegister(\"cE5k3\", function(module, exports) {\n\n$parcel$export(module.exports, \"getScaledSettings\", () => $934d596524c3e5a8$export$5bc756cb1c628b75);\nfunction $934d596524c3e5a8$export$5bc756cb1c628b75() {\n    let tiles = 3;\n    let renderScale = Math.max(1 / window.devicePixelRatio, 0.5);\n    // adjust performance parameters for mobile\n    const aspectRatio = window.innerWidth / window.innerHeight;\n    if (aspectRatio < 0.65) {\n        tiles = 4;\n        renderScale = 0.5 / window.devicePixelRatio;\n    }\n    return {\n        tiles: tiles,\n        renderScale: renderScale\n    };\n}\n\n});\n\nparcelRegister(\"e2Pv4\", function(module, exports) {\n\n$parcel$export(module.exports, \"LoaderElement\", () => $a399336cf50451da$export$c2252eb3bc5ad0b7);\nlet $a399336cf50451da$var$_styleElement;\nfunction $a399336cf50451da$var$initializeStyles() {\n    if ($a399336cf50451da$var$_styleElement) return;\n    $a399336cf50451da$var$_styleElement = document.createElement(\"style\");\n    $a399336cf50451da$var$_styleElement.textContent = /* css */ `\r\n\r\n\t\t.loader-container, .description {\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\tfont-family: 'Courier New', Courier, monospace;\r\n\t\t\tcolor: white;\r\n\t\t\tfont-weight: light;\r\n\t\t\talign-items: flex-start;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tpointer-events: none;\r\n\t\t\tuser-select: none;\r\n\t\t}\r\n\r\n\t\t.loader-container {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tbottom: 0;\r\n\t\t}\r\n\r\n\t\t.description {\r\n\t\t\ttop: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.loader-container .bar {\r\n\t\t\theight: 2px;\r\n\t\t\tbackground: white;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples,\r\n\t\t.loader-container .percentage {\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 0 0 1px 1px;\r\n\t\t\tbackground: rgba( 0, 0, 0, 0.2 );\r\n\t\t\tborder-radius: 2px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n\t\t.loader-container:not(.loading) .bar,\r\n\t\t.loader-container:not(.loading) .percentage,\r\n\t\t.loader-container.loading .credits,\r\n\t\t.loader-container.loading .samples,\r\n\t\t.loader-container .credits:empty {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits a,\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples {\r\n\t\t\tcolor: rgba( 255, 255, 255, 0.75 );\r\n\t\t}\r\n\t`;\n    document.head.appendChild($a399336cf50451da$var$_styleElement);\n}\nclass $a399336cf50451da$export$c2252eb3bc5ad0b7 {\n    constructor(){\n        $a399336cf50451da$var$initializeStyles();\n        const container = document.createElement(\"div\");\n        container.classList.add(\"loader-container\");\n        const percentageEl = document.createElement(\"div\");\n        percentageEl.classList.add(\"percentage\");\n        container.appendChild(percentageEl);\n        const samplesEl = document.createElement(\"div\");\n        samplesEl.classList.add(\"samples\");\n        container.appendChild(samplesEl);\n        const creditsEl = document.createElement(\"div\");\n        creditsEl.classList.add(\"credits\");\n        container.appendChild(creditsEl);\n        const loaderBarEl = document.createElement(\"div\");\n        loaderBarEl.classList.add(\"bar\");\n        container.appendChild(loaderBarEl);\n        const descriptionEl = document.createElement(\"div\");\n        descriptionEl.classList.add(\"description\");\n        container.appendChild(descriptionEl);\n        this._description = descriptionEl;\n        this._loaderBar = loaderBarEl;\n        this._percentage = percentageEl;\n        this._credits = creditsEl;\n        this._samples = samplesEl;\n        this._container = container;\n        this.setPercentage(0);\n    }\n    attach(container) {\n        container.appendChild(this._container);\n        container.appendChild(this._description);\n    }\n    setPercentage(perc) {\n        this._loaderBar.style.width = `${perc * 100}%`;\n        if (perc === 0) this._percentage.innerText = \"Loading...\";\n        else this._percentage.innerText = `${(perc * 100).toFixed(0)}%`;\n        if (perc >= 1) this._container.classList.remove(\"loading\");\n        else this._container.classList.add(\"loading\");\n    }\n    setSamples(count, compiling = false) {\n        if (compiling) this._samples.innerText = \"compiling shader...\";\n        else this._samples.innerText = `${Math.floor(count)} samples`;\n    }\n    setCredits(credits) {\n        this._credits.innerHTML = credits;\n    }\n    setDescription(description) {\n        this._description.innerHTML = description;\n    }\n}\n\n});\n\nparcelRegister(\"fYvb1\", function(module, exports) {\n\n$parcel$export(module.exports, \"math_functions\", () => $ba14a4aaa0cde19b$export$98323a006d35be35);\nconst $ba14a4aaa0cde19b$export$98323a006d35be35 = /* glsl */ `\r\n\r\n\t// Fast arccos approximation used to remove banding artifacts caused by numerical errors in acos.\r\n\t// This is a cubic Lagrange interpolating polynomial for x = [-1, -1/2, 0, 1/2, 1].\r\n\t// For more information see: https://github.com/disini/three-gpu-pathtracer/pull/171#issuecomment-1152275248\r\n\tfloat acosApprox( float x ) {\r\n\r\n\t\tx = clamp( x, -1.0, 1.0 );\r\n\t\treturn ( - 0.69813170079773212 * x * x - 0.87266462599716477 ) * x + 1.5707963267948966;\r\n\r\n\t}\r\n\r\n\t// An acos with input values bound to the range [-1, 1].\r\n\tfloat acosSafe( float x ) {\r\n\r\n\t\treturn acos( clamp( x, -1.0, 1.0 ) );\r\n\r\n\t}\r\n\r\n\tfloat saturateCos( float val ) {\r\n\r\n\t\treturn clamp( val, 0.001, 1.0 );\r\n\r\n\t}\r\n\r\n\tfloat square( float t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec2 square( vec2 t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec3 square( vec3 t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec4 square( vec4 t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec2 rotateVector( vec2 v, float t ) {\r\n\r\n\t\tfloat ac = cos( t );\r\n\t\tfloat as = sin( t );\r\n\t\treturn vec2(\r\n\t\t\tv.x * ac - v.y * as,\r\n\t\t\tv.x * as + v.y * ac\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t// forms a basis with the normal vector as Z\r\n\tmat3 getBasisFromNormal( vec3 normal ) {\r\n\r\n\t\tvec3 other;\r\n\t\tif ( abs( normal.x ) > 0.5 ) {\r\n\r\n\t\t\tother = vec3( 0.0, 1.0, 0.0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tother = vec3( 1.0, 0.0, 0.0 );\r\n\r\n\t\t}\r\n\r\n\t\tvec3 ortho = normalize( cross( normal, other ) );\r\n\t\tvec3 ortho2 = normalize( cross( normal, ortho ) );\r\n\t\treturn mat3( ortho2, ortho, normal );\r\n\r\n\t}\r\n\r\n`;\n\n});\n\nparcelRegister(\"8keuf\", function(module, exports) {\n\n$parcel$export(module.exports, \"ggx_functions\", () => $60fb6dc3c6495c33$export$4c711108e2e8ef5e);\nconst $60fb6dc3c6495c33$export$4c711108e2e8ef5e = /* glsl */ `\r\n\r\n\t// The GGX functions provide sampling and distribution information for normals as output so\r\n\t// in order to get probability of scatter direction the half vector must be computed and provided.\r\n\t// [0] https://www.cs.cornell.edu/~srm/publications/EGSR07-btdf.pdf\r\n\t// [1] https://hal.archives-ouvertes.fr/hal-01509746/document\r\n\t// [2] http://jcgt.org/published/0007/04/01/\r\n\t// [4] http://jcgt.org/published/0003/02/03/\r\n\r\n\t// trowbridge-reitz === GGX === GTR\r\n\r\n\tvec3 ggxDirection( vec3 incidentDir, vec2 roughness, vec2 uv ) {\r\n\r\n\t\t// TODO: try GGXVNDF implementation from reference [2], here. Needs to update ggxDistribution\r\n\t\t// function below, as well\r\n\r\n\t\t// Implementation from reference [1]\r\n\t\t// stretch view\r\n\t\tvec3 V = normalize( vec3( roughness * incidentDir.xy, incidentDir.z ) );\r\n\r\n\t\t// orthonormal basis\r\n\t\tvec3 T1 = ( V.z < 0.9999 ) ? normalize( cross( V, vec3( 0.0, 0.0, 1.0 ) ) ) : vec3( 1.0, 0.0, 0.0 );\r\n\t\tvec3 T2 = cross( T1, V );\r\n\r\n\t\t// sample point with polar coordinates (r, phi)\r\n\t\tfloat a = 1.0 / ( 1.0 + V.z );\r\n\t\tfloat r = sqrt( uv.x );\r\n\t\tfloat phi = ( uv.y < a ) ? uv.y / a * PI : PI + ( uv.y - a ) / ( 1.0 - a ) * PI;\r\n\t\tfloat P1 = r * cos( phi );\r\n\t\tfloat P2 = r * sin( phi ) * ( ( uv.y < a ) ? 1.0 : V.z );\r\n\r\n\t\t// compute normal\r\n\t\tvec3 N = P1 * T1 + P2 * T2 + V * sqrt( max( 0.0, 1.0 - P1 * P1 - P2 * P2 ) );\r\n\r\n\t\t// unstretch\r\n\t\tN = normalize( vec3( roughness * N.xy, max( 0.0, N.z ) ) );\r\n\r\n\t\treturn N;\r\n\r\n\t}\r\n\r\n\t// Below are PDF and related functions for use in a Monte Carlo path tracer\r\n\t// as specified in Appendix B of the following paper\r\n\t// See equation (34) from reference [0]\r\n\tfloat ggxLamda( float theta, float roughness ) {\r\n\r\n\t\tfloat tanTheta = tan( theta );\r\n\t\tfloat tanTheta2 = tanTheta * tanTheta;\r\n\t\tfloat alpha2 = roughness * roughness;\r\n\r\n\t\tfloat numerator = - 1.0 + sqrt( 1.0 + alpha2 * tanTheta2 );\r\n\t\treturn numerator / 2.0;\r\n\r\n\t}\r\n\r\n\t// See equation (34) from reference [0]\r\n\tfloat ggxShadowMaskG1( float theta, float roughness ) {\r\n\r\n\t\treturn 1.0 / ( 1.0 + ggxLamda( theta, roughness ) );\r\n\r\n\t}\r\n\r\n\t// See equation (125) from reference [4]\r\n\tfloat ggxShadowMaskG2( vec3 wi, vec3 wo, float roughness ) {\r\n\r\n\t\tfloat incidentTheta = acos( wi.z );\r\n\t\tfloat scatterTheta = acos( wo.z );\r\n\t\treturn 1.0 / ( 1.0 + ggxLamda( incidentTheta, roughness ) + ggxLamda( scatterTheta, roughness ) );\r\n\r\n\t}\r\n\r\n\t// See equation (33) from reference [0]\r\n\tfloat ggxDistribution( vec3 halfVector, float roughness ) {\r\n\r\n\t\tfloat a2 = roughness * roughness;\r\n\t\ta2 = max( EPSILON, a2 );\r\n\t\tfloat cosTheta = halfVector.z;\r\n\t\tfloat cosTheta4 = pow( cosTheta, 4.0 );\r\n\r\n\t\tif ( cosTheta == 0.0 ) return 0.0;\r\n\r\n\t\tfloat theta = acosSafe( halfVector.z );\r\n\t\tfloat tanTheta = tan( theta );\r\n\t\tfloat tanTheta2 = pow( tanTheta, 2.0 );\r\n\r\n\t\tfloat denom = PI * cosTheta4 * pow( a2 + tanTheta2, 2.0 );\r\n\t\treturn ( a2 / denom );\r\n\r\n\t}\r\n\r\n\t// See equation (3) from reference [2]\r\n\tfloat ggxPDF( vec3 wi, vec3 halfVector, float roughness ) {\r\n\r\n\t\tfloat incidentTheta = acos( wi.z );\r\n\t\tfloat D = ggxDistribution( halfVector, roughness );\r\n\t\tfloat G1 = ggxShadowMaskG1( incidentTheta, roughness );\r\n\r\n\t\treturn D * G1 * max( 0.0, dot( wi, halfVector ) ) / wi.z;\r\n\r\n\t}\r\n\r\n`;\n\n});\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $7lx9d = parcelRequire(\"7lx9d\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n\nvar $eLX8K = parcelRequire(\"eLX8K\");\nvar $8mHfG = parcelRequire(\"8mHfG\");\n\nvar $891vQ = parcelRequire(\"891vQ\");\n\nvar $kp7Te = parcelRequire(\"kp7Te\");\n\nvar $jiuw3 = parcelRequire(\"jiuw3\");\n\nvar $1EdOY = parcelRequire(\"1EdOY\");\n\nvar $cE5k3 = parcelRequire(\"cE5k3\");\n\nvar $e2Pv4 = parcelRequire(\"e2Pv4\");\n// @TODO: We can simplify \"export { default as SomeNode, other, exports } from '...'\" to just \"export * from '...'\" if we will use only named exports\n// this will also solve issues like \"import TempNode from '../core/Node.js'\"\n// constants\nconst $d70807ef9a9432a5$export$9e43649cde3e3072 = {\n    VERTEX: \"vertex\",\n    FRAGMENT: \"fragment\"\n};\nconst $d70807ef9a9432a5$export$26f7a8bbd9469530 = {\n    NONE: \"none\",\n    FRAME: \"frame\",\n    RENDER: \"render\",\n    OBJECT: \"object\"\n};\nconst $d70807ef9a9432a5$export$f06e977173f1857c = {\n    BOOLEAN: \"bool\",\n    INTEGER: \"int\",\n    FLOAT: \"float\",\n    VECTOR2: \"vec2\",\n    VECTOR3: \"vec3\",\n    VECTOR4: \"vec4\",\n    MATRIX2: \"mat2\",\n    MATRIX3: \"mat3\",\n    MATRIX4: \"mat4\"\n};\nconst $d70807ef9a9432a5$export$565139d2263e2965 = [\n    \"fragment\",\n    \"vertex\"\n];\nconst $d70807ef9a9432a5$export$f2213ed98eb895d6 = [\n    \"setup\",\n    \"analyze\",\n    \"generate\"\n];\nconst $d70807ef9a9432a5$export$48fd793f0255b86a = [\n    ...$d70807ef9a9432a5$export$565139d2263e2965,\n    \"compute\"\n];\nconst $d70807ef9a9432a5$export$1c0adcb9073b646d = [\n    \"x\",\n    \"y\",\n    \"z\",\n    \"w\"\n];\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nfunction $0bf48deb29103875$export$611736262b635f8d(object, force = false) {\n    let cacheKey = \"{\";\n    if (object.isNode === true) cacheKey += object.id;\n    for (const { property: property, childNode: childNode } of $0bf48deb29103875$export$1f1998cc3c6b56fb(object))cacheKey += \",\" + property.slice(0, -4) + \":\" + childNode.getCacheKey(force);\n    cacheKey += \"}\";\n    return cacheKey;\n}\nfunction* $0bf48deb29103875$export$1f1998cc3c6b56fb(node, toJSON = false) {\n    for(const property in node){\n        // Ignore private properties.\n        if (property.startsWith(\"_\") === true) continue;\n        const object = node[property];\n        if (Array.isArray(object) === true) for(let i = 0; i < object.length; i++){\n            const child = object[i];\n            if (child && (child.isNode === true || toJSON && typeof child.toJSON === \"function\")) yield {\n                property: property,\n                index: i,\n                childNode: child\n            };\n        }\n        else if (object && object.isNode === true) yield {\n            property: property,\n            childNode: object\n        };\n        else if (typeof object === \"object\") for(const subProperty in object){\n            const child = object[subProperty];\n            if (child && (child.isNode === true || toJSON && typeof child.toJSON === \"function\")) yield {\n                property: property,\n                index: subProperty,\n                childNode: child\n            };\n        }\n    }\n}\nfunction $0bf48deb29103875$export$cc7ab17e03dab419(value) {\n    if (value === undefined || value === null) return null;\n    const typeOf = typeof value;\n    if (value.isNode === true) return \"node\";\n    else if (typeOf === \"number\") return \"float\";\n    else if (typeOf === \"boolean\") return \"bool\";\n    else if (typeOf === \"string\") return \"string\";\n    else if (typeOf === \"function\") return \"shader\";\n    else if (value.isVector2 === true) return \"vec2\";\n    else if (value.isVector3 === true) return \"vec3\";\n    else if (value.isVector4 === true) return \"vec4\";\n    else if (value.isMatrix3 === true) return \"mat3\";\n    else if (value.isMatrix4 === true) return \"mat4\";\n    else if (value.isColor === true) return \"color\";\n    else if (value instanceof ArrayBuffer) return \"ArrayBuffer\";\n    return null;\n}\nfunction $0bf48deb29103875$export$64e17ccd4a503243(type, ...params) {\n    const last4 = type ? type.slice(-4) : undefined;\n    if (params.length === 1) {\n        if (last4 === \"vec2\") params = [\n            params[0],\n            params[0]\n        ];\n        else if (last4 === \"vec3\") params = [\n            params[0],\n            params[0],\n            params[0]\n        ];\n        else if (last4 === \"vec4\") params = [\n            params[0],\n            params[0],\n            params[0],\n            params[0]\n        ];\n    }\n    if (type === \"color\") return new (0, $ilwiq.Color)(...params);\n    else if (last4 === \"vec2\") return new (0, $ilwiq.Vector2)(...params);\n    else if (last4 === \"vec3\") return new (0, $ilwiq.Vector3)(...params);\n    else if (last4 === \"vec4\") return new (0, $ilwiq.Vector4)(...params);\n    else if (last4 === \"mat3\") return new (0, $ilwiq.Matrix3)(...params);\n    else if (last4 === \"mat4\") return new (0, $ilwiq.Matrix4)(...params);\n    else if (type === \"bool\") return params[0] || false;\n    else if (type === \"float\" || type === \"int\" || type === \"uint\") return params[0] || 0;\n    else if (type === \"string\") return params[0] || \"\";\n    else if (type === \"ArrayBuffer\") return $0bf48deb29103875$export$a7a17e76664e3e44(params[0]);\n    return null;\n}\nfunction $0bf48deb29103875$export$70c4ae293293ca1e(arrayBuffer) {\n    let chars = \"\";\n    const array = new Uint8Array(arrayBuffer);\n    for(let i = 0; i < array.length; i++)chars += String.fromCharCode(array[i]);\n    return btoa(chars);\n}\nfunction $0bf48deb29103875$export$a7a17e76664e3e44(base64) {\n    return Uint8Array.from(atob(base64), (c)=>c.charCodeAt(0)).buffer;\n}\n\n\nconst $ed612ca4cc02a8a6$var$NodeClasses = new Map();\nlet $ed612ca4cc02a8a6$var$_nodeId = 0;\nclass $ed612ca4cc02a8a6$var$Node extends (0, $ilwiq.EventDispatcher) {\n    constructor(nodeType = null){\n        super();\n        this.nodeType = nodeType;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).NONE;\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).NONE;\n        this.uuid = (0, $ilwiq.MathUtils).generateUUID();\n        this.version = 0;\n        this._cacheKey = null;\n        this._cacheKeyVersion = 0;\n        this.isNode = true;\n        Object.defineProperty(this, \"id\", {\n            value: $ed612ca4cc02a8a6$var$_nodeId++\n        });\n    }\n    set needsUpdate(value) {\n        if (value === true) this.version++;\n    }\n    get type() {\n        return this.constructor.type;\n    }\n    onUpdate(callback, updateType) {\n        this.updateType = updateType;\n        this.update = callback.bind(this.getSelf());\n        return this;\n    }\n    onFrameUpdate(callback) {\n        return this.onUpdate(callback, (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME);\n    }\n    onRenderUpdate(callback) {\n        return this.onUpdate(callback, (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER);\n    }\n    onObjectUpdate(callback) {\n        return this.onUpdate(callback, (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT);\n    }\n    getSelf() {\n        // Returns non-node object.\n        return this.self || this;\n    }\n    updateReference() {\n        return this;\n    }\n    isGlobal() {\n        return false;\n    }\n    *getChildren() {\n        for (const { childNode: childNode } of (0, $0bf48deb29103875$export$1f1998cc3c6b56fb)(this))yield childNode;\n    }\n    dispose() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    }\n    traverse(callback) {\n        callback(this);\n        for (const childNode of this.getChildren())childNode.traverse(callback);\n    }\n    getCacheKey(force = false) {\n        force = force || this.version !== this._cacheKeyVersion;\n        if (force === true || this._cacheKey === null) {\n            this._cacheKey = (0, $0bf48deb29103875$export$611736262b635f8d)(this, force);\n            this._cacheKeyVersion = this.version;\n        }\n        return this._cacheKey;\n    }\n    getHash() {\n        return this.uuid;\n    }\n    getUpdateType() {\n        return this.updateType;\n    }\n    getUpdateBeforeType() {\n        return this.updateBeforeType;\n    }\n    getNodeType(builder) {\n        const nodeProperties = builder.getNodeProperties(this);\n        if (nodeProperties.outputNode) return nodeProperties.outputNode.getNodeType(builder);\n        return this.nodeType;\n    }\n    getShared(builder) {\n        const hash = this.getHash(builder);\n        const nodeFromHash = builder.getNodeFromHash(hash);\n        return nodeFromHash || this;\n    }\n    setup(builder) {\n        const nodeProperties = builder.getNodeProperties(this);\n        for (const childNode of this.getChildren())nodeProperties[\"_node\" + childNode.id] = childNode;\n        // return a outputNode if exists\n        return null;\n    }\n    construct(builder) {\n        console.warn(\"THREE.Node: construct() is deprecated. Use setup() instead.\");\n        return this.setup(builder);\n    }\n    increaseUsage(builder) {\n        const nodeData = builder.getDataFromNode(this);\n        nodeData.usageCount = nodeData.usageCount === undefined ? 1 : nodeData.usageCount + 1;\n        return nodeData.usageCount;\n    }\n    analyze(builder) {\n        const usageCount = this.increaseUsage(builder);\n        if (usageCount === 1) {\n            // node flow children\n            const nodeProperties = builder.getNodeProperties(this);\n            for (const childNode of Object.values(nodeProperties))if (childNode && childNode.isNode === true) childNode.build(builder);\n        }\n    }\n    generate(builder, output) {\n        const { outputNode: outputNode } = builder.getNodeProperties(this);\n        if (outputNode && outputNode.isNode === true) return outputNode.build(builder, output);\n    }\n    updateBefore() {\n        console.warn(\"Abstract function.\");\n    }\n    update() {\n        console.warn(\"Abstract function.\");\n    }\n    build(builder, output = null) {\n        const refNode = this.getShared(builder);\n        if (this !== refNode) return refNode.build(builder, output);\n        builder.addNode(this);\n        builder.addChain(this);\n        /* Build stages expected results:\n\t\t\t- \"setup\"\t\t-> Node\n\t\t\t- \"analyze\"\t\t-> null\n\t\t\t- \"generate\"\t-> String\n\t\t*/ let result = null;\n        const buildStage = builder.getBuildStage();\n        if (buildStage === \"setup\") {\n            this.updateReference(builder);\n            const properties = builder.getNodeProperties(this);\n            if (properties.initialized !== true || builder.context.tempRead === false) {\n                const stackNodesBeforeSetup = builder.stack.nodes.length;\n                properties.initialized = true;\n                properties.outputNode = this.setup(builder);\n                if (properties.outputNode !== null && builder.stack.nodes.length !== stackNodesBeforeSetup) properties.outputNode = builder.stack;\n                for (const childNode of Object.values(properties))if (childNode && childNode.isNode === true) childNode.build(builder);\n            }\n        } else if (buildStage === \"analyze\") this.analyze(builder);\n        else if (buildStage === \"generate\") {\n            const isGenerateOnce = this.generate.length === 1;\n            if (isGenerateOnce) {\n                const type = this.getNodeType(builder);\n                const nodeData = builder.getDataFromNode(this);\n                result = nodeData.snippet;\n                if (result === undefined /*|| builder.context.tempRead === false*/ ) {\n                    result = this.generate(builder) || \"\";\n                    nodeData.snippet = result;\n                }\n                result = builder.format(result, type, output);\n            } else result = this.generate(builder, output) || \"\";\n        }\n        builder.removeChain(this);\n        return result;\n    }\n    getSerializeChildren() {\n        return (0, $0bf48deb29103875$export$1f1998cc3c6b56fb)(this);\n    }\n    serialize(json) {\n        const nodeChildren = this.getSerializeChildren();\n        const inputNodes = {};\n        for (const { property: property, index: index, childNode: childNode } of nodeChildren)if (index !== undefined) {\n            if (inputNodes[property] === undefined) inputNodes[property] = Number.isInteger(index) ? [] : {};\n            inputNodes[property][index] = childNode.toJSON(json.meta).uuid;\n        } else inputNodes[property] = childNode.toJSON(json.meta).uuid;\n        if (Object.keys(inputNodes).length > 0) json.inputNodes = inputNodes;\n    }\n    deserialize(json) {\n        if (json.inputNodes !== undefined) {\n            const nodes = json.meta.nodes;\n            for(const property in json.inputNodes){\n                if (Array.isArray(json.inputNodes[property])) {\n                    const inputArray = [];\n                    for (const uuid of json.inputNodes[property])inputArray.push(nodes[uuid]);\n                    this[property] = inputArray;\n                } else if (typeof json.inputNodes[property] === \"object\") {\n                    const inputObject = {};\n                    for(const subProperty in json.inputNodes[property]){\n                        const uuid = json.inputNodes[property][subProperty];\n                        inputObject[subProperty] = nodes[uuid];\n                    }\n                    this[property] = inputObject;\n                } else {\n                    const uuid = json.inputNodes[property];\n                    this[property] = nodes[uuid];\n                }\n            }\n        }\n    }\n    toJSON(meta) {\n        const { uuid: uuid, type: type } = this;\n        const isRoot = meta === undefined || typeof meta === \"string\";\n        if (isRoot) meta = {\n            textures: {},\n            images: {},\n            nodes: {}\n        };\n        // serialize\n        let data = meta.nodes[uuid];\n        if (data === undefined) {\n            data = {\n                uuid: uuid,\n                type: type,\n                meta: meta,\n                metadata: {\n                    version: 4.6,\n                    type: \"Node\",\n                    generator: \"Node.toJSON\"\n                }\n            };\n            if (isRoot !== true) meta.nodes[data.uuid] = data;\n            this.serialize(data);\n            delete data.meta;\n        }\n        // TODO: Copied from Object3D.toJSON\n        function extractFromCache(cache) {\n            const values = [];\n            for(const key in cache){\n                const data = cache[key];\n                delete data.metadata;\n                values.push(data);\n            }\n            return values;\n        }\n        if (isRoot) {\n            const textures = extractFromCache(meta.textures);\n            const images = extractFromCache(meta.images);\n            const nodes = extractFromCache(meta.nodes);\n            if (textures.length > 0) data.textures = textures;\n            if (images.length > 0) data.images = images;\n            if (nodes.length > 0) data.nodes = nodes;\n        }\n        return data;\n    }\n}\nvar $ed612ca4cc02a8a6$export$2e2bcd8739ae039 = $ed612ca4cc02a8a6$var$Node;\nfunction $ed612ca4cc02a8a6$export$4e255b694af9c429(type, nodeClass) {\n    if (typeof nodeClass !== \"function\" || !type) throw new Error(`Node class ${type} is not a class`);\n    if ($ed612ca4cc02a8a6$var$NodeClasses.has(type)) {\n        console.warn(`Redefinition of node class ${type}`);\n        return;\n    }\n    $ed612ca4cc02a8a6$var$NodeClasses.set(type, nodeClass);\n    nodeClass.type = type;\n}\nfunction $ed612ca4cc02a8a6$export$13b1d4e5d42ef527(type) {\n    const Class = $ed612ca4cc02a8a6$var$NodeClasses.get(type);\n    if (Class !== undefined) return new Class();\n}\n\n\n\nclass $58313529b84a82fb$var$TempNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(type){\n        super(type);\n        this.isTempNode = true;\n    }\n    hasDependencies(builder) {\n        return builder.getDataFromNode(this).usageCount > 1;\n    }\n    build(builder, output) {\n        const buildStage = builder.getBuildStage();\n        if (buildStage === \"generate\") {\n            const type = builder.getVectorType(this.getNodeType(builder, output));\n            const nodeData = builder.getDataFromNode(this);\n            if (builder.context.tempRead !== false && nodeData.propertyName !== undefined) return builder.format(nodeData.propertyName, type, output);\n            else if (builder.context.tempWrite !== false && type !== \"void\" && output !== \"void\" && this.hasDependencies(builder)) {\n                const snippet = super.build(builder, type);\n                const nodeVar = builder.getVarFromNode(this, null, type);\n                const propertyName = builder.getPropertyName(nodeVar);\n                builder.addLineFlowCode(`${propertyName} = ${snippet}`);\n                nodeData.snippet = snippet;\n                nodeData.propertyName = propertyName;\n                return builder.format(nodeData.propertyName, type, output);\n            }\n        }\n        return super.build(builder, output);\n    }\n}\nvar $58313529b84a82fb$export$2e2bcd8739ae039 = $58313529b84a82fb$var$TempNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TempNode\", $58313529b84a82fb$var$TempNode);\n\n\n\n\nclass $a62d64263fea5012$var$ArrayElementNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, indexNode){\n        super();\n        this.node = node;\n        this.indexNode = indexNode;\n        this.isArrayElementNode = true;\n    }\n    getNodeType(builder) {\n        return this.node.getNodeType(builder);\n    }\n    generate(builder) {\n        const nodeSnippet = this.node.build(builder);\n        const indexSnippet = this.indexNode.build(builder, \"uint\");\n        return `${nodeSnippet}[ ${indexSnippet} ]`;\n    }\n}\nvar $a62d64263fea5012$export$2e2bcd8739ae039 = $a62d64263fea5012$var$ArrayElementNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ArrayElementNode\", $a62d64263fea5012$var$ArrayElementNode);\n\n\n\nclass $6d38ff899a333910$var$ConvertNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, convertTo){\n        super();\n        this.node = node;\n        this.convertTo = convertTo;\n    }\n    getNodeType(builder) {\n        const requestType = this.node.getNodeType(builder);\n        let convertTo = null;\n        for (const overloadingType of this.convertTo.split(\"|\"))if (convertTo === null || builder.getTypeLength(requestType) === builder.getTypeLength(overloadingType)) convertTo = overloadingType;\n        return convertTo;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.convertTo = this.convertTo;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.convertTo = data.convertTo;\n    }\n    generate(builder, output) {\n        const node = this.node;\n        const type = this.getNodeType(builder);\n        const snippet = node.build(builder, type);\n        return builder.format(snippet, type, output);\n    }\n}\nvar $6d38ff899a333910$export$2e2bcd8739ae039 = $6d38ff899a333910$var$ConvertNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ConvertNode\", $6d38ff899a333910$var$ConvertNode);\n\n\n\n\nclass $e6961302f51f6801$var$JoinNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(nodes = [], nodeType = null){\n        super(nodeType);\n        this.nodes = nodes;\n    }\n    getNodeType(builder) {\n        if (this.nodeType !== null) return builder.getVectorType(this.nodeType);\n        return builder.getTypeFromLength(this.nodes.reduce((count, cur)=>count + builder.getTypeLength(cur.getNodeType(builder)), 0));\n    }\n    generate(builder, output) {\n        const type = this.getNodeType(builder);\n        const nodes = this.nodes;\n        const primitiveType = builder.getComponentType(type);\n        const snippetValues = [];\n        for (const input of nodes){\n            let inputSnippet = input.build(builder);\n            const inputPrimitiveType = builder.getComponentType(input.getNodeType(builder));\n            if (inputPrimitiveType !== primitiveType) inputSnippet = builder.format(inputSnippet, inputPrimitiveType, primitiveType);\n            snippetValues.push(inputSnippet);\n        }\n        const snippet = `${builder.getType(type)}( ${snippetValues.join(\", \")} )`;\n        return builder.format(snippet, type, output);\n    }\n}\nvar $e6961302f51f6801$export$2e2bcd8739ae039 = $e6961302f51f6801$var$JoinNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"JoinNode\", $e6961302f51f6801$var$JoinNode);\n\n\n\n\nconst $c5c9eb115437e129$var$stringVectorComponents = (0, $d70807ef9a9432a5$export$1c0adcb9073b646d).join(\"\");\nclass $c5c9eb115437e129$var$SplitNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, components = \"x\"){\n        super();\n        this.node = node;\n        this.components = components;\n        this.isSplitNode = true;\n    }\n    getVectorLength() {\n        let vectorLength = this.components.length;\n        for (const c of this.components)vectorLength = Math.max((0, $d70807ef9a9432a5$export$1c0adcb9073b646d).indexOf(c) + 1, vectorLength);\n        return vectorLength;\n    }\n    getComponentType(builder) {\n        return builder.getComponentType(this.node.getNodeType(builder));\n    }\n    getNodeType(builder) {\n        return builder.getTypeFromLength(this.components.length, this.getComponentType(builder));\n    }\n    generate(builder, output) {\n        const node = this.node;\n        const nodeTypeLength = builder.getTypeLength(node.getNodeType(builder));\n        let snippet = null;\n        if (nodeTypeLength > 1) {\n            let type = null;\n            const componentsLength = this.getVectorLength();\n            if (componentsLength >= nodeTypeLength) // needed expand the input node\n            type = builder.getTypeFromLength(this.getVectorLength(), this.getComponentType(builder));\n            const nodeSnippet = node.build(builder, type);\n            if (this.components.length === nodeTypeLength && this.components === $c5c9eb115437e129$var$stringVectorComponents.slice(0, this.components.length)) // unnecessary swizzle\n            snippet = builder.format(nodeSnippet, type, output);\n            else snippet = builder.format(`${nodeSnippet}.${this.components}`, this.getNodeType(builder), output);\n        } else // ignore .components if .node returns float/integer\n        snippet = node.build(builder, output);\n        return snippet;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.components = this.components;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.components = data.components;\n    }\n}\nvar $c5c9eb115437e129$export$2e2bcd8739ae039 = $c5c9eb115437e129$var$SplitNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"SplitNode\", $c5c9eb115437e129$var$SplitNode);\n\n\n\n\n\nclass $3c1a9585fc8e964e$var$SetNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(sourceNode, components, targetNode){\n        super();\n        this.sourceNode = sourceNode;\n        this.components = components;\n        this.targetNode = targetNode;\n    }\n    getNodeType(builder) {\n        return this.sourceNode.getNodeType(builder);\n    }\n    generate(builder) {\n        const { sourceNode: sourceNode, components: components, targetNode: targetNode } = this;\n        const sourceType = this.getNodeType(builder);\n        const targetType = builder.getTypeFromLength(components.length);\n        const targetSnippet = targetNode.build(builder, targetType);\n        const sourceSnippet = sourceNode.build(builder, sourceType);\n        const length = builder.getTypeLength(sourceType);\n        const snippetValues = [];\n        for(let i = 0; i < length; i++){\n            const component = (0, $d70807ef9a9432a5$export$1c0adcb9073b646d)[i];\n            if (component === components[0]) {\n                snippetValues.push(targetSnippet);\n                i += components.length - 1;\n            } else snippetValues.push(sourceSnippet + \".\" + component);\n        }\n        return `${builder.getType(sourceType)}( ${snippetValues.join(\", \")} )`;\n    }\n}\nvar $3c1a9585fc8e964e$export$2e2bcd8739ae039 = $3c1a9585fc8e964e$var$SetNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"SetNode\", $3c1a9585fc8e964e$var$SetNode);\n\n\n\n\nclass $183d0103bf75aaa6$var$InputNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(value, nodeType = null){\n        super(nodeType);\n        this.isInputNode = true;\n        this.value = value;\n        this.precision = null;\n    }\n    getNodeType() {\n        if (this.nodeType === null) return (0, $0bf48deb29103875$export$cc7ab17e03dab419)(this.value);\n        return this.nodeType;\n    }\n    getInputType(builder) {\n        return this.getNodeType(builder);\n    }\n    setPrecision(precision) {\n        this.precision = precision;\n        return this;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.value = this.value;\n        if (this.value && this.value.toArray) data.value = this.value.toArray();\n        data.valueType = (0, $0bf48deb29103875$export$cc7ab17e03dab419)(this.value);\n        data.nodeType = this.nodeType;\n        if (data.valueType === \"ArrayBuffer\") data.value = (0, $0bf48deb29103875$export$70c4ae293293ca1e)(data.value);\n        data.precision = this.precision;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.nodeType = data.nodeType;\n        this.value = Array.isArray(data.value) ? (0, $0bf48deb29103875$export$64e17ccd4a503243)(data.valueType, ...data.value) : data.value;\n        this.precision = data.precision || null;\n        if (this.value && this.value.fromArray) this.value = this.value.fromArray(data.value);\n    }\n    generate() {\n        console.warn(\"Abstract function.\");\n    }\n}\nvar $183d0103bf75aaa6$export$2e2bcd8739ae039 = $183d0103bf75aaa6$var$InputNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"InputNode\", $183d0103bf75aaa6$var$InputNode);\n\n\n\nclass $44c324112372fceb$var$ConstNode extends (0, $183d0103bf75aaa6$export$2e2bcd8739ae039) {\n    constructor(value, nodeType = null){\n        super(value, nodeType);\n        this.isConstNode = true;\n    }\n    generateConst(builder) {\n        return builder.generateConst(this.getNodeType(builder), this.value);\n    }\n    generate(builder, output) {\n        const type = this.getNodeType(builder);\n        return builder.format(this.generateConst(builder), type, output);\n    }\n}\nvar $44c324112372fceb$export$2e2bcd8739ae039 = $44c324112372fceb$var$ConstNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ConstNode\", $44c324112372fceb$var$ConstNode);\n\n\n\n//\nlet $64e573acaa48d904$var$currentStack = null;\nconst $64e573acaa48d904$var$NodeElements = new Map(); // @TODO: Currently only a few nodes are added, probably also add others\nfunction $64e573acaa48d904$export$9faee53f34e0de2f(name, nodeElement) {\n    if ($64e573acaa48d904$var$NodeElements.has(name)) {\n        console.warn(`Redefinition of node element ${name}`);\n        return;\n    }\n    if (typeof nodeElement !== \"function\") throw new Error(`Node element ${name} is not a function`);\n    $64e573acaa48d904$var$NodeElements.set(name, nodeElement);\n}\nconst $64e573acaa48d904$var$parseSwizzle = (props)=>props.replace(/r|s/g, \"x\").replace(/g|t/g, \"y\").replace(/b|p/g, \"z\").replace(/a|q/g, \"w\");\nconst $64e573acaa48d904$var$shaderNodeHandler = {\n    setup (NodeClosure, params) {\n        const inputs = params.shift();\n        return NodeClosure($64e573acaa48d904$export$773e99721425b3b3(inputs), ...params);\n    },\n    get (node, prop, nodeObj) {\n        if (typeof prop === \"string\" && node[prop] === undefined) {\n            if (node.isStackNode !== true && prop === \"assign\") return (...params)=>{\n                $64e573acaa48d904$var$currentStack.assign(nodeObj, ...params);\n                return nodeObj;\n            };\n            else if ($64e573acaa48d904$var$NodeElements.has(prop)) {\n                const nodeElement = $64e573acaa48d904$var$NodeElements.get(prop);\n                return node.isStackNode ? (...params)=>nodeObj.add(nodeElement(...params)) : (...params)=>nodeElement(nodeObj, ...params);\n            } else if (prop === \"self\") return node;\n            else if (prop.endsWith(\"Assign\") && $64e573acaa48d904$var$NodeElements.has(prop.slice(0, prop.length - 6))) {\n                const nodeElement = $64e573acaa48d904$var$NodeElements.get(prop.slice(0, prop.length - 6));\n                return node.isStackNode ? (...params)=>nodeObj.assign(params[0], nodeElement(...params)) : (...params)=>nodeObj.assign(nodeElement(nodeObj, ...params));\n            } else if (/^[xyzwrgbastpq]{1,4}$/.test(prop) === true) {\n                // accessing properties ( swizzle )\n                prop = $64e573acaa48d904$var$parseSwizzle(prop);\n                return $64e573acaa48d904$export$e97474e17004dd41(new (0, $c5c9eb115437e129$export$2e2bcd8739ae039)(nodeObj, prop));\n            } else if (/^set[XYZWRGBASTPQ]{1,4}$/.test(prop) === true) {\n                // set properties ( swizzle )\n                prop = $64e573acaa48d904$var$parseSwizzle(prop.slice(3).toLowerCase());\n                // sort to xyzw sequence\n                prop = prop.split(\"\").sort().join(\"\");\n                return (value)=>$64e573acaa48d904$export$e97474e17004dd41(new (0, $3c1a9585fc8e964e$export$2e2bcd8739ae039)(node, prop, value));\n            } else if (prop === \"width\" || prop === \"height\" || prop === \"depth\") {\n                // accessing property\n                if (prop === \"width\") prop = \"x\";\n                else if (prop === \"height\") prop = \"y\";\n                else if (prop === \"depth\") prop = \"z\";\n                return $64e573acaa48d904$export$e97474e17004dd41(new (0, $c5c9eb115437e129$export$2e2bcd8739ae039)(node, prop));\n            } else if (/^\\d+$/.test(prop) === true) // accessing array\n            return $64e573acaa48d904$export$e97474e17004dd41(new (0, $a62d64263fea5012$export$2e2bcd8739ae039)(nodeObj, new (0, $44c324112372fceb$export$2e2bcd8739ae039)(Number(prop), \"uint\")));\n        }\n        return Reflect.get(node, prop, nodeObj);\n    },\n    set (node, prop, value, nodeObj) {\n        if (typeof prop === \"string\" && node[prop] === undefined) // setting properties\n        {\n            if (/^[xyzwrgbastpq]{1,4}$/.test(prop) === true || prop === \"width\" || prop === \"height\" || prop === \"depth\" || /^\\d+$/.test(prop) === true) {\n                nodeObj[prop].assign(value);\n                return true;\n            }\n        }\n        return Reflect.set(node, prop, value, nodeObj);\n    }\n};\nconst $64e573acaa48d904$var$nodeObjectsCacheMap = new WeakMap();\nconst $64e573acaa48d904$var$nodeBuilderFunctionsCacheMap = new WeakMap();\nconst $64e573acaa48d904$var$ShaderNodeObject = function(obj, altType = null) {\n    const type = (0, $0bf48deb29103875$export$cc7ab17e03dab419)(obj);\n    if (type === \"node\") {\n        let nodeObject = $64e573acaa48d904$var$nodeObjectsCacheMap.get(obj);\n        if (nodeObject === undefined) {\n            nodeObject = new Proxy(obj, $64e573acaa48d904$var$shaderNodeHandler);\n            $64e573acaa48d904$var$nodeObjectsCacheMap.set(obj, nodeObject);\n            $64e573acaa48d904$var$nodeObjectsCacheMap.set(nodeObject, nodeObject);\n        }\n        return nodeObject;\n    } else if (altType === null && (type === \"float\" || type === \"boolean\") || type && type !== \"shader\" && type !== \"string\") return $64e573acaa48d904$export$e97474e17004dd41($64e573acaa48d904$var$getConstNode(obj, altType));\n    else if (type === \"shader\") return $64e573acaa48d904$export$ab8c2ade1f37d88b(obj);\n    return obj;\n};\nconst $64e573acaa48d904$var$ShaderNodeObjects = function(objects, altType = null) {\n    for(const name in objects)objects[name] = $64e573acaa48d904$export$e97474e17004dd41(objects[name], altType);\n    return objects;\n};\nconst $64e573acaa48d904$var$ShaderNodeArray = function(array, altType = null) {\n    const len = array.length;\n    for(let i = 0; i < len; i++)array[i] = $64e573acaa48d904$export$e97474e17004dd41(array[i], altType);\n    return array;\n};\nconst $64e573acaa48d904$var$ShaderNodeProxy = function(NodeClass, scope = null, factor = null, settings = null) {\n    const assignNode = (node)=>$64e573acaa48d904$export$e97474e17004dd41(settings !== null ? Object.assign(node, settings) : node);\n    if (scope === null) return (...params)=>{\n        return assignNode(new NodeClass(...$64e573acaa48d904$export$34baf9226cd3d576(params)));\n    };\n    else if (factor !== null) {\n        factor = $64e573acaa48d904$export$e97474e17004dd41(factor);\n        return (...params)=>{\n            return assignNode(new NodeClass(scope, ...$64e573acaa48d904$export$34baf9226cd3d576(params), factor));\n        };\n    } else return (...params)=>{\n        return assignNode(new NodeClass(scope, ...$64e573acaa48d904$export$34baf9226cd3d576(params)));\n    };\n};\nconst $64e573acaa48d904$var$ShaderNodeImmutable = function(NodeClass, ...params) {\n    return $64e573acaa48d904$export$e97474e17004dd41(new NodeClass(...$64e573acaa48d904$export$34baf9226cd3d576(params)));\n};\nclass $64e573acaa48d904$var$ShaderCallNodeInternal extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(shaderNode, inputNodes){\n        super();\n        this.shaderNode = shaderNode;\n        this.inputNodes = inputNodes;\n    }\n    getNodeType(builder) {\n        const { outputNode: outputNode } = builder.getNodeProperties(this);\n        return outputNode ? outputNode.getNodeType(builder) : super.getNodeType(builder);\n    }\n    call(builder) {\n        const { shaderNode: shaderNode, inputNodes: inputNodes } = this;\n        if (shaderNode.layout) {\n            let functionNodesCacheMap = $64e573acaa48d904$var$nodeBuilderFunctionsCacheMap.get(builder.constructor);\n            if (functionNodesCacheMap === undefined) {\n                functionNodesCacheMap = new WeakMap();\n                $64e573acaa48d904$var$nodeBuilderFunctionsCacheMap.set(builder.constructor, functionNodesCacheMap);\n            }\n            let functionNode = functionNodesCacheMap.get(shaderNode);\n            if (functionNode === undefined) {\n                functionNode = $64e573acaa48d904$export$e97474e17004dd41(builder.buildFunctionNode(shaderNode));\n                functionNodesCacheMap.set(shaderNode, functionNode);\n            }\n            if (builder.currentFunctionNode !== null) builder.currentFunctionNode.includes.push(functionNode);\n            return $64e573acaa48d904$export$e97474e17004dd41(functionNode.call(inputNodes));\n        }\n        const jsFunc = shaderNode.jsFunc;\n        const outputNode = inputNodes !== null ? jsFunc(inputNodes, builder.stack, builder) : jsFunc(builder.stack, builder);\n        return $64e573acaa48d904$export$e97474e17004dd41(outputNode);\n    }\n    setup(builder) {\n        builder.addStack();\n        builder.stack.outputNode = this.call(builder);\n        return builder.removeStack();\n    }\n    generate(builder, output) {\n        const { outputNode: outputNode } = builder.getNodeProperties(this);\n        if (outputNode === null) // TSL: It's recommended to use `tslFn` in setup() pass.\n        return this.call(builder).build(builder, output);\n        return super.generate(builder, output);\n    }\n}\nclass $64e573acaa48d904$var$ShaderNodeInternal extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(jsFunc){\n        super();\n        this.jsFunc = jsFunc;\n        this.layout = null;\n    }\n    get isArrayInput() {\n        return /^\\((\\s+)?\\[/.test(this.jsFunc.toString());\n    }\n    setLayout(layout) {\n        this.layout = layout;\n        return this;\n    }\n    call(inputs = null) {\n        $64e573acaa48d904$export$773e99721425b3b3(inputs);\n        return $64e573acaa48d904$export$e97474e17004dd41(new $64e573acaa48d904$var$ShaderCallNodeInternal(this, inputs));\n    }\n    setup() {\n        return this.call();\n    }\n}\nconst $64e573acaa48d904$var$bools = [\n    false,\n    true\n];\nconst $64e573acaa48d904$var$uints = [\n    0,\n    1,\n    2,\n    3\n];\nconst $64e573acaa48d904$var$ints = [\n    -1,\n    -2\n];\nconst $64e573acaa48d904$var$floats = [\n    0.5,\n    1.5,\n    1 / 3,\n    1e-6,\n    1e6,\n    Math.PI,\n    Math.PI * 2,\n    1 / Math.PI,\n    2 / Math.PI,\n    1 / (Math.PI * 2),\n    Math.PI / 2\n];\nconst $64e573acaa48d904$var$boolsCacheMap = new Map();\nfor (const bool of $64e573acaa48d904$var$bools)$64e573acaa48d904$var$boolsCacheMap.set(bool, new (0, $44c324112372fceb$export$2e2bcd8739ae039)(bool));\nconst $64e573acaa48d904$var$uintsCacheMap = new Map();\nfor (const uint of $64e573acaa48d904$var$uints)$64e573acaa48d904$var$uintsCacheMap.set(uint, new (0, $44c324112372fceb$export$2e2bcd8739ae039)(uint, \"uint\"));\nconst $64e573acaa48d904$var$intsCacheMap = new Map([\n    ...$64e573acaa48d904$var$uintsCacheMap\n].map((el)=>new (0, $44c324112372fceb$export$2e2bcd8739ae039)(el.value, \"int\")));\nfor (const int of $64e573acaa48d904$var$ints)$64e573acaa48d904$var$intsCacheMap.set(int, new (0, $44c324112372fceb$export$2e2bcd8739ae039)(int, \"int\"));\nconst $64e573acaa48d904$var$floatsCacheMap = new Map([\n    ...$64e573acaa48d904$var$intsCacheMap\n].map((el)=>new (0, $44c324112372fceb$export$2e2bcd8739ae039)(el.value)));\nfor (const float of $64e573acaa48d904$var$floats)$64e573acaa48d904$var$floatsCacheMap.set(float, new (0, $44c324112372fceb$export$2e2bcd8739ae039)(float));\nfor (const float of $64e573acaa48d904$var$floats)$64e573acaa48d904$var$floatsCacheMap.set(-float, new (0, $44c324112372fceb$export$2e2bcd8739ae039)(-float));\nconst $64e573acaa48d904$var$cacheMaps = {\n    bool: $64e573acaa48d904$var$boolsCacheMap,\n    uint: $64e573acaa48d904$var$uintsCacheMap,\n    ints: $64e573acaa48d904$var$intsCacheMap,\n    float: $64e573acaa48d904$var$floatsCacheMap\n};\nconst $64e573acaa48d904$var$constNodesCacheMap = new Map([\n    ...$64e573acaa48d904$var$boolsCacheMap,\n    ...$64e573acaa48d904$var$floatsCacheMap\n]);\nconst $64e573acaa48d904$var$getConstNode = (value, type)=>{\n    if ($64e573acaa48d904$var$constNodesCacheMap.has(value)) return $64e573acaa48d904$var$constNodesCacheMap.get(value);\n    else if (value.isNode === true) return value;\n    else return new (0, $44c324112372fceb$export$2e2bcd8739ae039)(value, type);\n};\nconst $64e573acaa48d904$var$safeGetNodeType = (node)=>{\n    try {\n        return node.getNodeType();\n    } catch (_) {\n        return undefined;\n    }\n};\nconst $64e573acaa48d904$var$ConvertType = function(type, cacheMap = null) {\n    return (...params)=>{\n        if (params.length === 0 || ![\n            \"bool\",\n            \"float\",\n            \"int\",\n            \"uint\"\n        ].includes(type) && params.every((param)=>typeof param !== \"object\")) params = [\n            (0, $0bf48deb29103875$export$64e17ccd4a503243)(type, ...params)\n        ];\n        if (params.length === 1 && cacheMap !== null && cacheMap.has(params[0])) return $64e573acaa48d904$export$e97474e17004dd41(cacheMap.get(params[0]));\n        if (params.length === 1) {\n            const node = $64e573acaa48d904$var$getConstNode(params[0], type);\n            if ($64e573acaa48d904$var$safeGetNodeType(node) === type) return $64e573acaa48d904$export$e97474e17004dd41(node);\n            return $64e573acaa48d904$export$e97474e17004dd41(new (0, $6d38ff899a333910$export$2e2bcd8739ae039)(node, type));\n        }\n        const nodes = params.map((param)=>$64e573acaa48d904$var$getConstNode(param));\n        return $64e573acaa48d904$export$e97474e17004dd41(new (0, $e6961302f51f6801$export$2e2bcd8739ae039)(nodes, type));\n    };\n};\nconst $64e573acaa48d904$export$e11e4dd774259665 = (value)=>value !== undefined && value !== null ? value.nodeType || value.convertTo || (typeof value === \"string\" ? value : null) : null;\nfunction $64e573acaa48d904$export$7d95ef31865f68e8(jsFunc) {\n    return new Proxy(new $64e573acaa48d904$var$ShaderNodeInternal(jsFunc), $64e573acaa48d904$var$shaderNodeHandler);\n}\nconst $64e573acaa48d904$export$e97474e17004dd41 = (val, altType = null)=>/* new */ $64e573acaa48d904$var$ShaderNodeObject(val, altType);\nconst $64e573acaa48d904$export$773e99721425b3b3 = (val, altType = null)=>new $64e573acaa48d904$var$ShaderNodeObjects(val, altType);\nconst $64e573acaa48d904$export$34baf9226cd3d576 = (val, altType = null)=>new $64e573acaa48d904$var$ShaderNodeArray(val, altType);\nconst $64e573acaa48d904$export$60d11c6747b7deba = (...params)=>new $64e573acaa48d904$var$ShaderNodeProxy(...params);\nconst $64e573acaa48d904$export$25c7ddd7ae9b45f3 = (...params)=>new $64e573acaa48d904$var$ShaderNodeImmutable(...params);\nconst $64e573acaa48d904$export$c5f97fbe8fc1d725 = (jsFunc)=>{\n    console.warn(\"TSL: shader() is deprecated. Use tslFn() instead.\");\n    return new $64e573acaa48d904$export$7d95ef31865f68e8(jsFunc);\n};\nconst $64e573acaa48d904$export$ab8c2ade1f37d88b = (jsFunc)=>{\n    const shaderNode = new $64e573acaa48d904$export$7d95ef31865f68e8(jsFunc);\n    const fn = (...params)=>{\n        let inputs;\n        $64e573acaa48d904$export$773e99721425b3b3(params);\n        if (params[0] && params[0].isNode) inputs = [\n            ...params\n        ];\n        else inputs = params[0];\n        return shaderNode.call(inputs);\n    };\n    fn.shaderNode = shaderNode;\n    fn.setLayout = (layout)=>{\n        shaderNode.setLayout(layout);\n        return fn;\n    };\n    return fn;\n};\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ShaderNode\", $64e573acaa48d904$export$7d95ef31865f68e8);\nconst $64e573acaa48d904$export$50a78b1c198bcc62 = (stack)=>{\n    $64e573acaa48d904$var$currentStack = stack;\n};\nconst $64e573acaa48d904$export$c3090653b26dfebd = ()=>$64e573acaa48d904$var$currentStack;\nconst $64e573acaa48d904$export$1f9ff5f4a6c9361a = (...params)=>$64e573acaa48d904$var$currentStack.if(...params);\nfunction $64e573acaa48d904$export$10d8903dec122b9d(node) {\n    if ($64e573acaa48d904$var$currentStack) $64e573acaa48d904$var$currentStack.add(node);\n    return node;\n}\n$64e573acaa48d904$export$9faee53f34e0de2f(\"append\", $64e573acaa48d904$export$10d8903dec122b9d);\nconst $64e573acaa48d904$export$35e9368ef982300f = new $64e573acaa48d904$var$ConvertType(\"color\");\nconst $64e573acaa48d904$export$6b5cd3983e3ee5ab = new $64e573acaa48d904$var$ConvertType(\"float\", $64e573acaa48d904$var$cacheMaps.float);\nconst $64e573acaa48d904$export$7d260a2a5f8bc19e = new $64e573acaa48d904$var$ConvertType(\"int\", $64e573acaa48d904$var$cacheMaps.ints);\nconst $64e573acaa48d904$export$877455b195f03b92 = new $64e573acaa48d904$var$ConvertType(\"uint\", $64e573acaa48d904$var$cacheMaps.uint);\nconst $64e573acaa48d904$export$87b259aa03e3d267 = new $64e573acaa48d904$var$ConvertType(\"bool\", $64e573acaa48d904$var$cacheMaps.bool);\nconst $64e573acaa48d904$export$e9830bc863290a54 = new $64e573acaa48d904$var$ConvertType(\"vec2\");\nconst $64e573acaa48d904$export$63e666f6a33be288 = new $64e573acaa48d904$var$ConvertType(\"ivec2\");\nconst $64e573acaa48d904$export$7adaa2be14210750 = new $64e573acaa48d904$var$ConvertType(\"uvec2\");\nconst $64e573acaa48d904$export$c94f17737369dd81 = new $64e573acaa48d904$var$ConvertType(\"bvec2\");\nconst $64e573acaa48d904$export$9100789c9d999364 = new $64e573acaa48d904$var$ConvertType(\"vec3\");\nconst $64e573acaa48d904$export$6003f6943477580f = new $64e573acaa48d904$var$ConvertType(\"ivec3\");\nconst $64e573acaa48d904$export$bffc171a9468d831 = new $64e573acaa48d904$var$ConvertType(\"uvec3\");\nconst $64e573acaa48d904$export$625ee0a1e433837e = new $64e573acaa48d904$var$ConvertType(\"bvec3\");\nconst $64e573acaa48d904$export$6dba2a1f0d609415 = new $64e573acaa48d904$var$ConvertType(\"vec4\");\nconst $64e573acaa48d904$export$6b0d90284264dffe = new $64e573acaa48d904$var$ConvertType(\"ivec4\");\nconst $64e573acaa48d904$export$396e55cb3570606 = new $64e573acaa48d904$var$ConvertType(\"uvec4\");\nconst $64e573acaa48d904$export$a7659f48478e8245 = new $64e573acaa48d904$var$ConvertType(\"bvec4\");\nconst $64e573acaa48d904$export$f7543b5409a93c6b = new $64e573acaa48d904$var$ConvertType(\"mat2\");\nconst $64e573acaa48d904$export$33dbb1d5a9f0dc4e = new $64e573acaa48d904$var$ConvertType(\"imat2\");\nconst $64e573acaa48d904$export$5af364a6d577c556 = new $64e573acaa48d904$var$ConvertType(\"umat2\");\nconst $64e573acaa48d904$export$d934d7ff6a9d8a90 = new $64e573acaa48d904$var$ConvertType(\"bmat2\");\nconst $64e573acaa48d904$export$e43bd9f504e4ac00 = new $64e573acaa48d904$var$ConvertType(\"mat3\");\nconst $64e573acaa48d904$export$3fd0a2bd84e974ef = new $64e573acaa48d904$var$ConvertType(\"imat3\");\nconst $64e573acaa48d904$export$c20ae79252505186 = new $64e573acaa48d904$var$ConvertType(\"umat3\");\nconst $64e573acaa48d904$export$5f5ccafdae4e8c03 = new $64e573acaa48d904$var$ConvertType(\"bmat3\");\nconst $64e573acaa48d904$export$d2b4acf069bf09f5 = new $64e573acaa48d904$var$ConvertType(\"mat4\");\nconst $64e573acaa48d904$export$6162641457085b05 = new $64e573acaa48d904$var$ConvertType(\"imat4\");\nconst $64e573acaa48d904$export$7c2c122e6d1ce8c = new $64e573acaa48d904$var$ConvertType(\"umat4\");\nconst $64e573acaa48d904$export$997f412242703df4 = new $64e573acaa48d904$var$ConvertType(\"bmat4\");\nconst $64e573acaa48d904$export$22b082955e083ec3 = (value = \"\")=>$64e573acaa48d904$export$e97474e17004dd41(new (0, $44c324112372fceb$export$2e2bcd8739ae039)(value, \"string\"));\nconst $64e573acaa48d904$export$f57200da856d736b = (value)=>$64e573acaa48d904$export$e97474e17004dd41(new (0, $44c324112372fceb$export$2e2bcd8739ae039)(value, \"ArrayBuffer\"));\n$64e573acaa48d904$export$9faee53f34e0de2f(\"color\", $64e573acaa48d904$export$35e9368ef982300f);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"float\", $64e573acaa48d904$export$6b5cd3983e3ee5ab);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"int\", $64e573acaa48d904$export$7d260a2a5f8bc19e);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"uint\", $64e573acaa48d904$export$877455b195f03b92);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"bool\", $64e573acaa48d904$export$87b259aa03e3d267);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"vec2\", $64e573acaa48d904$export$e9830bc863290a54);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"ivec2\", $64e573acaa48d904$export$63e666f6a33be288);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"uvec2\", $64e573acaa48d904$export$7adaa2be14210750);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"bvec2\", $64e573acaa48d904$export$c94f17737369dd81);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"vec3\", $64e573acaa48d904$export$9100789c9d999364);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"ivec3\", $64e573acaa48d904$export$6003f6943477580f);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"uvec3\", $64e573acaa48d904$export$bffc171a9468d831);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"bvec3\", $64e573acaa48d904$export$625ee0a1e433837e);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"vec4\", $64e573acaa48d904$export$6dba2a1f0d609415);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"ivec4\", $64e573acaa48d904$export$6b0d90284264dffe);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"uvec4\", $64e573acaa48d904$export$396e55cb3570606);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"bvec4\", $64e573acaa48d904$export$a7659f48478e8245);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"mat2\", $64e573acaa48d904$export$f7543b5409a93c6b);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"imat2\", $64e573acaa48d904$export$33dbb1d5a9f0dc4e);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"umat2\", $64e573acaa48d904$export$5af364a6d577c556);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"bmat2\", $64e573acaa48d904$export$d934d7ff6a9d8a90);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"mat3\", $64e573acaa48d904$export$e43bd9f504e4ac00);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"imat3\", $64e573acaa48d904$export$3fd0a2bd84e974ef);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"umat3\", $64e573acaa48d904$export$c20ae79252505186);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"bmat3\", $64e573acaa48d904$export$5f5ccafdae4e8c03);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"mat4\", $64e573acaa48d904$export$d2b4acf069bf09f5);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"imat4\", $64e573acaa48d904$export$6162641457085b05);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"umat4\", $64e573acaa48d904$export$7c2c122e6d1ce8c);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"bmat4\", $64e573acaa48d904$export$997f412242703df4);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"string\", $64e573acaa48d904$export$22b082955e083ec3);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"arrayBuffer\", $64e573acaa48d904$export$f57200da856d736b);\nconst $64e573acaa48d904$export$8454457683f90105 = $64e573acaa48d904$export$60d11c6747b7deba((0, $a62d64263fea5012$export$2e2bcd8739ae039));\nconst $64e573acaa48d904$export$9c68d69a4c5bbcf9 = (node, types)=>$64e573acaa48d904$export$e97474e17004dd41(new (0, $6d38ff899a333910$export$2e2bcd8739ae039)($64e573acaa48d904$export$e97474e17004dd41(node), types));\nconst $64e573acaa48d904$export$65980d18b75784e2 = (node, channels)=>$64e573acaa48d904$export$e97474e17004dd41(new (0, $c5c9eb115437e129$export$2e2bcd8739ae039)($64e573acaa48d904$export$e97474e17004dd41(node), channels));\n$64e573acaa48d904$export$9faee53f34e0de2f(\"element\", $64e573acaa48d904$export$8454457683f90105);\n$64e573acaa48d904$export$9faee53f34e0de2f(\"convert\", $64e573acaa48d904$export$9c68d69a4c5bbcf9);\n\n\n\nclass $fd4bff88f296ab08$var$AssignNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(targetNode, sourceNode){\n        super();\n        this.targetNode = targetNode;\n        this.sourceNode = sourceNode;\n    }\n    hasDependencies() {\n        return false;\n    }\n    getNodeType(builder, output) {\n        return output !== \"void\" ? this.targetNode.getNodeType(builder) : \"void\";\n    }\n    needsSplitAssign(builder) {\n        const { targetNode: targetNode } = this;\n        if (builder.isAvailable(\"swizzleAssign\") === false && targetNode.isSplitNode && targetNode.components.length > 1) {\n            const targetLength = builder.getTypeLength(targetNode.node.getNodeType(builder));\n            const assignDiferentVector = (0, $d70807ef9a9432a5$export$1c0adcb9073b646d).join(\"\").slice(0, targetLength) !== targetNode.components;\n            return assignDiferentVector;\n        }\n        return false;\n    }\n    generate(builder, output) {\n        const { targetNode: targetNode, sourceNode: sourceNode } = this;\n        const needsSplitAssign = this.needsSplitAssign(builder);\n        const targetType = targetNode.getNodeType(builder);\n        const target = targetNode.context({\n            assign: true\n        }).build(builder);\n        const source = sourceNode.build(builder, targetType);\n        const sourceType = sourceNode.getNodeType(builder);\n        const nodeData = builder.getDataFromNode(this);\n        //\n        let snippet;\n        if (nodeData.initialized === true) {\n            if (output !== \"void\") snippet = target;\n        } else if (needsSplitAssign) {\n            const sourceVar = builder.getVarFromNode(this, null, targetType);\n            const sourceProperty = builder.getPropertyName(sourceVar);\n            builder.addLineFlowCode(`${sourceProperty} = ${source}`);\n            const targetRoot = targetNode.node.context({\n                assign: true\n            }).build(builder);\n            for(let i = 0; i < targetNode.components.length; i++){\n                const component = targetNode.components[i];\n                builder.addLineFlowCode(`${targetRoot}.${component} = ${sourceProperty}[ ${i} ]`);\n            }\n            if (output !== \"void\") snippet = target;\n        } else {\n            snippet = `${target} = ${source}`;\n            if (output === \"void\" || sourceType === \"void\") {\n                builder.addLineFlowCode(snippet);\n                if (output !== \"void\") snippet = target;\n            }\n        }\n        nodeData.initialized = true;\n        return builder.format(snippet, targetType, output);\n    }\n}\nvar $fd4bff88f296ab08$export$2e2bcd8739ae039 = $fd4bff88f296ab08$var$AssignNode;\nconst $fd4bff88f296ab08$export$e6e34fd1f2686227 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($fd4bff88f296ab08$var$AssignNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"AssignNode\", $fd4bff88f296ab08$var$AssignNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"assign\", $fd4bff88f296ab08$export$e6e34fd1f2686227);\n\n\n\n\n\n\nclass $9e2d95b0bb876d67$var$VaryingNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, name = null){\n        super();\n        this.node = node;\n        this.name = name;\n        this.isVaryingNode = true;\n    }\n    isGlobal() {\n        return true;\n    }\n    getHash(builder) {\n        return this.name || super.getHash(builder);\n    }\n    getNodeType(builder) {\n        // VaryingNode is auto type\n        return this.node.getNodeType(builder);\n    }\n    generate(builder) {\n        const { name: name, node: node } = this;\n        const type = this.getNodeType(builder);\n        const nodeVarying = builder.getVaryingFromNode(this, name, type);\n        // this property can be used to check if the varying can be optimized for a var\n        nodeVarying.needsInterpolation || (nodeVarying.needsInterpolation = builder.shaderStage === \"fragment\");\n        const propertyName = builder.getPropertyName(nodeVarying, (0, $d70807ef9a9432a5$export$9e43649cde3e3072).VERTEX);\n        // force node run in vertex stage\n        builder.flowNodeFromShaderStage((0, $d70807ef9a9432a5$export$9e43649cde3e3072).VERTEX, node, type, propertyName);\n        return builder.getPropertyName(nodeVarying);\n    }\n}\nvar $9e2d95b0bb876d67$export$2e2bcd8739ae039 = $9e2d95b0bb876d67$var$VaryingNode;\nconst $9e2d95b0bb876d67$export$3f47f02b8134ef8a = (0, $64e573acaa48d904$export$60d11c6747b7deba)($9e2d95b0bb876d67$var$VaryingNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"varying\", $9e2d95b0bb876d67$export$3f47f02b8134ef8a);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"VaryingNode\", $9e2d95b0bb876d67$var$VaryingNode);\n\n\n\nclass $30ecc590d6fb0411$var$AttributeNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(attributeName, nodeType = null){\n        super(nodeType);\n        this._attributeName = attributeName;\n    }\n    isGlobal() {\n        return true;\n    }\n    getHash(builder) {\n        return this.getAttributeName(builder);\n    }\n    getNodeType(builder) {\n        let nodeType = super.getNodeType(builder);\n        if (nodeType === null) {\n            const attributeName = this.getAttributeName(builder);\n            if (builder.hasGeometryAttribute(attributeName)) {\n                const attribute = builder.geometry.getAttribute(attributeName);\n                nodeType = builder.getTypeFromAttribute(attribute);\n            } else nodeType = \"float\";\n        }\n        return nodeType;\n    }\n    setAttributeName(attributeName) {\n        this._attributeName = attributeName;\n        return this;\n    }\n    getAttributeName() {\n        return this._attributeName;\n    }\n    generate(builder) {\n        const attributeName = this.getAttributeName(builder);\n        const nodeType = this.getNodeType(builder);\n        const geometryAttribute = builder.hasGeometryAttribute(attributeName);\n        if (geometryAttribute === true) {\n            const attribute = builder.geometry.getAttribute(attributeName);\n            const attributeType = builder.getTypeFromAttribute(attribute);\n            const nodeAttribute = builder.getAttribute(attributeName, attributeType);\n            if (builder.shaderStage === \"vertex\") return builder.format(nodeAttribute.name, attributeType, nodeType);\n            else {\n                const nodeVarying = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(this);\n                return nodeVarying.build(builder, nodeType);\n            }\n        } else {\n            console.warn(`AttributeNode: Vertex attribute \"${attributeName}\" not found on geometry.`);\n            return builder.generateConst(nodeType);\n        }\n    }\n}\nvar $30ecc590d6fb0411$export$2e2bcd8739ae039 = $30ecc590d6fb0411$var$AttributeNode;\nconst $30ecc590d6fb0411$export$af4b9a83f4b00434 = (name, nodeType)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $30ecc590d6fb0411$var$AttributeNode(name, nodeType));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"AttributeNode\", $30ecc590d6fb0411$var$AttributeNode);\n\n\n\n\nclass $034ed30ba65264d2$var$BypassNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(returnNode, callNode){\n        super();\n        this.isBypassNode = true;\n        this.outputNode = returnNode;\n        this.callNode = callNode;\n    }\n    getNodeType(builder) {\n        return this.outputNode.getNodeType(builder);\n    }\n    generate(builder) {\n        const snippet = this.callNode.build(builder, \"void\");\n        if (snippet !== \"\") builder.addLineFlowCode(snippet);\n        return this.outputNode.build(builder);\n    }\n}\nvar $034ed30ba65264d2$export$2e2bcd8739ae039 = $034ed30ba65264d2$var$BypassNode;\nconst $034ed30ba65264d2$export$49c50429ca9c5609 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($034ed30ba65264d2$var$BypassNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"bypass\", $034ed30ba65264d2$export$49c50429ca9c5609);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"BypassNode\", $034ed30ba65264d2$var$BypassNode);\n\n\n\nlet $9d695fdcb6c1a113$var$id = 0;\nclass $9d695fdcb6c1a113$var$NodeCache {\n    constructor(){\n        this.id = $9d695fdcb6c1a113$var$id++;\n        this.nodesData = new WeakMap();\n    }\n    getNodeData(node) {\n        return this.nodesData.get(node);\n    }\n    setNodeData(node, data) {\n        this.nodesData.set(node, data);\n    }\n}\nvar $9d695fdcb6c1a113$export$2e2bcd8739ae039 = $9d695fdcb6c1a113$var$NodeCache;\n\n\n\nclass $4c2179587a364d28$var$CacheNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, cache = new (0, $9d695fdcb6c1a113$export$2e2bcd8739ae039)()){\n        super();\n        this.isCacheNode = true;\n        this.node = node;\n        this.cache = cache;\n    }\n    getNodeType(builder) {\n        return this.node.getNodeType(builder);\n    }\n    build(builder, ...params) {\n        const previousCache = builder.getCache();\n        const cache = this.cache || builder.globalCache;\n        builder.setCache(cache);\n        const data = this.node.build(builder, ...params);\n        builder.setCache(previousCache);\n        return data;\n    }\n}\nvar $4c2179587a364d28$export$2e2bcd8739ae039 = $4c2179587a364d28$var$CacheNode;\nconst $4c2179587a364d28$export$69a3209f1a06c04d = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4c2179587a364d28$var$CacheNode);\nconst $4c2179587a364d28$export$169c35201c7f7a7c = (node)=>$4c2179587a364d28$export$69a3209f1a06c04d(node, null);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"cache\", $4c2179587a364d28$export$69a3209f1a06c04d);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"globalCache\", $4c2179587a364d28$export$169c35201c7f7a7c);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"CacheNode\", $4c2179587a364d28$var$CacheNode);\n\n\n\n\n\nclass $6c10098160fcd7b9$var$ContextNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, context = {}){\n        super();\n        this.isContextNode = true;\n        this.node = node;\n        this.context = context;\n    }\n    getNodeType(builder) {\n        return this.node.getNodeType(builder);\n    }\n    setup(builder) {\n        const previousContext = builder.getContext();\n        builder.setContext({\n            ...builder.context,\n            ...this.context\n        });\n        const node = this.node.build(builder);\n        builder.setContext(previousContext);\n        return node;\n    }\n    generate(builder, output) {\n        const previousContext = builder.getContext();\n        builder.setContext({\n            ...builder.context,\n            ...this.context\n        });\n        const snippet = this.node.build(builder, output);\n        builder.setContext(previousContext);\n        return snippet;\n    }\n}\nvar $6c10098160fcd7b9$export$2e2bcd8739ae039 = $6c10098160fcd7b9$var$ContextNode;\nconst $6c10098160fcd7b9$export$a078c61943f9dbbe = (0, $64e573acaa48d904$export$60d11c6747b7deba)($6c10098160fcd7b9$var$ContextNode);\nconst $6c10098160fcd7b9$export$1237798dc640739a = (node, name)=>$6c10098160fcd7b9$export$a078c61943f9dbbe(node, {\n        label: name\n    });\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"context\", $6c10098160fcd7b9$export$a078c61943f9dbbe);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"label\", $6c10098160fcd7b9$export$1237798dc640739a);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ContextNode\", $6c10098160fcd7b9$var$ContextNode);\n\n\n\n\n\nclass $655b15d454d9aca1$var$IndexNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope){\n        super(\"uint\");\n        this.scope = scope;\n        this.isInstanceIndexNode = true;\n    }\n    generate(builder) {\n        const nodeType = this.getNodeType(builder);\n        const scope = this.scope;\n        let propertyName;\n        if (scope === $655b15d454d9aca1$var$IndexNode.VERTEX) propertyName = builder.getVertexIndex();\n        else if (scope === $655b15d454d9aca1$var$IndexNode.INSTANCE) propertyName = builder.getInstanceIndex();\n        else throw new Error(\"THREE.IndexNode: Unknown scope: \" + scope);\n        let output;\n        if (builder.shaderStage === \"vertex\" || builder.shaderStage === \"compute\") output = propertyName;\n        else {\n            const nodeVarying = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(this);\n            output = nodeVarying.build(builder, nodeType);\n        }\n        return output;\n    }\n}\n$655b15d454d9aca1$var$IndexNode.VERTEX = \"vertex\";\n$655b15d454d9aca1$var$IndexNode.INSTANCE = \"instance\";\nvar $655b15d454d9aca1$export$2e2bcd8739ae039 = $655b15d454d9aca1$var$IndexNode;\nconst $655b15d454d9aca1$export$df3f95685a193815 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($655b15d454d9aca1$var$IndexNode, $655b15d454d9aca1$var$IndexNode.VERTEX);\nconst $655b15d454d9aca1$export$3691cd4c77fcb2c4 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($655b15d454d9aca1$var$IndexNode, $655b15d454d9aca1$var$IndexNode.INSTANCE);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"IndexNode\", $655b15d454d9aca1$var$IndexNode);\n\n\nclass $f9fd258025b318dd$var$LightingModel {\n    start() {}\n    finish() {}\n    direct() {}\n    indirectDiffuse() {}\n    indirectSpecular() {}\n    ambientOcclusion() {}\n}\nvar $f9fd258025b318dd$export$2e2bcd8739ae039 = $f9fd258025b318dd$var$LightingModel;\n\n\n\n\n\nclass $414b1568201c856d$var$VarNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, name = null){\n        super();\n        this.node = node;\n        this.name = name;\n        this.isVarNode = true;\n    }\n    isGlobal() {\n        return true;\n    }\n    getHash(builder) {\n        return this.name || super.getHash(builder);\n    }\n    getNodeType(builder) {\n        return this.node.getNodeType(builder);\n    }\n    generate(builder) {\n        const { node: node, name: name } = this;\n        const nodeVar = builder.getVarFromNode(this, name, builder.getVectorType(this.getNodeType(builder)));\n        const propertyName = builder.getPropertyName(nodeVar);\n        const snippet = node.build(builder, nodeVar.type);\n        builder.addLineFlowCode(`${propertyName} = ${snippet}`);\n        return propertyName;\n    }\n}\nvar $414b1568201c856d$export$2e2bcd8739ae039 = $414b1568201c856d$var$VarNode;\nconst $414b1568201c856d$export$8d72b093afd1813e = (0, $64e573acaa48d904$export$60d11c6747b7deba)($414b1568201c856d$var$VarNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"temp\", $414b1568201c856d$export$8d72b093afd1813e); // @TODO: Will be removed in the future\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"toVar\", (...params)=>$414b1568201c856d$export$8d72b093afd1813e(...params).append());\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"VarNode\", $414b1568201c856d$var$VarNode);\n\n\nclass $cb3f86361a298b04$var$NodeAttribute {\n    constructor(name, type, node = null){\n        this.isNodeAttribute = true;\n        this.name = name;\n        this.type = type;\n        this.node = node;\n    }\n}\nvar $cb3f86361a298b04$export$2e2bcd8739ae039 = $cb3f86361a298b04$var$NodeAttribute;\n\n\nclass $88c979768aba672c$var$NodeUniform {\n    constructor(name, type, node, needsUpdate){\n        this.isNodeUniform = true;\n        this.name = name;\n        this.type = type;\n        this.node = node.getSelf();\n        this.needsUpdate = needsUpdate;\n    }\n    get value() {\n        return this.node.value;\n    }\n    set value(val) {\n        this.node.value = val;\n    }\n    get id() {\n        return this.node.id;\n    }\n    get groupNode() {\n        return this.node.groupNode;\n    }\n}\nvar $88c979768aba672c$export$2e2bcd8739ae039 = $88c979768aba672c$var$NodeUniform;\n\n\n\nclass $68232893fd44a792$var$NodeVar {\n    constructor(name, type){\n        this.isNodeVar = true;\n        this.name = name;\n        this.type = type;\n    }\n}\nvar $68232893fd44a792$export$2e2bcd8739ae039 = $68232893fd44a792$var$NodeVar;\n\n\nclass $63f83cf3f666739e$var$NodeVarying extends (0, $68232893fd44a792$export$2e2bcd8739ae039) {\n    constructor(name, type){\n        super(name, type);\n        this.needsInterpolation = false;\n        this.isNodeVarying = true;\n    }\n}\nvar $63f83cf3f666739e$export$2e2bcd8739ae039 = $63f83cf3f666739e$var$NodeVarying;\n\n\n\nclass $cf06b9e10ea07051$var$NodeCode {\n    constructor(name, type, code = \"\"){\n        this.name = name;\n        this.type = type;\n        this.code = code;\n        Object.defineProperty(this, \"isNodeCode\", {\n            value: true\n        });\n    }\n}\nvar $cf06b9e10ea07051$export$2e2bcd8739ae039 = $cf06b9e10ea07051$var$NodeCode;\n\n\nclass $fd191a9102c57d7d$var$NodeKeywords {\n    constructor(){\n        this.keywords = [];\n        this.nodes = [];\n        this.keywordsCallback = {};\n    }\n    getNode(name) {\n        let node = this.nodes[name];\n        if (node === undefined && this.keywordsCallback[name] !== undefined) {\n            node = this.keywordsCallback[name](name);\n            this.nodes[name] = node;\n        }\n        return node;\n    }\n    addKeyword(name, callback) {\n        this.keywords.push(name);\n        this.keywordsCallback[name] = callback;\n        return this;\n    }\n    parse(code) {\n        const keywordNames = this.keywords;\n        const regExp = new RegExp(`\\\\b${keywordNames.join(\"\\\\b|\\\\b\")}\\\\b`, \"g\");\n        const codeKeywords = code.match(regExp);\n        const keywordNodes = [];\n        if (codeKeywords !== null) for (const keyword of codeKeywords){\n            const node = this.getNode(keyword);\n            if (node !== undefined && keywordNodes.indexOf(node) === -1) keywordNodes.push(node);\n        }\n        return keywordNodes;\n    }\n    include(builder, code) {\n        const keywordNodes = this.parse(code);\n        for (const keywordNode of keywordNodes)keywordNode.build(builder);\n    }\n}\nvar $fd191a9102c57d7d$export$2e2bcd8739ae039 = $fd191a9102c57d7d$var$NodeKeywords;\n\n\n\n\n\n\n\nclass $39f1d8052e434d46$var$PropertyNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(nodeType, name = null, varying = false){\n        super(nodeType);\n        this.name = name;\n        this.varying = varying;\n        this.isPropertyNode = true;\n    }\n    getHash(builder) {\n        return this.name || super.getHash(builder);\n    }\n    isGlobal() {\n        return true;\n    }\n    generate(builder) {\n        let nodeVar;\n        if (this.varying === true) {\n            nodeVar = builder.getVaryingFromNode(this, this.name);\n            nodeVar.needsInterpolation = true;\n        } else nodeVar = builder.getVarFromNode(this, this.name);\n        return builder.getPropertyName(nodeVar);\n    }\n}\nvar $39f1d8052e434d46$export$2e2bcd8739ae039 = $39f1d8052e434d46$var$PropertyNode;\nconst $39f1d8052e434d46$export$d541bacb2bda4494 = (type, name)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $39f1d8052e434d46$var$PropertyNode(type, name));\nconst $39f1d8052e434d46$export$cb5f8cbf8b7bd600 = (type, name)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $39f1d8052e434d46$var$PropertyNode(type, name, true));\nconst $39f1d8052e434d46$export$3a790f19f33c5176 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"vec4\", \"DiffuseColor\");\nconst $39f1d8052e434d46$export$df3004878062a594 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"Roughness\");\nconst $39f1d8052e434d46$export$a0ae10b9403517f8 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"Metalness\");\nconst $39f1d8052e434d46$export$9b0829dedd347475 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"Clearcoat\");\nconst $39f1d8052e434d46$export$2747d91296dfac86 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"ClearcoatRoughness\");\nconst $39f1d8052e434d46$export$7cccf56baed94cee = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"vec3\", \"Sheen\");\nconst $39f1d8052e434d46$export$40c82d21b5c7315b = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"SheenRoughness\");\nconst $39f1d8052e434d46$export$8fa8908d67be43df = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"Iridescence\");\nconst $39f1d8052e434d46$export$e8f290002a000efa = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"IridescenceIOR\");\nconst $39f1d8052e434d46$export$af4f9ca0bc04b1e = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"IridescenceThickness\");\nconst $39f1d8052e434d46$export$e1aa5ee431e11795 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"color\", \"SpecularColor\");\nconst $39f1d8052e434d46$export$245b4c35387657dc = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"Shininess\");\nconst $39f1d8052e434d46$export$c789db2c85949867 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"vec4\", \"Output\");\nconst $39f1d8052e434d46$export$c295bac1d6792172 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"dashSize\");\nconst $39f1d8052e434d46$export$146ecbc129c598d1 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"gapSize\");\nconst $39f1d8052e434d46$export$4bc20e29148c4322 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($39f1d8052e434d46$var$PropertyNode, \"float\", \"pointWidth\");\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PropertyNode\", $39f1d8052e434d46$var$PropertyNode);\n\n\nclass $e30b6ec8d9ccd650$var$ParameterNode extends (0, $39f1d8052e434d46$export$2e2bcd8739ae039) {\n    constructor(nodeType, name = null){\n        super(nodeType, name);\n        this.isParameterNode = true;\n    }\n    getHash() {\n        return this.uuid;\n    }\n    generate() {\n        return this.name;\n    }\n}\nvar $e30b6ec8d9ccd650$export$2e2bcd8739ae039 = $e30b6ec8d9ccd650$var$ParameterNode;\nconst $e30b6ec8d9ccd650$export$7eaa70c6742f3c7c = (type, name)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $e30b6ec8d9ccd650$var$ParameterNode(type, name));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ParameterNode\", $e30b6ec8d9ccd650$var$ParameterNode);\n\n\n\n\nclass $bb0fe926aab6f7ca$var$CodeNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(code = \"\", includes = [], language = \"\"){\n        super(\"code\");\n        this.isCodeNode = true;\n        this.code = code;\n        this.language = language;\n        this.includes = includes;\n    }\n    isGlobal() {\n        return true;\n    }\n    setIncludes(includes) {\n        this.includes = includes;\n        return this;\n    }\n    getIncludes() {\n        return this.includes;\n    }\n    generate(builder) {\n        const includes = this.getIncludes(builder);\n        for (const include of includes)include.build(builder);\n        const nodeCode = builder.getCodeFromNode(this, this.getNodeType(builder));\n        nodeCode.code = this.code;\n        return nodeCode.code;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.code = this.code;\n        data.language = this.language;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.code = data.code;\n        this.language = data.language;\n    }\n}\nvar $bb0fe926aab6f7ca$export$2e2bcd8739ae039 = $bb0fe926aab6f7ca$var$CodeNode;\nconst $bb0fe926aab6f7ca$export$6565f9f03506010b = (0, $64e573acaa48d904$export$60d11c6747b7deba)($bb0fe926aab6f7ca$var$CodeNode);\nconst $bb0fe926aab6f7ca$export$2371fdf5d68c366c = (src, includes)=>$bb0fe926aab6f7ca$export$6565f9f03506010b(src, includes, \"js\");\nconst $bb0fe926aab6f7ca$export$e04176e940221313 = (src, includes)=>$bb0fe926aab6f7ca$export$6565f9f03506010b(src, includes, \"wgsl\");\nconst $bb0fe926aab6f7ca$export$c1b1a45ed915aad9 = (src, includes)=>$bb0fe926aab6f7ca$export$6565f9f03506010b(src, includes, \"glsl\");\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"CodeNode\", $bb0fe926aab6f7ca$var$CodeNode);\n\n\n\n\nclass $84d66e1ab81d2c74$var$FunctionNode extends (0, $bb0fe926aab6f7ca$export$2e2bcd8739ae039) {\n    constructor(code = \"\", includes = [], language = \"\"){\n        super(code, includes, language);\n        this.keywords = {};\n    }\n    getNodeType(builder) {\n        return this.getNodeFunction(builder).type;\n    }\n    getInputs(builder) {\n        return this.getNodeFunction(builder).inputs;\n    }\n    getNodeFunction(builder) {\n        const nodeData = builder.getDataFromNode(this);\n        let nodeFunction = nodeData.nodeFunction;\n        if (nodeFunction === undefined) {\n            nodeFunction = builder.parser.parseFunction(this.code);\n            nodeData.nodeFunction = nodeFunction;\n        }\n        return nodeFunction;\n    }\n    generate(builder, output) {\n        super.generate(builder);\n        const nodeFunction = this.getNodeFunction(builder);\n        const name = nodeFunction.name;\n        const type = nodeFunction.type;\n        const nodeCode = builder.getCodeFromNode(this, type);\n        if (name !== \"\") // use a custom property name\n        nodeCode.name = name;\n        const propertyName = builder.getPropertyName(nodeCode);\n        let code = this.getNodeFunction(builder).getCode(propertyName);\n        const keywords = this.keywords;\n        const keywordsProperties = Object.keys(keywords);\n        if (keywordsProperties.length > 0) for (const property of keywordsProperties){\n            const propertyRegExp = new RegExp(`\\\\b${property}\\\\b`, \"g\");\n            const nodeProperty = keywords[property].build(builder, \"property\");\n            code = code.replace(propertyRegExp, nodeProperty);\n        }\n        nodeCode.code = code + \"\\n\";\n        if (output === \"property\") return propertyName;\n        else return builder.format(`${propertyName}()`, type, output);\n    }\n}\nvar $84d66e1ab81d2c74$export$2e2bcd8739ae039 = $84d66e1ab81d2c74$var$FunctionNode;\nconst $84d66e1ab81d2c74$var$nativeFn = (code, includes = [], language = \"\")=>{\n    for(let i = 0; i < includes.length; i++){\n        const include = includes[i];\n        // TSL Function: glslFn, wgslFn\n        if (typeof include === \"function\") includes[i] = include.functionNode;\n    }\n    const functionNode = (0, $64e573acaa48d904$export$e97474e17004dd41)(new $84d66e1ab81d2c74$var$FunctionNode(code, includes, language));\n    const fn = (...params)=>functionNode.call(...params);\n    fn.functionNode = functionNode;\n    return fn;\n};\nconst $84d66e1ab81d2c74$export$43d10d3026c18b22 = (code, includes)=>$84d66e1ab81d2c74$var$nativeFn(code, includes, \"glsl\");\nconst $84d66e1ab81d2c74$export$621a9f928cb4a662 = (code, includes)=>$84d66e1ab81d2c74$var$nativeFn(code, includes, \"wgsl\");\nconst $84d66e1ab81d2c74$export$86951950244e2001 = (code, includes)=>{\n    console.warn(\"TSL: func() is deprecated. Use nativeFn(), wgslFn() or glslFn() instead.\");\n    return (0, $64e573acaa48d904$export$e97474e17004dd41)(new $84d66e1ab81d2c74$var$FunctionNode(code, includes));\n};\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"FunctionNode\", $84d66e1ab81d2c74$var$FunctionNode);\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\n\n\n\n\n\n\n\nclass $b1a1ef0e93f7c8d5$var$UniformGroupNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(name, shared = false){\n        super(\"string\");\n        this.name = name;\n        this.version = 0;\n        this.shared = shared;\n        this.isUniformGroup = true;\n    }\n    set needsUpdate(value) {\n        if (value === true) this.version++;\n    }\n}\nconst $b1a1ef0e93f7c8d5$export$4981c76a74b9d345 = (name)=>new $b1a1ef0e93f7c8d5$var$UniformGroupNode(name);\nconst $b1a1ef0e93f7c8d5$export$f3cd358870d02e31 = (name)=>new $b1a1ef0e93f7c8d5$var$UniformGroupNode(name, true);\nconst $b1a1ef0e93f7c8d5$export$654c8c9e57a353a5 = $b1a1ef0e93f7c8d5$export$f3cd358870d02e31(\"frame\");\nconst $b1a1ef0e93f7c8d5$export$a75a8692b47c7f9e = $b1a1ef0e93f7c8d5$export$f3cd358870d02e31(\"render\");\nconst $b1a1ef0e93f7c8d5$export$6a2a415f960d3137 = $b1a1ef0e93f7c8d5$export$4981c76a74b9d345(\"object\");\nvar $b1a1ef0e93f7c8d5$export$2e2bcd8739ae039 = $b1a1ef0e93f7c8d5$var$UniformGroupNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"UniformGroupNode\", $b1a1ef0e93f7c8d5$var$UniformGroupNode);\n\n\n\n\nclass $5a2c5e11c304ade5$var$UniformNode extends (0, $183d0103bf75aaa6$export$2e2bcd8739ae039) {\n    constructor(value, nodeType = null){\n        super(value, nodeType);\n        this.isUniformNode = true;\n        this.groupNode = (0, $b1a1ef0e93f7c8d5$export$6a2a415f960d3137);\n    }\n    setGroup(group) {\n        this.groupNode = group;\n        return this;\n    }\n    getGroup() {\n        return this.groupNode;\n    }\n    getUniformHash(builder) {\n        return this.getHash(builder);\n    }\n    onUpdate(callback, updateType) {\n        const self = this.getSelf();\n        callback = callback.bind(self);\n        return super.onUpdate((frame)=>{\n            const value = callback(frame, self);\n            if (value !== undefined) this.value = value;\n        }, updateType);\n    }\n    generate(builder, output) {\n        const type = this.getNodeType(builder);\n        const hash = this.getUniformHash(builder);\n        let sharedNode = builder.getNodeFromHash(hash);\n        if (sharedNode === undefined) {\n            builder.setHashNode(this, hash);\n            sharedNode = this;\n        }\n        const sharedNodeType = sharedNode.getInputType(builder);\n        const nodeUniform = builder.getUniformFromNode(sharedNode, sharedNodeType, builder.shaderStage, builder.context.label);\n        const propertyName = builder.getPropertyName(nodeUniform);\n        if (builder.context.label !== undefined) delete builder.context.label;\n        return builder.format(propertyName, type, output);\n    }\n}\nvar $5a2c5e11c304ade5$export$2e2bcd8739ae039 = $5a2c5e11c304ade5$var$UniformNode;\nconst $5a2c5e11c304ade5$export$379455b567eff87d = (arg1, arg2)=>{\n    const nodeType = (0, $64e573acaa48d904$export$e11e4dd774259665)(arg2 || arg1);\n    // @TODO: get ConstNode from .traverse() in the future\n    const value = arg1 && arg1.isNode === true ? arg1.node && arg1.node.value || arg1.value : arg1;\n    return (0, $64e573acaa48d904$export$e97474e17004dd41)(new $5a2c5e11c304ade5$var$UniformNode(value, nodeType));\n};\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"UniformNode\", $5a2c5e11c304ade5$var$UniformNode);\n\n\n\n\n\n\nclass $94fcc899fcb75301$var$UVNode extends (0, $30ecc590d6fb0411$export$2e2bcd8739ae039) {\n    constructor(index = 0){\n        super(null, \"vec2\");\n        this.isUVNode = true;\n        this.index = index;\n    }\n    getAttributeName() {\n        const index = this.index;\n        return \"uv\" + (index > 0 ? index : \"\");\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.index = this.index;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.index = data.index;\n    }\n}\nvar $94fcc899fcb75301$export$2e2bcd8739ae039 = $94fcc899fcb75301$var$UVNode;\nconst $94fcc899fcb75301$export$c774ebbac59e31d3 = (...params)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $94fcc899fcb75301$var$UVNode(...params));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"UVNode\", $94fcc899fcb75301$var$UVNode);\n\n\n\n\nclass $ca68d2c8539d97c1$var$TextureSizeNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(textureNode, levelNode = null){\n        super(\"uvec2\");\n        this.isTextureSizeNode = true;\n        this.textureNode = textureNode;\n        this.levelNode = levelNode;\n    }\n    generate(builder, output) {\n        const textureProperty = this.textureNode.build(builder, \"property\");\n        const levelNode = this.levelNode.build(builder, \"int\");\n        return builder.format(`${builder.getMethod(\"textureDimensions\")}( ${textureProperty}, ${levelNode} )`, this.getNodeType(builder), output);\n    }\n}\nvar $ca68d2c8539d97c1$export$2e2bcd8739ae039 = $ca68d2c8539d97c1$var$TextureSizeNode;\nconst $ca68d2c8539d97c1$export$a8905ccad583a116 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($ca68d2c8539d97c1$var$TextureSizeNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"textureSize\", $ca68d2c8539d97c1$export$a8905ccad583a116);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TextureSizeNode\", $ca68d2c8539d97c1$var$TextureSizeNode);\n\n\n\n\n\n\n\nclass $1a899e4dee2452c3$var$OperatorNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(op, aNode, bNode, ...params){\n        super();\n        this.op = op;\n        if (params.length > 0) {\n            let finalBNode = bNode;\n            for(let i = 0; i < params.length; i++)finalBNode = new $1a899e4dee2452c3$var$OperatorNode(op, finalBNode, params[i]);\n            bNode = finalBNode;\n        }\n        this.aNode = aNode;\n        this.bNode = bNode;\n    }\n    getNodeType(builder, output) {\n        const op = this.op;\n        const aNode = this.aNode;\n        const bNode = this.bNode;\n        const typeA = aNode.getNodeType(builder);\n        const typeB = typeof bNode !== \"undefined\" ? bNode.getNodeType(builder) : null;\n        if (typeA === \"void\" || typeB === \"void\") return \"void\";\n        else if (op === \"%\") return typeA;\n        else if (op === \"~\" || op === \"&\" || op === \"|\" || op === \"^\" || op === \">>\" || op === \"<<\") return builder.getIntegerType(typeA);\n        else if (op === \"!\" || op === \"==\" || op === \"&&\" || op === \"||\" || op === \"^^\") return \"bool\";\n        else if (op === \"<\" || op === \">\" || op === \"<=\" || op === \">=\") {\n            const typeLength = output ? builder.getTypeLength(output) : Math.max(builder.getTypeLength(typeA), builder.getTypeLength(typeB));\n            return typeLength > 1 ? `bvec${typeLength}` : \"bool\";\n        } else {\n            if (typeA === \"float\" && builder.isMatrix(typeB)) return typeB;\n            else if (builder.isMatrix(typeA) && builder.isVector(typeB)) // matrix x vector\n            return builder.getVectorFromMatrix(typeA);\n            else if (builder.isVector(typeA) && builder.isMatrix(typeB)) // vector x matrix\n            return builder.getVectorFromMatrix(typeB);\n            else if (builder.getTypeLength(typeB) > builder.getTypeLength(typeA)) // anytype x anytype: use the greater length vector\n            return typeB;\n            return typeA;\n        }\n    }\n    generate(builder, output) {\n        const op = this.op;\n        const aNode = this.aNode;\n        const bNode = this.bNode;\n        const type = this.getNodeType(builder, output);\n        let typeA = null;\n        let typeB = null;\n        if (type !== \"void\") {\n            typeA = aNode.getNodeType(builder);\n            typeB = typeof bNode !== \"undefined\" ? bNode.getNodeType(builder) : null;\n            if (op === \"<\" || op === \">\" || op === \"<=\" || op === \">=\" || op === \"==\") {\n                if (builder.isVector(typeA)) typeB = typeA;\n                else typeA = typeB = \"float\";\n            } else if (op === \">>\" || op === \"<<\") {\n                typeA = type;\n                typeB = builder.changeComponentType(typeB, \"uint\");\n            } else if (builder.isMatrix(typeA) && builder.isVector(typeB)) // matrix x vector\n            typeB = builder.getVectorFromMatrix(typeA);\n            else if (builder.isVector(typeA) && builder.isMatrix(typeB)) // vector x matrix\n            typeA = builder.getVectorFromMatrix(typeB);\n            else // anytype x anytype\n            typeA = typeB = type;\n        } else typeA = typeB = type;\n        const a = aNode.build(builder, typeA);\n        const b = typeof bNode !== \"undefined\" ? bNode.build(builder, typeB) : null;\n        const outputLength = builder.getTypeLength(output);\n        const fnOpSnippet = builder.getFunctionOperator(op);\n        if (output !== \"void\") {\n            if (op === \"<\" && outputLength > 1) return builder.format(`${builder.getMethod(\"lessThan\")}( ${a}, ${b} )`, type, output);\n            else if (op === \"<=\" && outputLength > 1) return builder.format(`${builder.getMethod(\"lessThanEqual\")}( ${a}, ${b} )`, type, output);\n            else if (op === \">\" && outputLength > 1) return builder.format(`${builder.getMethod(\"greaterThan\")}( ${a}, ${b} )`, type, output);\n            else if (op === \">=\" && outputLength > 1) return builder.format(`${builder.getMethod(\"greaterThanEqual\")}( ${a}, ${b} )`, type, output);\n            else if (op === \"!\" || op === \"~\") return builder.format(`(${op}${a})`, typeA, output);\n            else if (fnOpSnippet) return builder.format(`${fnOpSnippet}( ${a}, ${b} )`, type, output);\n            else return builder.format(`( ${a} ${op} ${b} )`, type, output);\n        } else if (typeA !== \"void\") {\n            if (fnOpSnippet) return builder.format(`${fnOpSnippet}( ${a}, ${b} )`, type, output);\n            else return builder.format(`${a} ${op} ${b}`, type, output);\n        }\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.op = this.op;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.op = data.op;\n    }\n}\nvar $1a899e4dee2452c3$export$2e2bcd8739ae039 = $1a899e4dee2452c3$var$OperatorNode;\nconst $1a899e4dee2452c3$export$e16d8520af44a096 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"+\");\nconst $1a899e4dee2452c3$export$f93b5905241a7cca = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"-\");\nconst $1a899e4dee2452c3$export$6e3a27864ab166fe = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"*\");\nconst $1a899e4dee2452c3$export$159d9494db57879b = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"/\");\nconst $1a899e4dee2452c3$export$159037f780d3415c = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"%\");\nconst $1a899e4dee2452c3$export$411ce8e5a71e3069 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"==\");\nconst $1a899e4dee2452c3$export$53a6892c50694894 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"!=\");\nconst $1a899e4dee2452c3$export$9b050841a3a1b328 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"<\");\nconst $1a899e4dee2452c3$export$f517ea36c68d4644 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \">\");\nconst $1a899e4dee2452c3$export$b0b8c4c49050ecd0 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"<=\");\nconst $1a899e4dee2452c3$export$b5f536bfcbb0f057 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \">=\");\nconst $1a899e4dee2452c3$export$21c0ac7fe1cef1b8 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"&&\");\nconst $1a899e4dee2452c3$export$252bb8b3bbdf6749 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"||\");\nconst $1a899e4dee2452c3$export$6003a5f097c73977 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"!\");\nconst $1a899e4dee2452c3$export$6444ef5cd411280c = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"^^\");\nconst $1a899e4dee2452c3$export$a74ff8d3fdef72fc = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"&\");\nconst $1a899e4dee2452c3$export$aabc449fa5b5f4c0 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"~\");\nconst $1a899e4dee2452c3$export$361eb278cc70bacf = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"|\");\nconst $1a899e4dee2452c3$export$bfcff4501301c191 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"^\");\nconst $1a899e4dee2452c3$export$f613292be21d0bc3 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \"<<\");\nconst $1a899e4dee2452c3$export$86c449e29266e58a = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1a899e4dee2452c3$var$OperatorNode, \">>\");\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"add\", $1a899e4dee2452c3$export$e16d8520af44a096);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"sub\", $1a899e4dee2452c3$export$f93b5905241a7cca);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"mul\", $1a899e4dee2452c3$export$6e3a27864ab166fe);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"div\", $1a899e4dee2452c3$export$159d9494db57879b);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"remainder\", $1a899e4dee2452c3$export$159037f780d3415c);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"equal\", $1a899e4dee2452c3$export$411ce8e5a71e3069);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"notEqual\", $1a899e4dee2452c3$export$53a6892c50694894);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"lessThan\", $1a899e4dee2452c3$export$9b050841a3a1b328);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"greaterThan\", $1a899e4dee2452c3$export$f517ea36c68d4644);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"lessThanEqual\", $1a899e4dee2452c3$export$b0b8c4c49050ecd0);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"greaterThanEqual\", $1a899e4dee2452c3$export$b5f536bfcbb0f057);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"and\", $1a899e4dee2452c3$export$21c0ac7fe1cef1b8);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"or\", $1a899e4dee2452c3$export$252bb8b3bbdf6749);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"not\", $1a899e4dee2452c3$export$6003a5f097c73977);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"xor\", $1a899e4dee2452c3$export$6444ef5cd411280c);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"bitAnd\", $1a899e4dee2452c3$export$a74ff8d3fdef72fc);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"bitNot\", $1a899e4dee2452c3$export$aabc449fa5b5f4c0);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"bitOr\", $1a899e4dee2452c3$export$361eb278cc70bacf);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"bitXor\", $1a899e4dee2452c3$export$bfcff4501301c191);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"shiftLeft\", $1a899e4dee2452c3$export$f613292be21d0bc3);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"shiftRight\", $1a899e4dee2452c3$export$86c449e29266e58a);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"OperatorNode\", $1a899e4dee2452c3$var$OperatorNode);\n\n\n\n\nclass $4b9f12ce87d17074$var$MathNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(method, aNode, bNode = null, cNode = null){\n        super();\n        this.method = method;\n        this.aNode = aNode;\n        this.bNode = bNode;\n        this.cNode = cNode;\n    }\n    getInputType(builder) {\n        const aType = this.aNode.getNodeType(builder);\n        const bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n        const cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n        const aLen = builder.isMatrix(aType) ? 0 : builder.getTypeLength(aType);\n        const bLen = builder.isMatrix(bType) ? 0 : builder.getTypeLength(bType);\n        const cLen = builder.isMatrix(cType) ? 0 : builder.getTypeLength(cType);\n        if (aLen > bLen && aLen > cLen) return aType;\n        else if (bLen > cLen) return bType;\n        else if (cLen > aLen) return cType;\n        return aType;\n    }\n    getNodeType(builder) {\n        const method = this.method;\n        if (method === $4b9f12ce87d17074$var$MathNode.LENGTH || method === $4b9f12ce87d17074$var$MathNode.DISTANCE || method === $4b9f12ce87d17074$var$MathNode.DOT) return \"float\";\n        else if (method === $4b9f12ce87d17074$var$MathNode.CROSS) return \"vec3\";\n        else if (method === $4b9f12ce87d17074$var$MathNode.ALL) return \"bool\";\n        else if (method === $4b9f12ce87d17074$var$MathNode.EQUALS) return builder.changeComponentType(this.aNode.getNodeType(builder), \"bool\");\n        else if (method === $4b9f12ce87d17074$var$MathNode.MOD) return this.aNode.getNodeType(builder);\n        else return this.getInputType(builder);\n    }\n    generate(builder, output) {\n        const method = this.method;\n        const type = this.getNodeType(builder);\n        const inputType = this.getInputType(builder);\n        const a = this.aNode;\n        const b = this.bNode;\n        const c = this.cNode;\n        const isWebGL = builder.renderer.isWebGLRenderer === true;\n        if (method === $4b9f12ce87d17074$var$MathNode.TRANSFORM_DIRECTION) {\n            // dir can be either a direction vector or a normal vector\n            // upper-left 3x3 of matrix is assumed to be orthogonal\n            let tA = a;\n            let tB = b;\n            if (builder.isMatrix(tA.getNodeType(builder))) tB = (0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $64e573acaa48d904$export$9100789c9d999364)(tB), 0.0);\n            else tA = (0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $64e573acaa48d904$export$9100789c9d999364)(tA), 0.0);\n            const mulNode = (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(tA, tB).xyz;\n            return $4b9f12ce87d17074$export$a3295358bff77e(mulNode).build(builder, output);\n        } else if (method === $4b9f12ce87d17074$var$MathNode.NEGATE) return builder.format(\"( - \" + a.build(builder, inputType) + \" )\", type, output);\n        else if (method === $4b9f12ce87d17074$var$MathNode.ONE_MINUS) return (0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, a).build(builder, output);\n        else if (method === $4b9f12ce87d17074$var$MathNode.RECIPROCAL) return (0, $1a899e4dee2452c3$export$159d9494db57879b)(1.0, a).build(builder, output);\n        else if (method === $4b9f12ce87d17074$var$MathNode.DIFFERENCE) return $4b9f12ce87d17074$export$2335f513bbd82c6d((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(a, b)).build(builder, output);\n        else {\n            const params = [];\n            if (method === $4b9f12ce87d17074$var$MathNode.CROSS || method === $4b9f12ce87d17074$var$MathNode.MOD) params.push(a.build(builder, type), b.build(builder, type));\n            else if (method === $4b9f12ce87d17074$var$MathNode.STEP) params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? \"float\" : inputType), b.build(builder, inputType));\n            else if (isWebGL && (method === $4b9f12ce87d17074$var$MathNode.MIN || method === $4b9f12ce87d17074$var$MathNode.MAX) || method === $4b9f12ce87d17074$var$MathNode.MOD) params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? \"float\" : inputType));\n            else if (method === $4b9f12ce87d17074$var$MathNode.REFRACT) params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, \"float\"));\n            else if (method === $4b9f12ce87d17074$var$MathNode.MIX) params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? \"float\" : inputType));\n            else {\n                params.push(a.build(builder, inputType));\n                if (b !== null) params.push(b.build(builder, inputType));\n                if (c !== null) params.push(c.build(builder, inputType));\n            }\n            return builder.format(`${builder.getMethod(method, type)}( ${params.join(\", \")} )`, type, output);\n        }\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.method = this.method;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.method = data.method;\n    }\n}\n// 1 input\n$4b9f12ce87d17074$var$MathNode.ALL = \"all\";\n$4b9f12ce87d17074$var$MathNode.ANY = \"any\";\n$4b9f12ce87d17074$var$MathNode.EQUALS = \"equals\";\n$4b9f12ce87d17074$var$MathNode.RADIANS = \"radians\";\n$4b9f12ce87d17074$var$MathNode.DEGREES = \"degrees\";\n$4b9f12ce87d17074$var$MathNode.EXP = \"exp\";\n$4b9f12ce87d17074$var$MathNode.EXP2 = \"exp2\";\n$4b9f12ce87d17074$var$MathNode.LOG = \"log\";\n$4b9f12ce87d17074$var$MathNode.LOG2 = \"log2\";\n$4b9f12ce87d17074$var$MathNode.SQRT = \"sqrt\";\n$4b9f12ce87d17074$var$MathNode.INVERSE_SQRT = \"inversesqrt\";\n$4b9f12ce87d17074$var$MathNode.FLOOR = \"floor\";\n$4b9f12ce87d17074$var$MathNode.CEIL = \"ceil\";\n$4b9f12ce87d17074$var$MathNode.NORMALIZE = \"normalize\";\n$4b9f12ce87d17074$var$MathNode.FRACT = \"fract\";\n$4b9f12ce87d17074$var$MathNode.SIN = \"sin\";\n$4b9f12ce87d17074$var$MathNode.COS = \"cos\";\n$4b9f12ce87d17074$var$MathNode.TAN = \"tan\";\n$4b9f12ce87d17074$var$MathNode.ASIN = \"asin\";\n$4b9f12ce87d17074$var$MathNode.ACOS = \"acos\";\n$4b9f12ce87d17074$var$MathNode.ATAN = \"atan\";\n$4b9f12ce87d17074$var$MathNode.ABS = \"abs\";\n$4b9f12ce87d17074$var$MathNode.SIGN = \"sign\";\n$4b9f12ce87d17074$var$MathNode.LENGTH = \"length\";\n$4b9f12ce87d17074$var$MathNode.NEGATE = \"negate\";\n$4b9f12ce87d17074$var$MathNode.ONE_MINUS = \"oneMinus\";\n$4b9f12ce87d17074$var$MathNode.DFDX = \"dFdx\";\n$4b9f12ce87d17074$var$MathNode.DFDY = \"dFdy\";\n$4b9f12ce87d17074$var$MathNode.ROUND = \"round\";\n$4b9f12ce87d17074$var$MathNode.RECIPROCAL = \"reciprocal\";\n$4b9f12ce87d17074$var$MathNode.TRUNC = \"trunc\";\n$4b9f12ce87d17074$var$MathNode.FWIDTH = \"fwidth\";\n$4b9f12ce87d17074$var$MathNode.BITCAST = \"bitcast\";\n// 2 inputs\n$4b9f12ce87d17074$var$MathNode.ATAN2 = \"atan2\";\n$4b9f12ce87d17074$var$MathNode.MIN = \"min\";\n$4b9f12ce87d17074$var$MathNode.MAX = \"max\";\n$4b9f12ce87d17074$var$MathNode.MOD = \"mod\";\n$4b9f12ce87d17074$var$MathNode.STEP = \"step\";\n$4b9f12ce87d17074$var$MathNode.REFLECT = \"reflect\";\n$4b9f12ce87d17074$var$MathNode.DISTANCE = \"distance\";\n$4b9f12ce87d17074$var$MathNode.DIFFERENCE = \"difference\";\n$4b9f12ce87d17074$var$MathNode.DOT = \"dot\";\n$4b9f12ce87d17074$var$MathNode.CROSS = \"cross\";\n$4b9f12ce87d17074$var$MathNode.POW = \"pow\";\n$4b9f12ce87d17074$var$MathNode.TRANSFORM_DIRECTION = \"transformDirection\";\n// 3 inputs\n$4b9f12ce87d17074$var$MathNode.MIX = \"mix\";\n$4b9f12ce87d17074$var$MathNode.CLAMP = \"clamp\";\n$4b9f12ce87d17074$var$MathNode.REFRACT = \"refract\";\n$4b9f12ce87d17074$var$MathNode.SMOOTHSTEP = \"smoothstep\";\n$4b9f12ce87d17074$var$MathNode.FACEFORWARD = \"faceforward\";\nvar $4b9f12ce87d17074$export$2e2bcd8739ae039 = $4b9f12ce87d17074$var$MathNode;\nconst $4b9f12ce87d17074$export$fd293b15f47e270 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1e-6);\nconst $4b9f12ce87d17074$export$b4bf424ed968e242 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1e6);\nconst $4b9f12ce87d17074$export$6b5c1ceb16d01dc3 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(Math.PI);\nconst $4b9f12ce87d17074$export$f4644083ce95e7e3 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(Math.PI * 2);\nconst $4b9f12ce87d17074$export$84bf76cd7afc7469 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ALL);\nconst $4b9f12ce87d17074$export$4154a199d7d90455 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ANY);\nconst $4b9f12ce87d17074$export$e9bab7fafb253603 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.EQUALS);\nconst $4b9f12ce87d17074$export$8449e153fbd325fc = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.RADIANS);\nconst $4b9f12ce87d17074$export$41fc368e1a942b97 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.DEGREES);\nconst $4b9f12ce87d17074$export$b310ec824aaee37f = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.EXP);\nconst $4b9f12ce87d17074$export$4edc262d3118e986 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.EXP2);\nconst $4b9f12ce87d17074$export$bef1f36f5486a6a3 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.LOG);\nconst $4b9f12ce87d17074$export$b9fae0bba9d9094d = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.LOG2);\nconst $4b9f12ce87d17074$export$eba8049fb5020b81 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.SQRT);\nconst $4b9f12ce87d17074$export$e13f9cec9280faf4 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.INVERSE_SQRT);\nconst $4b9f12ce87d17074$export$a3fe094919f356fd = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.FLOOR);\nconst $4b9f12ce87d17074$export$803ce6b71a0a94b2 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.CEIL);\nconst $4b9f12ce87d17074$export$a3295358bff77e = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.NORMALIZE);\nconst $4b9f12ce87d17074$export$a57bfe0eb79af278 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.FRACT);\nconst $4b9f12ce87d17074$export$5de3937cb4b592ed = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.SIN);\nconst $4b9f12ce87d17074$export$50d414a77b60d802 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.COS);\nconst $4b9f12ce87d17074$export$fcdd3b0b3246a325 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.TAN);\nconst $4b9f12ce87d17074$export$41726bdb1fc63f = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ASIN);\nconst $4b9f12ce87d17074$export$fd6306be3fde5b04 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ACOS);\nconst $4b9f12ce87d17074$export$628dc4eed22b0fbd = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ATAN);\nconst $4b9f12ce87d17074$export$2335f513bbd82c6d = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ABS);\nconst $4b9f12ce87d17074$export$c5552dfdbc7cec71 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.SIGN);\nconst $4b9f12ce87d17074$export$f24224f1c91d8156 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.LENGTH);\nconst $4b9f12ce87d17074$export$aef51622e549b8b0 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.NEGATE);\nconst $4b9f12ce87d17074$export$854ad24922167dc9 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ONE_MINUS);\nconst $4b9f12ce87d17074$export$bc6322edd97b7d95 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.DFDX);\nconst $4b9f12ce87d17074$export$2563647325add98e = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.DFDY);\nconst $4b9f12ce87d17074$export$2077e0241d6afd3c = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ROUND);\nconst $4b9f12ce87d17074$export$163bc8c839a1ac04 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.RECIPROCAL);\nconst $4b9f12ce87d17074$export$1fe87bd59b089f0 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.TRUNC);\nconst $4b9f12ce87d17074$export$44e9ddb4871448a2 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.FWIDTH);\nconst $4b9f12ce87d17074$export$c344030f3a1fe226 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.BITCAST);\nconst $4b9f12ce87d17074$export$b8b770ee6a0d9760 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.ATAN2);\nconst $4b9f12ce87d17074$export$96ec731ed4dcb222 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.MIN);\nconst $4b9f12ce87d17074$export$8960430cfd85939f = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.MAX);\nconst $4b9f12ce87d17074$export$842a2cf37af977e1 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.MOD);\nconst $4b9f12ce87d17074$export$35d34bc0ed591a92 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.STEP);\nconst $4b9f12ce87d17074$export$9debe8cffacea23 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.REFLECT);\nconst $4b9f12ce87d17074$export$9f17032d917177de = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.DISTANCE);\nconst $4b9f12ce87d17074$export$acaf96a27438246b = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.DIFFERENCE);\nconst $4b9f12ce87d17074$export$94132a0e348806d4 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.DOT);\nconst $4b9f12ce87d17074$export$bb646b20bb93d339 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.CROSS);\nconst $4b9f12ce87d17074$export$9c297f60e22e3389 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.POW);\nconst $4b9f12ce87d17074$export$fa569bd808b67eef = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.POW, 2);\nconst $4b9f12ce87d17074$export$c460b8d1abb86675 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.POW, 3);\nconst $4b9f12ce87d17074$export$66864084b1797b69 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.POW, 4);\nconst $4b9f12ce87d17074$export$fff94e9792354cfa = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.TRANSFORM_DIRECTION);\nconst $4b9f12ce87d17074$export$841fc4d5a1480b85 = (a)=>(0, $1a899e4dee2452c3$export$6e3a27864ab166fe)($4b9f12ce87d17074$export$c5552dfdbc7cec71(a), $4b9f12ce87d17074$export$9c297f60e22e3389($4b9f12ce87d17074$export$2335f513bbd82c6d(a), 1.0 / 3.0));\nconst $4b9f12ce87d17074$export$2b5af473ed92fb2 = (a)=>$4b9f12ce87d17074$export$94132a0e348806d4(a, a);\nconst $4b9f12ce87d17074$export$2c9e8a9632a706b2 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.MIX);\nconst $4b9f12ce87d17074$export$7d15b64cf5a3a4c4 = (value, low = 0, high = 1)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $4b9f12ce87d17074$var$MathNode($4b9f12ce87d17074$var$MathNode.CLAMP, (0, $64e573acaa48d904$export$e97474e17004dd41)(value), (0, $64e573acaa48d904$export$e97474e17004dd41)(low), (0, $64e573acaa48d904$export$e97474e17004dd41)(high)));\nconst $4b9f12ce87d17074$export$5fcac96f5a87e3db = (value)=>$4b9f12ce87d17074$export$7d15b64cf5a3a4c4(value);\nconst $4b9f12ce87d17074$export$f49311db2be090a0 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.REFRACT);\nconst $4b9f12ce87d17074$export$4053e36566dd3d9a = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.SMOOTHSTEP);\nconst $4b9f12ce87d17074$export$5d74d69f07f6f54b = (0, $64e573acaa48d904$export$60d11c6747b7deba)($4b9f12ce87d17074$var$MathNode, $4b9f12ce87d17074$var$MathNode.FACEFORWARD);\nconst $4b9f12ce87d17074$export$b75075493d44bcd = (t, e1, e2)=>$4b9f12ce87d17074$export$2c9e8a9632a706b2(e1, e2, t);\nconst $4b9f12ce87d17074$export$88d04a529a181cca = (x, low, high)=>$4b9f12ce87d17074$export$4053e36566dd3d9a(low, high, x);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"all\", $4b9f12ce87d17074$export$84bf76cd7afc7469);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"any\", $4b9f12ce87d17074$export$4154a199d7d90455);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"equals\", $4b9f12ce87d17074$export$e9bab7fafb253603);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"radians\", $4b9f12ce87d17074$export$8449e153fbd325fc);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"degrees\", $4b9f12ce87d17074$export$41fc368e1a942b97);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"exp\", $4b9f12ce87d17074$export$b310ec824aaee37f);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"exp2\", $4b9f12ce87d17074$export$4edc262d3118e986);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"log\", $4b9f12ce87d17074$export$bef1f36f5486a6a3);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"log2\", $4b9f12ce87d17074$export$b9fae0bba9d9094d);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"sqrt\", $4b9f12ce87d17074$export$eba8049fb5020b81);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"inverseSqrt\", $4b9f12ce87d17074$export$e13f9cec9280faf4);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"floor\", $4b9f12ce87d17074$export$a3fe094919f356fd);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"ceil\", $4b9f12ce87d17074$export$803ce6b71a0a94b2);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"normalize\", $4b9f12ce87d17074$export$a3295358bff77e);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"fract\", $4b9f12ce87d17074$export$a57bfe0eb79af278);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"sin\", $4b9f12ce87d17074$export$5de3937cb4b592ed);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"cos\", $4b9f12ce87d17074$export$50d414a77b60d802);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"tan\", $4b9f12ce87d17074$export$fcdd3b0b3246a325);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"asin\", $4b9f12ce87d17074$export$41726bdb1fc63f);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"acos\", $4b9f12ce87d17074$export$fd6306be3fde5b04);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"atan\", $4b9f12ce87d17074$export$628dc4eed22b0fbd);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"abs\", $4b9f12ce87d17074$export$2335f513bbd82c6d);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"sign\", $4b9f12ce87d17074$export$c5552dfdbc7cec71);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"length\", $4b9f12ce87d17074$export$f24224f1c91d8156);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"lengthSq\", $4b9f12ce87d17074$export$2b5af473ed92fb2);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"negate\", $4b9f12ce87d17074$export$aef51622e549b8b0);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"oneMinus\", $4b9f12ce87d17074$export$854ad24922167dc9);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"dFdx\", $4b9f12ce87d17074$export$bc6322edd97b7d95);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"dFdy\", $4b9f12ce87d17074$export$2563647325add98e);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"round\", $4b9f12ce87d17074$export$2077e0241d6afd3c);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"reciprocal\", $4b9f12ce87d17074$export$163bc8c839a1ac04);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"trunc\", $4b9f12ce87d17074$export$1fe87bd59b089f0);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"fwidth\", $4b9f12ce87d17074$export$44e9ddb4871448a2);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"atan2\", $4b9f12ce87d17074$export$b8b770ee6a0d9760);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"min\", $4b9f12ce87d17074$export$96ec731ed4dcb222);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"max\", $4b9f12ce87d17074$export$8960430cfd85939f);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"mod\", $4b9f12ce87d17074$export$842a2cf37af977e1);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"step\", $4b9f12ce87d17074$export$35d34bc0ed591a92);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"reflect\", $4b9f12ce87d17074$export$9debe8cffacea23);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"distance\", $4b9f12ce87d17074$export$9f17032d917177de);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"dot\", $4b9f12ce87d17074$export$94132a0e348806d4);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"cross\", $4b9f12ce87d17074$export$bb646b20bb93d339);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"pow\", $4b9f12ce87d17074$export$9c297f60e22e3389);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"pow2\", $4b9f12ce87d17074$export$fa569bd808b67eef);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"pow3\", $4b9f12ce87d17074$export$c460b8d1abb86675);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"pow4\", $4b9f12ce87d17074$export$66864084b1797b69);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"transformDirection\", $4b9f12ce87d17074$export$fff94e9792354cfa);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"mix\", $4b9f12ce87d17074$export$b75075493d44bcd);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"clamp\", $4b9f12ce87d17074$export$7d15b64cf5a3a4c4);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"refract\", $4b9f12ce87d17074$export$f49311db2be090a0);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"smoothstep\", $4b9f12ce87d17074$export$88d04a529a181cca);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"faceForward\", $4b9f12ce87d17074$export$5d74d69f07f6f54b);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"difference\", $4b9f12ce87d17074$export$acaf96a27438246b);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"saturate\", $4b9f12ce87d17074$export$5fcac96f5a87e3db);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"cbrt\", $4b9f12ce87d17074$export$841fc4d5a1480b85);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"MathNode\", $4b9f12ce87d17074$var$MathNode);\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $2b02af04af066f9a$var$sRGBToLinearShader = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { value: value } = inputs;\n    const { rgb: rgb } = value;\n    const a = rgb.mul(0.9478672986).add(0.0521327014).pow(2.4);\n    const b = rgb.mul(0.0773993808);\n    const factor = rgb.lessThanEqual(0.04045);\n    const rgbResult = (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(a, b, factor);\n    return (0, $64e573acaa48d904$export$6dba2a1f0d609415)(rgbResult, value.a);\n});\nconst $2b02af04af066f9a$var$LinearTosRGBShader = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { value: value } = inputs;\n    const { rgb: rgb } = value;\n    const a = rgb.pow(0.41666).mul(1.055).sub(0.055);\n    const b = rgb.mul(12.92);\n    const factor = rgb.lessThanEqual(0.0031308);\n    const rgbResult = (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(a, b, factor);\n    return (0, $64e573acaa48d904$export$6dba2a1f0d609415)(rgbResult, value.a);\n});\nconst $2b02af04af066f9a$var$getColorSpaceMethod = (colorSpace)=>{\n    let method = null;\n    if (colorSpace === (0, $ilwiq.LinearSRGBColorSpace)) method = \"Linear\";\n    else if (colorSpace === (0, $ilwiq.SRGBColorSpace)) method = \"sRGB\";\n    return method;\n};\nconst $2b02af04af066f9a$var$getMethod = (source, target)=>{\n    return $2b02af04af066f9a$var$getColorSpaceMethod(source) + \"To\" + $2b02af04af066f9a$var$getColorSpaceMethod(target);\n};\nclass $2b02af04af066f9a$var$ColorSpaceNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(method, node){\n        super(\"vec4\");\n        this.method = method;\n        this.node = node;\n    }\n    setup() {\n        const { method: method, node: node } = this;\n        if (method === $2b02af04af066f9a$var$ColorSpaceNode.LINEAR_TO_LINEAR) return node;\n        return $2b02af04af066f9a$var$Methods[method]({\n            value: node\n        });\n    }\n}\n$2b02af04af066f9a$var$ColorSpaceNode.LINEAR_TO_LINEAR = \"LinearToLinear\";\n$2b02af04af066f9a$var$ColorSpaceNode.LINEAR_TO_sRGB = \"LinearTosRGB\";\n$2b02af04af066f9a$var$ColorSpaceNode.sRGB_TO_LINEAR = \"sRGBToLinear\";\nconst $2b02af04af066f9a$var$Methods = {\n    [$2b02af04af066f9a$var$ColorSpaceNode.LINEAR_TO_sRGB]: $2b02af04af066f9a$var$LinearTosRGBShader,\n    [$2b02af04af066f9a$var$ColorSpaceNode.sRGB_TO_LINEAR]: $2b02af04af066f9a$var$sRGBToLinearShader\n};\nvar $2b02af04af066f9a$export$2e2bcd8739ae039 = $2b02af04af066f9a$var$ColorSpaceNode;\nconst $2b02af04af066f9a$export$d9544f86dae6f4fb = (node, colorSpace)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $2b02af04af066f9a$var$ColorSpaceNode($2b02af04af066f9a$var$getMethod((0, $ilwiq.LinearSRGBColorSpace), colorSpace), (0, $64e573acaa48d904$export$e97474e17004dd41)(node)));\nconst $2b02af04af066f9a$export$63f787070bf67ca4 = (node, colorSpace)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $2b02af04af066f9a$var$ColorSpaceNode($2b02af04af066f9a$var$getMethod(colorSpace, (0, $ilwiq.LinearSRGBColorSpace)), (0, $64e573acaa48d904$export$e97474e17004dd41)(node)));\nconst $2b02af04af066f9a$export$4795885886b9b76f = (0, $64e573acaa48d904$export$60d11c6747b7deba)($2b02af04af066f9a$var$ColorSpaceNode, $2b02af04af066f9a$var$ColorSpaceNode.LINEAR_TO_sRGB);\nconst $2b02af04af066f9a$export$e8dc6f1e7f22b7bf = (0, $64e573acaa48d904$export$60d11c6747b7deba)($2b02af04af066f9a$var$ColorSpaceNode, $2b02af04af066f9a$var$ColorSpaceNode.sRGB_TO_LINEAR);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"linearTosRGB\", $2b02af04af066f9a$export$4795885886b9b76f);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"sRGBToLinear\", $2b02af04af066f9a$export$e8dc6f1e7f22b7bf);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"linearToColorSpace\", $2b02af04af066f9a$export$d9544f86dae6f4fb);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"colorSpaceToLinear\", $2b02af04af066f9a$export$63f787070bf67ca4);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ColorSpaceNode\", $2b02af04af066f9a$var$ColorSpaceNode);\n\n\n\n\nclass $2d5eb7e994ba6fa4$var$ExpressionNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(snippet = \"\", nodeType = \"void\"){\n        super(nodeType);\n        this.snippet = snippet;\n    }\n    generate(builder, output) {\n        const type = this.getNodeType(builder);\n        const snippet = this.snippet;\n        if (type === \"void\") builder.addLineFlowCode(snippet);\n        else return builder.format(`( ${snippet} )`, type, output);\n    }\n}\nvar $2d5eb7e994ba6fa4$export$2e2bcd8739ae039 = $2d5eb7e994ba6fa4$var$ExpressionNode;\nconst $2d5eb7e994ba6fa4$export$743d82c2fd345b72 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($2d5eb7e994ba6fa4$var$ExpressionNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ExpressionNode\", $2d5eb7e994ba6fa4$var$ExpressionNode);\n\n\n\n\n\n\n\nclass $b91ada7d1d5177ff$var$MaxMipLevelNode extends (0, $5a2c5e11c304ade5$export$2e2bcd8739ae039) {\n    constructor(textureNode){\n        super(0);\n        this.textureNode = textureNode;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME;\n    }\n    get texture() {\n        return this.textureNode.value;\n    }\n    update() {\n        const texture = this.texture;\n        const images = texture.images;\n        const image = images && images.length > 0 ? images[0] && images[0].image || images[0] : texture.image;\n        if (image && image.width !== undefined) {\n            const { width: width, height: height } = image;\n            this.value = Math.log2(Math.max(width, height));\n        }\n    }\n}\nvar $b91ada7d1d5177ff$export$2e2bcd8739ae039 = $b91ada7d1d5177ff$var$MaxMipLevelNode;\nconst $b91ada7d1d5177ff$export$f004dbb349dcdceb = (0, $64e573acaa48d904$export$60d11c6747b7deba)($b91ada7d1d5177ff$var$MaxMipLevelNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"MaxMipLevelNode\", $b91ada7d1d5177ff$var$MaxMipLevelNode);\n\n\n\n\nclass $1f6ba41f58cce433$var$TextureNode extends (0, $5a2c5e11c304ade5$export$2e2bcd8739ae039) {\n    constructor(value, uvNode = null, levelNode = null){\n        super(value);\n        this.isTextureNode = true;\n        this.uvNode = uvNode;\n        this.levelNode = levelNode;\n        this.compareNode = null;\n        this.depthNode = null;\n        this.sampler = true;\n        this.updateMatrix = false;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).NONE;\n        this.referenceNode = null;\n        this._value = value;\n        this.setUpdateMatrix(uvNode === null);\n    }\n    set value(value) {\n        if (this.referenceNode) this.referenceNode.value = value;\n        else this._value = value;\n    }\n    get value() {\n        return this.referenceNode ? this.referenceNode.value : this._value;\n    }\n    getUniformHash() {\n        return this.value.uuid;\n    }\n    getNodeType() {\n        if (this.value.isDepthTexture === true) return \"float\";\n        return \"vec4\";\n    }\n    getInputType() {\n        return \"texture\";\n    }\n    getDefaultUV() {\n        return (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(this.value.channel);\n    }\n    updateReference() {\n        return this.value;\n    }\n    getTransformedUV(uvNode) {\n        const texture = this.value;\n        return (0, $5a2c5e11c304ade5$export$379455b567eff87d)(texture.matrix).mul((0, $64e573acaa48d904$export$9100789c9d999364)(uvNode, 1)).xy;\n    }\n    setUpdateMatrix(value) {\n        this.updateMatrix = value;\n        this.updateType = value ? (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME : (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).NONE;\n        return this;\n    }\n    setupUV(builder, uvNode) {\n        const texture = this.value;\n        if (builder.isFlipY() && (texture.isRenderTargetTexture === true || texture.isFramebufferTexture === true || texture.isDepthTexture === true)) uvNode = uvNode.setY(uvNode.y.oneMinus());\n        return uvNode;\n    }\n    setup(builder) {\n        const properties = builder.getNodeProperties(this);\n        //\n        let uvNode = this.uvNode;\n        if ((uvNode === null || builder.context.forceUVContext === true) && builder.context.getUV) uvNode = builder.context.getUV(this);\n        if (!uvNode) uvNode = this.getDefaultUV();\n        if (this.updateMatrix === true) uvNode = this.getTransformedUV(uvNode);\n        uvNode = this.setupUV(builder, uvNode);\n        //\n        let levelNode = this.levelNode;\n        if (levelNode === null && builder.context.getTextureLevel) levelNode = builder.context.getTextureLevel(this);\n        //\n        properties.uvNode = uvNode;\n        properties.levelNode = levelNode;\n        properties.compareNode = this.compareNode;\n        properties.depthNode = this.depthNode;\n    }\n    generateUV(builder, uvNode) {\n        return uvNode.build(builder, this.sampler === true ? \"vec2\" : \"ivec2\");\n    }\n    generateSnippet(builder, textureProperty, uvSnippet, levelSnippet, depthSnippet, compareSnippet) {\n        const texture = this.value;\n        let snippet;\n        if (levelSnippet) snippet = builder.generateTextureLevel(texture, textureProperty, uvSnippet, levelSnippet, depthSnippet);\n        else if (compareSnippet) snippet = builder.generateTextureCompare(texture, textureProperty, uvSnippet, compareSnippet, depthSnippet);\n        else if (this.sampler === false) snippet = builder.generateTextureLoad(texture, textureProperty, uvSnippet, depthSnippet);\n        else snippet = builder.generateTexture(texture, textureProperty, uvSnippet, depthSnippet);\n        return snippet;\n    }\n    generate(builder, output) {\n        const properties = builder.getNodeProperties(this);\n        const texture = this.value;\n        if (!texture || texture.isTexture !== true) throw new Error(\"TextureNode: Need a three.js texture.\");\n        const textureProperty = super.generate(builder, \"property\");\n        if (output === \"sampler\") return textureProperty + \"_sampler\";\n        else if (builder.isReference(output)) return textureProperty;\n        else {\n            const nodeData = builder.getDataFromNode(this);\n            let propertyName = nodeData.propertyName;\n            if (propertyName === undefined) {\n                const { uvNode: uvNode, levelNode: levelNode, compareNode: compareNode, depthNode: depthNode } = properties;\n                const uvSnippet = this.generateUV(builder, uvNode);\n                const levelSnippet = levelNode ? levelNode.build(builder, \"float\") : null;\n                const depthSnippet = depthNode ? depthNode.build(builder, \"int\") : null;\n                const compareSnippet = compareNode ? compareNode.build(builder, \"float\") : null;\n                const nodeVar = builder.getVarFromNode(this);\n                propertyName = builder.getPropertyName(nodeVar);\n                const snippet = this.generateSnippet(builder, textureProperty, uvSnippet, levelSnippet, depthSnippet, compareSnippet);\n                builder.addLineFlowCode(`${propertyName} = ${snippet}`);\n                if (builder.context.tempWrite !== false) {\n                    nodeData.snippet = snippet;\n                    nodeData.propertyName = propertyName;\n                }\n            }\n            let snippet = propertyName;\n            const nodeType = this.getNodeType(builder);\n            if (builder.needsColorSpaceToLinear(texture)) snippet = (0, $2b02af04af066f9a$export$63f787070bf67ca4)((0, $2d5eb7e994ba6fa4$export$743d82c2fd345b72)(snippet, nodeType), texture.colorSpace).setup(builder).build(builder, nodeType);\n            return builder.format(snippet, nodeType, output);\n        }\n    }\n    setSampler(value) {\n        this.sampler = value;\n        return this;\n    }\n    getSampler() {\n        return this.sampler;\n    }\n    // @TODO: Move to TSL\n    uv(uvNode) {\n        const textureNode = this.clone();\n        textureNode.uvNode = uvNode;\n        textureNode.referenceNode = this;\n        return (0, $64e573acaa48d904$export$e97474e17004dd41)(textureNode);\n    }\n    blur(levelNode) {\n        const textureNode = this.clone();\n        textureNode.levelNode = levelNode.mul((0, $b91ada7d1d5177ff$export$f004dbb349dcdceb)(textureNode));\n        textureNode.referenceNode = this;\n        return (0, $64e573acaa48d904$export$e97474e17004dd41)(textureNode);\n    }\n    level(levelNode) {\n        const textureNode = this.clone();\n        textureNode.levelNode = levelNode;\n        textureNode.referenceNode = this;\n        return textureNode;\n    }\n    size(levelNode) {\n        return (0, $ca68d2c8539d97c1$export$a8905ccad583a116)(this, levelNode);\n    }\n    compare(compareNode) {\n        const textureNode = this.clone();\n        textureNode.compareNode = (0, $64e573acaa48d904$export$e97474e17004dd41)(compareNode);\n        textureNode.referenceNode = this;\n        return (0, $64e573acaa48d904$export$e97474e17004dd41)(textureNode);\n    }\n    depth(depthNode) {\n        const textureNode = this.clone();\n        textureNode.depthNode = (0, $64e573acaa48d904$export$e97474e17004dd41)(depthNode);\n        textureNode.referenceNode = this;\n        return (0, $64e573acaa48d904$export$e97474e17004dd41)(textureNode);\n    }\n    // --\n    serialize(data) {\n        super.serialize(data);\n        data.value = this.value.toJSON(data.meta).uuid;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.value = data.meta.textures[data.value];\n    }\n    update() {\n        const texture = this.value;\n        if (texture.matrixAutoUpdate === true) texture.updateMatrix();\n    }\n    clone() {\n        const newNode = new this.constructor(this.value, this.uvNode, this.levelNode);\n        newNode.sampler = this.sampler;\n        return newNode;\n    }\n}\nvar $1f6ba41f58cce433$export$2e2bcd8739ae039 = $1f6ba41f58cce433$var$TextureNode;\nconst $1f6ba41f58cce433$export$ab69073b3903a075 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($1f6ba41f58cce433$var$TextureNode);\nconst $1f6ba41f58cce433$export$c9a2885c9238610f = (...params)=>$1f6ba41f58cce433$export$ab69073b3903a075(...params).setSampler(false);\nconst $1f6ba41f58cce433$export$918ce7b77cc849ea = (aTexture)=>(aTexture.isNode === true ? aTexture : $1f6ba41f58cce433$export$ab69073b3903a075(aTexture)).convert(\"sampler\");\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"texture\", $1f6ba41f58cce433$export$ab69073b3903a075);\n//addNodeElement( 'textureLevel', textureLevel );\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TextureNode\", $1f6ba41f58cce433$var$TextureNode);\n\n\n\n\n\nclass $a987daf999c976be$var$BufferNode extends (0, $5a2c5e11c304ade5$export$2e2bcd8739ae039) {\n    constructor(value, bufferType, bufferCount = 0){\n        super(value, bufferType);\n        this.isBufferNode = true;\n        this.bufferType = bufferType;\n        this.bufferCount = bufferCount;\n    }\n    getInputType() {\n        return \"buffer\";\n    }\n}\nvar $a987daf999c976be$export$2e2bcd8739ae039 = $a987daf999c976be$var$BufferNode;\nconst $a987daf999c976be$export$ab1029bcae9ddb4a = (value, type, count)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $a987daf999c976be$var$BufferNode(value, type, count));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"BufferNode\", $a987daf999c976be$var$BufferNode);\n\n\n\n\n\n\n\n\n\nclass $ba76a3875cbb82d8$var$UniformsElementNode extends (0, $a62d64263fea5012$export$2e2bcd8739ae039) {\n    constructor(arrayBuffer, indexNode){\n        super(arrayBuffer, indexNode);\n        this.isArrayBufferElementNode = true;\n    }\n    getNodeType(builder) {\n        return this.node.getElementType(builder);\n    }\n    generate(builder) {\n        const snippet = super.generate(builder);\n        const type = this.getNodeType();\n        return builder.format(snippet, \"vec4\", type);\n    }\n}\nclass $ba76a3875cbb82d8$var$UniformsNode extends (0, $a987daf999c976be$export$2e2bcd8739ae039) {\n    constructor(value, elementType = null){\n        super(null, \"vec4\");\n        this.array = value;\n        this.elementType = elementType;\n        this._elementType = null;\n        this._elementLength = 0;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER;\n        this.isArrayBufferNode = true;\n    }\n    getElementType() {\n        return this.elementType || this._elementType;\n    }\n    getElementLength() {\n        return this._elementLength;\n    }\n    update() {\n        const { array: array, value: value } = this;\n        const elementLength = this.getElementLength();\n        const elementType = this.getElementType();\n        if (elementLength === 1) for(let i = 0; i < array.length; i++){\n            const index = i * 4;\n            value[index] = array[i];\n        }\n        else if (elementType === \"color\") for(let i = 0; i < array.length; i++){\n            const index = i * 4;\n            const vector = array[i];\n            value[index] = vector.r;\n            value[index + 1] = vector.g;\n            value[index + 2] = vector.b || 0;\n        //value[ index + 3 ] = vector.a || 0;\n        }\n        else for(let i = 0; i < array.length; i++){\n            const index = i * 4;\n            const vector = array[i];\n            value[index] = vector.x;\n            value[index + 1] = vector.y;\n            value[index + 2] = vector.z || 0;\n            value[index + 3] = vector.w || 0;\n        }\n    }\n    setup(builder) {\n        const length = this.array.length;\n        this._elementType = this.elementType === null ? (0, $0bf48deb29103875$export$cc7ab17e03dab419)(this.array[0]) : this.elementType;\n        this._elementLength = builder.getTypeLength(this._elementType);\n        this.value = new Float32Array(length * 4);\n        this.bufferCount = length;\n        return super.setup(builder);\n    }\n    element(indexNode) {\n        return (0, $64e573acaa48d904$export$e97474e17004dd41)(new $ba76a3875cbb82d8$var$UniformsElementNode(this, (0, $64e573acaa48d904$export$e97474e17004dd41)(indexNode)));\n    }\n}\nvar $ba76a3875cbb82d8$export$2e2bcd8739ae039 = $ba76a3875cbb82d8$var$UniformsNode;\nconst $ba76a3875cbb82d8$export$dfbf0296e531b4e7 = (values, nodeType)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $ba76a3875cbb82d8$var$UniformsNode(values, nodeType));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"UniformsNode\", $ba76a3875cbb82d8$var$UniformsNode);\n\n\n\nclass $bc3fcdce5f983ff8$var$ReferenceElementNode extends (0, $a62d64263fea5012$export$2e2bcd8739ae039) {\n    constructor(referenceNode, indexNode){\n        super(referenceNode, indexNode);\n        this.referenceNode = referenceNode;\n        this.isReferenceElementNode = true;\n    }\n    getNodeType() {\n        return this.referenceNode.uniformType;\n    }\n    generate(builder) {\n        const snippet = super.generate(builder);\n        const arrayType = this.referenceNode.getNodeType();\n        const elementType = this.getNodeType();\n        return builder.format(snippet, arrayType, elementType);\n    }\n}\nclass $bc3fcdce5f983ff8$var$ReferenceNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(property, uniformType, object = null, count = null){\n        super();\n        this.property = property;\n        this.uniformType = uniformType;\n        this.object = object;\n        this.count = count;\n        this.properties = property.split(\".\");\n        this.reference = null;\n        this.node = null;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT;\n    }\n    element(indexNode) {\n        return (0, $64e573acaa48d904$export$e97474e17004dd41)(new $bc3fcdce5f983ff8$var$ReferenceElementNode(this, (0, $64e573acaa48d904$export$e97474e17004dd41)(indexNode)));\n    }\n    setNodeType(uniformType) {\n        let node = null;\n        if (this.count !== null) node = (0, $a987daf999c976be$export$ab1029bcae9ddb4a)(null, uniformType, this.count);\n        else if (Array.isArray(this.getValueFromReference())) node = (0, $ba76a3875cbb82d8$export$dfbf0296e531b4e7)(null, uniformType);\n        else if (uniformType === \"texture\") node = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(null);\n        else node = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(null, uniformType);\n        this.node = node;\n    }\n    getNodeType(builder) {\n        return this.node.getNodeType(builder);\n    }\n    getValueFromReference(object = this.reference) {\n        const { properties: properties } = this;\n        let value = object[properties[0]];\n        for(let i = 1; i < properties.length; i++)value = value[properties[i]];\n        return value;\n    }\n    updateReference(state) {\n        this.reference = this.object !== null ? this.object : state.object;\n        return this.reference;\n    }\n    setup() {\n        this.updateValue();\n        return this.node;\n    }\n    update() {\n        this.updateValue();\n    }\n    updateValue() {\n        if (this.node === null) this.setNodeType(this.uniformType);\n        const value = this.getValueFromReference();\n        if (Array.isArray(value)) this.node.array = value;\n        else this.node.value = value;\n    }\n}\nvar $bc3fcdce5f983ff8$export$2e2bcd8739ae039 = $bc3fcdce5f983ff8$var$ReferenceNode;\nconst $bc3fcdce5f983ff8$export$ca50aac9f3ba507f = (name, type, object)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $bc3fcdce5f983ff8$var$ReferenceNode(name, type, object));\nconst $bc3fcdce5f983ff8$export$18088e2a413e76c6 = (name, type, count, object)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $bc3fcdce5f983ff8$var$ReferenceNode(name, type, object, count));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ReferenceNode\", $bc3fcdce5f983ff8$var$ReferenceNode);\n\n\n\n\n\nclass $4bd79e1bb700e9e2$var$MaterialReferenceNode extends (0, $bc3fcdce5f983ff8$export$2e2bcd8739ae039) {\n    constructor(property, inputType, material = null){\n        super(property, inputType, material);\n        this.material = material;\n    //this.updateType = NodeUpdateType.RENDER;\n    }\n    /*setNodeType( node ) {\n\n\t\tsuper.setNodeType( node );\n\n\t\tthis.node.groupNode = renderGroup;\n\n\t}*/ updateReference(state) {\n        this.reference = this.material !== null ? this.material : state.material;\n        return this.reference;\n    }\n}\nvar $4bd79e1bb700e9e2$export$2e2bcd8739ae039 = $4bd79e1bb700e9e2$var$MaterialReferenceNode;\nconst $4bd79e1bb700e9e2$export$f503be583015cb4f = (name, type, material)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $4bd79e1bb700e9e2$var$MaterialReferenceNode(name, type, material));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"MaterialReferenceNode\", $4bd79e1bb700e9e2$var$MaterialReferenceNode);\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $96d95a21a7a422db$var$Object3DNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $96d95a21a7a422db$var$Object3DNode.VIEW_MATRIX, object3d = null){\n        super();\n        this.scope = scope;\n        this.object3d = object3d;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT;\n        this._uniformNode = new (0, $5a2c5e11c304ade5$export$2e2bcd8739ae039)(null);\n    }\n    getNodeType() {\n        const scope = this.scope;\n        if (scope === $96d95a21a7a422db$var$Object3DNode.WORLD_MATRIX || scope === $96d95a21a7a422db$var$Object3DNode.VIEW_MATRIX) return \"mat4\";\n        else if (scope === $96d95a21a7a422db$var$Object3DNode.NORMAL_MATRIX) return \"mat3\";\n        else if (scope === $96d95a21a7a422db$var$Object3DNode.POSITION || scope === $96d95a21a7a422db$var$Object3DNode.VIEW_POSITION || scope === $96d95a21a7a422db$var$Object3DNode.DIRECTION || scope === $96d95a21a7a422db$var$Object3DNode.SCALE) return \"vec3\";\n    }\n    update(frame) {\n        const object = this.object3d;\n        const uniformNode = this._uniformNode;\n        const scope = this.scope;\n        if (scope === $96d95a21a7a422db$var$Object3DNode.VIEW_MATRIX) uniformNode.value = object.modelViewMatrix;\n        else if (scope === $96d95a21a7a422db$var$Object3DNode.NORMAL_MATRIX) uniformNode.value = object.normalMatrix;\n        else if (scope === $96d95a21a7a422db$var$Object3DNode.WORLD_MATRIX) uniformNode.value = object.matrixWorld;\n        else if (scope === $96d95a21a7a422db$var$Object3DNode.POSITION) {\n            uniformNode.value = uniformNode.value || new (0, $ilwiq.Vector3)();\n            uniformNode.value.setFromMatrixPosition(object.matrixWorld);\n        } else if (scope === $96d95a21a7a422db$var$Object3DNode.SCALE) {\n            uniformNode.value = uniformNode.value || new (0, $ilwiq.Vector3)();\n            uniformNode.value.setFromMatrixScale(object.matrixWorld);\n        } else if (scope === $96d95a21a7a422db$var$Object3DNode.DIRECTION) {\n            uniformNode.value = uniformNode.value || new (0, $ilwiq.Vector3)();\n            object.getWorldDirection(uniformNode.value);\n        } else if (scope === $96d95a21a7a422db$var$Object3DNode.VIEW_POSITION) {\n            const camera = frame.camera;\n            uniformNode.value = uniformNode.value || new (0, $ilwiq.Vector3)();\n            uniformNode.value.setFromMatrixPosition(object.matrixWorld);\n            uniformNode.value.applyMatrix4(camera.matrixWorldInverse);\n        }\n    }\n    generate(builder) {\n        const scope = this.scope;\n        if (scope === $96d95a21a7a422db$var$Object3DNode.WORLD_MATRIX || scope === $96d95a21a7a422db$var$Object3DNode.VIEW_MATRIX) this._uniformNode.nodeType = \"mat4\";\n        else if (scope === $96d95a21a7a422db$var$Object3DNode.NORMAL_MATRIX) this._uniformNode.nodeType = \"mat3\";\n        else if (scope === $96d95a21a7a422db$var$Object3DNode.POSITION || scope === $96d95a21a7a422db$var$Object3DNode.VIEW_POSITION || scope === $96d95a21a7a422db$var$Object3DNode.DIRECTION || scope === $96d95a21a7a422db$var$Object3DNode.SCALE) this._uniformNode.nodeType = \"vec3\";\n        return this._uniformNode.build(builder);\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.scope = this.scope;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.scope = data.scope;\n    }\n}\n$96d95a21a7a422db$var$Object3DNode.VIEW_MATRIX = \"viewMatrix\";\n$96d95a21a7a422db$var$Object3DNode.NORMAL_MATRIX = \"normalMatrix\";\n$96d95a21a7a422db$var$Object3DNode.WORLD_MATRIX = \"worldMatrix\";\n$96d95a21a7a422db$var$Object3DNode.POSITION = \"position\";\n$96d95a21a7a422db$var$Object3DNode.SCALE = \"scale\";\n$96d95a21a7a422db$var$Object3DNode.VIEW_POSITION = \"viewPosition\";\n$96d95a21a7a422db$var$Object3DNode.DIRECTION = \"direction\";\nvar $96d95a21a7a422db$export$2e2bcd8739ae039 = $96d95a21a7a422db$var$Object3DNode;\nconst $96d95a21a7a422db$export$78c250f1a3539268 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($96d95a21a7a422db$var$Object3DNode, $96d95a21a7a422db$var$Object3DNode.DIRECTION);\nconst $96d95a21a7a422db$export$347eb3831188c604 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($96d95a21a7a422db$var$Object3DNode, $96d95a21a7a422db$var$Object3DNode.VIEW_MATRIX);\nconst $96d95a21a7a422db$export$56ed9e74e68df27e = (0, $64e573acaa48d904$export$60d11c6747b7deba)($96d95a21a7a422db$var$Object3DNode, $96d95a21a7a422db$var$Object3DNode.NORMAL_MATRIX);\nconst $96d95a21a7a422db$export$a32b324f393b4dd2 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($96d95a21a7a422db$var$Object3DNode, $96d95a21a7a422db$var$Object3DNode.WORLD_MATRIX);\nconst $96d95a21a7a422db$export$85aefaa6fa23372c = (0, $64e573acaa48d904$export$60d11c6747b7deba)($96d95a21a7a422db$var$Object3DNode, $96d95a21a7a422db$var$Object3DNode.POSITION);\nconst $96d95a21a7a422db$export$9dcd283e27416a0c = (0, $64e573acaa48d904$export$60d11c6747b7deba)($96d95a21a7a422db$var$Object3DNode, $96d95a21a7a422db$var$Object3DNode.SCALE);\nconst $96d95a21a7a422db$export$a7c813ba72ca1af0 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($96d95a21a7a422db$var$Object3DNode, $96d95a21a7a422db$var$Object3DNode.VIEW_POSITION);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"Object3DNode\", $96d95a21a7a422db$var$Object3DNode);\n\n\n\n\n\n//const cameraGroup = sharedUniformGroup( 'camera' );\nclass $bab16494dbba4b41$var$CameraNode extends (0, $96d95a21a7a422db$export$2e2bcd8739ae039) {\n    constructor(scope = $bab16494dbba4b41$var$CameraNode.POSITION){\n        super(scope);\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER;\n    //this._uniformNode.groupNode = cameraGroup;\n    }\n    getNodeType(builder) {\n        const scope = this.scope;\n        if (scope === $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX || scope === $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX_INVERSE) return \"mat4\";\n        else if (scope === $bab16494dbba4b41$var$CameraNode.NEAR || scope === $bab16494dbba4b41$var$CameraNode.FAR || scope === $bab16494dbba4b41$var$CameraNode.LOG_DEPTH) return \"float\";\n        return super.getNodeType(builder);\n    }\n    update(frame) {\n        const camera = frame.camera;\n        const uniformNode = this._uniformNode;\n        const scope = this.scope;\n        //cameraGroup.needsUpdate = true;\n        if (scope === $bab16494dbba4b41$var$CameraNode.VIEW_MATRIX) uniformNode.value = camera.matrixWorldInverse;\n        else if (scope === $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX) uniformNode.value = camera.projectionMatrix;\n        else if (scope === $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX_INVERSE) uniformNode.value = camera.projectionMatrixInverse;\n        else if (scope === $bab16494dbba4b41$var$CameraNode.NEAR) uniformNode.value = camera.near;\n        else if (scope === $bab16494dbba4b41$var$CameraNode.FAR) uniformNode.value = camera.far;\n        else if (scope === $bab16494dbba4b41$var$CameraNode.LOG_DEPTH) uniformNode.value = 2.0 / (Math.log(camera.far + 1.0) / Math.LN2);\n        else {\n            this.object3d = camera;\n            super.update(frame);\n        }\n    }\n    generate(builder) {\n        const scope = this.scope;\n        if (scope === $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX || scope === $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX_INVERSE) this._uniformNode.nodeType = \"mat4\";\n        else if (scope === $bab16494dbba4b41$var$CameraNode.NEAR || scope === $bab16494dbba4b41$var$CameraNode.FAR || scope === $bab16494dbba4b41$var$CameraNode.LOG_DEPTH) this._uniformNode.nodeType = \"float\";\n        return super.generate(builder);\n    }\n}\n$bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX = \"projectionMatrix\";\n$bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX_INVERSE = \"projectionMatrixInverse\";\n$bab16494dbba4b41$var$CameraNode.NEAR = \"near\";\n$bab16494dbba4b41$var$CameraNode.FAR = \"far\";\n$bab16494dbba4b41$var$CameraNode.LOG_DEPTH = \"logDepth\";\nvar $bab16494dbba4b41$export$2e2bcd8739ae039 = $bab16494dbba4b41$var$CameraNode;\nconst $bab16494dbba4b41$export$dc8d743682f60b2d = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX);\nconst $bab16494dbba4b41$export$789ed3dde3cc5499 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.PROJECTION_MATRIX_INVERSE);\nconst $bab16494dbba4b41$export$81bd96ee69286580 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.NEAR);\nconst $bab16494dbba4b41$export$21e5768aeb8c5c46 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.FAR);\nconst $bab16494dbba4b41$export$df9a1a0941dbc754 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.LOG_DEPTH);\nconst $bab16494dbba4b41$export$6f7d94c027189d78 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.VIEW_MATRIX);\nconst $bab16494dbba4b41$export$f4988b7d4c52308b = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.NORMAL_MATRIX);\nconst $bab16494dbba4b41$export$4485c5f12754ea55 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.WORLD_MATRIX);\nconst $bab16494dbba4b41$export$3d9982e937097c50 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($bab16494dbba4b41$var$CameraNode, $bab16494dbba4b41$var$CameraNode.POSITION);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"CameraNode\", $bab16494dbba4b41$var$CameraNode);\n\n\n\n\n\nclass $69c7546a6c9d8c2a$var$ModelNode extends (0, $96d95a21a7a422db$export$2e2bcd8739ae039) {\n    constructor(scope = $69c7546a6c9d8c2a$var$ModelNode.VIEW_MATRIX){\n        super(scope);\n    }\n    update(frame) {\n        this.object3d = frame.object;\n        super.update(frame);\n    }\n}\nvar $69c7546a6c9d8c2a$export$2e2bcd8739ae039 = $69c7546a6c9d8c2a$var$ModelNode;\nconst $69c7546a6c9d8c2a$export$d635ba4b1685c241 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($69c7546a6c9d8c2a$var$ModelNode, $69c7546a6c9d8c2a$var$ModelNode.DIRECTION);\nconst $69c7546a6c9d8c2a$export$57d0df277658535e = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($69c7546a6c9d8c2a$var$ModelNode, $69c7546a6c9d8c2a$var$ModelNode.VIEW_MATRIX).label(\"modelViewMatrix\").temp(\"ModelViewMatrix\");\nconst $69c7546a6c9d8c2a$export$7375cd766aaa851d = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($69c7546a6c9d8c2a$var$ModelNode, $69c7546a6c9d8c2a$var$ModelNode.NORMAL_MATRIX);\nconst $69c7546a6c9d8c2a$export$e1011125af6f8b40 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($69c7546a6c9d8c2a$var$ModelNode, $69c7546a6c9d8c2a$var$ModelNode.WORLD_MATRIX);\nconst $69c7546a6c9d8c2a$export$daa633a040a2411 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($69c7546a6c9d8c2a$var$ModelNode, $69c7546a6c9d8c2a$var$ModelNode.POSITION);\nconst $69c7546a6c9d8c2a$export$7ff78118323277da = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($69c7546a6c9d8c2a$var$ModelNode, $69c7546a6c9d8c2a$var$ModelNode.SCALE);\nconst $69c7546a6c9d8c2a$export$2130800e9e71dab = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($69c7546a6c9d8c2a$var$ModelNode, $69c7546a6c9d8c2a$var$ModelNode.VIEW_POSITION);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ModelNode\", $69c7546a6c9d8c2a$var$ModelNode);\n\n\n\nclass $b8bdffed4c803471$var$NormalNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $b8bdffed4c803471$var$NormalNode.LOCAL){\n        super(\"vec3\");\n        this.scope = scope;\n    }\n    isGlobal() {\n        return true;\n    }\n    getHash() {\n        return `normal-${this.scope}`;\n    }\n    generate(builder) {\n        const scope = this.scope;\n        let outputNode = null;\n        if (scope === $b8bdffed4c803471$var$NormalNode.GEOMETRY) {\n            const geometryAttribute = builder.hasGeometryAttribute(\"normal\");\n            if (geometryAttribute === false) outputNode = (0, $64e573acaa48d904$export$9100789c9d999364)(0, 1, 0);\n            else outputNode = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"normal\", \"vec3\");\n        } else if (scope === $b8bdffed4c803471$var$NormalNode.LOCAL) outputNode = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)($b8bdffed4c803471$export$2d025416a9cb464f);\n        else if (scope === $b8bdffed4c803471$var$NormalNode.VIEW) {\n            const vertexNode = (0, $69c7546a6c9d8c2a$export$7375cd766aaa851d).mul($b8bdffed4c803471$export$c94af1e24aa56d8f);\n            outputNode = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexNode));\n        } else if (scope === $b8bdffed4c803471$var$NormalNode.WORLD) {\n            // To use inverseTransformDirection only inverse the param order like this: cameraViewMatrix.transformDirection( normalView )\n            const vertexNode = $b8bdffed4c803471$export$c7d7ec78bf3ab28a.transformDirection((0, $bab16494dbba4b41$export$6f7d94c027189d78));\n            outputNode = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexNode));\n        }\n        return outputNode.build(builder, this.getNodeType(builder));\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.scope = this.scope;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.scope = data.scope;\n    }\n}\n$b8bdffed4c803471$var$NormalNode.GEOMETRY = \"geometry\";\n$b8bdffed4c803471$var$NormalNode.LOCAL = \"local\";\n$b8bdffed4c803471$var$NormalNode.VIEW = \"view\";\n$b8bdffed4c803471$var$NormalNode.WORLD = \"world\";\nvar $b8bdffed4c803471$export$2e2bcd8739ae039 = $b8bdffed4c803471$var$NormalNode;\nconst $b8bdffed4c803471$export$2d025416a9cb464f = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($b8bdffed4c803471$var$NormalNode, $b8bdffed4c803471$var$NormalNode.GEOMETRY);\nconst $b8bdffed4c803471$export$c94af1e24aa56d8f = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($b8bdffed4c803471$var$NormalNode, $b8bdffed4c803471$var$NormalNode.LOCAL).temp(\"Normal\");\nconst $b8bdffed4c803471$export$c7d7ec78bf3ab28a = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($b8bdffed4c803471$var$NormalNode, $b8bdffed4c803471$var$NormalNode.VIEW);\nconst $b8bdffed4c803471$export$8cce2f8527757c54 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($b8bdffed4c803471$var$NormalNode, $b8bdffed4c803471$var$NormalNode.WORLD);\nconst $b8bdffed4c803471$export$c58d63d09d102e3c = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"vec3\", \"TransformedNormalView\");\nconst $b8bdffed4c803471$export$add3225664ac656e = $b8bdffed4c803471$export$c58d63d09d102e3c.transformDirection((0, $bab16494dbba4b41$export$6f7d94c027189d78)).normalize();\nconst $b8bdffed4c803471$export$71a9f037ea1539e0 = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"vec3\", \"TransformedClearcoatNormalView\");\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"NormalNode\", $b8bdffed4c803471$var$NormalNode);\n\n\n\nconst $1b774580ee2e7ae3$var$_propertyCache = new Map();\nclass $1b774580ee2e7ae3$var$MaterialNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope){\n        super();\n        this.scope = scope;\n    }\n    getCache(property, type) {\n        let node = $1b774580ee2e7ae3$var$_propertyCache.get(property);\n        if (node === undefined) {\n            node = (0, $4bd79e1bb700e9e2$export$f503be583015cb4f)(property, type);\n            $1b774580ee2e7ae3$var$_propertyCache.set(property, node);\n        }\n        return node;\n    }\n    getFloat(property) {\n        return this.getCache(property, \"float\");\n    }\n    getColor(property) {\n        return this.getCache(property, \"color\");\n    }\n    getTexture(property) {\n        return this.getCache(property === \"map\" ? \"map\" : property + \"Map\", \"texture\");\n    }\n    setup(builder) {\n        const material = builder.context.material;\n        const scope = this.scope;\n        let node = null;\n        if (scope === $1b774580ee2e7ae3$var$MaterialNode.COLOR) {\n            const colorNode = this.getColor(scope);\n            if (material.map && material.map.isTexture === true) node = colorNode.mul(this.getTexture(\"map\"));\n            else node = colorNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.OPACITY) {\n            const opacityNode = this.getFloat(scope);\n            if (material.alphaMap && material.alphaMap.isTexture === true) node = opacityNode.mul(this.getTexture(\"alpha\"));\n            else node = opacityNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.SPECULAR_STRENGTH) {\n            if (material.specularMap && material.specularMap.isTexture === true) node = this.getTexture(scope).r;\n            else node = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1);\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.ROUGHNESS) {\n            const roughnessNode = this.getFloat(scope);\n            if (material.roughnessMap && material.roughnessMap.isTexture === true) node = roughnessNode.mul(this.getTexture(scope).g);\n            else node = roughnessNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.METALNESS) {\n            const metalnessNode = this.getFloat(scope);\n            if (material.metalnessMap && material.metalnessMap.isTexture === true) node = metalnessNode.mul(this.getTexture(scope).b);\n            else node = metalnessNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.EMISSIVE) {\n            const emissiveNode = this.getColor(scope);\n            if (material.emissiveMap && material.emissiveMap.isTexture === true) node = emissiveNode.mul(this.getTexture(scope));\n            else node = emissiveNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.NORMAL) {\n            if (material.normalMap) node = this.getTexture(\"normal\").normalMap(this.getCache(\"normalScale\", \"vec2\"));\n            else if (material.bumpMap) node = this.getTexture(\"bump\").r.bumpMap(this.getFloat(\"bumpScale\"));\n            else node = (0, $b8bdffed4c803471$export$c7d7ec78bf3ab28a);\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT) {\n            const clearcoatNode = this.getFloat(scope);\n            if (material.clearcoatMap && material.clearcoatMap.isTexture === true) node = clearcoatNode.mul(this.getTexture(scope).r);\n            else node = clearcoatNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT_ROUGHNESS) {\n            const clearcoatRoughnessNode = this.getFloat(scope);\n            if (material.clearcoatRoughnessMap && material.clearcoatRoughnessMap.isTexture === true) node = clearcoatRoughnessNode.mul(this.getTexture(scope).r);\n            else node = clearcoatRoughnessNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT_NORMAL) {\n            if (material.clearcoatNormalMap) node = this.getTexture(scope).normalMap(this.getCache(scope + \"Scale\", \"vec2\"));\n            else node = (0, $b8bdffed4c803471$export$c7d7ec78bf3ab28a);\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.SHEEN) {\n            const sheenNode = this.getColor(\"sheenColor\").mul(this.getFloat(\"sheen\")); // Move this mul() to CPU\n            if (material.sheenColorMap && material.sheenColorMap.isTexture === true) node = sheenNode.mul(this.getTexture(\"sheenColor\").rgb);\n            else node = sheenNode;\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.SHEEN_ROUGHNESS) {\n            const sheenRoughnessNode = this.getFloat(scope);\n            if (material.sheenRoughnessMap && material.sheenRoughnessMap.isTexture === true) node = sheenRoughnessNode.mul(this.getTexture(scope).a);\n            else node = sheenRoughnessNode;\n            node = node.clamp(0.07, 1.0);\n        } else if (scope === $1b774580ee2e7ae3$var$MaterialNode.IRIDESCENCE_THICKNESS) {\n            const iridescenceThicknessMaximum = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"1\", \"float\", material.iridescenceThicknessRange);\n            if (material.iridescenceThicknessMap) {\n                const iridescenceThicknessMinimum = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"0\", \"float\", material.iridescenceThicknessRange);\n                node = iridescenceThicknessMaximum.sub(iridescenceThicknessMinimum).mul(this.getTexture(scope).g).add(iridescenceThicknessMinimum);\n            } else node = iridescenceThicknessMaximum;\n        } else {\n            const outputType = this.getNodeType(builder);\n            node = this.getCache(scope, outputType);\n        }\n        return node;\n    }\n}\n$1b774580ee2e7ae3$var$MaterialNode.ALPHA_TEST = \"alphaTest\";\n$1b774580ee2e7ae3$var$MaterialNode.COLOR = \"color\";\n$1b774580ee2e7ae3$var$MaterialNode.OPACITY = \"opacity\";\n$1b774580ee2e7ae3$var$MaterialNode.SHININESS = \"shininess\";\n$1b774580ee2e7ae3$var$MaterialNode.SPECULAR_COLOR = \"specular\";\n$1b774580ee2e7ae3$var$MaterialNode.SPECULAR_STRENGTH = \"specularStrength\";\n$1b774580ee2e7ae3$var$MaterialNode.REFLECTIVITY = \"reflectivity\";\n$1b774580ee2e7ae3$var$MaterialNode.ROUGHNESS = \"roughness\";\n$1b774580ee2e7ae3$var$MaterialNode.METALNESS = \"metalness\";\n$1b774580ee2e7ae3$var$MaterialNode.NORMAL = \"normal\";\n$1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT = \"clearcoat\";\n$1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT_ROUGHNESS = \"clearcoatRoughness\";\n$1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT_NORMAL = \"clearcoatNormal\";\n$1b774580ee2e7ae3$var$MaterialNode.EMISSIVE = \"emissive\";\n$1b774580ee2e7ae3$var$MaterialNode.ROTATION = \"rotation\";\n$1b774580ee2e7ae3$var$MaterialNode.SHEEN = \"sheen\";\n$1b774580ee2e7ae3$var$MaterialNode.SHEEN_ROUGHNESS = \"sheenRoughness\";\n$1b774580ee2e7ae3$var$MaterialNode.IRIDESCENCE = \"iridescence\";\n$1b774580ee2e7ae3$var$MaterialNode.IRIDESCENCE_IOR = \"iridescenceIOR\";\n$1b774580ee2e7ae3$var$MaterialNode.IRIDESCENCE_THICKNESS = \"iridescenceThickness\";\n$1b774580ee2e7ae3$var$MaterialNode.LINE_SCALE = \"scale\";\n$1b774580ee2e7ae3$var$MaterialNode.LINE_DASH_SIZE = \"dashSize\";\n$1b774580ee2e7ae3$var$MaterialNode.LINE_GAP_SIZE = \"gapSize\";\n$1b774580ee2e7ae3$var$MaterialNode.LINE_WIDTH = \"linewidth\";\n$1b774580ee2e7ae3$var$MaterialNode.LINE_DASH_OFFSET = \"dashOffset\";\n$1b774580ee2e7ae3$var$MaterialNode.POINT_WIDTH = \"pointWidth\";\nvar $1b774580ee2e7ae3$export$2e2bcd8739ae039 = $1b774580ee2e7ae3$var$MaterialNode;\nconst $1b774580ee2e7ae3$export$3030330267c62589 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.ALPHA_TEST);\nconst $1b774580ee2e7ae3$export$852ee2194711a41a = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.COLOR);\nconst $1b774580ee2e7ae3$export$e3d16a46fd4e0183 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.SHININESS);\nconst $1b774580ee2e7ae3$export$7935949e0cf72a01 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.EMISSIVE);\nconst $1b774580ee2e7ae3$export$a61065844a540229 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.OPACITY);\nconst $1b774580ee2e7ae3$export$5447cf3a560d2eed = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.SPECULAR_COLOR);\nconst $1b774580ee2e7ae3$export$aab42c7f7fd50fe = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.SPECULAR_STRENGTH);\nconst $1b774580ee2e7ae3$export$9ead911ab638ab9e = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.REFLECTIVITY);\nconst $1b774580ee2e7ae3$export$c372ad2642cfd701 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.ROUGHNESS);\nconst $1b774580ee2e7ae3$export$ed4ec59eb9c0ad6c = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.METALNESS);\nconst $1b774580ee2e7ae3$export$c30da46075fba8bb = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.NORMAL);\nconst $1b774580ee2e7ae3$export$bcb4b1fc59604158 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT);\nconst $1b774580ee2e7ae3$export$1deee7039751e39b = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT_ROUGHNESS);\nconst $1b774580ee2e7ae3$export$1e8c99bce15509ea = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.CLEARCOAT_NORMAL);\nconst $1b774580ee2e7ae3$export$22a360a238f20723 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.ROTATION);\nconst $1b774580ee2e7ae3$export$ca8d8f9bb84c2b06 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.SHEEN);\nconst $1b774580ee2e7ae3$export$c53217b49af64201 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.SHEEN_ROUGHNESS);\nconst $1b774580ee2e7ae3$export$2991d95653bddf71 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.IRIDESCENCE);\nconst $1b774580ee2e7ae3$export$4d5a92c4b0801e42 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.IRIDESCENCE_IOR);\nconst $1b774580ee2e7ae3$export$edac0c112e716da0 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.IRIDESCENCE_THICKNESS);\nconst $1b774580ee2e7ae3$export$505058bbaa0ad019 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.LINE_SCALE);\nconst $1b774580ee2e7ae3$export$200b8bf19a7aecc9 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.LINE_DASH_SIZE);\nconst $1b774580ee2e7ae3$export$3154261658c8ee4b = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.LINE_GAP_SIZE);\nconst $1b774580ee2e7ae3$export$dc06cf49d582ad47 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.LINE_WIDTH);\nconst $1b774580ee2e7ae3$export$194200c8fa44fbfb = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.LINE_DASH_OFFSET);\nconst $1b774580ee2e7ae3$export$fadc4e3375c15b33 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($1b774580ee2e7ae3$var$MaterialNode, $1b774580ee2e7ae3$var$MaterialNode.POINT_WIDTH);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"MaterialNode\", $1b774580ee2e7ae3$var$MaterialNode);\n\n\n\n\n\n\n\n\n\n\n\n\nclass $f38f6f7a1974ae48$var$PositionNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $f38f6f7a1974ae48$var$PositionNode.LOCAL){\n        super(\"vec3\");\n        this.scope = scope;\n    }\n    isGlobal() {\n        return true;\n    }\n    getHash() {\n        return `position-${this.scope}`;\n    }\n    generate(builder) {\n        const scope = this.scope;\n        let outputNode = null;\n        if (scope === $f38f6f7a1974ae48$var$PositionNode.GEOMETRY) outputNode = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"position\", \"vec3\");\n        else if (scope === $f38f6f7a1974ae48$var$PositionNode.LOCAL) outputNode = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)($f38f6f7a1974ae48$export$a0f5007edcaeec62);\n        else if (scope === $f38f6f7a1974ae48$var$PositionNode.WORLD) {\n            const vertexPositionNode = (0, $69c7546a6c9d8c2a$export$e1011125af6f8b40).mul($f38f6f7a1974ae48$export$78cc3a7ea225109f);\n            outputNode = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexPositionNode);\n        } else if (scope === $f38f6f7a1974ae48$var$PositionNode.VIEW) {\n            const vertexPositionNode = (0, $69c7546a6c9d8c2a$export$57d0df277658535e).mul($f38f6f7a1974ae48$export$78cc3a7ea225109f);\n            outputNode = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexPositionNode);\n        } else if (scope === $f38f6f7a1974ae48$var$PositionNode.VIEW_DIRECTION) {\n            const vertexPositionNode = $f38f6f7a1974ae48$export$3dfd735ebeac9bfd.negate();\n            outputNode = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexPositionNode));\n        } else if (scope === $f38f6f7a1974ae48$var$PositionNode.WORLD_DIRECTION) {\n            const vertexPositionNode = $f38f6f7a1974ae48$export$78cc3a7ea225109f.transformDirection((0, $69c7546a6c9d8c2a$export$e1011125af6f8b40));\n            outputNode = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexPositionNode));\n        }\n        return outputNode.build(builder, this.getNodeType(builder));\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.scope = this.scope;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.scope = data.scope;\n    }\n}\n$f38f6f7a1974ae48$var$PositionNode.GEOMETRY = \"geometry\";\n$f38f6f7a1974ae48$var$PositionNode.LOCAL = \"local\";\n$f38f6f7a1974ae48$var$PositionNode.WORLD = \"world\";\n$f38f6f7a1974ae48$var$PositionNode.WORLD_DIRECTION = \"worldDirection\";\n$f38f6f7a1974ae48$var$PositionNode.VIEW = \"view\";\n$f38f6f7a1974ae48$var$PositionNode.VIEW_DIRECTION = \"viewDirection\";\nvar $f38f6f7a1974ae48$export$2e2bcd8739ae039 = $f38f6f7a1974ae48$var$PositionNode;\nconst $f38f6f7a1974ae48$export$a0f5007edcaeec62 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($f38f6f7a1974ae48$var$PositionNode, $f38f6f7a1974ae48$var$PositionNode.GEOMETRY);\nconst $f38f6f7a1974ae48$export$78cc3a7ea225109f = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($f38f6f7a1974ae48$var$PositionNode, $f38f6f7a1974ae48$var$PositionNode.LOCAL).temp(\"Position\");\nconst $f38f6f7a1974ae48$export$3e8de2ffef4e6f91 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($f38f6f7a1974ae48$var$PositionNode, $f38f6f7a1974ae48$var$PositionNode.WORLD);\nconst $f38f6f7a1974ae48$export$7a5e5a23009fd1a3 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($f38f6f7a1974ae48$var$PositionNode, $f38f6f7a1974ae48$var$PositionNode.WORLD_DIRECTION);\nconst $f38f6f7a1974ae48$export$3dfd735ebeac9bfd = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($f38f6f7a1974ae48$var$PositionNode, $f38f6f7a1974ae48$var$PositionNode.VIEW);\nconst $f38f6f7a1974ae48$export$80de5077965297a8 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($f38f6f7a1974ae48$var$PositionNode, $f38f6f7a1974ae48$var$PositionNode.VIEW_DIRECTION);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PositionNode\", $f38f6f7a1974ae48$var$PositionNode);\n\n\n\n\nclass $52dd43a5825c6027$var$ModelViewProjectionNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(positionNode = null){\n        super(\"vec4\");\n        this.positionNode = positionNode;\n    }\n    setup(builder) {\n        if (builder.shaderStage === \"fragment\") return (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(builder.context.mvp);\n        const position = this.positionNode || (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f);\n        return (0, $bab16494dbba4b41$export$dc8d743682f60b2d).mul((0, $69c7546a6c9d8c2a$export$57d0df277658535e)).mul(position);\n    }\n}\nvar $52dd43a5825c6027$export$2e2bcd8739ae039 = $52dd43a5825c6027$var$ModelViewProjectionNode;\nconst $52dd43a5825c6027$export$64e914589db9c49e = (0, $64e573acaa48d904$export$60d11c6747b7deba)($52dd43a5825c6027$var$ModelViewProjectionNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ModelViewProjectionNode\", $52dd43a5825c6027$var$ModelViewProjectionNode);\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $a2ee15aa30b9df14$var$BufferAttributeNode extends (0, $183d0103bf75aaa6$export$2e2bcd8739ae039) {\n    constructor(value, bufferType = null, bufferStride = 0, bufferOffset = 0){\n        super(value, bufferType);\n        this.isBufferNode = true;\n        this.bufferType = bufferType;\n        this.bufferStride = bufferStride;\n        this.bufferOffset = bufferOffset;\n        this.usage = (0, $ilwiq.StaticDrawUsage);\n        this.instanced = false;\n        this.attribute = null;\n        if (value && value.isBufferAttribute === true) {\n            this.attribute = value;\n            this.usage = value.usage;\n            this.instanced = value.isInstancedBufferAttribute;\n        }\n    }\n    getNodeType(builder) {\n        if (this.bufferType === null) this.bufferType = builder.getTypeFromAttribute(this.attribute);\n        return this.bufferType;\n    }\n    setup(builder) {\n        if (this.attribute !== null) return;\n        const type = this.getNodeType(builder);\n        const array = this.value;\n        const itemSize = builder.getTypeLength(type);\n        const stride = this.bufferStride || itemSize;\n        const offset = this.bufferOffset;\n        const buffer = array.isInterleavedBuffer === true ? array : new (0, $ilwiq.InterleavedBuffer)(array, stride);\n        const bufferAttribute = new (0, $ilwiq.InterleavedBufferAttribute)(buffer, itemSize, offset);\n        buffer.setUsage(this.usage);\n        this.attribute = bufferAttribute;\n        this.attribute.isInstancedBufferAttribute = this.instanced; // @TODO: Add a possible: InstancedInterleavedBufferAttribute\n    }\n    generate(builder) {\n        const nodeType = this.getNodeType(builder);\n        const nodeAttribute = builder.getBufferAttributeFromNode(this, nodeType);\n        const propertyName = builder.getPropertyName(nodeAttribute);\n        let output = null;\n        if (builder.shaderStage === \"vertex\" || builder.shaderStage === \"compute\") {\n            this.name = propertyName;\n            output = propertyName;\n        } else {\n            const nodeVarying = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(this);\n            output = nodeVarying.build(builder, nodeType);\n        }\n        return output;\n    }\n    getInputType() {\n        return \"bufferAttribute\";\n    }\n    setUsage(value) {\n        this.usage = value;\n        return this;\n    }\n    setInstanced(value) {\n        this.instanced = value;\n        return this;\n    }\n}\nvar $a2ee15aa30b9df14$export$2e2bcd8739ae039 = $a2ee15aa30b9df14$var$BufferAttributeNode;\nconst $a2ee15aa30b9df14$export$1a0889be1cc680b2 = (array, type, stride, offset)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $a2ee15aa30b9df14$var$BufferAttributeNode(array, type, stride, offset));\nconst $a2ee15aa30b9df14$export$41a4a8837b048fd7 = (array, type, stride, offset)=>$a2ee15aa30b9df14$export$1a0889be1cc680b2(array, type, stride, offset).setUsage((0, $ilwiq.DynamicDrawUsage));\nconst $a2ee15aa30b9df14$export$6776ccefa3811157 = (array, type, stride, offset)=>$a2ee15aa30b9df14$export$1a0889be1cc680b2(array, type, stride, offset).setInstanced(true);\nconst $a2ee15aa30b9df14$export$35d450082ae9e736 = (array, type, stride, offset)=>$a2ee15aa30b9df14$export$41a4a8837b048fd7(array, type, stride, offset).setInstanced(true);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"toAttribute\", (bufferNode)=>$a2ee15aa30b9df14$export$1a0889be1cc680b2(bufferNode.value));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"BufferAttributeNode\", $a2ee15aa30b9df14$var$BufferAttributeNode);\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $23b32bee81a3f7cb$var$InstanceNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(instanceMesh){\n        super(\"void\");\n        this.instanceMesh = instanceMesh;\n        this.instanceMatrixNode = null;\n        this.instanceColorNode = null;\n    }\n    setup() {\n        let instanceMatrixNode = this.instanceMatrixNode;\n        const instanceMesh = this.instanceMesh;\n        if (instanceMatrixNode === null) {\n            const instanceAttribute = instanceMesh.instanceMatrix;\n            const buffer = new (0, $ilwiq.InstancedInterleavedBuffer)(instanceAttribute.array, 16, 1);\n            const bufferFn = instanceAttribute.usage === (0, $ilwiq.DynamicDrawUsage) ? (0, $a2ee15aa30b9df14$export$35d450082ae9e736) : (0, $a2ee15aa30b9df14$export$6776ccefa3811157);\n            const instanceBuffers = [\n                // F.Signature -> bufferAttribute( array, type, stride, offset )\n                bufferFn(buffer, \"vec4\", 16, 0),\n                bufferFn(buffer, \"vec4\", 16, 4),\n                bufferFn(buffer, \"vec4\", 16, 8),\n                bufferFn(buffer, \"vec4\", 16, 12)\n            ];\n            instanceMatrixNode = (0, $64e573acaa48d904$export$d2b4acf069bf09f5)(...instanceBuffers);\n            this.instanceMatrixNode = instanceMatrixNode;\n        }\n        const instanceColorAttribute = instanceMesh.instanceColor;\n        if (instanceColorAttribute && this.instanceColorNode === null) {\n            const buffer = new (0, $ilwiq.InstancedBufferAttribute)(instanceColorAttribute.array, 3);\n            const bufferFn = instanceColorAttribute.usage === (0, $ilwiq.DynamicDrawUsage) ? (0, $a2ee15aa30b9df14$export$35d450082ae9e736) : (0, $a2ee15aa30b9df14$export$6776ccefa3811157);\n            this.instanceColorNode = (0, $64e573acaa48d904$export$9100789c9d999364)(bufferFn(buffer, \"vec3\", 3, 0));\n        }\n        // POSITION\n        const instancePosition = instanceMatrixNode.mul((0, $f38f6f7a1974ae48$export$78cc3a7ea225109f)).xyz;\n        // NORMAL\n        const m = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)(instanceMatrixNode[0].xyz, instanceMatrixNode[1].xyz, instanceMatrixNode[2].xyz);\n        const transformedNormal = (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).div((0, $64e573acaa48d904$export$9100789c9d999364)(m[0].dot(m[0]), m[1].dot(m[1]), m[2].dot(m[2])));\n        const instanceNormal = m.mul(transformedNormal).xyz;\n        // ASSIGNS\n        (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f).assign(instancePosition);\n        (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).assign(instanceNormal);\n        // COLOR\n        if (this.instanceColorNode !== null) (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec3\", \"vInstanceColor\").assign(this.instanceColorNode);\n    }\n}\nvar $23b32bee81a3f7cb$export$2e2bcd8739ae039 = $23b32bee81a3f7cb$var$InstanceNode;\nconst $23b32bee81a3f7cb$export$9544d5bb712b01ea = (0, $64e573acaa48d904$export$60d11c6747b7deba)($23b32bee81a3f7cb$var$InstanceNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"InstanceNode\", $23b32bee81a3f7cb$var$InstanceNode);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $cbc2a1ac0ca143f0$var$TangentNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $cbc2a1ac0ca143f0$var$TangentNode.LOCAL){\n        super();\n        this.scope = scope;\n    }\n    getHash() {\n        return `tangent-${this.scope}`;\n    }\n    getNodeType() {\n        const scope = this.scope;\n        if (scope === $cbc2a1ac0ca143f0$var$TangentNode.GEOMETRY) return \"vec4\";\n        return \"vec3\";\n    }\n    generate(builder) {\n        const scope = this.scope;\n        let outputNode = null;\n        if (scope === $cbc2a1ac0ca143f0$var$TangentNode.GEOMETRY) {\n            outputNode = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"tangent\", \"vec4\");\n            if (builder.geometry.hasAttribute(\"tangent\") === false) builder.geometry.computeTangents();\n        } else if (scope === $cbc2a1ac0ca143f0$var$TangentNode.LOCAL) outputNode = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)($cbc2a1ac0ca143f0$export$ffefde522c47f278.xyz);\n        else if (scope === $cbc2a1ac0ca143f0$var$TangentNode.VIEW) {\n            const vertexNode = (0, $69c7546a6c9d8c2a$export$57d0df277658535e).mul((0, $64e573acaa48d904$export$6dba2a1f0d609415)($cbc2a1ac0ca143f0$export$f53a7d05db86e284, 0)).xyz;\n            outputNode = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexNode));\n        } else if (scope === $cbc2a1ac0ca143f0$var$TangentNode.WORLD) {\n            const vertexNode = $cbc2a1ac0ca143f0$export$610e156c53541bb9.transformDirection((0, $bab16494dbba4b41$export$6f7d94c027189d78));\n            outputNode = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexNode));\n        }\n        return outputNode.build(builder, this.getNodeType(builder));\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.scope = this.scope;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.scope = data.scope;\n    }\n}\n$cbc2a1ac0ca143f0$var$TangentNode.GEOMETRY = \"geometry\";\n$cbc2a1ac0ca143f0$var$TangentNode.LOCAL = \"local\";\n$cbc2a1ac0ca143f0$var$TangentNode.VIEW = \"view\";\n$cbc2a1ac0ca143f0$var$TangentNode.WORLD = \"world\";\nvar $cbc2a1ac0ca143f0$export$2e2bcd8739ae039 = $cbc2a1ac0ca143f0$var$TangentNode;\nconst $cbc2a1ac0ca143f0$export$ffefde522c47f278 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($cbc2a1ac0ca143f0$var$TangentNode, $cbc2a1ac0ca143f0$var$TangentNode.GEOMETRY);\nconst $cbc2a1ac0ca143f0$export$f53a7d05db86e284 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($cbc2a1ac0ca143f0$var$TangentNode, $cbc2a1ac0ca143f0$var$TangentNode.LOCAL);\nconst $cbc2a1ac0ca143f0$export$610e156c53541bb9 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($cbc2a1ac0ca143f0$var$TangentNode, $cbc2a1ac0ca143f0$var$TangentNode.VIEW);\nconst $cbc2a1ac0ca143f0$export$58a1135040e57d7d = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($cbc2a1ac0ca143f0$var$TangentNode, $cbc2a1ac0ca143f0$var$TangentNode.WORLD);\nconst $cbc2a1ac0ca143f0$export$c6b946ad70a6b9af = (0, $414b1568201c856d$export$8d72b093afd1813e)($cbc2a1ac0ca143f0$export$610e156c53541bb9, \"TransformedTangentView\");\nconst $cbc2a1ac0ca143f0$export$6ac2381e11d518d7 = (0, $4b9f12ce87d17074$export$a3295358bff77e)($cbc2a1ac0ca143f0$export$c6b946ad70a6b9af.transformDirection((0, $bab16494dbba4b41$export$6f7d94c027189d78)));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TangentNode\", $cbc2a1ac0ca143f0$var$TangentNode);\n\n\nclass $6e65e07266b700c1$var$BatchNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(batchMesh){\n        super(\"void\");\n        this.batchMesh = batchMesh;\n        this.instanceColorNode = null;\n        this.batchingIdNode = null;\n    }\n    setup(builder) {\n        // POSITION\n        if (this.batchingIdNode === null) this.batchingIdNode = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"batchId\");\n        const matriceTexture = this.batchMesh._matricesTexture;\n        const size = (0, $ca68d2c8539d97c1$export$a8905ccad583a116)((0, $1f6ba41f58cce433$export$c9a2885c9238610f)(matriceTexture), 0);\n        const j = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(this.batchingIdNode)).mul(4).toVar();\n        const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(j.mod(size));\n        const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(j).div((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(size));\n        const batchingMatrix = (0, $64e573acaa48d904$export$d2b4acf069bf09f5)((0, $1f6ba41f58cce433$export$c9a2885c9238610f)(matriceTexture, (0, $64e573acaa48d904$export$63e666f6a33be288)(x, y)), (0, $1f6ba41f58cce433$export$c9a2885c9238610f)(matriceTexture, (0, $64e573acaa48d904$export$63e666f6a33be288)(x.add(1), y)), (0, $1f6ba41f58cce433$export$c9a2885c9238610f)(matriceTexture, (0, $64e573acaa48d904$export$63e666f6a33be288)(x.add(2), y)), (0, $1f6ba41f58cce433$export$c9a2885c9238610f)(matriceTexture, (0, $64e573acaa48d904$export$63e666f6a33be288)(x.add(3), y)));\n        const bm = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)(batchingMatrix[0].xyz, batchingMatrix[1].xyz, batchingMatrix[2].xyz);\n        (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f).assign(batchingMatrix.mul((0, $f38f6f7a1974ae48$export$78cc3a7ea225109f)));\n        const transformedNormal = (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).div((0, $64e573acaa48d904$export$9100789c9d999364)(bm[0].dot(bm[0]), bm[1].dot(bm[1]), bm[2].dot(bm[2])));\n        const batchingNormal = bm.mul(transformedNormal).xyz;\n        (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).assign(batchingNormal);\n        if (builder.hasGeometryAttribute(\"tangent\")) (0, $cbc2a1ac0ca143f0$export$f53a7d05db86e284).mulAssign(bm);\n    }\n}\nvar $6e65e07266b700c1$export$2e2bcd8739ae039 = $6e65e07266b700c1$var$BatchNode;\nconst $6e65e07266b700c1$export$712ea50be43a7858 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($6e65e07266b700c1$var$BatchNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"batch\", $6e65e07266b700c1$var$BatchNode);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $d39f32f2d86e1d70$var$SkinningNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(skinnedMesh, useReference = false){\n        super(\"void\");\n        this.skinnedMesh = skinnedMesh;\n        this.useReference = useReference;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT;\n        //\n        this.skinIndexNode = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"skinIndex\", \"uvec4\");\n        this.skinWeightNode = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"skinWeight\", \"vec4\");\n        let bindMatrixNode, bindMatrixInverseNode, boneMatricesNode;\n        if (useReference) {\n            bindMatrixNode = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"bindMatrix\", \"mat4\");\n            bindMatrixInverseNode = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"bindMatrixInverse\", \"mat4\");\n            boneMatricesNode = (0, $bc3fcdce5f983ff8$export$18088e2a413e76c6)(\"skeleton.boneMatrices\", \"mat4\", skinnedMesh.skeleton.bones.length);\n        } else {\n            bindMatrixNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(skinnedMesh.bindMatrix, \"mat4\");\n            bindMatrixInverseNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(skinnedMesh.bindMatrixInverse, \"mat4\");\n            boneMatricesNode = (0, $a987daf999c976be$export$ab1029bcae9ddb4a)(skinnedMesh.skeleton.boneMatrices, \"mat4\", skinnedMesh.skeleton.bones.length);\n        }\n        this.bindMatrixNode = bindMatrixNode;\n        this.bindMatrixInverseNode = bindMatrixInverseNode;\n        this.boneMatricesNode = boneMatricesNode;\n    }\n    setup(builder) {\n        const { skinIndexNode: skinIndexNode, skinWeightNode: skinWeightNode, bindMatrixNode: bindMatrixNode, bindMatrixInverseNode: bindMatrixInverseNode, boneMatricesNode: boneMatricesNode } = this;\n        const boneMatX = boneMatricesNode.element(skinIndexNode.x);\n        const boneMatY = boneMatricesNode.element(skinIndexNode.y);\n        const boneMatZ = boneMatricesNode.element(skinIndexNode.z);\n        const boneMatW = boneMatricesNode.element(skinIndexNode.w);\n        // POSITION\n        const skinVertex = bindMatrixNode.mul((0, $f38f6f7a1974ae48$export$78cc3a7ea225109f));\n        const skinned = (0, $1a899e4dee2452c3$export$e16d8520af44a096)(boneMatX.mul(skinWeightNode.x).mul(skinVertex), boneMatY.mul(skinWeightNode.y).mul(skinVertex), boneMatZ.mul(skinWeightNode.z).mul(skinVertex), boneMatW.mul(skinWeightNode.w).mul(skinVertex));\n        const skinPosition = bindMatrixInverseNode.mul(skinned).xyz;\n        // NORMAL\n        let skinMatrix = (0, $1a899e4dee2452c3$export$e16d8520af44a096)(skinWeightNode.x.mul(boneMatX), skinWeightNode.y.mul(boneMatY), skinWeightNode.z.mul(boneMatZ), skinWeightNode.w.mul(boneMatW));\n        skinMatrix = bindMatrixInverseNode.mul(skinMatrix).mul(bindMatrixNode);\n        const skinNormal = skinMatrix.transformDirection((0, $b8bdffed4c803471$export$c94af1e24aa56d8f)).xyz;\n        // ASSIGNS\n        (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f).assign(skinPosition);\n        (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).assign(skinNormal);\n        if (builder.hasGeometryAttribute(\"tangent\")) (0, $cbc2a1ac0ca143f0$export$f53a7d05db86e284).assign(skinNormal);\n    }\n    generate(builder, output) {\n        if (output !== \"void\") return (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f).build(builder, output);\n    }\n    update(frame) {\n        const object = this.useReference ? frame.object : this.skinnedMesh;\n        object.skeleton.update();\n    }\n}\nvar $d39f32f2d86e1d70$export$2e2bcd8739ae039 = $d39f32f2d86e1d70$var$SkinningNode;\nconst $d39f32f2d86e1d70$export$8827b75aa6a3dd00 = (skinnedMesh)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $d39f32f2d86e1d70$var$SkinningNode(skinnedMesh));\nconst $d39f32f2d86e1d70$export$a1a5c22177b275e2 = (skinnedMesh)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $d39f32f2d86e1d70$var$SkinningNode(skinnedMesh, true));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"SkinningNode\", $d39f32f2d86e1d70$var$SkinningNode);\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\n\n\n\n\nclass $477d263401558a8d$var$LoopNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(params = []){\n        super();\n        this.params = params;\n    }\n    getVarName(index) {\n        return String.fromCharCode(\"i\".charCodeAt() + index);\n    }\n    getProperties(builder) {\n        const properties = builder.getNodeProperties(this);\n        if (properties.stackNode !== undefined) return properties;\n        //\n        const inputs = {};\n        for(let i = 0, l = this.params.length - 1; i < l; i++){\n            const param = this.params[i];\n            const name = param.isNode !== true && param.name || this.getVarName(i);\n            const type = param.isNode !== true && param.type || \"int\";\n            inputs[name] = (0, $2d5eb7e994ba6fa4$export$743d82c2fd345b72)(name, type);\n        }\n        properties.returnsNode = this.params[this.params.length - 1](inputs, builder.addStack(), builder);\n        properties.stackNode = builder.removeStack();\n        return properties;\n    }\n    getNodeType(builder) {\n        const { returnsNode: returnsNode } = this.getProperties(builder);\n        return returnsNode ? returnsNode.getNodeType(builder) : \"void\";\n    }\n    setup(builder) {\n        // setup properties\n        this.getProperties(builder);\n    }\n    generate(builder) {\n        const properties = this.getProperties(builder);\n        const contextData = {\n            tempWrite: false\n        };\n        const params = this.params;\n        const stackNode = properties.stackNode;\n        for(let i = 0, l = params.length - 1; i < l; i++){\n            const param = params[i];\n            let start = null, end = null, name = null, type = null, condition = null, update = null;\n            if (param.isNode) {\n                type = \"int\";\n                name = this.getVarName(i);\n                start = \"0\";\n                end = param.build(builder, type);\n                condition = \"<\";\n            } else {\n                type = param.type || \"int\";\n                name = param.name || this.getVarName(i);\n                start = param.start;\n                end = param.end;\n                condition = param.condition;\n                update = param.update;\n                if (typeof start === \"number\") start = start.toString();\n                else if (start && start.isNode) start = start.build(builder, type);\n                if (typeof end === \"number\") end = end.toString();\n                else if (end && end.isNode) end = end.build(builder, type);\n                if (start !== undefined && end === undefined) {\n                    start = start + \" - 1\";\n                    end = \"0\";\n                    condition = \">=\";\n                } else if (end !== undefined && start === undefined) {\n                    start = \"0\";\n                    condition = \"<\";\n                }\n                if (condition === undefined) {\n                    if (Number(start) > Number(end)) condition = \">=\";\n                    else condition = \"<\";\n                }\n            }\n            const internalParam = {\n                start: start,\n                end: end,\n                condition: condition\n            };\n            //\n            const startSnippet = internalParam.start;\n            const endSnippet = internalParam.end;\n            let declarationSnippet = \"\";\n            let conditionalSnippet = \"\";\n            let updateSnippet = \"\";\n            if (!update) {\n                if (type === \"int\" || type === \"uint\") {\n                    if (condition.includes(\"<\")) update = \"++\";\n                    else update = \"--\";\n                } else if (condition.includes(\"<\")) update = \"+= 1.\";\n                else update = \"-= 1.\";\n            }\n            declarationSnippet += builder.getVar(type, name) + \" = \" + startSnippet;\n            conditionalSnippet += name + \" \" + condition + \" \" + endSnippet;\n            updateSnippet += name + \" \" + update;\n            const forSnippet = `for ( ${declarationSnippet}; ${conditionalSnippet}; ${updateSnippet} )`;\n            builder.addFlowCode((i === 0 ? \"\\n\" : \"\") + builder.tab + forSnippet + \" {\\n\\n\").addFlowTab();\n        }\n        const stackSnippet = (0, $6c10098160fcd7b9$export$a078c61943f9dbbe)(stackNode, contextData).build(builder, \"void\");\n        const returnsSnippet = properties.returnsNode ? properties.returnsNode.build(builder) : \"\";\n        builder.removeFlowTab().addFlowCode(\"\\n\" + builder.tab + stackSnippet);\n        for(let i = 0, l = this.params.length - 1; i < l; i++)builder.addFlowCode((i === 0 ? \"\" : builder.tab) + \"}\\n\\n\").removeFlowTab();\n        builder.addFlowTab();\n        return returnsSnippet;\n    }\n}\nvar $477d263401558a8d$export$2e2bcd8739ae039 = $477d263401558a8d$var$LoopNode;\nconst $477d263401558a8d$export$f9ef67375ddc185 = (...params)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $477d263401558a8d$var$LoopNode((0, $64e573acaa48d904$export$34baf9226cd3d576)(params, \"int\"))).append();\nconst $477d263401558a8d$export$cbb542527a72964 = ()=>(0, $2d5eb7e994ba6fa4$export$743d82c2fd345b72)(\"continue\").append();\nconst $477d263401558a8d$export$c88190a7f68b38c0 = ()=>(0, $2d5eb7e994ba6fa4$export$743d82c2fd345b72)(\"break\").append();\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"loop\", (returns, ...params)=>(0, $034ed30ba65264d2$export$49c50429ca9c5609)(returns, $477d263401558a8d$export$f9ef67375ddc185(...params)));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"LoopNode\", $477d263401558a8d$var$LoopNode);\n\n\nconst $bddcd27df2123272$var$morphTextures = new WeakMap();\nconst $bddcd27df2123272$var$morphVec4 = new (0, $ilwiq.Vector4)();\nconst $bddcd27df2123272$var$getMorph = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ bufferMap: bufferMap, influence: influence, stride: stride, width: width, depth: depth, offset: offset })=>{\n    const texelIndex = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)((0, $655b15d454d9aca1$export$df3f95685a193815)).mul(stride).add(offset);\n    const y = texelIndex.div(width);\n    const x = texelIndex.sub(y.mul(width));\n    const bufferAttrib = (0, $1f6ba41f58cce433$export$c9a2885c9238610f)(bufferMap, (0, $64e573acaa48d904$export$63e666f6a33be288)(x, y)).depth(depth);\n    return bufferAttrib.mul(influence);\n});\nfunction $bddcd27df2123272$var$getEntry(geometry) {\n    const hasMorphPosition = geometry.morphAttributes.position !== undefined;\n    const hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n    const hasMorphColors = geometry.morphAttributes.color !== undefined;\n    // instead of using attributes, the WebGL 2 code path encodes morph targets\n    // into an array of data textures. Each layer represents a single morph target.\n    const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n    const morphTargetsCount = morphAttribute !== undefined ? morphAttribute.length : 0;\n    let entry = $bddcd27df2123272$var$morphTextures.get(geometry);\n    if (entry === undefined || entry.count !== morphTargetsCount) {\n        if (entry !== undefined) entry.texture.dispose();\n        const morphTargets = geometry.morphAttributes.position || [];\n        const morphNormals = geometry.morphAttributes.normal || [];\n        const morphColors = geometry.morphAttributes.color || [];\n        let vertexDataCount = 0;\n        if (hasMorphPosition === true) vertexDataCount = 1;\n        if (hasMorphNormals === true) vertexDataCount = 2;\n        if (hasMorphColors === true) vertexDataCount = 3;\n        let width = geometry.attributes.position.count * vertexDataCount;\n        let height = 1;\n        const maxTextureSize = 4096; // @TODO: Use 'capabilities.maxTextureSize'\n        if (width > maxTextureSize) {\n            height = Math.ceil(width / maxTextureSize);\n            width = maxTextureSize;\n        }\n        const buffer = new Float32Array(width * height * 4 * morphTargetsCount);\n        const bufferTexture = new (0, $ilwiq.DataArrayTexture)(buffer, width, height, morphTargetsCount);\n        bufferTexture.type = (0, $ilwiq.FloatType);\n        bufferTexture.needsUpdate = true;\n        // fill buffer\n        const vertexDataStride = vertexDataCount * 4;\n        for(let i = 0; i < morphTargetsCount; i++){\n            const morphTarget = morphTargets[i];\n            const morphNormal = morphNormals[i];\n            const morphColor = morphColors[i];\n            const offset = width * height * 4 * i;\n            for(let j = 0; j < morphTarget.count; j++){\n                const stride = j * vertexDataStride;\n                if (hasMorphPosition === true) {\n                    $bddcd27df2123272$var$morphVec4.fromBufferAttribute(morphTarget, j);\n                    buffer[offset + stride + 0] = $bddcd27df2123272$var$morphVec4.x;\n                    buffer[offset + stride + 1] = $bddcd27df2123272$var$morphVec4.y;\n                    buffer[offset + stride + 2] = $bddcd27df2123272$var$morphVec4.z;\n                    buffer[offset + stride + 3] = 0;\n                }\n                if (hasMorphNormals === true) {\n                    $bddcd27df2123272$var$morphVec4.fromBufferAttribute(morphNormal, j);\n                    buffer[offset + stride + 4] = $bddcd27df2123272$var$morphVec4.x;\n                    buffer[offset + stride + 5] = $bddcd27df2123272$var$morphVec4.y;\n                    buffer[offset + stride + 6] = $bddcd27df2123272$var$morphVec4.z;\n                    buffer[offset + stride + 7] = 0;\n                }\n                if (hasMorphColors === true) {\n                    $bddcd27df2123272$var$morphVec4.fromBufferAttribute(morphColor, j);\n                    buffer[offset + stride + 8] = $bddcd27df2123272$var$morphVec4.x;\n                    buffer[offset + stride + 9] = $bddcd27df2123272$var$morphVec4.y;\n                    buffer[offset + stride + 10] = $bddcd27df2123272$var$morphVec4.z;\n                    buffer[offset + stride + 11] = morphColor.itemSize === 4 ? $bddcd27df2123272$var$morphVec4.w : 1;\n                }\n            }\n        }\n        entry = {\n            count: morphTargetsCount,\n            texture: bufferTexture,\n            stride: vertexDataCount,\n            size: new (0, $ilwiq.Vector2)(width, height)\n        };\n        $bddcd27df2123272$var$morphTextures.set(geometry, entry);\n        function disposeTexture() {\n            bufferTexture.dispose();\n            $bddcd27df2123272$var$morphTextures.delete(geometry);\n            geometry.removeEventListener(\"dispose\", disposeTexture);\n        }\n        geometry.addEventListener(\"dispose\", disposeTexture);\n    }\n    return entry;\n}\nclass $bddcd27df2123272$var$MorphNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(mesh){\n        super(\"void\");\n        this.mesh = mesh;\n        this.morphBaseInfluence = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(1);\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT;\n    }\n    setup(builder) {\n        const { geometry: geometry } = builder;\n        const hasMorphPosition = geometry.morphAttributes.position !== undefined;\n        const hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n        const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n        const morphTargetsCount = morphAttribute !== undefined ? morphAttribute.length : 0;\n        // nodes\n        const { texture: bufferMap, stride: stride, size: size } = $bddcd27df2123272$var$getEntry(geometry);\n        if (hasMorphPosition === true) (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f).mulAssign(this.morphBaseInfluence);\n        if (hasMorphNormals === true) (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).mulAssign(this.morphBaseInfluence);\n        const width = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(size.width);\n        (0, $477d263401558a8d$export$f9ef67375ddc185)(morphTargetsCount, ({ i: i })=>{\n            const influence = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0).toVar();\n            if (this.mesh.isInstancedMesh === true && this.mesh.morphTexture !== null && this.mesh.morphTexture !== undefined) influence.assign((0, $1f6ba41f58cce433$export$c9a2885c9238610f)(this.mesh.morphTexture, (0, $64e573acaa48d904$export$63e666f6a33be288)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(i).add(1), (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)((0, $655b15d454d9aca1$export$3691cd4c77fcb2c4)))).r);\n            else influence.assign((0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"morphTargetInfluences\", \"float\").element(i).toVar());\n            if (hasMorphPosition === true) (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f).addAssign($bddcd27df2123272$var$getMorph({\n                bufferMap: bufferMap,\n                influence: influence,\n                stride: stride,\n                width: width,\n                depth: i,\n                offset: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)\n            }));\n            if (hasMorphNormals === true) (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).addAssign($bddcd27df2123272$var$getMorph({\n                bufferMap: bufferMap,\n                influence: influence,\n                stride: stride,\n                width: width,\n                depth: i,\n                offset: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)\n            }));\n        });\n    }\n    update() {\n        const morphBaseInfluence = this.morphBaseInfluence;\n        if (this.mesh.geometry.morphTargetsRelative) morphBaseInfluence.value = 1;\n        else morphBaseInfluence.value = 1 - this.mesh.morphTargetInfluences.reduce((a, b)=>a + b, 0);\n    }\n}\nvar $bddcd27df2123272$export$2e2bcd8739ae039 = $bddcd27df2123272$var$MorphNode;\nconst $bddcd27df2123272$export$1b980db58c123a7f = (0, $64e573acaa48d904$export$60d11c6747b7deba)($bddcd27df2123272$var$MorphNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"MorphNode\", $bddcd27df2123272$var$MorphNode);\n\n\n\n\n\n\n\n\n\nclass $01b702315b605b5f$var$ReflectVectorNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(){\n        super(\"vec3\");\n    }\n    getHash() {\n        return \"reflectVector\";\n    }\n    setup() {\n        const reflectView = (0, $f38f6f7a1974ae48$export$80de5077965297a8).negate().reflect((0, $b8bdffed4c803471$export$c58d63d09d102e3c));\n        return reflectView.transformDirection((0, $bab16494dbba4b41$export$6f7d94c027189d78));\n    }\n}\nvar $01b702315b605b5f$export$2e2bcd8739ae039 = $01b702315b605b5f$var$ReflectVectorNode;\nconst $01b702315b605b5f$export$ccfb4f831eb666bc = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($01b702315b605b5f$var$ReflectVectorNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ReflectVectorNode\", $01b702315b605b5f$var$ReflectVectorNode);\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $94a9a63327e9267a$var$CubeTextureNode extends (0, $1f6ba41f58cce433$export$2e2bcd8739ae039) {\n    constructor(value, uvNode = null, levelNode = null){\n        super(value, uvNode, levelNode);\n        this.isCubeTextureNode = true;\n    }\n    getInputType() {\n        return \"cubeTexture\";\n    }\n    getDefaultUV() {\n        return 0, $01b702315b605b5f$export$ccfb4f831eb666bc;\n    }\n    setUpdateMatrix() {}\n    setupUV(builder, uvNode) {\n        const texture = this.value;\n        if (builder.renderer.coordinateSystem === (0, $ilwiq.WebGPUCoordinateSystem) || !texture.isRenderTargetTexture) return (0, $64e573acaa48d904$export$9100789c9d999364)(uvNode.x.negate(), uvNode.yz);\n        else return uvNode;\n    }\n    generateUV(builder, cubeUV) {\n        return cubeUV.build(builder, \"vec3\");\n    }\n}\nvar $94a9a63327e9267a$export$2e2bcd8739ae039 = $94a9a63327e9267a$var$CubeTextureNode;\nconst $94a9a63327e9267a$export$f8948c996a1778e8 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($94a9a63327e9267a$var$CubeTextureNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"cubeTexture\", $94a9a63327e9267a$export$f8948c996a1778e8);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"CubeTextureNode\", $94a9a63327e9267a$var$CubeTextureNode);\n\n\n\n\nclass $b355d587e7d0ea8b$var$LightingNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(){\n        super(\"vec3\");\n    }\n    generate() {\n        console.warn(\"Abstract function.\");\n    }\n}\nvar $b355d587e7d0ea8b$export$2e2bcd8739ae039 = $b355d587e7d0ea8b$var$LightingNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"LightingNode\", $b355d587e7d0ea8b$var$LightingNode);\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nlet $bb48a619ccab5421$var$overrideMaterial = null;\nclass $bb48a619ccab5421$var$AnalyticLightNode extends (0, $b355d587e7d0ea8b$export$2e2bcd8739ae039) {\n    constructor(light = null){\n        super();\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME;\n        this.light = light;\n        this.rtt = null;\n        this.shadowNode = null;\n        this.color = new (0, $ilwiq.Color)();\n        this._defaultColorNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(this.color);\n        this.colorNode = this._defaultColorNode;\n        this.isAnalyticLightNode = true;\n    }\n    getCacheKey() {\n        return super.getCacheKey() + \"-\" + (this.light.id + \"-\" + (this.light.castShadow ? \"1\" : \"0\"));\n    }\n    getHash() {\n        return this.light.uuid;\n    }\n    setupShadow(builder) {\n        let shadowNode = this.shadowNode;\n        if (shadowNode === null) {\n            if ($bb48a619ccab5421$var$overrideMaterial === null) {\n                $bb48a619ccab5421$var$overrideMaterial = builder.createNodeMaterial();\n                $bb48a619ccab5421$var$overrideMaterial.fragmentNode = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0, 0, 0, 1);\n                $bb48a619ccab5421$var$overrideMaterial.isShadowNodeMaterial = true; // Use to avoid other overrideMaterial override material.fragmentNode unintentionally when using material.shadowNode\n            }\n            const shadow = this.light.shadow;\n            const rtt = builder.createRenderTarget(shadow.mapSize.width, shadow.mapSize.height);\n            const depthTexture = new (0, $ilwiq.DepthTexture)();\n            depthTexture.minFilter = (0, $ilwiq.NearestFilter);\n            depthTexture.magFilter = (0, $ilwiq.NearestFilter);\n            depthTexture.image.width = shadow.mapSize.width;\n            depthTexture.image.height = shadow.mapSize.height;\n            depthTexture.compareFunction = (0, $ilwiq.LessCompare);\n            rtt.depthTexture = depthTexture;\n            shadow.camera.updateProjectionMatrix();\n            //\n            const bias = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"bias\", \"float\", shadow);\n            const normalBias = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"normalBias\", \"float\", shadow);\n            let shadowCoord = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(shadow.matrix).mul((0, $f38f6f7a1974ae48$export$3e8de2ffef4e6f91).add((0, $b8bdffed4c803471$export$8cce2f8527757c54).mul(normalBias)));\n            shadowCoord = shadowCoord.xyz.div(shadowCoord.w);\n            const frustumTest = shadowCoord.x.greaterThanEqual(0).and(shadowCoord.x.lessThanEqual(1)).and(shadowCoord.y.greaterThanEqual(0)).and(shadowCoord.y.lessThanEqual(1)).and(shadowCoord.z.lessThanEqual(1));\n            let coordZ = shadowCoord.z.add(bias);\n            if (builder.renderer.coordinateSystem === (0, $ilwiq.WebGPUCoordinateSystem)) coordZ = coordZ.mul(2).sub(1); // WebGPU: Convertion [ 0, 1 ] to [ - 1, 1 ]\n            shadowCoord = (0, $64e573acaa48d904$export$9100789c9d999364)(shadowCoord.x, shadowCoord.y.oneMinus(), coordZ);\n            const textureCompare = (depthTexture, shadowCoord, compare)=>(0, $1f6ba41f58cce433$export$ab69073b3903a075)(depthTexture, shadowCoord).compare(compare);\n            //const textureCompare = ( depthTexture, shadowCoord, compare ) => compare.step( texture( depthTexture, shadowCoord ) );\n            // BasicShadowMap\n            shadowNode = textureCompare(depthTexture, shadowCoord.xy, shadowCoord.z);\n            // PCFShadowMap\n            /*\n\t\t\tconst mapSize = reference( 'mapSize', 'vec2', shadow );\n\t\t\tconst radius = reference( 'radius', 'float', shadow );\n\n\t\t\tconst texelSize = vec2( 1 ).div( mapSize );\n\t\t\tconst dx0 = texelSize.x.negate().mul( radius );\n\t\t\tconst dy0 = texelSize.y.negate().mul( radius );\n\t\t\tconst dx1 = texelSize.x.mul( radius );\n\t\t\tconst dy1 = texelSize.y.mul( radius );\n\t\t\tconst dx2 = dx0.mul( 2 );\n\t\t\tconst dy2 = dy0.mul( 2 );\n\t\t\tconst dx3 = dx1.mul( 2 );\n\t\t\tconst dy3 = dy1.mul( 2 );\n\n\t\t\tshadowNode = add(\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, dy0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, dy0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, dy2 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy2 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, dy2 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy, shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, dy3 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy3 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, dy3 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, dy1 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy1 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, dy1 ) ), shadowCoord.z )\n\t\t\t).mul( 1 / 17 );\n\t\t\t*/ //\n            const shadowColor = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(rtt.texture, shadowCoord);\n            this.rtt = rtt;\n            this.colorNode = this.colorNode.mul(frustumTest.mix(1, shadowNode.mix(shadowColor.a.mix(1, shadowColor), 1)));\n            this.shadowNode = shadowNode;\n            //\n            this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER;\n        }\n    }\n    setup(builder) {\n        if (this.light.castShadow) this.setupShadow(builder);\n        else if (this.shadowNode !== null) this.disposeShadow();\n    }\n    updateShadow(frame) {\n        const { rtt: rtt, light: light } = this;\n        const { renderer: renderer, scene: scene } = frame;\n        const currentOverrideMaterial = scene.overrideMaterial;\n        scene.overrideMaterial = $bb48a619ccab5421$var$overrideMaterial;\n        rtt.setSize(light.shadow.mapSize.width, light.shadow.mapSize.height);\n        light.shadow.updateMatrices(light);\n        const currentRenderTarget = renderer.getRenderTarget();\n        const currentRenderObjectFunction = renderer.getRenderObjectFunction();\n        renderer.setRenderObjectFunction((object, ...params)=>{\n            if (object.castShadow === true) renderer.renderObject(object, ...params);\n        });\n        renderer.setRenderTarget(rtt);\n        renderer.render(scene, light.shadow.camera);\n        renderer.setRenderTarget(currentRenderTarget);\n        renderer.setRenderObjectFunction(currentRenderObjectFunction);\n        scene.overrideMaterial = currentOverrideMaterial;\n    }\n    disposeShadow() {\n        this.rtt.dispose();\n        this.shadowNode = null;\n        this.rtt = null;\n        this.colorNode = this._defaultColorNode;\n    }\n    updateBefore(frame) {\n        const { light: light } = this;\n        if (light.castShadow) this.updateShadow(frame);\n    }\n    update() {\n        const { light: light } = this;\n        this.color.copy(light.color).multiplyScalar(light.intensity);\n    }\n}\nvar $bb48a619ccab5421$export$2e2bcd8739ae039 = $bb48a619ccab5421$var$AnalyticLightNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"AnalyticLightNode\", $bb48a619ccab5421$var$AnalyticLightNode);\n\n\n\nconst $78e340fa4839c21a$var$LightNodes = new WeakMap();\nconst $78e340fa4839c21a$var$sortLights = (lights)=>{\n    return lights.sort((a, b)=>a.id - b.id);\n};\nclass $78e340fa4839c21a$var$LightsNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(lightNodes = []){\n        super(\"vec3\");\n        this.totalDiffuseNode = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"totalDiffuse\");\n        this.totalSpecularNode = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"totalSpecular\");\n        this.outgoingLightNode = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"outgoingLight\");\n        this.lightNodes = lightNodes;\n        this._hash = null;\n    }\n    get hasLight() {\n        return this.lightNodes.length > 0;\n    }\n    getHash() {\n        if (this._hash === null) {\n            const hash = [];\n            for (const lightNode of this.lightNodes)hash.push(lightNode.getHash());\n            this._hash = \"lights-\" + hash.join(\",\");\n        }\n        return this._hash;\n    }\n    setup(builder) {\n        const context = builder.context;\n        const lightingModel = context.lightingModel;\n        let outgoingLightNode = this.outgoingLightNode;\n        if (lightingModel) {\n            const { lightNodes: lightNodes, totalDiffuseNode: totalDiffuseNode, totalSpecularNode: totalSpecularNode } = this;\n            context.outgoingLight = outgoingLightNode;\n            const stack = builder.addStack();\n            //\n            lightingModel.start(context, stack, builder);\n            // lights\n            for (const lightNode of lightNodes)lightNode.build(builder);\n            //\n            lightingModel.indirectDiffuse(context, stack, builder);\n            lightingModel.indirectSpecular(context, stack, builder);\n            lightingModel.ambientOcclusion(context, stack, builder);\n            //\n            const { backdrop: backdrop, backdropAlpha: backdropAlpha } = context;\n            const { directDiffuse: directDiffuse, directSpecular: directSpecular, indirectDiffuse: indirectDiffuse, indirectSpecular: indirectSpecular } = context.reflectedLight;\n            let totalDiffuse = directDiffuse.add(indirectDiffuse);\n            if (backdrop !== null) totalDiffuse = (0, $64e573acaa48d904$export$9100789c9d999364)(backdropAlpha !== null ? backdropAlpha.mix(totalDiffuse, backdrop) : backdrop);\n            totalDiffuseNode.assign(totalDiffuse);\n            totalSpecularNode.assign(directSpecular.add(indirectSpecular));\n            outgoingLightNode.assign(totalDiffuseNode.add(totalSpecularNode));\n            //\n            lightingModel.finish(context, stack, builder);\n            //\n            outgoingLightNode = outgoingLightNode.bypass(builder.removeStack());\n        }\n        return outgoingLightNode;\n    }\n    _getLightNodeById(id) {\n        for (const lightNode of this.lightNodes){\n            if (lightNode.isAnalyticLightNode && lightNode.light.id === id) return lightNode;\n        }\n        return null;\n    }\n    fromLights(lights = []) {\n        const lightNodes = [];\n        lights = $78e340fa4839c21a$var$sortLights(lights);\n        for (const light of lights){\n            let lightNode = this._getLightNodeById(light.id);\n            if (lightNode === null) {\n                const lightClass = light.constructor;\n                const lightNodeClass = $78e340fa4839c21a$var$LightNodes.has(lightClass) ? $78e340fa4839c21a$var$LightNodes.get(lightClass) : (0, $bb48a619ccab5421$export$2e2bcd8739ae039);\n                lightNode = (0, $64e573acaa48d904$export$e97474e17004dd41)(new lightNodeClass(light));\n            }\n            lightNodes.push(lightNode);\n        }\n        this.lightNodes = lightNodes;\n        this._hash = null;\n        return this;\n    }\n}\nvar $78e340fa4839c21a$export$2e2bcd8739ae039 = $78e340fa4839c21a$var$LightsNode;\nconst $78e340fa4839c21a$export$7c1fce12d7eeb101 = (lights)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $78e340fa4839c21a$var$LightsNode().fromLights(lights));\nconst $78e340fa4839c21a$export$d54a00e491588ed2 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($78e340fa4839c21a$var$LightsNode);\nfunction $78e340fa4839c21a$export$505493ddf8b9d5d8(lightClass, lightNodeClass) {\n    if ($78e340fa4839c21a$var$LightNodes.has(lightClass)) {\n        console.warn(`Redefinition of light node ${lightNodeClass.type}`);\n        return;\n    }\n    if (typeof lightClass !== \"function\") throw new Error(`Light ${lightClass.name} is not a class`);\n    if (typeof lightNodeClass !== \"function\" || !lightNodeClass.type) throw new Error(`Light node ${lightNodeClass.type} is not a class`);\n    $78e340fa4839c21a$var$LightNodes.set(lightClass, lightNodeClass);\n}\n\n\n\n\n\n\nclass $0a5d54aad75d785f$var$AONode extends (0, $b355d587e7d0ea8b$export$2e2bcd8739ae039) {\n    constructor(aoNode = null){\n        super();\n        this.aoNode = aoNode;\n    }\n    setup(builder) {\n        const aoIntensity = 1;\n        const aoNode = this.aoNode.x.sub(1.0).mul(aoIntensity).add(1.0);\n        builder.context.ambientOcclusion.mulAssign(aoNode);\n    }\n}\nvar $0a5d54aad75d785f$export$2e2bcd8739ae039 = $0a5d54aad75d785f$var$AONode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"AONode\", $0a5d54aad75d785f$var$AONode);\n\n\n\n\n\nclass $013987772ea5ca77$var$LightingContextNode extends (0, $6c10098160fcd7b9$export$2e2bcd8739ae039) {\n    constructor(node, lightingModel = null, backdropNode = null, backdropAlphaNode = null){\n        super(node);\n        this.lightingModel = lightingModel;\n        this.backdropNode = backdropNode;\n        this.backdropAlphaNode = backdropAlphaNode;\n        this._context = null;\n    }\n    getContext() {\n        const { backdropNode: backdropNode, backdropAlphaNode: backdropAlphaNode } = this;\n        const directDiffuse = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"directDiffuse\"), directSpecular = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"directSpecular\"), indirectDiffuse = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"indirectDiffuse\"), indirectSpecular = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"indirectSpecular\");\n        const reflectedLight = {\n            directDiffuse: directDiffuse,\n            directSpecular: directSpecular,\n            indirectDiffuse: indirectDiffuse,\n            indirectSpecular: indirectSpecular\n        };\n        const context = {\n            radiance: (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"radiance\"),\n            irradiance: (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"irradiance\"),\n            iblIrradiance: (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"iblIrradiance\"),\n            ambientOcclusion: (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1).temp(\"ambientOcclusion\"),\n            reflectedLight: reflectedLight,\n            backdrop: backdropNode,\n            backdropAlpha: backdropAlphaNode\n        };\n        return context;\n    }\n    setup(builder) {\n        this.context = this._context || (this._context = this.getContext());\n        this.context.lightingModel = this.lightingModel || builder.context.lightingModel;\n        return super.setup(builder);\n    }\n}\nvar $013987772ea5ca77$export$2e2bcd8739ae039 = $013987772ea5ca77$var$LightingContextNode;\nconst $013987772ea5ca77$export$90120f928c96f1a6 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($013987772ea5ca77$var$LightingContextNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"lightingContext\", $013987772ea5ca77$export$90120f928c96f1a6);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"LightingContextNode\", $013987772ea5ca77$var$LightingContextNode);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $ab000a4873a702a9$var$CondNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(condNode, ifNode, elseNode = null){\n        super();\n        this.condNode = condNode;\n        this.ifNode = ifNode;\n        this.elseNode = elseNode;\n    }\n    getNodeType(builder) {\n        const ifType = this.ifNode.getNodeType(builder);\n        if (this.elseNode !== null) {\n            const elseType = this.elseNode.getNodeType(builder);\n            if (builder.getTypeLength(elseType) > builder.getTypeLength(ifType)) return elseType;\n        }\n        return ifType;\n    }\n    generate(builder, output) {\n        const type = this.getNodeType(builder);\n        const context = {\n            tempWrite: false\n        };\n        const nodeData = builder.getDataFromNode(this);\n        if (nodeData.nodeProperty !== undefined) return nodeData.nodeProperty;\n        const { ifNode: ifNode, elseNode: elseNode } = this;\n        const needsOutput = output !== \"void\";\n        const nodeProperty = needsOutput ? (0, $39f1d8052e434d46$export$d541bacb2bda4494)(type).build(builder) : \"\";\n        nodeData.nodeProperty = nodeProperty;\n        const nodeSnippet = (0, $6c10098160fcd7b9$export$a078c61943f9dbbe)(this.condNode /*, context*/ ).build(builder, \"bool\");\n        builder.addFlowCode(`\\n${builder.tab}if ( ${nodeSnippet} ) {\\n\\n`).addFlowTab();\n        let ifSnippet = (0, $6c10098160fcd7b9$export$a078c61943f9dbbe)(ifNode, context).build(builder, type);\n        if (ifSnippet) {\n            if (needsOutput) ifSnippet = nodeProperty + \" = \" + ifSnippet + \";\";\n            else ifSnippet = \"return \" + ifSnippet + \";\";\n        }\n        builder.removeFlowTab().addFlowCode(builder.tab + \"\t\" + ifSnippet + \"\\n\\n\" + builder.tab + \"}\");\n        if (elseNode !== null) {\n            builder.addFlowCode(\" else {\\n\\n\").addFlowTab();\n            let elseSnippet = (0, $6c10098160fcd7b9$export$a078c61943f9dbbe)(elseNode, context).build(builder, type);\n            if (elseSnippet) {\n                if (needsOutput) elseSnippet = nodeProperty + \" = \" + elseSnippet + \";\";\n                else elseSnippet = \"return \" + elseSnippet + \";\";\n            }\n            builder.removeFlowTab().addFlowCode(builder.tab + \"\t\" + elseSnippet + \"\\n\\n\" + builder.tab + \"}\\n\\n\");\n        } else builder.addFlowCode(\"\\n\\n\");\n        return builder.format(nodeProperty, type, output);\n    }\n}\nvar $ab000a4873a702a9$export$2e2bcd8739ae039 = $ab000a4873a702a9$var$CondNode;\nconst $ab000a4873a702a9$export$7ffafceb12143143 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($ab000a4873a702a9$var$CondNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"cond\", $ab000a4873a702a9$export$7ffafceb12143143);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"CondNode\", $ab000a4873a702a9$var$CondNode);\n\n\n\n// These defines must match with PMREMGenerator\nconst $e5ab6d927267d03a$var$cubeUV_r0 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.0);\nconst $e5ab6d927267d03a$var$cubeUV_m0 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(-2);\nconst $e5ab6d927267d03a$var$cubeUV_r1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.8);\nconst $e5ab6d927267d03a$var$cubeUV_m1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(-1);\nconst $e5ab6d927267d03a$var$cubeUV_r4 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.4);\nconst $e5ab6d927267d03a$var$cubeUV_m4 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(2.0);\nconst $e5ab6d927267d03a$var$cubeUV_r5 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.305);\nconst $e5ab6d927267d03a$var$cubeUV_m5 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(3.0);\nconst $e5ab6d927267d03a$var$cubeUV_r6 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.21);\nconst $e5ab6d927267d03a$var$cubeUV_m6 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(4.0);\nconst $e5ab6d927267d03a$var$cubeUV_minMipLevel = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(4.0);\nconst $e5ab6d927267d03a$var$cubeUV_minTileSize = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(16.0);\n// These shader functions convert between the UV coordinates of a single face of\n// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n// sampling a textureCube (not generally normalized ).\nconst $e5ab6d927267d03a$var$getFace = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([direction])=>{\n    const absDirection = (0, $64e573acaa48d904$export$9100789c9d999364)((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(direction)).toVar();\n    const face = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(-1).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(absDirection.x.greaterThan(absDirection.z), ()=>{\n        (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(absDirection.x.greaterThan(absDirection.y), ()=>{\n            face.assign((0, $ab000a4873a702a9$export$7ffafceb12143143)(direction.x.greaterThan(0.0), 0.0, 3.0));\n        }).else(()=>{\n            face.assign((0, $ab000a4873a702a9$export$7ffafceb12143143)(direction.y.greaterThan(0.0), 1.0, 4.0));\n        });\n    }).else(()=>{\n        (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(absDirection.z.greaterThan(absDirection.y), ()=>{\n            face.assign((0, $ab000a4873a702a9$export$7ffafceb12143143)(direction.z.greaterThan(0.0), 2.0, 5.0));\n        }).else(()=>{\n            face.assign((0, $ab000a4873a702a9$export$7ffafceb12143143)(direction.y.greaterThan(0.0), 1.0, 4.0));\n        });\n    });\n    return face;\n}).setLayout({\n    name: \"getFace\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"direction\",\n            type: \"vec3\"\n        }\n    ]\n});\n// RH coordinate system; PMREM face-indexing convention\nconst $e5ab6d927267d03a$var$getUV = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([direction, face])=>{\n    const uv = (0, $64e573acaa48d904$export$e9830bc863290a54)().toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(face.equal(0.0), ()=>{\n        uv.assign((0, $64e573acaa48d904$export$e9830bc863290a54)(direction.z, direction.y).div((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(direction.x))); // pos x\n    }).elseif(face.equal(1.0), ()=>{\n        uv.assign((0, $64e573acaa48d904$export$e9830bc863290a54)(direction.x.negate(), direction.z.negate()).div((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(direction.y))); // pos y\n    }).elseif(face.equal(2.0), ()=>{\n        uv.assign((0, $64e573acaa48d904$export$e9830bc863290a54)(direction.x.negate(), direction.y).div((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(direction.z))); // pos z\n    }).elseif(face.equal(3.0), ()=>{\n        uv.assign((0, $64e573acaa48d904$export$e9830bc863290a54)(direction.z.negate(), direction.y).div((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(direction.x))); // neg x\n    }).elseif(face.equal(4.0), ()=>{\n        uv.assign((0, $64e573acaa48d904$export$e9830bc863290a54)(direction.x.negate(), direction.z).div((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(direction.y))); // neg y\n    }).else(()=>{\n        uv.assign((0, $64e573acaa48d904$export$e9830bc863290a54)(direction.x, direction.y).div((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(direction.z))); // neg z\n    });\n    return (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(0.5, uv.add(1.0));\n}).setLayout({\n    name: \"getUV\",\n    type: \"vec2\",\n    inputs: [\n        {\n            name: \"direction\",\n            type: \"vec3\"\n        },\n        {\n            name: \"face\",\n            type: \"float\"\n        }\n    ]\n});\nconst $e5ab6d927267d03a$var$roughnessToMip = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([roughness])=>{\n    const mip = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.0).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(roughness.greaterThanEqual($e5ab6d927267d03a$var$cubeUV_r1), ()=>{\n        mip.assign($e5ab6d927267d03a$var$cubeUV_r0.sub(roughness).mul($e5ab6d927267d03a$var$cubeUV_m1.sub($e5ab6d927267d03a$var$cubeUV_m0)).div($e5ab6d927267d03a$var$cubeUV_r0.sub($e5ab6d927267d03a$var$cubeUV_r1)).add($e5ab6d927267d03a$var$cubeUV_m0));\n    }).elseif(roughness.greaterThanEqual($e5ab6d927267d03a$var$cubeUV_r4), ()=>{\n        mip.assign($e5ab6d927267d03a$var$cubeUV_r1.sub(roughness).mul($e5ab6d927267d03a$var$cubeUV_m4.sub($e5ab6d927267d03a$var$cubeUV_m1)).div($e5ab6d927267d03a$var$cubeUV_r1.sub($e5ab6d927267d03a$var$cubeUV_r4)).add($e5ab6d927267d03a$var$cubeUV_m1));\n    }).elseif(roughness.greaterThanEqual($e5ab6d927267d03a$var$cubeUV_r5), ()=>{\n        mip.assign($e5ab6d927267d03a$var$cubeUV_r4.sub(roughness).mul($e5ab6d927267d03a$var$cubeUV_m5.sub($e5ab6d927267d03a$var$cubeUV_m4)).div($e5ab6d927267d03a$var$cubeUV_r4.sub($e5ab6d927267d03a$var$cubeUV_r5)).add($e5ab6d927267d03a$var$cubeUV_m4));\n    }).elseif(roughness.greaterThanEqual($e5ab6d927267d03a$var$cubeUV_r6), ()=>{\n        mip.assign($e5ab6d927267d03a$var$cubeUV_r5.sub(roughness).mul($e5ab6d927267d03a$var$cubeUV_m6.sub($e5ab6d927267d03a$var$cubeUV_m5)).div($e5ab6d927267d03a$var$cubeUV_r5.sub($e5ab6d927267d03a$var$cubeUV_r6)).add($e5ab6d927267d03a$var$cubeUV_m5));\n    }).else(()=>{\n        mip.assign((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(-2).mul((0, $4b9f12ce87d17074$export$b9fae0bba9d9094d)((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(1.16, roughness)))); // 1.16 = 1.79^0.25\n    });\n    return mip;\n}).setLayout({\n    name: \"roughnessToMip\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"roughness\",\n            type: \"float\"\n        }\n    ]\n});\nconst $e5ab6d927267d03a$export$fcce7887255d1c69 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([uv_immutable, face])=>{\n    const uv = uv_immutable.toVar();\n    uv.assign((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(2.0, uv).sub(1.0));\n    const direction = (0, $64e573acaa48d904$export$9100789c9d999364)(uv, 1.0).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(face.equal(0.0), ()=>{\n        direction.assign(direction.zyx); // ( 1, v, u ) pos x\n    }).elseif(face.equal(1.0), ()=>{\n        direction.assign(direction.xzy);\n        direction.xz.mulAssign(-1); // ( -u, 1, -v ) pos y\n    }).elseif(face.equal(2.0), ()=>{\n        direction.x.mulAssign(-1); // ( -u, v, 1 ) pos z\n    }).elseif(face.equal(3.0), ()=>{\n        direction.assign(direction.zyx);\n        direction.xz.mulAssign(-1); // ( -1, v, -u ) neg x\n    }).elseif(face.equal(4.0), ()=>{\n        direction.assign(direction.xzy);\n        direction.xy.mulAssign(-1); // ( -u, -1, v ) neg y\n    }).elseif(face.equal(5.0), ()=>{\n        direction.z.mulAssign(-1); // ( u, v, -1 ) neg zS\n    });\n    return direction;\n}).setLayout({\n    name: \"getDirection\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"uv\",\n            type: \"vec2\"\n        },\n        {\n            name: \"face\",\n            type: \"float\"\n        }\n    ]\n});\nconst $e5ab6d927267d03a$export$4c2c653e762aa352 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([envMap, sampleDir_immutable, roughness_immutable, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP])=>{\n    const roughness = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(roughness_immutable);\n    const sampleDir = (0, $64e573acaa48d904$export$9100789c9d999364)(sampleDir_immutable);\n    const mip = (0, $4b9f12ce87d17074$export$7d15b64cf5a3a4c4)($e5ab6d927267d03a$var$roughnessToMip(roughness), $e5ab6d927267d03a$var$cubeUV_m0, CUBEUV_MAX_MIP);\n    const mipF = (0, $4b9f12ce87d17074$export$a57bfe0eb79af278)(mip);\n    const mipInt = (0, $4b9f12ce87d17074$export$a3fe094919f356fd)(mip);\n    const color0 = (0, $64e573acaa48d904$export$9100789c9d999364)($e5ab6d927267d03a$var$bilinearCubeUV(envMap, sampleDir, mipInt, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP)).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(mipF.notEqual(0.0), ()=>{\n        const color1 = (0, $64e573acaa48d904$export$9100789c9d999364)($e5ab6d927267d03a$var$bilinearCubeUV(envMap, sampleDir, mipInt.add(1.0), CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP)).toVar();\n        color0.assign((0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(color0, color1, mipF));\n    });\n    return color0;\n});\nconst $e5ab6d927267d03a$var$bilinearCubeUV = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([envMap, direction_immutable, mipInt_immutable, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP])=>{\n    const mipInt = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(mipInt_immutable).toVar();\n    const direction = (0, $64e573acaa48d904$export$9100789c9d999364)(direction_immutable);\n    const face = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($e5ab6d927267d03a$var$getFace(direction)).toVar();\n    const filterInt = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $4b9f12ce87d17074$export$8960430cfd85939f)($e5ab6d927267d03a$var$cubeUV_minMipLevel.sub(mipInt), 0.0)).toVar();\n    mipInt.assign((0, $4b9f12ce87d17074$export$8960430cfd85939f)(mipInt, $e5ab6d927267d03a$var$cubeUV_minMipLevel));\n    const faceSize = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $4b9f12ce87d17074$export$4edc262d3118e986)(mipInt)).toVar();\n    const uv = (0, $64e573acaa48d904$export$e9830bc863290a54)($e5ab6d927267d03a$var$getUV(direction, face).mul(faceSize.sub(2.0)).add(1.0)).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(face.greaterThan(2.0), ()=>{\n        uv.y.addAssign(faceSize);\n        face.subAssign(3.0);\n    });\n    uv.x.addAssign(face.mul(faceSize));\n    uv.x.addAssign(filterInt.mul((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(3.0, $e5ab6d927267d03a$var$cubeUV_minTileSize)));\n    uv.y.addAssign((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(4.0, (0, $4b9f12ce87d17074$export$4edc262d3118e986)(CUBEUV_MAX_MIP).sub(faceSize)));\n    uv.x.mulAssign(CUBEUV_TEXEL_WIDTH);\n    uv.y.mulAssign(CUBEUV_TEXEL_HEIGHT);\n    return envMap.uv(uv);\n});\nconst $e5ab6d927267d03a$var$getSample = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ envMap: envMap, mipInt: mipInt, outputDirection: outputDirection, theta: theta, axis: axis, CUBEUV_TEXEL_WIDTH: CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT: CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP: CUBEUV_MAX_MIP })=>{\n    const cosTheta = (0, $4b9f12ce87d17074$export$50d414a77b60d802)(theta);\n    // Rodrigues' axis-angle rotation\n    const sampleDirection = outputDirection.mul(cosTheta).add(axis.cross(outputDirection).mul((0, $4b9f12ce87d17074$export$5de3937cb4b592ed)(theta))).add(axis.mul(axis.dot(outputDirection).mul(cosTheta.oneMinus())));\n    return $e5ab6d927267d03a$var$bilinearCubeUV(envMap, sampleDirection, mipInt, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP);\n});\nconst $e5ab6d927267d03a$export$2cc7ff91bcacba5e = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ n: n, latitudinal: latitudinal, poleAxis: poleAxis, outputDirection: outputDirection, weights: weights, samples: samples, dTheta: dTheta, mipInt: mipInt, envMap: envMap, CUBEUV_TEXEL_WIDTH: CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT: CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP: CUBEUV_MAX_MIP })=>{\n    const axis = (0, $64e573acaa48d904$export$9100789c9d999364)((0, $ab000a4873a702a9$export$7ffafceb12143143)(latitudinal, poleAxis, (0, $4b9f12ce87d17074$export$bb646b20bb93d339)(poleAxis, outputDirection))).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)((0, $4b9f12ce87d17074$export$84bf76cd7afc7469)(axis.equals((0, $64e573acaa48d904$export$9100789c9d999364)(0.0))), ()=>{\n        axis.assign((0, $64e573acaa48d904$export$9100789c9d999364)(outputDirection.z, 0.0, outputDirection.x.negate()));\n    });\n    axis.assign((0, $4b9f12ce87d17074$export$a3295358bff77e)(axis));\n    const gl_FragColor = (0, $64e573acaa48d904$export$9100789c9d999364)().toVar();\n    gl_FragColor.addAssign(weights.element((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)).mul($e5ab6d927267d03a$var$getSample({\n        theta: 0.0,\n        axis: axis,\n        outputDirection: outputDirection,\n        mipInt: mipInt,\n        envMap: envMap,\n        CUBEUV_TEXEL_WIDTH: CUBEUV_TEXEL_WIDTH,\n        CUBEUV_TEXEL_HEIGHT: CUBEUV_TEXEL_HEIGHT,\n        CUBEUV_MAX_MIP: CUBEUV_MAX_MIP\n    })));\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n        end: n\n    }, ({ i: i })=>{\n        (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(i.greaterThanEqual(samples), ()=>{\n            (0, $477d263401558a8d$export$c88190a7f68b38c0)();\n        });\n        const theta = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(dTheta.mul((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(i))).toVar();\n        gl_FragColor.addAssign(weights.element(i).mul($e5ab6d927267d03a$var$getSample({\n            theta: theta.mul(-1),\n            axis: axis,\n            outputDirection: outputDirection,\n            mipInt: mipInt,\n            envMap: envMap,\n            CUBEUV_TEXEL_WIDTH: CUBEUV_TEXEL_WIDTH,\n            CUBEUV_TEXEL_HEIGHT: CUBEUV_TEXEL_HEIGHT,\n            CUBEUV_MAX_MIP: CUBEUV_MAX_MIP\n        })));\n        gl_FragColor.addAssign(weights.element(i).mul($e5ab6d927267d03a$var$getSample({\n            theta: theta,\n            axis: axis,\n            outputDirection: outputDirection,\n            mipInt: mipInt,\n            envMap: envMap,\n            CUBEUV_TEXEL_WIDTH: CUBEUV_TEXEL_WIDTH,\n            CUBEUV_TEXEL_HEIGHT: CUBEUV_TEXEL_HEIGHT,\n            CUBEUV_MAX_MIP: CUBEUV_MAX_MIP\n        })));\n    });\n    return (0, $64e573acaa48d904$export$6dba2a1f0d609415)(gl_FragColor, 1);\n});\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nlet $38a35b7c4918d3b0$var$_generator = null;\nconst $38a35b7c4918d3b0$var$_cache = new WeakMap();\nfunction $38a35b7c4918d3b0$var$_generateCubeUVSize(imageHeight) {\n    const maxMip = Math.log2(imageHeight) - 2;\n    const texelHeight = 1.0 / imageHeight;\n    const texelWidth = 1.0 / (3 * Math.max(Math.pow(2, maxMip), 112));\n    return {\n        texelWidth: texelWidth,\n        texelHeight: texelHeight,\n        maxMip: maxMip\n    };\n}\nfunction $38a35b7c4918d3b0$var$_getPMREMFromTexture(texture) {\n    let cacheTexture = $38a35b7c4918d3b0$var$_cache.get(texture);\n    const pmremVersion = cacheTexture !== undefined ? cacheTexture.pmremVersion : -1;\n    if (pmremVersion !== texture.pmremVersion) {\n        if (texture.isCubeTexture) {\n            if (texture.source.data.some((texture)=>texture === undefined)) throw new Error(\"PMREMNode: Undefined texture in CubeTexture. Use onLoad callback or async loader\");\n            cacheTexture = $38a35b7c4918d3b0$var$_generator.fromCubemap(texture, cacheTexture);\n        } else {\n            if (texture.image === undefined) throw new Error(\"PMREMNode: Undefined image in Texture. Use onLoad callback or async loader\");\n            cacheTexture = $38a35b7c4918d3b0$var$_generator.fromEquirectangular(texture, cacheTexture);\n        }\n        cacheTexture.pmremVersion = texture.pmremVersion;\n        $38a35b7c4918d3b0$var$_cache.set(texture, cacheTexture);\n    }\n    return cacheTexture.texture;\n}\nclass $38a35b7c4918d3b0$var$PMREMNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(value, uvNode = null, levelNode = null){\n        super(\"vec3\");\n        this._value = value;\n        this._pmrem = null;\n        this.uvNode = uvNode;\n        this.levelNode = levelNode;\n        this._generator = null;\n        this._texture = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(null);\n        this._width = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this._height = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this._maxMip = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER;\n    }\n    set value(value) {\n        this._value = value;\n        this._pmrem = null;\n    }\n    get value() {\n        return this._value;\n    }\n    updateFromTexture(texture) {\n        const cubeUVSize = $38a35b7c4918d3b0$var$_generateCubeUVSize(texture.image.height);\n        this._texture.value = texture;\n        this._width.value = cubeUVSize.texelWidth;\n        this._height.value = cubeUVSize.texelHeight;\n        this._maxMip.value = cubeUVSize.maxMip;\n    }\n    updateBefore() {\n        let pmrem = this._pmrem;\n        const pmremVersion = pmrem ? pmrem.pmremVersion : -1;\n        const texture = this._value;\n        if (pmremVersion !== texture.pmremVersion) {\n            if (texture.isPMREMTexture === true) pmrem = texture;\n            else pmrem = $38a35b7c4918d3b0$var$_getPMREMFromTexture(texture);\n            this._pmrem = pmrem;\n            this.updateFromTexture(pmrem);\n        }\n    }\n    setup(builder) {\n        if ($38a35b7c4918d3b0$var$_generator === null) $38a35b7c4918d3b0$var$_generator = builder.createPMREMGenerator();\n        //\n        this.updateBefore(builder);\n        //\n        let uvNode = this.uvNode;\n        if (uvNode === null && builder.context.getUV) uvNode = builder.context.getUV(this);\n        //\n        const texture = this.value;\n        if (builder.renderer.coordinateSystem === (0, $ilwiq.WebGLCoordinateSystem) && texture.isPMREMTexture !== true && texture.isRenderTargetTexture === true) uvNode = (0, $64e573acaa48d904$export$9100789c9d999364)(uvNode.x.negate(), uvNode.yz);\n        //\n        let levelNode = this.levelNode;\n        if (levelNode === null && builder.context.getTextureLevel) levelNode = builder.context.getTextureLevel(this);\n        //\n        return (0, $e5ab6d927267d03a$export$4c2c653e762aa352)(this._texture, uvNode, levelNode, this._width, this._height, this._maxMip);\n    }\n}\nconst $38a35b7c4918d3b0$export$7563f7aed5e67dc = (0, $64e573acaa48d904$export$60d11c6747b7deba)($38a35b7c4918d3b0$var$PMREMNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PMREMNode\", $38a35b7c4918d3b0$var$PMREMNode);\nvar $38a35b7c4918d3b0$export$2e2bcd8739ae039 = $38a35b7c4918d3b0$var$PMREMNode;\n\n\nconst $61f2742ccc5451d4$var$envNodeCache = new WeakMap();\nclass $61f2742ccc5451d4$var$EnvironmentNode extends (0, $b355d587e7d0ea8b$export$2e2bcd8739ae039) {\n    constructor(envNode = null){\n        super();\n        this.envNode = envNode;\n    }\n    setup(builder) {\n        let envNode = this.envNode;\n        if (envNode.isTextureNode) {\n            let cacheEnvNode = $61f2742ccc5451d4$var$envNodeCache.get(envNode.value);\n            if (cacheEnvNode === undefined) {\n                cacheEnvNode = (0, $38a35b7c4918d3b0$export$7563f7aed5e67dc)(envNode.value);\n                $61f2742ccc5451d4$var$envNodeCache.set(envNode.value, cacheEnvNode);\n            }\n            envNode = cacheEnvNode;\n        }\n        //\n        const envMap = builder.material.envMap;\n        const intensity = envMap ? (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"envMapIntensity\", \"float\", builder.material) : (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"environmentIntensity\", \"float\", builder.scene); // @TODO: Add materialEnvIntensity in MaterialNode\n        const radiance = (0, $6c10098160fcd7b9$export$a078c61943f9dbbe)(envNode, $61f2742ccc5451d4$var$createRadianceContext((0, $39f1d8052e434d46$export$df3004878062a594), (0, $b8bdffed4c803471$export$c58d63d09d102e3c))).mul(intensity);\n        const irradiance = (0, $6c10098160fcd7b9$export$a078c61943f9dbbe)(envNode, $61f2742ccc5451d4$var$createIrradianceContext((0, $b8bdffed4c803471$export$add3225664ac656e))).mul(Math.PI).mul(intensity);\n        const isolateRadiance = (0, $4c2179587a364d28$export$69a3209f1a06c04d)(radiance);\n        //\n        builder.context.radiance.addAssign(isolateRadiance);\n        builder.context.iblIrradiance.addAssign(irradiance);\n        //\n        const clearcoatRadiance = builder.context.lightingModel.clearcoatRadiance;\n        if (clearcoatRadiance) {\n            const clearcoatRadianceContext = (0, $6c10098160fcd7b9$export$a078c61943f9dbbe)(envNode, $61f2742ccc5451d4$var$createRadianceContext((0, $39f1d8052e434d46$export$2747d91296dfac86), (0, $b8bdffed4c803471$export$71a9f037ea1539e0))).mul(intensity);\n            const isolateClearcoatRadiance = (0, $4c2179587a364d28$export$69a3209f1a06c04d)(clearcoatRadianceContext);\n            clearcoatRadiance.addAssign(isolateClearcoatRadiance);\n        }\n    }\n}\nconst $61f2742ccc5451d4$var$createRadianceContext = (roughnessNode, normalViewNode)=>{\n    let reflectVec = null;\n    return {\n        getUV: ()=>{\n            if (reflectVec === null) {\n                reflectVec = (0, $f38f6f7a1974ae48$export$80de5077965297a8).negate().reflect(normalViewNode);\n                reflectVec = roughnessNode.mul(roughnessNode).mix(reflectVec, normalViewNode).normalize();\n                reflectVec = reflectVec.transformDirection((0, $bab16494dbba4b41$export$6f7d94c027189d78));\n            }\n            return reflectVec;\n        },\n        getTextureLevel: ()=>{\n            return roughnessNode;\n        }\n    };\n};\nconst $61f2742ccc5451d4$var$createIrradianceContext = (normalWorldNode)=>{\n    return {\n        getUV: ()=>{\n            return normalWorldNode;\n        },\n        getTextureLevel: ()=>{\n            return (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.0);\n        }\n    };\n};\nvar $61f2742ccc5451d4$export$2e2bcd8739ae039 = $61f2742ccc5451d4$var$EnvironmentNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"EnvironmentNode\", $61f2742ccc5451d4$var$EnvironmentNode);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nlet $5aad3d206b752601$var$resolution, $5aad3d206b752601$var$viewportResult;\nclass $5aad3d206b752601$var$ViewportNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope){\n        super();\n        this.scope = scope;\n        this.isViewportNode = true;\n    }\n    getNodeType() {\n        return this.scope === $5aad3d206b752601$var$ViewportNode.VIEWPORT ? \"vec4\" : \"vec2\";\n    }\n    getUpdateType() {\n        let updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).NONE;\n        if (this.scope === $5aad3d206b752601$var$ViewportNode.RESOLUTION || this.scope === $5aad3d206b752601$var$ViewportNode.VIEWPORT) updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME;\n        this.updateType = updateType;\n        return updateType;\n    }\n    update({ renderer: renderer }) {\n        if (this.scope === $5aad3d206b752601$var$ViewportNode.VIEWPORT) renderer.getViewport($5aad3d206b752601$var$viewportResult);\n        else renderer.getDrawingBufferSize($5aad3d206b752601$var$resolution);\n    }\n    setup() {\n        const scope = this.scope;\n        let output = null;\n        if (scope === $5aad3d206b752601$var$ViewportNode.RESOLUTION) output = (0, $5a2c5e11c304ade5$export$379455b567eff87d)($5aad3d206b752601$var$resolution || ($5aad3d206b752601$var$resolution = new (0, $ilwiq.Vector2)()));\n        else if (scope === $5aad3d206b752601$var$ViewportNode.VIEWPORT) output = (0, $5a2c5e11c304ade5$export$379455b567eff87d)($5aad3d206b752601$var$viewportResult || ($5aad3d206b752601$var$viewportResult = new (0, $ilwiq.Vector4)()));\n        else {\n            output = $5aad3d206b752601$export$fd654ba033f324f0.div($5aad3d206b752601$export$2f423b0da8fd0d65);\n            let outX = output.x;\n            let outY = output.y;\n            if (/bottom/i.test(scope)) outY = outY.oneMinus();\n            if (/right/i.test(scope)) outX = outX.oneMinus();\n            output = (0, $64e573acaa48d904$export$e9830bc863290a54)(outX, outY);\n        }\n        return output;\n    }\n    generate(builder) {\n        if (this.scope === $5aad3d206b752601$var$ViewportNode.COORDINATE) {\n            let coord = builder.getFragCoord();\n            if (builder.isFlipY()) {\n                // follow webgpu standards\n                const resolution = builder.getNodeProperties($5aad3d206b752601$export$2f423b0da8fd0d65).outputNode.build(builder);\n                coord = `${builder.getType(\"vec2\")}( ${coord}.x, ${resolution}.y - ${coord}.y )`;\n            }\n            return coord;\n        }\n        return super.generate(builder);\n    }\n}\n$5aad3d206b752601$var$ViewportNode.COORDINATE = \"coordinate\";\n$5aad3d206b752601$var$ViewportNode.RESOLUTION = \"resolution\";\n$5aad3d206b752601$var$ViewportNode.VIEWPORT = \"viewport\";\n$5aad3d206b752601$var$ViewportNode.TOP_LEFT = \"topLeft\";\n$5aad3d206b752601$var$ViewportNode.BOTTOM_LEFT = \"bottomLeft\";\n$5aad3d206b752601$var$ViewportNode.TOP_RIGHT = \"topRight\";\n$5aad3d206b752601$var$ViewportNode.BOTTOM_RIGHT = \"bottomRight\";\nvar $5aad3d206b752601$export$2e2bcd8739ae039 = $5aad3d206b752601$var$ViewportNode;\nconst $5aad3d206b752601$export$fd654ba033f324f0 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($5aad3d206b752601$var$ViewportNode, $5aad3d206b752601$var$ViewportNode.COORDINATE);\nconst $5aad3d206b752601$export$2f423b0da8fd0d65 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($5aad3d206b752601$var$ViewportNode, $5aad3d206b752601$var$ViewportNode.RESOLUTION);\nconst $5aad3d206b752601$export$d7b7311ec04a3e8f = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($5aad3d206b752601$var$ViewportNode, $5aad3d206b752601$var$ViewportNode.VIEWPORT);\nconst $5aad3d206b752601$export$76b08933cd505895 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($5aad3d206b752601$var$ViewportNode, $5aad3d206b752601$var$ViewportNode.TOP_LEFT);\nconst $5aad3d206b752601$export$e2d72b46aee7453c = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($5aad3d206b752601$var$ViewportNode, $5aad3d206b752601$var$ViewportNode.BOTTOM_LEFT);\nconst $5aad3d206b752601$export$7dd90851841f323c = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($5aad3d206b752601$var$ViewportNode, $5aad3d206b752601$var$ViewportNode.TOP_RIGHT);\nconst $5aad3d206b752601$export$49d602656fddc4e3 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($5aad3d206b752601$var$ViewportNode, $5aad3d206b752601$var$ViewportNode.BOTTOM_RIGHT);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ViewportNode\", $5aad3d206b752601$var$ViewportNode);\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $24ec004cbc0fcec7$var$_size = new (0, $ilwiq.Vector2)();\nclass $24ec004cbc0fcec7$var$ViewportTextureNode extends (0, $1f6ba41f58cce433$export$2e2bcd8739ae039) {\n    constructor(uvNode = (0, $5aad3d206b752601$export$76b08933cd505895), levelNode = null, framebufferTexture = null){\n        if (framebufferTexture === null) {\n            framebufferTexture = new (0, $ilwiq.FramebufferTexture)();\n            framebufferTexture.minFilter = (0, $ilwiq.LinearMipmapLinearFilter);\n        }\n        super(framebufferTexture, uvNode, levelNode);\n        this.generateMipmaps = false;\n        this.isOutputTextureNode = true;\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME;\n    }\n    updateBefore(frame) {\n        const renderer = frame.renderer;\n        renderer.getDrawingBufferSize($24ec004cbc0fcec7$var$_size);\n        //\n        const framebufferTexture = this.value;\n        if (framebufferTexture.image.width !== $24ec004cbc0fcec7$var$_size.width || framebufferTexture.image.height !== $24ec004cbc0fcec7$var$_size.height) {\n            framebufferTexture.image.width = $24ec004cbc0fcec7$var$_size.width;\n            framebufferTexture.image.height = $24ec004cbc0fcec7$var$_size.height;\n            framebufferTexture.needsUpdate = true;\n        }\n        //\n        const currentGenerateMipmaps = framebufferTexture.generateMipmaps;\n        framebufferTexture.generateMipmaps = this.generateMipmaps;\n        renderer.copyFramebufferToTexture(framebufferTexture);\n        framebufferTexture.generateMipmaps = currentGenerateMipmaps;\n    }\n    clone() {\n        return new this.constructor(this.uvNode, this.levelNode, this.value);\n    }\n}\nvar $24ec004cbc0fcec7$export$2e2bcd8739ae039 = $24ec004cbc0fcec7$var$ViewportTextureNode;\nconst $24ec004cbc0fcec7$export$e3866d20de3e3579 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($24ec004cbc0fcec7$var$ViewportTextureNode);\nconst $24ec004cbc0fcec7$export$e03dc40ba6105796 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($24ec004cbc0fcec7$var$ViewportTextureNode, null, null, {\n    generateMipmaps: true\n});\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"viewportTexture\", $24ec004cbc0fcec7$export$e3866d20de3e3579);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"viewportMipTexture\", $24ec004cbc0fcec7$export$e03dc40ba6105796);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ViewportTextureNode\", $24ec004cbc0fcec7$var$ViewportTextureNode);\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nlet $01887dc47366e57b$var$sharedDepthbuffer = null;\nclass $01887dc47366e57b$var$ViewportDepthTextureNode extends (0, $24ec004cbc0fcec7$export$2e2bcd8739ae039) {\n    constructor(uvNode = (0, $5aad3d206b752601$export$76b08933cd505895), levelNode = null){\n        if ($01887dc47366e57b$var$sharedDepthbuffer === null) $01887dc47366e57b$var$sharedDepthbuffer = new (0, $ilwiq.DepthTexture)();\n        super(uvNode, levelNode, $01887dc47366e57b$var$sharedDepthbuffer);\n    }\n}\nvar $01887dc47366e57b$export$2e2bcd8739ae039 = $01887dc47366e57b$var$ViewportDepthTextureNode;\nconst $01887dc47366e57b$export$8eb3800fd0750433 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($01887dc47366e57b$var$ViewportDepthTextureNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"viewportDepthTexture\", $01887dc47366e57b$export$8eb3800fd0750433);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ViewportDepthTextureNode\", $01887dc47366e57b$var$ViewportDepthTextureNode);\n\n\nclass $17aa36cef00f0046$var$ViewportDepthNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope, valueNode = null){\n        super(\"float\");\n        this.scope = scope;\n        this.valueNode = valueNode;\n        this.isViewportDepthNode = true;\n    }\n    generate(builder) {\n        const { scope: scope } = this;\n        if (scope === $17aa36cef00f0046$var$ViewportDepthNode.DEPTH_PIXEL) return builder.getFragDepth();\n        return super.generate(builder);\n    }\n    setup() {\n        const { scope: scope } = this;\n        let node = null;\n        if (scope === $17aa36cef00f0046$var$ViewportDepthNode.DEPTH) node = $17aa36cef00f0046$export$22f8344c678d1434((0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).z, (0, $bab16494dbba4b41$export$81bd96ee69286580), (0, $bab16494dbba4b41$export$21e5768aeb8c5c46));\n        else if (scope === $17aa36cef00f0046$var$ViewportDepthNode.DEPTH_TEXTURE) {\n            const texture = this.valueNode || (0, $01887dc47366e57b$export$8eb3800fd0750433)();\n            const viewZ = $17aa36cef00f0046$export$be58bb2e0c565f9d(texture, (0, $bab16494dbba4b41$export$81bd96ee69286580), (0, $bab16494dbba4b41$export$21e5768aeb8c5c46));\n            node = $17aa36cef00f0046$export$22f8344c678d1434(viewZ, (0, $bab16494dbba4b41$export$81bd96ee69286580), (0, $bab16494dbba4b41$export$21e5768aeb8c5c46));\n        } else if (scope === $17aa36cef00f0046$var$ViewportDepthNode.DEPTH_PIXEL) {\n            if (this.valueNode !== null) node = $17aa36cef00f0046$var$depthPixelBase().assign(this.valueNode);\n        }\n        return node;\n    }\n}\nconst $17aa36cef00f0046$export$22f8344c678d1434 = (viewZ, near, far)=>viewZ.add(near).div(near.sub(far));\nconst $17aa36cef00f0046$export$7c25d95f9b37ec81 = (depth, near, far)=>near.sub(far).mul(depth).sub(near);\nconst $17aa36cef00f0046$export$afe0ed824ab1a48c = (viewZ, near, far)=>near.add(viewZ).mul(far).div(near.sub(far).mul(viewZ));\nconst $17aa36cef00f0046$export$be58bb2e0c565f9d = (depth, near, far)=>near.mul(far).div(far.sub(near).mul(depth).sub(far));\n$17aa36cef00f0046$var$ViewportDepthNode.DEPTH = \"depth\";\n$17aa36cef00f0046$var$ViewportDepthNode.DEPTH_TEXTURE = \"depthTexture\";\n$17aa36cef00f0046$var$ViewportDepthNode.DEPTH_PIXEL = \"depthPixel\";\nvar $17aa36cef00f0046$export$2e2bcd8739ae039 = $17aa36cef00f0046$var$ViewportDepthNode;\nconst $17aa36cef00f0046$var$depthPixelBase = (0, $64e573acaa48d904$export$60d11c6747b7deba)($17aa36cef00f0046$var$ViewportDepthNode, $17aa36cef00f0046$var$ViewportDepthNode.DEPTH_PIXEL);\nconst $17aa36cef00f0046$export$b202ba015b5882cd = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($17aa36cef00f0046$var$ViewportDepthNode, $17aa36cef00f0046$var$ViewportDepthNode.DEPTH);\nconst $17aa36cef00f0046$export$173628e14a9bf873 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($17aa36cef00f0046$var$ViewportDepthNode, $17aa36cef00f0046$var$ViewportDepthNode.DEPTH_TEXTURE);\nconst $17aa36cef00f0046$export$69a1d6a4b34b43cb = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($17aa36cef00f0046$var$ViewportDepthNode, $17aa36cef00f0046$var$ViewportDepthNode.DEPTH_PIXEL);\n$17aa36cef00f0046$export$69a1d6a4b34b43cb.assign = (value)=>$17aa36cef00f0046$var$depthPixelBase(value);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ViewportDepthNode\", $17aa36cef00f0046$var$ViewportDepthNode);\n\n\n\n\n\n\n\n\n\n\nclass $a41fc910d761c6c9$var$ClippingNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $a41fc910d761c6c9$var$ClippingNode.DEFAULT){\n        super();\n        this.scope = scope;\n    }\n    setup(builder) {\n        super.setup(builder);\n        const clippingContext = builder.clippingContext;\n        const { localClipIntersection: localClipIntersection, localClippingCount: localClippingCount, globalClippingCount: globalClippingCount } = clippingContext;\n        const numClippingPlanes = globalClippingCount + localClippingCount;\n        const numUnionClippingPlanes = localClipIntersection ? numClippingPlanes - localClippingCount : numClippingPlanes;\n        if (this.scope === $a41fc910d761c6c9$var$ClippingNode.ALPHA_TO_COVERAGE) return this.setupAlphaToCoverage(clippingContext.planes, numClippingPlanes, numUnionClippingPlanes);\n        else return this.setupDefault(clippingContext.planes, numClippingPlanes, numUnionClippingPlanes);\n    }\n    setupAlphaToCoverage(planes, numClippingPlanes, numUnionClippingPlanes) {\n        return (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            const clippingPlanes = (0, $ba76a3875cbb82d8$export$dfbf0296e531b4e7)(planes);\n            const distanceToPlane = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"distanceToPlane\");\n            const distanceGradient = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"distanceToGradient\");\n            const clipOpacity = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"clipOpacity\");\n            clipOpacity.assign(1);\n            let plane;\n            (0, $477d263401558a8d$export$f9ef67375ddc185)(numUnionClippingPlanes, ({ i: i })=>{\n                plane = clippingPlanes.element(i);\n                distanceToPlane.assign((0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).dot(plane.xyz).negate().add(plane.w));\n                distanceGradient.assign(distanceToPlane.fwidth().div(2.0));\n                clipOpacity.mulAssign((0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(distanceGradient.negate(), distanceGradient, distanceToPlane));\n                clipOpacity.equal(0.0).discard();\n            });\n            if (numUnionClippingPlanes < numClippingPlanes) {\n                const unionClipOpacity = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"unionclipOpacity\");\n                unionClipOpacity.assign(1);\n                (0, $477d263401558a8d$export$f9ef67375ddc185)({\n                    start: numUnionClippingPlanes,\n                    end: numClippingPlanes\n                }, ({ i: i })=>{\n                    plane = clippingPlanes.element(i);\n                    distanceToPlane.assign((0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).dot(plane.xyz).negate().add(plane.w));\n                    distanceGradient.assign(distanceToPlane.fwidth().div(2.0));\n                    unionClipOpacity.mulAssign((0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(distanceGradient.negate(), distanceGradient, distanceToPlane).oneMinus());\n                });\n                clipOpacity.mulAssign(unionClipOpacity.oneMinus());\n            }\n            (0, $39f1d8052e434d46$export$3a790f19f33c5176).a.mulAssign(clipOpacity);\n            (0, $39f1d8052e434d46$export$3a790f19f33c5176).a.equal(0.0).discard();\n        })();\n    }\n    setupDefault(planes, numClippingPlanes, numUnionClippingPlanes) {\n        return (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            const clippingPlanes = (0, $ba76a3875cbb82d8$export$dfbf0296e531b4e7)(planes);\n            let plane;\n            (0, $477d263401558a8d$export$f9ef67375ddc185)(numUnionClippingPlanes, ({ i: i })=>{\n                plane = clippingPlanes.element(i);\n                (0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).dot(plane.xyz).greaterThan(plane.w).discard();\n            });\n            if (numUnionClippingPlanes < numClippingPlanes) {\n                const clipped = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"bool\", \"clipped\");\n                clipped.assign(true);\n                (0, $477d263401558a8d$export$f9ef67375ddc185)({\n                    start: numUnionClippingPlanes,\n                    end: numClippingPlanes\n                }, ({ i: i })=>{\n                    plane = clippingPlanes.element(i);\n                    clipped.assign((0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).dot(plane.xyz).greaterThan(plane.w).and(clipped));\n                });\n                clipped.discard();\n            }\n        })();\n    }\n}\n$a41fc910d761c6c9$var$ClippingNode.ALPHA_TO_COVERAGE = \"alphaToCoverage\";\n$a41fc910d761c6c9$var$ClippingNode.DEFAULT = \"default\";\nvar $a41fc910d761c6c9$export$2e2bcd8739ae039 = $a41fc910d761c6c9$var$ClippingNode;\nconst $a41fc910d761c6c9$export$f25885999f2292e7 = ()=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $a41fc910d761c6c9$var$ClippingNode());\nconst $a41fc910d761c6c9$export$f57c0807fb97f806 = ()=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $a41fc910d761c6c9$var$ClippingNode($a41fc910d761c6c9$var$ClippingNode.ALPHA_TO_COVERAGE));\n\n\n\n\nclass $2be1b52cd1acf25a$var$FrontFacingNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(){\n        super(\"bool\");\n        this.isFrontFacingNode = true;\n    }\n    generate(builder) {\n        return builder.getFrontFacing();\n    }\n}\nvar $2be1b52cd1acf25a$export$2e2bcd8739ae039 = $2be1b52cd1acf25a$var$FrontFacingNode;\nconst $2be1b52cd1acf25a$export$89ffc7655cb9d79c = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($2be1b52cd1acf25a$var$FrontFacingNode);\nconst $2be1b52cd1acf25a$export$c2922972355d19f8 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($2be1b52cd1acf25a$export$89ffc7655cb9d79c).mul(2.0).sub(1.0);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"FrontFacingNode\", $2be1b52cd1acf25a$var$FrontFacingNode);\n\n\nconst $10ae8478bd7328e0$var$NodeMaterials = new Map();\nclass $10ae8478bd7328e0$var$NodeMaterial extends (0, $ilwiq.ShaderMaterial) {\n    constructor(){\n        super();\n        this.isNodeMaterial = true;\n        this.type = this.constructor.type;\n        this.forceSinglePass = false;\n        this.fog = true;\n        this.lights = true;\n        this.normals = true;\n        this.colorSpaced = true;\n        this.lightsNode = null;\n        this.envNode = null;\n        this.colorNode = null;\n        this.normalNode = null;\n        this.opacityNode = null;\n        this.backdropNode = null;\n        this.backdropAlphaNode = null;\n        this.alphaTestNode = null;\n        this.positionNode = null;\n        this.depthNode = null;\n        this.shadowNode = null;\n        this.outputNode = null;\n        this.fragmentNode = null;\n        this.vertexNode = null;\n    }\n    customProgramCacheKey() {\n        return this.type + (0, $0bf48deb29103875$export$611736262b635f8d)(this);\n    }\n    build(builder) {\n        this.setup(builder);\n    }\n    setup(builder) {\n        // < VERTEX STAGE >\n        builder.addStack();\n        builder.stack.outputNode = this.vertexNode || this.setupPosition(builder);\n        builder.addFlow(\"vertex\", builder.removeStack());\n        // < FRAGMENT STAGE >\n        builder.addStack();\n        let resultNode;\n        const clippingNode = this.setupClipping(builder);\n        if (this.fragmentNode === null) {\n            if (this.depthWrite === true) this.setupDepth(builder);\n            if (this.normals === true) this.setupNormal(builder);\n            this.setupDiffuseColor(builder);\n            this.setupVariants(builder);\n            const outgoingLightNode = this.setupLighting(builder);\n            if (clippingNode !== null) builder.stack.add(clippingNode);\n            // force unsigned floats - useful for RenderTargets\n            const basicOutput = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(outgoingLightNode, (0, $39f1d8052e434d46$export$3a790f19f33c5176).a).max(0);\n            resultNode = this.setupOutput(builder, basicOutput);\n            // OUTPUT NODE\n            (0, $39f1d8052e434d46$export$c789db2c85949867).assign(resultNode);\n            //\n            if (this.outputNode !== null) resultNode = this.outputNode;\n        } else resultNode = this.setupOutput(builder, this.fragmentNode);\n        builder.stack.outputNode = resultNode;\n        builder.addFlow(\"fragment\", builder.removeStack());\n    }\n    setupClipping(builder) {\n        const { globalClippingCount: globalClippingCount, localClippingCount: localClippingCount } = builder.clippingContext;\n        let result = null;\n        if (globalClippingCount || localClippingCount) {\n            if (this.alphaToCoverage) // to be added to flow when the color/alpha value has been determined\n            result = (0, $a41fc910d761c6c9$export$f57c0807fb97f806)();\n            else builder.stack.add((0, $a41fc910d761c6c9$export$f25885999f2292e7)());\n        }\n        return result;\n    }\n    setupDepth(builder) {\n        const { renderer: renderer } = builder;\n        // Depth\n        let depthNode = this.depthNode;\n        if (depthNode === null && renderer.logarithmicDepthBuffer === true) {\n            const fragDepth = (0, $52dd43a5825c6027$export$64e914589db9c49e)().w.add(1);\n            depthNode = fragDepth.log2().mul((0, $bab16494dbba4b41$export$df9a1a0941dbc754)).mul(0.5);\n        }\n        if (depthNode !== null) (0, $17aa36cef00f0046$export$69a1d6a4b34b43cb).assign(depthNode).append();\n    }\n    setupPosition(builder) {\n        const { object: object } = builder;\n        const geometry = object.geometry;\n        builder.addStack();\n        // Vertex\n        if (geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color) (0, $bddcd27df2123272$export$1b980db58c123a7f)(object).append();\n        if (object.isSkinnedMesh === true) (0, $d39f32f2d86e1d70$export$a1a5c22177b275e2)(object).append();\n        if (object.isBatchedMesh) (0, $6e65e07266b700c1$export$712ea50be43a7858)(object).append();\n        if (object.instanceMatrix && object.instanceMatrix.isInstancedBufferAttribute === true && builder.isAvailable(\"instance\") === true) (0, $23b32bee81a3f7cb$export$9544d5bb712b01ea)(object).append();\n        if (this.positionNode !== null) (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f).assign(this.positionNode);\n        const mvp = (0, $52dd43a5825c6027$export$64e914589db9c49e)();\n        builder.context.vertex = builder.removeStack();\n        builder.context.mvp = mvp;\n        return mvp;\n    }\n    setupDiffuseColor({ object: object, geometry: geometry }) {\n        let colorNode = this.colorNode ? (0, $64e573acaa48d904$export$6dba2a1f0d609415)(this.colorNode) : (0, $1b774580ee2e7ae3$export$852ee2194711a41a);\n        // VERTEX COLORS\n        if (this.vertexColors === true && geometry.hasAttribute(\"color\")) colorNode = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(colorNode.xyz.mul((0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"color\", \"vec3\")), colorNode.a);\n        // Instanced colors\n        if (object.instanceColor) {\n            const instanceColor = (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec3\", \"vInstanceColor\");\n            colorNode = instanceColor.mul(colorNode);\n        }\n        // COLOR\n        (0, $39f1d8052e434d46$export$3a790f19f33c5176).assign(colorNode);\n        // OPACITY\n        const opacityNode = this.opacityNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.opacityNode) : (0, $1b774580ee2e7ae3$export$a61065844a540229);\n        (0, $39f1d8052e434d46$export$3a790f19f33c5176).a.assign((0, $39f1d8052e434d46$export$3a790f19f33c5176).a.mul(opacityNode));\n        // ALPHA TEST\n        if (this.alphaTestNode !== null || this.alphaTest > 0) {\n            const alphaTestNode = this.alphaTestNode !== null ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.alphaTestNode) : (0, $1b774580ee2e7ae3$export$3030330267c62589);\n            (0, $39f1d8052e434d46$export$3a790f19f33c5176).a.lessThanEqual(alphaTestNode).discard();\n        }\n    }\n    setupVariants() {\n    // Interface function.\n    }\n    setupNormal() {\n        // NORMAL VIEW\n        if (this.flatShading === true) {\n            const normalNode = (0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).dFdx().cross((0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).dFdy()).normalize();\n            (0, $b8bdffed4c803471$export$c58d63d09d102e3c).assign(normalNode.mul((0, $2be1b52cd1acf25a$export$c2922972355d19f8)));\n        } else {\n            const normalNode = this.normalNode ? (0, $64e573acaa48d904$export$9100789c9d999364)(this.normalNode) : (0, $1b774580ee2e7ae3$export$c30da46075fba8bb);\n            (0, $b8bdffed4c803471$export$c58d63d09d102e3c).assign(normalNode.mul((0, $2be1b52cd1acf25a$export$c2922972355d19f8)));\n        }\n    }\n    getEnvNode(builder) {\n        let node = null;\n        if (this.envNode) node = this.envNode;\n        else if (this.envMap) node = this.envMap.isCubeTexture ? (0, $94a9a63327e9267a$export$f8948c996a1778e8)(this.envMap) : (0, $1f6ba41f58cce433$export$ab69073b3903a075)(this.envMap);\n        else if (builder.environmentNode) node = builder.environmentNode;\n        return node;\n    }\n    setupLights(builder) {\n        const envNode = this.getEnvNode(builder);\n        //\n        const materialLightsNode = [];\n        if (envNode) materialLightsNode.push(new (0, $61f2742ccc5451d4$export$2e2bcd8739ae039)(envNode));\n        if (builder.material.aoMap) materialLightsNode.push(new (0, $0a5d54aad75d785f$export$2e2bcd8739ae039)((0, $1f6ba41f58cce433$export$ab69073b3903a075)(builder.material.aoMap)));\n        let lightsN = this.lightsNode || builder.lightsNode;\n        if (materialLightsNode.length > 0) lightsN = (0, $78e340fa4839c21a$export$d54a00e491588ed2)([\n            ...lightsN.lightNodes,\n            ...materialLightsNode\n        ]);\n        return lightsN;\n    }\n    setupLightingModel() {\n    // Interface function.\n    }\n    setupLighting(builder) {\n        const { material: material } = builder;\n        const { backdropNode: backdropNode, backdropAlphaNode: backdropAlphaNode, emissiveNode: emissiveNode } = this;\n        // OUTGOING LIGHT\n        const lights = this.lights === true || this.lightsNode !== null;\n        const lightsNode = lights ? this.setupLights(builder) : null;\n        let outgoingLightNode = (0, $39f1d8052e434d46$export$3a790f19f33c5176).rgb;\n        if (lightsNode && lightsNode.hasLight !== false) {\n            const lightingModel = this.setupLightingModel(builder);\n            outgoingLightNode = (0, $013987772ea5ca77$export$90120f928c96f1a6)(lightsNode, lightingModel, backdropNode, backdropAlphaNode);\n        } else if (backdropNode !== null) outgoingLightNode = (0, $64e573acaa48d904$export$9100789c9d999364)(backdropAlphaNode !== null ? (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(outgoingLightNode, backdropNode, backdropAlphaNode) : backdropNode);\n        // EMISSIVE\n        if (emissiveNode && emissiveNode.isNode === true || material.emissive && material.emissive.isColor === true) outgoingLightNode = outgoingLightNode.add((0, $64e573acaa48d904$export$9100789c9d999364)(emissiveNode ? emissiveNode : (0, $1b774580ee2e7ae3$export$7935949e0cf72a01)));\n        return outgoingLightNode;\n    }\n    setupOutput(builder, outputNode) {\n        const renderer = builder.renderer;\n        // FOG\n        if (this.fog === true) {\n            const fogNode = builder.fogNode;\n            if (fogNode) outputNode = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(fogNode.mix(outputNode.rgb, fogNode.colorNode), outputNode.a);\n        }\n        // TONE MAPPING\n        const toneMappingNode = builder.toneMappingNode;\n        if (this.toneMapped === true && toneMappingNode) outputNode = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(toneMappingNode.context({\n            color: outputNode.rgb\n        }), outputNode.a);\n        // ENCODING\n        if (this.colorSpaced === true) {\n            const outputColorSpace = renderer.currentColorSpace;\n            if (outputColorSpace !== (0, $ilwiq.LinearSRGBColorSpace) && outputColorSpace !== (0, $ilwiq.NoColorSpace)) outputNode = outputNode.linearToColorSpace(outputColorSpace);\n        }\n        return outputNode;\n    }\n    setDefaultValues(material) {\n        // This approach is to reuse the native refreshUniforms*\n        // and turn available the use of features like transmission and environment in core\n        for(const property in material){\n            const value = material[property];\n            if (this[property] === undefined) {\n                this[property] = value;\n                if (value && value.clone) this[property] = value.clone();\n            }\n        }\n        Object.assign(this.defines, material.defines);\n        const descriptors = Object.getOwnPropertyDescriptors(material.constructor.prototype);\n        for(const key in descriptors)if (Object.getOwnPropertyDescriptor(this.constructor.prototype, key) === undefined && descriptors[key].get !== undefined) Object.defineProperty(this.constructor.prototype, key, descriptors[key]);\n    }\n    toJSON(meta) {\n        const isRoot = meta === undefined || typeof meta === \"string\";\n        if (isRoot) meta = {\n            textures: {},\n            images: {},\n            nodes: {}\n        };\n        const data = (0, $ilwiq.Material).prototype.toJSON.call(this, meta);\n        const nodeChildren = (0, $0bf48deb29103875$export$1f1998cc3c6b56fb)(this);\n        data.inputNodes = {};\n        for (const { property: property, childNode: childNode } of nodeChildren)data.inputNodes[property] = childNode.toJSON(meta).uuid;\n        // TODO: Copied from Object3D.toJSON\n        function extractFromCache(cache) {\n            const values = [];\n            for(const key in cache){\n                const data = cache[key];\n                delete data.metadata;\n                values.push(data);\n            }\n            return values;\n        }\n        if (isRoot) {\n            const textures = extractFromCache(meta.textures);\n            const images = extractFromCache(meta.images);\n            const nodes = extractFromCache(meta.nodes);\n            if (textures.length > 0) data.textures = textures;\n            if (images.length > 0) data.images = images;\n            if (nodes.length > 0) data.nodes = nodes;\n        }\n        return data;\n    }\n    copy(source) {\n        this.lightsNode = source.lightsNode;\n        this.envNode = source.envNode;\n        this.colorNode = source.colorNode;\n        this.normalNode = source.normalNode;\n        this.opacityNode = source.opacityNode;\n        this.backdropNode = source.backdropNode;\n        this.backdropAlphaNode = source.backdropAlphaNode;\n        this.alphaTestNode = source.alphaTestNode;\n        this.positionNode = source.positionNode;\n        this.depthNode = source.depthNode;\n        this.shadowNode = source.shadowNode;\n        this.outputNode = source.outputNode;\n        this.fragmentNode = source.fragmentNode;\n        this.vertexNode = source.vertexNode;\n        return super.copy(source);\n    }\n    static fromMaterial(material) {\n        if (material.isNodeMaterial === true) return material;\n        const type = material.type.replace(\"Material\", \"NodeMaterial\");\n        const nodeMaterial = $10ae8478bd7328e0$export$c8ea147e614cf837(type);\n        if (nodeMaterial === undefined) throw new Error(`NodeMaterial: Material \"${material.type}\" is not compatible.`);\n        for(const key in material)nodeMaterial[key] = material[key];\n        return nodeMaterial;\n    }\n}\nvar $10ae8478bd7328e0$export$2e2bcd8739ae039 = $10ae8478bd7328e0$var$NodeMaterial;\nfunction $10ae8478bd7328e0$export$319f45b172b6f79c(type, nodeMaterial) {\n    if (typeof nodeMaterial !== \"function\" || !type) throw new Error(`Node material ${type} is not a class`);\n    if ($10ae8478bd7328e0$var$NodeMaterials.has(type)) {\n        console.warn(`Redefinition of node material ${type}`);\n        return;\n    }\n    $10ae8478bd7328e0$var$NodeMaterials.set(type, nodeMaterial);\n    nodeMaterial.type = type;\n}\nfunction $10ae8478bd7328e0$export$c8ea147e614cf837(type) {\n    const Material = $10ae8478bd7328e0$var$NodeMaterials.get(type);\n    if (Material !== undefined) return new Material();\n}\n$10ae8478bd7328e0$export$319f45b172b6f79c(\"NodeMaterial\", $10ae8478bd7328e0$var$NodeMaterial);\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = null){\n        this.name = name;\n        this.value = value;\n        this.boundary = 0; // used to build the uniform buffer according to the STD140 layout\n        this.itemSize = 0;\n        this.offset = 0; // this property is set by WebGPUUniformsGroup and marks the start position in the uniform buffer\n    }\n    setValue(value) {\n        this.value = value;\n    }\n    getValue() {\n        return this.value;\n    }\n}\nclass $4ff2987a5e240692$export$137d60c170b4e14b extends $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = 0){\n        super(name, value);\n        this.isFloatUniform = true;\n        this.boundary = 4;\n        this.itemSize = 1;\n    }\n}\nclass $4ff2987a5e240692$export$cfbfbe105938fa14 extends $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = new (0, $ilwiq.Vector2)()){\n        super(name, value);\n        this.isVector2Uniform = true;\n        this.boundary = 8;\n        this.itemSize = 2;\n    }\n}\nclass $4ff2987a5e240692$export$52c20e8dbc369cad extends $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = new (0, $ilwiq.Vector3)()){\n        super(name, value);\n        this.isVector3Uniform = true;\n        this.boundary = 16;\n        this.itemSize = 3;\n    }\n}\nclass $4ff2987a5e240692$export$3b613782c258f364 extends $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = new (0, $ilwiq.Vector4)()){\n        super(name, value);\n        this.isVector4Uniform = true;\n        this.boundary = 16;\n        this.itemSize = 4;\n    }\n}\nclass $4ff2987a5e240692$export$ac67f5f3f575305e extends $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = new (0, $ilwiq.Color)()){\n        super(name, value);\n        this.isColorUniform = true;\n        this.boundary = 16;\n        this.itemSize = 3;\n    }\n}\nclass $4ff2987a5e240692$export$771c521f0145cfab extends $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = new (0, $ilwiq.Matrix3)()){\n        super(name, value);\n        this.isMatrix3Uniform = true;\n        this.boundary = 48;\n        this.itemSize = 12;\n    }\n}\nclass $4ff2987a5e240692$export$a952a98a0882ab53 extends $4ff2987a5e240692$var$Uniform {\n    constructor(name, value = new (0, $ilwiq.Matrix4)()){\n        super(name, value);\n        this.isMatrix4Uniform = true;\n        this.boundary = 64;\n        this.itemSize = 16;\n    }\n}\n\n\nclass $0a34f66f574e1c54$export$e164324378876543 extends (0, $4ff2987a5e240692$export$137d60c170b4e14b) {\n    constructor(nodeUniform){\n        super(nodeUniform.name, nodeUniform.value);\n        this.nodeUniform = nodeUniform;\n    }\n    getValue() {\n        return this.nodeUniform.value;\n    }\n}\nclass $0a34f66f574e1c54$export$3e6626ee055e11ec extends (0, $4ff2987a5e240692$export$cfbfbe105938fa14) {\n    constructor(nodeUniform){\n        super(nodeUniform.name, nodeUniform.value);\n        this.nodeUniform = nodeUniform;\n    }\n    getValue() {\n        return this.nodeUniform.value;\n    }\n}\nclass $0a34f66f574e1c54$export$222550f4ad161b66 extends (0, $4ff2987a5e240692$export$52c20e8dbc369cad) {\n    constructor(nodeUniform){\n        super(nodeUniform.name, nodeUniform.value);\n        this.nodeUniform = nodeUniform;\n    }\n    getValue() {\n        return this.nodeUniform.value;\n    }\n}\nclass $0a34f66f574e1c54$export$2f5c35776b379101 extends (0, $4ff2987a5e240692$export$3b613782c258f364) {\n    constructor(nodeUniform){\n        super(nodeUniform.name, nodeUniform.value);\n        this.nodeUniform = nodeUniform;\n    }\n    getValue() {\n        return this.nodeUniform.value;\n    }\n}\nclass $0a34f66f574e1c54$export$d65b35d185d16645 extends (0, $4ff2987a5e240692$export$ac67f5f3f575305e) {\n    constructor(nodeUniform){\n        super(nodeUniform.name, nodeUniform.value);\n        this.nodeUniform = nodeUniform;\n    }\n    getValue() {\n        return this.nodeUniform.value;\n    }\n}\nclass $0a34f66f574e1c54$export$e04f01f73e1507d4 extends (0, $4ff2987a5e240692$export$771c521f0145cfab) {\n    constructor(nodeUniform){\n        super(nodeUniform.name, nodeUniform.value);\n        this.nodeUniform = nodeUniform;\n    }\n    getValue() {\n        return this.nodeUniform.value;\n    }\n}\nclass $0a34f66f574e1c54$export$9df310e837bed706 extends (0, $4ff2987a5e240692$export$a952a98a0882ab53) {\n    constructor(nodeUniform){\n        super(nodeUniform.name, nodeUniform.value);\n        this.nodeUniform = nodeUniform;\n    }\n    getValue() {\n        return this.nodeUniform.value;\n    }\n}\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\n\n\nclass $97025b15d9adcd1d$var$StackNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(parent = null){\n        super();\n        this.nodes = [];\n        this.outputNode = null;\n        this.parent = parent;\n        this._currentCond = null;\n        this.isStackNode = true;\n    }\n    getNodeType(builder) {\n        return this.outputNode ? this.outputNode.getNodeType(builder) : \"void\";\n    }\n    add(node) {\n        this.nodes.push(node);\n        return this;\n    }\n    if(boolNode, method) {\n        const methodNode = new (0, $64e573acaa48d904$export$7d95ef31865f68e8)(method);\n        this._currentCond = (0, $ab000a4873a702a9$export$7ffafceb12143143)(boolNode, methodNode);\n        return this.add(this._currentCond);\n    }\n    elseif(boolNode, method) {\n        const methodNode = new (0, $64e573acaa48d904$export$7d95ef31865f68e8)(method);\n        const ifNode = (0, $ab000a4873a702a9$export$7ffafceb12143143)(boolNode, methodNode);\n        this._currentCond.elseNode = ifNode;\n        this._currentCond = ifNode;\n        return this;\n    }\n    else(method) {\n        this._currentCond.elseNode = new (0, $64e573acaa48d904$export$7d95ef31865f68e8)(method);\n        return this;\n    }\n    build(builder, ...params) {\n        const previousStack = (0, $64e573acaa48d904$export$c3090653b26dfebd)();\n        (0, $64e573acaa48d904$export$50a78b1c198bcc62)(this);\n        for (const node of this.nodes)node.build(builder, \"void\");\n        (0, $64e573acaa48d904$export$50a78b1c198bcc62)(previousStack);\n        return this.outputNode ? this.outputNode.build(builder, ...params) : super.build(builder, ...params);\n    }\n}\nvar $97025b15d9adcd1d$export$2e2bcd8739ae039 = $97025b15d9adcd1d$var$StackNode;\nconst $97025b15d9adcd1d$export$a57ab32f40f83ea9 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($97025b15d9adcd1d$var$StackNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"StackNode\", $97025b15d9adcd1d$var$StackNode);\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\n\n\n\nclass $f53aca0b2c61faf5$var$EquirectUVNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(dirNode = (0, $f38f6f7a1974ae48$export$7a5e5a23009fd1a3)){\n        super(\"vec2\");\n        this.dirNode = dirNode;\n    }\n    setup() {\n        const dir = this.dirNode;\n        const u = dir.z.atan2(dir.x).mul(1 / (Math.PI * 2)).add(0.5);\n        const v = dir.y.clamp(-1, 1.0).asin().mul(1 / Math.PI).add(0.5);\n        return (0, $64e573acaa48d904$export$e9830bc863290a54)(u, v);\n    }\n}\nvar $f53aca0b2c61faf5$export$2e2bcd8739ae039 = $f53aca0b2c61faf5$var$EquirectUVNode;\nconst $f53aca0b2c61faf5$export$191de21f5bc44b98 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($f53aca0b2c61faf5$var$EquirectUVNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"EquirectUVNode\", $f53aca0b2c61faf5$var$EquirectUVNode);\n\n\n\n\n\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\nclass $34c81b11246753cb$var$CubeRenderTarget extends (0, $ilwiq.WebGLCubeRenderTarget) {\n    constructor(size = 1, options = {}){\n        super(size, options);\n        this.isCubeRenderTarget = true;\n    }\n    fromEquirectangularTexture(renderer, texture) {\n        const currentMinFilter = texture.minFilter;\n        const currentGenerateMipmaps = texture.generateMipmaps;\n        texture.generateMipmaps = true;\n        this.texture.type = texture.type;\n        this.texture.colorSpace = texture.colorSpace;\n        this.texture.generateMipmaps = texture.generateMipmaps;\n        this.texture.minFilter = texture.minFilter;\n        this.texture.magFilter = texture.magFilter;\n        const geometry = new (0, $ilwiq.BoxGeometry)(5, 5, 5);\n        const uvNode = (0, $f53aca0b2c61faf5$export$191de21f5bc44b98)((0, $f38f6f7a1974ae48$export$7a5e5a23009fd1a3));\n        const material = (0, $10ae8478bd7328e0$export$c8ea147e614cf837)(\"MeshBasicNodeMaterial\");\n        material.colorNode = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(texture, uvNode, 0);\n        material.side = (0, $ilwiq.BackSide);\n        material.blending = (0, $ilwiq.NoBlending);\n        const mesh = new (0, $ilwiq.Mesh)(geometry, material);\n        const scene = new (0, $ilwiq.Scene)();\n        scene.add(mesh);\n        // Avoid blurred poles\n        if (texture.minFilter === (0, $ilwiq.LinearMipmapLinearFilter)) texture.minFilter = (0, $ilwiq.LinearFilter);\n        const camera = new (0, $ilwiq.CubeCamera)(1, 10, this);\n        camera.update(renderer, scene);\n        texture.minFilter = currentMinFilter;\n        texture.currentGenerateMipmaps = currentGenerateMipmaps;\n        mesh.geometry.dispose();\n        mesh.material.dispose();\n        return this;\n    }\n}\nvar $34c81b11246753cb$export$2e2bcd8739ae039 = $34c81b11246753cb$var$CubeRenderTarget;\n\n\nclass $a8889764d60049e2$export$2e2bcd8739ae039 {\n    constructor(){\n        this.weakMap = new WeakMap();\n    }\n    get(keys) {\n        if (Array.isArray(keys)) {\n            let map = this.weakMap;\n            for(let i = 0; i < keys.length; i++){\n                map = map.get(keys[i]);\n                if (map === undefined) return undefined;\n            }\n            return map.get(keys[keys.length - 1]);\n        } else return super.get(keys);\n    }\n    set(keys, value) {\n        if (Array.isArray(keys)) {\n            let map = this.weakMap;\n            for(let i = 0; i < keys.length; i++){\n                const key = keys[i];\n                if (map.has(key) === false) map.set(key, new WeakMap());\n                map = map.get(key);\n            }\n            return map.set(keys[keys.length - 1], value);\n        } else return super.set(keys, value);\n    }\n    delete(keys) {\n        if (Array.isArray(keys)) {\n            let map = this.weakMap;\n            for(let i = 0; i < keys.length; i++){\n                map = map.get(keys[i]);\n                if (map === undefined) return false;\n            }\n            return map.delete(keys[keys.length - 1]);\n        } else return super.delete(keys);\n    }\n    dispose() {\n        this.weakMap.clear();\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $e9483120aa7e8353$var$LOD_MIN = 4;\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst $e9483120aa7e8353$var$EXTRA_LOD_SIGMA = [\n    0.125,\n    0.215,\n    0.35,\n    0.446,\n    0.526,\n    0.582\n];\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst $e9483120aa7e8353$var$MAX_SAMPLES = 20;\nconst $e9483120aa7e8353$var$_flatCamera = /*@__PURE__*/ new (0, $ilwiq.OrthographicCamera)(-1, 1, 1, -1, 0, 1);\nconst $e9483120aa7e8353$var$_cubeCamera = /*@__PURE__*/ new (0, $ilwiq.PerspectiveCamera)(90, 1);\nconst $e9483120aa7e8353$var$_clearColor = /*@__PURE__*/ new (0, $ilwiq.Color)();\nlet $e9483120aa7e8353$var$_oldTarget = null;\nlet $e9483120aa7e8353$var$_oldActiveCubeFace = 0;\nlet $e9483120aa7e8353$var$_oldActiveMipmapLevel = 0;\n// Golden Ratio\nconst $e9483120aa7e8353$var$PHI = (1 + Math.sqrt(5)) / 2;\nconst $e9483120aa7e8353$var$INV_PHI = 1 / $e9483120aa7e8353$var$PHI;\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst $e9483120aa7e8353$var$_axisDirections = [\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(1, 1, 1),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(-1, 1, 1),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(1, 1, -1),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(-1, 1, -1),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(0, $e9483120aa7e8353$var$PHI, $e9483120aa7e8353$var$INV_PHI),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(0, $e9483120aa7e8353$var$PHI, -$e9483120aa7e8353$var$INV_PHI),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)($e9483120aa7e8353$var$INV_PHI, 0, $e9483120aa7e8353$var$PHI),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(-$e9483120aa7e8353$var$INV_PHI, 0, $e9483120aa7e8353$var$PHI),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)($e9483120aa7e8353$var$PHI, $e9483120aa7e8353$var$INV_PHI, 0),\n    /*@__PURE__*/ new (0, $ilwiq.Vector3)(-$e9483120aa7e8353$var$PHI, $e9483120aa7e8353$var$INV_PHI, 0)\n];\n//\n// WebGPU Face indices\nconst $e9483120aa7e8353$var$_faceLib = [\n    3,\n    1,\n    5,\n    0,\n    4,\n    2\n];\nconst $e9483120aa7e8353$var$direction = (0, $e5ab6d927267d03a$export$fcce7887255d1c69)((0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"faceIndex\")).normalize();\nconst $e9483120aa7e8353$var$outputDirection = (0, $64e573acaa48d904$export$9100789c9d999364)($e9483120aa7e8353$var$direction.x, $e9483120aa7e8353$var$direction.y.negate(), $e9483120aa7e8353$var$direction.z);\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/ class $e9483120aa7e8353$var$PMREMGenerator {\n    constructor(renderer){\n        this._renderer = renderer;\n        this._pingPongRenderTarget = null;\n        this._lodMax = 0;\n        this._cubeSize = 0;\n        this._lodPlanes = [];\n        this._sizeLods = [];\n        this._sigmas = [];\n        this._lodMeshes = [];\n        this._blurMaterial = null;\n        this._cubemapMaterial = null;\n        this._equirectMaterial = null;\n        this._backgroundBox = null;\n    }\n    /**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */ fromScene(scene, sigma = 0, near = 0.1, far = 100) {\n        $e9483120aa7e8353$var$_oldTarget = this._renderer.getRenderTarget();\n        $e9483120aa7e8353$var$_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n        $e9483120aa7e8353$var$_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n        this._setSize(256);\n        const cubeUVRenderTarget = this._allocateTargets();\n        cubeUVRenderTarget.depthBuffer = true;\n        this._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n        if (sigma > 0) this._blur(cubeUVRenderTarget, 0, 0, sigma);\n        this._applyPMREM(cubeUVRenderTarget);\n        this._cleanup(cubeUVRenderTarget);\n        return cubeUVRenderTarget;\n    }\n    /**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */ fromEquirectangular(equirectangular, renderTarget = null) {\n        return this._fromTexture(equirectangular, renderTarget);\n    }\n    /**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */ fromCubemap(cubemap, renderTarget = null) {\n        return this._fromTexture(cubemap, renderTarget);\n    }\n    /**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */ compileCubemapShader() {\n        if (this._cubemapMaterial === null) {\n            this._cubemapMaterial = $e9483120aa7e8353$var$_getCubemapMaterial();\n            this._compileMaterial(this._cubemapMaterial);\n        }\n    }\n    /**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */ compileEquirectangularShader() {\n        if (this._equirectMaterial === null) {\n            this._equirectMaterial = $e9483120aa7e8353$var$_getEquirectMaterial();\n            this._compileMaterial(this._equirectMaterial);\n        }\n    }\n    /**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */ dispose() {\n        this._dispose();\n        if (this._cubemapMaterial !== null) this._cubemapMaterial.dispose();\n        if (this._equirectMaterial !== null) this._equirectMaterial.dispose();\n        if (this._backgroundBox !== null) {\n            this._backgroundBox.geometry.dispose();\n            this._backgroundBox.material.dispose();\n        }\n    }\n    // private interface\n    _setSize(cubeSize) {\n        this._lodMax = Math.floor(Math.log2(cubeSize));\n        this._cubeSize = Math.pow(2, this._lodMax);\n    }\n    _dispose() {\n        if (this._blurMaterial !== null) this._blurMaterial.dispose();\n        if (this._pingPongRenderTarget !== null) this._pingPongRenderTarget.dispose();\n        for(let i = 0; i < this._lodPlanes.length; i++)this._lodPlanes[i].dispose();\n    }\n    _cleanup(outputTarget) {\n        this._renderer.setRenderTarget($e9483120aa7e8353$var$_oldTarget, $e9483120aa7e8353$var$_oldActiveCubeFace, $e9483120aa7e8353$var$_oldActiveMipmapLevel);\n        outputTarget.scissorTest = false;\n        $e9483120aa7e8353$var$_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n    }\n    _fromTexture(texture, renderTarget) {\n        if (texture.mapping === (0, $ilwiq.CubeReflectionMapping) || texture.mapping === (0, $ilwiq.CubeRefractionMapping)) this._setSize(texture.image.length === 0 ? 16 : texture.image[0].width || texture.image[0].image.width);\n        else this._setSize(texture.image.width / 4);\n        $e9483120aa7e8353$var$_oldTarget = this._renderer.getRenderTarget();\n        $e9483120aa7e8353$var$_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n        $e9483120aa7e8353$var$_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n        const cubeUVRenderTarget = renderTarget || this._allocateTargets();\n        this._textureToCubeUV(texture, cubeUVRenderTarget);\n        this._applyPMREM(cubeUVRenderTarget);\n        this._cleanup(cubeUVRenderTarget);\n        return cubeUVRenderTarget;\n    }\n    _allocateTargets() {\n        const width = 3 * Math.max(this._cubeSize, 112);\n        const height = 4 * this._cubeSize;\n        const params = {\n            magFilter: (0, $ilwiq.LinearFilter),\n            minFilter: (0, $ilwiq.LinearFilter),\n            generateMipmaps: false,\n            type: (0, $ilwiq.HalfFloatType),\n            format: (0, $ilwiq.RGBAFormat),\n            colorSpace: (0, $ilwiq.LinearSRGBColorSpace)\n        };\n        const cubeUVRenderTarget = $e9483120aa7e8353$var$_createRenderTarget(width, height, params);\n        if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height) {\n            if (this._pingPongRenderTarget !== null) this._dispose();\n            this._pingPongRenderTarget = $e9483120aa7e8353$var$_createRenderTarget(width, height, params);\n            const { _lodMax: _lodMax } = this;\n            ({ sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas, lodMeshes: this._lodMeshes } = $e9483120aa7e8353$var$_createPlanes(_lodMax));\n            this._blurMaterial = $e9483120aa7e8353$var$_getBlurShader(_lodMax, width, height);\n        }\n        return cubeUVRenderTarget;\n    }\n    _compileMaterial(material) {\n        const tmpMesh = this._lodMeshes[0];\n        tmpMesh.material = material;\n        this._renderer.compile(tmpMesh, $e9483120aa7e8353$var$_flatCamera);\n    }\n    _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n        const cubeCamera = $e9483120aa7e8353$var$_cubeCamera;\n        cubeCamera.near = near;\n        cubeCamera.far = far;\n        // px, py, pz, nx, ny, nz\n        const upSign = [\n            -1,\n            1,\n            -1,\n            -1,\n            -1,\n            -1\n        ];\n        const forwardSign = [\n            1,\n            1,\n            1,\n            -1,\n            -1,\n            -1\n        ];\n        const renderer = this._renderer;\n        const originalAutoClear = renderer.autoClear;\n        const toneMapping = renderer.toneMapping;\n        renderer.getClearColor($e9483120aa7e8353$var$_clearColor);\n        renderer.toneMapping = (0, $ilwiq.NoToneMapping);\n        renderer.autoClear = false;\n        let backgroundBox = this._backgroundBox;\n        if (backgroundBox === null) {\n            const backgroundMaterial = new (0, $ilwiq.MeshBasicMaterial)({\n                name: \"PMREM.Background\",\n                side: (0, $ilwiq.BackSide),\n                depthWrite: false,\n                depthTest: false\n            });\n            backgroundBox = new (0, $ilwiq.Mesh)(new (0, $ilwiq.BoxGeometry)(), backgroundMaterial);\n        }\n        let useSolidColor = false;\n        const background = scene.background;\n        if (background) {\n            if (background.isColor) {\n                backgroundBox.material.color.copy(background);\n                scene.background = null;\n                useSolidColor = true;\n            }\n        } else {\n            backgroundBox.material.color.copy($e9483120aa7e8353$var$_clearColor);\n            useSolidColor = true;\n        }\n        renderer.setRenderTarget(cubeUVRenderTarget);\n        renderer.clear();\n        if (useSolidColor) renderer.render(backgroundBox, cubeCamera);\n        for(let i = 0; i < 6; i++){\n            const col = i % 3;\n            if (col === 0) {\n                cubeCamera.up.set(0, upSign[i], 0);\n                cubeCamera.lookAt(forwardSign[i], 0, 0);\n            } else if (col === 1) {\n                cubeCamera.up.set(0, 0, upSign[i]);\n                cubeCamera.lookAt(0, forwardSign[i], 0);\n            } else {\n                cubeCamera.up.set(0, upSign[i], 0);\n                cubeCamera.lookAt(0, 0, forwardSign[i]);\n            }\n            const size = this._cubeSize;\n            $e9483120aa7e8353$var$_setViewport(cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size);\n            renderer.render(scene, cubeCamera);\n        }\n        renderer.toneMapping = toneMapping;\n        renderer.autoClear = originalAutoClear;\n        scene.background = background;\n    }\n    _textureToCubeUV(texture, cubeUVRenderTarget) {\n        const renderer = this._renderer;\n        const isCubeTexture = texture.mapping === (0, $ilwiq.CubeReflectionMapping) || texture.mapping === (0, $ilwiq.CubeRefractionMapping);\n        if (isCubeTexture) {\n            if (this._cubemapMaterial === null) this._cubemapMaterial = $e9483120aa7e8353$var$_getCubemapMaterial(texture);\n        } else if (this._equirectMaterial === null) this._equirectMaterial = $e9483120aa7e8353$var$_getEquirectMaterial(texture);\n        const material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n        material.fragmentNode.value = texture;\n        const mesh = this._lodMeshes[0];\n        mesh.material = material;\n        const size = this._cubeSize;\n        $e9483120aa7e8353$var$_setViewport(cubeUVRenderTarget, 0, 0, 3 * size, 2 * size);\n        renderer.setRenderTarget(cubeUVRenderTarget);\n        renderer.render(mesh, $e9483120aa7e8353$var$_flatCamera);\n    }\n    _applyPMREM(cubeUVRenderTarget) {\n        const renderer = this._renderer;\n        const autoClear = renderer.autoClear;\n        renderer.autoClear = false;\n        for(let i = 1; i < this._lodPlanes.length; i++){\n            const sigma = Math.sqrt(this._sigmas[i] * this._sigmas[i] - this._sigmas[i - 1] * this._sigmas[i - 1]);\n            const poleAxis = $e9483120aa7e8353$var$_axisDirections[(i - 1) % $e9483120aa7e8353$var$_axisDirections.length];\n            this._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n        }\n        renderer.autoClear = autoClear;\n    }\n    /**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */ _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n        const pingPongRenderTarget = this._pingPongRenderTarget;\n        this._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, \"latitudinal\", poleAxis);\n        this._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, \"longitudinal\", poleAxis);\n    }\n    _halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n        const renderer = this._renderer;\n        const blurMaterial = this._blurMaterial;\n        if (direction !== \"latitudinal\" && direction !== \"longitudinal\") console.error(\"blur direction must be either latitudinal or longitudinal!\");\n        // Number of standard deviations at which to cut off the discrete approximation.\n        const STANDARD_DEVIATIONS = 3;\n        const blurMesh = this._lodMeshes[lodOut];\n        blurMesh.material = blurMaterial;\n        const blurUniforms = blurMaterial.uniforms;\n        const pixels = this._sizeLods[lodIn] - 1;\n        const radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * $e9483120aa7e8353$var$MAX_SAMPLES - 1);\n        const sigmaPixels = sigmaRadians / radiansPerPixel;\n        const samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : $e9483120aa7e8353$var$MAX_SAMPLES;\n        if (samples > $e9483120aa7e8353$var$MAX_SAMPLES) console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${$e9483120aa7e8353$var$MAX_SAMPLES}`);\n        const weights = [];\n        let sum = 0;\n        for(let i = 0; i < $e9483120aa7e8353$var$MAX_SAMPLES; ++i){\n            const x = i / sigmaPixels;\n            const weight = Math.exp(-x * x / 2);\n            weights.push(weight);\n            if (i === 0) sum += weight;\n            else if (i < samples) sum += 2 * weight;\n        }\n        for(let i = 0; i < weights.length; i++)weights[i] = weights[i] / sum;\n        targetIn.texture.frame = (targetIn.texture.frame || 0) + 1;\n        blurUniforms.envMap.value = targetIn.texture;\n        blurUniforms.samples.value = samples;\n        blurUniforms.weights.array = weights;\n        blurUniforms.latitudinal.value = direction === \"latitudinal\" ? 1 : 0;\n        if (poleAxis) blurUniforms.poleAxis.value = poleAxis;\n        const { _lodMax: _lodMax } = this;\n        blurUniforms.dTheta.value = radiansPerPixel;\n        blurUniforms.mipInt.value = _lodMax - lodIn;\n        const outputSize = this._sizeLods[lodOut];\n        const x = 3 * outputSize * (lodOut > _lodMax - $e9483120aa7e8353$var$LOD_MIN ? lodOut - _lodMax + $e9483120aa7e8353$var$LOD_MIN : 0);\n        const y = 4 * (this._cubeSize - outputSize);\n        $e9483120aa7e8353$var$_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n        renderer.setRenderTarget(targetOut);\n        renderer.render(blurMesh, $e9483120aa7e8353$var$_flatCamera);\n    }\n}\nfunction $e9483120aa7e8353$var$_createPlanes(lodMax) {\n    const lodPlanes = [];\n    const sizeLods = [];\n    const sigmas = [];\n    const lodMeshes = [];\n    let lod = lodMax;\n    const totalLods = lodMax - $e9483120aa7e8353$var$LOD_MIN + 1 + $e9483120aa7e8353$var$EXTRA_LOD_SIGMA.length;\n    for(let i = 0; i < totalLods; i++){\n        const sizeLod = Math.pow(2, lod);\n        sizeLods.push(sizeLod);\n        let sigma = 1.0 / sizeLod;\n        if (i > lodMax - $e9483120aa7e8353$var$LOD_MIN) sigma = $e9483120aa7e8353$var$EXTRA_LOD_SIGMA[i - lodMax + $e9483120aa7e8353$var$LOD_MIN - 1];\n        else if (i === 0) sigma = 0;\n        sigmas.push(sigma);\n        const texelSize = 1.0 / (sizeLod - 2);\n        const min = -texelSize;\n        const max = 1 + texelSize;\n        const uv1 = [\n            min,\n            min,\n            max,\n            min,\n            max,\n            max,\n            min,\n            min,\n            max,\n            max,\n            min,\n            max\n        ];\n        const cubeFaces = 6;\n        const vertices = 6;\n        const positionSize = 3;\n        const uvSize = 2;\n        const faceIndexSize = 1;\n        const position = new Float32Array(positionSize * vertices * cubeFaces);\n        const uv = new Float32Array(uvSize * vertices * cubeFaces);\n        const faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n        for(let face = 0; face < cubeFaces; face++){\n            const x = face % 3 * 2 / 3 - 1;\n            const y = face > 2 ? 0 : -1;\n            const coordinates = [\n                x,\n                y,\n                0,\n                x + 2 / 3,\n                y,\n                0,\n                x + 2 / 3,\n                y + 1,\n                0,\n                x,\n                y,\n                0,\n                x + 2 / 3,\n                y + 1,\n                0,\n                x,\n                y + 1,\n                0\n            ];\n            const faceIdx = $e9483120aa7e8353$var$_faceLib[face];\n            position.set(coordinates, positionSize * vertices * faceIdx);\n            uv.set(uv1, uvSize * vertices * faceIdx);\n            const fill = [\n                faceIdx,\n                faceIdx,\n                faceIdx,\n                faceIdx,\n                faceIdx,\n                faceIdx\n            ];\n            faceIndex.set(fill, faceIndexSize * vertices * faceIdx);\n        }\n        const planes = new (0, $ilwiq.BufferGeometry)();\n        planes.setAttribute(\"position\", new (0, $ilwiq.BufferAttribute)(position, positionSize));\n        planes.setAttribute(\"uv\", new (0, $ilwiq.BufferAttribute)(uv, uvSize));\n        planes.setAttribute(\"faceIndex\", new (0, $ilwiq.BufferAttribute)(faceIndex, faceIndexSize));\n        lodPlanes.push(planes);\n        lodMeshes.push(new (0, $ilwiq.Mesh)(planes, null));\n        if (lod > $e9483120aa7e8353$var$LOD_MIN) lod--;\n    }\n    return {\n        lodPlanes: lodPlanes,\n        sizeLods: sizeLods,\n        sigmas: sigmas,\n        lodMeshes: lodMeshes\n    };\n}\nfunction $e9483120aa7e8353$var$_createRenderTarget(width, height, params) {\n    const cubeUVRenderTarget = new (0, $ilwiq.RenderTarget)(width, height, params);\n    cubeUVRenderTarget.texture.mapping = (0, $ilwiq.CubeUVReflectionMapping);\n    cubeUVRenderTarget.texture.name = \"PMREM.cubeUv\";\n    cubeUVRenderTarget.texture.isPMREMTexture = true;\n    cubeUVRenderTarget.scissorTest = true;\n    return cubeUVRenderTarget;\n}\nfunction $e9483120aa7e8353$var$_setViewport(target, x, y, width, height) {\n    const viewY = target.height - height - y;\n    target.viewport.set(x, viewY, width, height);\n    target.scissor.set(x, viewY, width, height);\n}\nfunction $e9483120aa7e8353$var$_getMaterial() {\n    const material = new (0, $10ae8478bd7328e0$export$2e2bcd8739ae039)();\n    material.colorSpaced = false;\n    material.toneMapped = false;\n    material.depthTest = false;\n    material.depthWrite = false;\n    material.blending = (0, $ilwiq.NoBlending);\n    return material;\n}\nfunction $e9483120aa7e8353$var$_getBlurShader(lodMax, width, height) {\n    const weights = (0, $ba76a3875cbb82d8$export$dfbf0296e531b4e7)(new Array($e9483120aa7e8353$var$MAX_SAMPLES).fill(0));\n    const poleAxis = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(new (0, $ilwiq.Vector3)(0, 1, 0));\n    const dTheta = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n    const n = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($e9483120aa7e8353$var$MAX_SAMPLES);\n    const latitudinal = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0); // false, bool\n    const samples = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(1); // int\n    const envMap = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(null);\n    const mipInt = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0); // int\n    const CUBEUV_TEXEL_WIDTH = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1 / width);\n    const CUBEUV_TEXEL_HEIGHT = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1 / height);\n    const CUBEUV_MAX_MIP = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(lodMax);\n    const materialUniforms = {\n        n: n,\n        latitudinal: latitudinal,\n        weights: weights,\n        poleAxis: poleAxis,\n        outputDirection: $e9483120aa7e8353$var$outputDirection,\n        dTheta: dTheta,\n        samples: samples,\n        envMap: envMap,\n        mipInt: mipInt,\n        CUBEUV_TEXEL_WIDTH: CUBEUV_TEXEL_WIDTH,\n        CUBEUV_TEXEL_HEIGHT: CUBEUV_TEXEL_HEIGHT,\n        CUBEUV_MAX_MIP: CUBEUV_MAX_MIP\n    };\n    const material = $e9483120aa7e8353$var$_getMaterial();\n    material.uniforms = materialUniforms; // TODO: Move to outside of the material\n    material.fragmentNode = (0, $e5ab6d927267d03a$export$2cc7ff91bcacba5e)({\n        ...materialUniforms,\n        latitudinal: latitudinal.equal(1)\n    });\n    return material;\n}\nfunction $e9483120aa7e8353$var$_getCubemapMaterial(envTexture) {\n    const material = $e9483120aa7e8353$var$_getMaterial();\n    material.fragmentNode = (0, $94a9a63327e9267a$export$f8948c996a1778e8)(envTexture, $e9483120aa7e8353$var$outputDirection);\n    return material;\n}\nfunction $e9483120aa7e8353$var$_getEquirectMaterial(envTexture) {\n    const material = $e9483120aa7e8353$var$_getMaterial();\n    material.fragmentNode = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(envTexture, (0, $f53aca0b2c61faf5$export$191de21f5bc44b98)($e9483120aa7e8353$var$outputDirection), 0);\n    return material;\n}\nvar $e9483120aa7e8353$export$2e2bcd8739ae039 = $e9483120aa7e8353$var$PMREMGenerator;\n\n\nconst $c311d175151ec5c3$var$uniformsGroupCache = new (0, $a8889764d60049e2$export$2e2bcd8739ae039)();\nconst $c311d175151ec5c3$var$typeFromLength = new Map([\n    [\n        2,\n        \"vec2\"\n    ],\n    [\n        3,\n        \"vec3\"\n    ],\n    [\n        4,\n        \"vec4\"\n    ],\n    [\n        9,\n        \"mat3\"\n    ],\n    [\n        16,\n        \"mat4\"\n    ]\n]);\nconst $c311d175151ec5c3$var$typeFromArray = new Map([\n    [\n        Int8Array,\n        \"int\"\n    ],\n    [\n        Int16Array,\n        \"int\"\n    ],\n    [\n        Int32Array,\n        \"int\"\n    ],\n    [\n        Uint8Array,\n        \"uint\"\n    ],\n    [\n        Uint16Array,\n        \"uint\"\n    ],\n    [\n        Uint32Array,\n        \"uint\"\n    ],\n    [\n        Float32Array,\n        \"float\"\n    ]\n]);\nconst $c311d175151ec5c3$var$toFloat = (value)=>{\n    value = Number(value);\n    return value + (value % 1 ? \"\" : \".0\");\n};\nclass $c311d175151ec5c3$var$NodeBuilder {\n    constructor(object, renderer, parser, scene = null, material = null){\n        this.object = object;\n        this.material = material || object && object.material || null;\n        this.geometry = object && object.geometry || null;\n        this.renderer = renderer;\n        this.parser = parser;\n        this.scene = scene;\n        this.nodes = [];\n        this.updateNodes = [];\n        this.updateBeforeNodes = [];\n        this.hashNodes = {};\n        this.lightsNode = null;\n        this.environmentNode = null;\n        this.fogNode = null;\n        this.toneMappingNode = null;\n        this.clippingContext = null;\n        this.vertexShader = null;\n        this.fragmentShader = null;\n        this.computeShader = null;\n        this.flowNodes = {\n            vertex: [],\n            fragment: [],\n            compute: []\n        };\n        this.flowCode = {\n            vertex: \"\",\n            fragment: \"\",\n            compute: []\n        };\n        this.uniforms = {\n            vertex: [],\n            fragment: [],\n            compute: [],\n            index: 0\n        };\n        this.structs = {\n            vertex: [],\n            fragment: [],\n            compute: [],\n            index: 0\n        };\n        this.bindings = {\n            vertex: [],\n            fragment: [],\n            compute: []\n        };\n        this.bindingsOffset = {\n            vertex: 0,\n            fragment: 0,\n            compute: 0\n        };\n        this.bindingsArray = null;\n        this.attributes = [];\n        this.bufferAttributes = [];\n        this.varyings = [];\n        this.codes = {};\n        this.vars = {};\n        this.flow = {\n            code: \"\"\n        };\n        this.chaining = [];\n        this.stack = (0, $97025b15d9adcd1d$export$a57ab32f40f83ea9)();\n        this.stacks = [];\n        this.tab = \"\t\";\n        this.currentFunctionNode = null;\n        this.context = {\n            keywords: new (0, $fd191a9102c57d7d$export$2e2bcd8739ae039)(),\n            material: this.material\n        };\n        this.cache = new (0, $9d695fdcb6c1a113$export$2e2bcd8739ae039)();\n        this.globalCache = this.cache;\n        this.flowsData = new WeakMap();\n        this.shaderStage = null;\n        this.buildStage = null;\n    }\n    createRenderTarget(width, height, options) {\n        return new (0, $ilwiq.RenderTarget)(width, height, options);\n    }\n    createCubeRenderTarget(size, options) {\n        return new (0, $34c81b11246753cb$export$2e2bcd8739ae039)(size, options);\n    }\n    createPMREMGenerator() {\n        // TODO: Move Materials.js to outside of the Nodes.js in order to remove this function and improve tree-shaking support\n        return new (0, $e9483120aa7e8353$export$2e2bcd8739ae039)(this.renderer);\n    }\n    includes(node) {\n        return this.nodes.includes(node);\n    }\n    _getSharedBindings(bindings) {\n        const shared = [];\n        for (const binding of bindings)if (binding.shared === true) {\n            // nodes is the chainmap key\n            const nodes = binding.getNodes();\n            let sharedBinding = $c311d175151ec5c3$var$uniformsGroupCache.get(nodes);\n            if (sharedBinding === undefined) {\n                $c311d175151ec5c3$var$uniformsGroupCache.set(nodes, binding);\n                sharedBinding = binding;\n            }\n            shared.push(sharedBinding);\n        } else shared.push(binding);\n        return shared;\n    }\n    getBindings() {\n        let bindingsArray = this.bindingsArray;\n        if (bindingsArray === null) {\n            const bindings = this.bindings;\n            this.bindingsArray = bindingsArray = this._getSharedBindings(this.material !== null ? [\n                ...bindings.vertex,\n                ...bindings.fragment\n            ] : bindings.compute);\n        }\n        return bindingsArray;\n    }\n    setHashNode(node, hash) {\n        this.hashNodes[hash] = node;\n    }\n    addNode(node) {\n        if (this.nodes.includes(node) === false) {\n            this.nodes.push(node);\n            this.setHashNode(node, node.getHash(this));\n        }\n    }\n    buildUpdateNodes() {\n        for (const node of this.nodes){\n            const updateType = node.getUpdateType();\n            const updateBeforeType = node.getUpdateBeforeType();\n            if (updateType !== (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).NONE) this.updateNodes.push(node.getSelf());\n            if (updateBeforeType !== (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).NONE) this.updateBeforeNodes.push(node);\n        }\n    }\n    get currentNode() {\n        return this.chaining[this.chaining.length - 1];\n    }\n    addChain(node) {\n        /*\n\t\tif ( this.chaining.indexOf( node ) !== - 1 ) {\n\n\t\t\tconsole.warn( 'Recursive node: ', node );\n\n\t\t}\n\t\t*/ this.chaining.push(node);\n    }\n    removeChain(node) {\n        const lastChain = this.chaining.pop();\n        if (lastChain !== node) throw new Error(\"NodeBuilder: Invalid node chaining!\");\n    }\n    getMethod(method) {\n        return method;\n    }\n    getNodeFromHash(hash) {\n        return this.hashNodes[hash];\n    }\n    addFlow(shaderStage, node) {\n        this.flowNodes[shaderStage].push(node);\n        return node;\n    }\n    setContext(context) {\n        this.context = context;\n    }\n    getContext() {\n        return this.context;\n    }\n    setCache(cache) {\n        this.cache = cache;\n    }\n    getCache() {\n        return this.cache;\n    }\n    isAvailable() {\n        return false;\n    }\n    getVertexIndex() {\n        console.warn(\"Abstract function.\");\n    }\n    getInstanceIndex() {\n        console.warn(\"Abstract function.\");\n    }\n    getFrontFacing() {\n        console.warn(\"Abstract function.\");\n    }\n    getFragCoord() {\n        console.warn(\"Abstract function.\");\n    }\n    isFlipY() {\n        return false;\n    }\n    generateTexture() {\n        console.warn(\"Abstract function.\");\n    }\n    generateTextureLod() {\n        console.warn(\"Abstract function.\");\n    }\n    generateConst(type, value = null) {\n        if (value === null) {\n            if (type === \"float\" || type === \"int\" || type === \"uint\") value = 0;\n            else if (type === \"bool\") value = false;\n            else if (type === \"color\") value = new (0, $ilwiq.Color)();\n            else if (type === \"vec2\") value = new (0, $ilwiq.Vector2)();\n            else if (type === \"vec3\") value = new (0, $ilwiq.Vector3)();\n            else if (type === \"vec4\") value = new (0, $ilwiq.Vector4)();\n        }\n        if (type === \"float\") return $c311d175151ec5c3$var$toFloat(value);\n        if (type === \"int\") return `${Math.round(value)}`;\n        if (type === \"uint\") return value >= 0 ? `${Math.round(value)}u` : \"0u\";\n        if (type === \"bool\") return value ? \"true\" : \"false\";\n        if (type === \"color\") return `${this.getType(\"vec3\")}( ${$c311d175151ec5c3$var$toFloat(value.r)}, ${$c311d175151ec5c3$var$toFloat(value.g)}, ${$c311d175151ec5c3$var$toFloat(value.b)} )`;\n        const typeLength = this.getTypeLength(type);\n        const componentType = this.getComponentType(type);\n        const generateConst = (value)=>this.generateConst(componentType, value);\n        if (typeLength === 2) return `${this.getType(type)}( ${generateConst(value.x)}, ${generateConst(value.y)} )`;\n        else if (typeLength === 3) return `${this.getType(type)}( ${generateConst(value.x)}, ${generateConst(value.y)}, ${generateConst(value.z)} )`;\n        else if (typeLength === 4) return `${this.getType(type)}( ${generateConst(value.x)}, ${generateConst(value.y)}, ${generateConst(value.z)}, ${generateConst(value.w)} )`;\n        else if (typeLength > 4 && value && (value.isMatrix3 || value.isMatrix4)) return `${this.getType(type)}( ${value.elements.map(generateConst).join(\", \")} )`;\n        else if (typeLength > 4) return `${this.getType(type)}()`;\n        throw new Error(`NodeBuilder: Type '${type}' not found in generate constant attempt.`);\n    }\n    getType(type) {\n        if (type === \"color\") return \"vec3\";\n        return type;\n    }\n    generateMethod(method) {\n        return method;\n    }\n    hasGeometryAttribute(name) {\n        return this.geometry && this.geometry.getAttribute(name) !== undefined;\n    }\n    getAttribute(name, type) {\n        const attributes = this.attributes;\n        // find attribute\n        for (const attribute of attributes){\n            if (attribute.name === name) return attribute;\n        }\n        // create a new if no exist\n        const attribute = new (0, $cb3f86361a298b04$export$2e2bcd8739ae039)(name, type);\n        attributes.push(attribute);\n        return attribute;\n    }\n    getPropertyName(node /*, shaderStage*/ ) {\n        return node.name;\n    }\n    isVector(type) {\n        return /vec\\d/.test(type);\n    }\n    isMatrix(type) {\n        return /mat\\d/.test(type);\n    }\n    isReference(type) {\n        return type === \"void\" || type === \"property\" || type === \"sampler\" || type === \"texture\" || type === \"cubeTexture\" || type === \"storageTexture\";\n    }\n    needsColorSpaceToLinear() {\n        return false;\n    }\n    getComponentTypeFromTexture(texture) {\n        const type = texture.type;\n        if (texture.isDataTexture) {\n            if (type === (0, $ilwiq.IntType)) return \"int\";\n            if (type === (0, $ilwiq.UnsignedIntType)) return \"uint\";\n        }\n        return \"float\";\n    }\n    getComponentType(type) {\n        type = this.getVectorType(type);\n        if (type === \"float\" || type === \"bool\" || type === \"int\" || type === \"uint\") return type;\n        const componentType = /(b|i|u|)(vec|mat)([2-4])/.exec(type);\n        if (componentType === null) return null;\n        if (componentType[1] === \"b\") return \"bool\";\n        if (componentType[1] === \"i\") return \"int\";\n        if (componentType[1] === \"u\") return \"uint\";\n        return \"float\";\n    }\n    getVectorType(type) {\n        if (type === \"color\") return \"vec3\";\n        if (type === \"texture\" || type === \"cubeTexture\" || type === \"storageTexture\") return \"vec4\";\n        return type;\n    }\n    getTypeFromLength(length, componentType = \"float\") {\n        if (length === 1) return componentType;\n        const baseType = $c311d175151ec5c3$var$typeFromLength.get(length);\n        const prefix = componentType === \"float\" ? \"\" : componentType[0];\n        return prefix + baseType;\n    }\n    getTypeFromArray(array) {\n        return $c311d175151ec5c3$var$typeFromArray.get(array.constructor);\n    }\n    getTypeFromAttribute(attribute) {\n        let dataAttribute = attribute;\n        if (attribute.isInterleavedBufferAttribute) dataAttribute = attribute.data;\n        const array = dataAttribute.array;\n        const itemSize = attribute.itemSize;\n        const normalized = attribute.normalized;\n        let arrayType;\n        if (!(attribute instanceof (0, $ilwiq.Float16BufferAttribute)) && normalized !== true) arrayType = this.getTypeFromArray(array);\n        return this.getTypeFromLength(itemSize, arrayType);\n    }\n    getTypeLength(type) {\n        const vecType = this.getVectorType(type);\n        const vecNum = /vec([2-4])/.exec(vecType);\n        if (vecNum !== null) return Number(vecNum[1]);\n        if (vecType === \"float\" || vecType === \"bool\" || vecType === \"int\" || vecType === \"uint\") return 1;\n        if (/mat2/.test(type) === true) return 4;\n        if (/mat3/.test(type) === true) return 9;\n        if (/mat4/.test(type) === true) return 16;\n        return 0;\n    }\n    getVectorFromMatrix(type) {\n        return type.replace(\"mat\", \"vec\");\n    }\n    changeComponentType(type, newComponentType) {\n        return this.getTypeFromLength(this.getTypeLength(type), newComponentType);\n    }\n    getIntegerType(type) {\n        const componentType = this.getComponentType(type);\n        if (componentType === \"int\" || componentType === \"uint\") return type;\n        return this.changeComponentType(type, \"int\");\n    }\n    addStack() {\n        this.stack = (0, $97025b15d9adcd1d$export$a57ab32f40f83ea9)(this.stack);\n        this.stacks.push((0, $64e573acaa48d904$export$c3090653b26dfebd)() || this.stack);\n        (0, $64e573acaa48d904$export$50a78b1c198bcc62)(this.stack);\n        return this.stack;\n    }\n    removeStack() {\n        const lastStack = this.stack;\n        this.stack = lastStack.parent;\n        (0, $64e573acaa48d904$export$50a78b1c198bcc62)(this.stacks.pop());\n        return lastStack;\n    }\n    getDataFromNode(node, shaderStage = this.shaderStage, cache = null) {\n        cache = cache === null ? node.isGlobal(this) ? this.globalCache : this.cache : cache;\n        let nodeData = cache.getNodeData(node);\n        if (nodeData === undefined) {\n            nodeData = {};\n            cache.setNodeData(node, nodeData);\n        }\n        if (nodeData[shaderStage] === undefined) nodeData[shaderStage] = {};\n        return nodeData[shaderStage];\n    }\n    getNodeProperties(node, shaderStage = \"any\") {\n        const nodeData = this.getDataFromNode(node, shaderStage);\n        return nodeData.properties || (nodeData.properties = {\n            outputNode: null\n        });\n    }\n    getBufferAttributeFromNode(node, type) {\n        const nodeData = this.getDataFromNode(node);\n        let bufferAttribute = nodeData.bufferAttribute;\n        if (bufferAttribute === undefined) {\n            const index = this.uniforms.index++;\n            bufferAttribute = new (0, $cb3f86361a298b04$export$2e2bcd8739ae039)(\"nodeAttribute\" + index, type, node);\n            this.bufferAttributes.push(bufferAttribute);\n            nodeData.bufferAttribute = bufferAttribute;\n        }\n        return bufferAttribute;\n    }\n    getStructTypeFromNode(node, shaderStage = this.shaderStage) {\n        const nodeData = this.getDataFromNode(node, shaderStage);\n        if (nodeData.structType === undefined) {\n            const index = this.structs.index++;\n            node.name = `StructType${index}`;\n            this.structs[shaderStage].push(node);\n            nodeData.structType = node;\n        }\n        return node;\n    }\n    getUniformFromNode(node, type, shaderStage = this.shaderStage, name = null) {\n        const nodeData = this.getDataFromNode(node, shaderStage, this.globalCache);\n        let nodeUniform = nodeData.uniform;\n        if (nodeUniform === undefined) {\n            const index = this.uniforms.index++;\n            nodeUniform = new (0, $88c979768aba672c$export$2e2bcd8739ae039)(name || \"nodeUniform\" + index, type, node);\n            this.uniforms[shaderStage].push(nodeUniform);\n            nodeData.uniform = nodeUniform;\n        }\n        return nodeUniform;\n    }\n    getVarFromNode(node, name = null, type = node.getNodeType(this), shaderStage = this.shaderStage) {\n        const nodeData = this.getDataFromNode(node, shaderStage);\n        let nodeVar = nodeData.variable;\n        if (nodeVar === undefined) {\n            const vars = this.vars[shaderStage] || (this.vars[shaderStage] = []);\n            if (name === null) name = \"nodeVar\" + vars.length;\n            nodeVar = new (0, $68232893fd44a792$export$2e2bcd8739ae039)(name, type);\n            vars.push(nodeVar);\n            nodeData.variable = nodeVar;\n        }\n        return nodeVar;\n    }\n    getVaryingFromNode(node, name = null, type = node.getNodeType(this)) {\n        const nodeData = this.getDataFromNode(node, \"any\");\n        let nodeVarying = nodeData.varying;\n        if (nodeVarying === undefined) {\n            const varyings = this.varyings;\n            const index = varyings.length;\n            if (name === null) name = \"nodeVarying\" + index;\n            nodeVarying = new (0, $63f83cf3f666739e$export$2e2bcd8739ae039)(name, type);\n            varyings.push(nodeVarying);\n            nodeData.varying = nodeVarying;\n        }\n        return nodeVarying;\n    }\n    getCodeFromNode(node, type, shaderStage = this.shaderStage) {\n        const nodeData = this.getDataFromNode(node);\n        let nodeCode = nodeData.code;\n        if (nodeCode === undefined) {\n            const codes = this.codes[shaderStage] || (this.codes[shaderStage] = []);\n            const index = codes.length;\n            nodeCode = new (0, $cf06b9e10ea07051$export$2e2bcd8739ae039)(\"nodeCode\" + index, type);\n            codes.push(nodeCode);\n            nodeData.code = nodeCode;\n        }\n        return nodeCode;\n    }\n    addLineFlowCode(code) {\n        if (code === \"\") return this;\n        code = this.tab + code;\n        if (!/;\\s*$/.test(code)) code = code + \";\\n\";\n        this.flow.code += code;\n        return this;\n    }\n    addFlowCode(code) {\n        this.flow.code += code;\n        return this;\n    }\n    addFlowTab() {\n        this.tab += \"\t\";\n        return this;\n    }\n    removeFlowTab() {\n        this.tab = this.tab.slice(0, -1);\n        return this;\n    }\n    getFlowData(node /*, shaderStage*/ ) {\n        return this.flowsData.get(node);\n    }\n    flowNode(node) {\n        const output = node.getNodeType(this);\n        const flowData = this.flowChildNode(node, output);\n        this.flowsData.set(node, flowData);\n        return flowData;\n    }\n    buildFunctionNode(shaderNode) {\n        const fn = new (0, $84d66e1ab81d2c74$export$2e2bcd8739ae039)();\n        const previous = this.currentFunctionNode;\n        this.currentFunctionNode = fn;\n        fn.code = this.buildFunctionCode(shaderNode);\n        this.currentFunctionNode = previous;\n        return fn;\n    }\n    flowShaderNode(shaderNode) {\n        const layout = shaderNode.layout;\n        let inputs;\n        if (shaderNode.isArrayInput) {\n            inputs = [];\n            for (const input of layout.inputs)inputs.push(new (0, $e30b6ec8d9ccd650$export$2e2bcd8739ae039)(input.type, input.name));\n        } else {\n            inputs = {};\n            for (const input of layout.inputs)inputs[input.name] = new (0, $e30b6ec8d9ccd650$export$2e2bcd8739ae039)(input.type, input.name);\n        }\n        //\n        shaderNode.layout = null;\n        const callNode = shaderNode.call(inputs);\n        const flowData = this.flowStagesNode(callNode, layout.type);\n        shaderNode.layout = layout;\n        return flowData;\n    }\n    flowStagesNode(node, output = null) {\n        const previousFlow = this.flow;\n        const previousVars = this.vars;\n        const previousBuildStage = this.buildStage;\n        const flow = {\n            code: \"\"\n        };\n        this.flow = flow;\n        this.vars = {};\n        for (const buildStage of (0, $d70807ef9a9432a5$export$f2213ed98eb895d6)){\n            this.setBuildStage(buildStage);\n            flow.result = node.build(this, output);\n        }\n        flow.vars = this.getVars(this.shaderStage);\n        this.flow = previousFlow;\n        this.vars = previousVars;\n        this.setBuildStage(previousBuildStage);\n        return flow;\n    }\n    getFunctionOperator() {\n        return null;\n    }\n    flowChildNode(node, output = null) {\n        const previousFlow = this.flow;\n        const flow = {\n            code: \"\"\n        };\n        this.flow = flow;\n        flow.result = node.build(this, output);\n        this.flow = previousFlow;\n        return flow;\n    }\n    flowNodeFromShaderStage(shaderStage, node, output = null, propertyName = null) {\n        const previousShaderStage = this.shaderStage;\n        this.setShaderStage(shaderStage);\n        const flowData = this.flowChildNode(node, output);\n        if (propertyName !== null) flowData.code += `${this.tab + propertyName} = ${flowData.result};\\n`;\n        this.flowCode[shaderStage] = this.flowCode[shaderStage] + flowData.code;\n        this.setShaderStage(previousShaderStage);\n        return flowData;\n    }\n    getAttributesArray() {\n        return this.attributes.concat(this.bufferAttributes);\n    }\n    getAttributes() {\n        console.warn(\"Abstract function.\");\n    }\n    getVaryings() {\n        console.warn(\"Abstract function.\");\n    }\n    getVar(type, name) {\n        return `${this.getType(type)} ${name}`;\n    }\n    getVars(shaderStage) {\n        let snippet = \"\";\n        const vars = this.vars[shaderStage];\n        if (vars !== undefined) for (const variable of vars)snippet += `${this.getVar(variable.type, variable.name)}; `;\n        return snippet;\n    }\n    getUniforms() {\n        console.warn(\"Abstract function.\");\n    }\n    getCodes(shaderStage) {\n        const codes = this.codes[shaderStage];\n        let code = \"\";\n        if (codes !== undefined) for (const nodeCode of codes)code += nodeCode.code + \"\\n\";\n        return code;\n    }\n    getHash() {\n        return this.vertexShader + this.fragmentShader + this.computeShader;\n    }\n    setShaderStage(shaderStage) {\n        this.shaderStage = shaderStage;\n    }\n    getShaderStage() {\n        return this.shaderStage;\n    }\n    setBuildStage(buildStage) {\n        this.buildStage = buildStage;\n    }\n    getBuildStage() {\n        return this.buildStage;\n    }\n    buildCode() {\n        console.warn(\"Abstract function.\");\n    }\n    build(convertMaterial = true) {\n        const { object: object, material: material } = this;\n        if (convertMaterial) {\n            if (material !== null) (0, $10ae8478bd7328e0$export$2e2bcd8739ae039).fromMaterial(material).build(this);\n            else this.addFlow(\"compute\", object);\n        }\n        // setup() -> stage 1: create possible new nodes and returns an output reference node\n        // analyze()   -> stage 2: analyze nodes to possible optimization and validation\n        // generate()  -> stage 3: generate shader\n        for (const buildStage of (0, $d70807ef9a9432a5$export$f2213ed98eb895d6)){\n            this.setBuildStage(buildStage);\n            if (this.context.vertex && this.context.vertex.isNode) this.flowNodeFromShaderStage(\"vertex\", this.context.vertex);\n            for (const shaderStage of (0, $d70807ef9a9432a5$export$48fd793f0255b86a)){\n                this.setShaderStage(shaderStage);\n                const flowNodes = this.flowNodes[shaderStage];\n                for (const node of flowNodes)if (buildStage === \"generate\") this.flowNode(node);\n                else node.build(this);\n            }\n        }\n        this.setBuildStage(null);\n        this.setShaderStage(null);\n        // stage 4: build code for a specific output\n        this.buildCode();\n        this.buildUpdateNodes();\n        return this;\n    }\n    getNodeUniform(uniformNode, type) {\n        if (type === \"float\") return new (0, $0a34f66f574e1c54$export$e164324378876543)(uniformNode);\n        if (type === \"vec2\") return new (0, $0a34f66f574e1c54$export$3e6626ee055e11ec)(uniformNode);\n        if (type === \"vec3\") return new (0, $0a34f66f574e1c54$export$222550f4ad161b66)(uniformNode);\n        if (type === \"vec4\") return new (0, $0a34f66f574e1c54$export$2f5c35776b379101)(uniformNode);\n        if (type === \"color\") return new (0, $0a34f66f574e1c54$export$d65b35d185d16645)(uniformNode);\n        if (type === \"mat3\") return new (0, $0a34f66f574e1c54$export$e04f01f73e1507d4)(uniformNode);\n        if (type === \"mat4\") return new (0, $0a34f66f574e1c54$export$9df310e837bed706)(uniformNode);\n        throw new Error(`Uniform \"${type}\" not declared.`);\n    }\n    createNodeMaterial(type = \"NodeMaterial\") {\n        // TODO: Move Materials.js to outside of the Nodes.js in order to remove this function and improve tree-shaking support\n        return (0, $10ae8478bd7328e0$export$c8ea147e614cf837)(type);\n    }\n    format(snippet, fromType, toType) {\n        fromType = this.getVectorType(fromType);\n        toType = this.getVectorType(toType);\n        if (fromType === toType || toType === null || this.isReference(toType)) return snippet;\n        const fromTypeLength = this.getTypeLength(fromType);\n        const toTypeLength = this.getTypeLength(toType);\n        if (fromTypeLength > 4) // @TODO: ignore for now\n        return snippet;\n        if (toTypeLength > 4 || toTypeLength === 0) // @TODO: ignore for now\n        return snippet;\n        if (fromTypeLength === toTypeLength) return `${this.getType(toType)}( ${snippet} )`;\n        if (fromTypeLength > toTypeLength) return this.format(`${snippet}.${\"xyz\".slice(0, toTypeLength)}`, this.getTypeFromLength(toTypeLength, this.getComponentType(fromType)), toType);\n        if (toTypeLength === 4 && fromTypeLength > 1) return `${this.getType(toType)}( ${this.format(snippet, fromType, \"vec3\")}, 1.0 )`;\n        if (fromTypeLength === 2) return `${this.getType(toType)}( ${this.format(snippet, fromType, \"vec2\")}, 0.0 )`;\n        if (fromTypeLength === 1 && toTypeLength > 1 && fromType[0] !== toType[0]) // convert a number value to vector type, e.g:\n        // vec3( 1u ) -> vec3( float( 1u ) )\n        snippet = `${this.getType(this.getComponentType(toType))}( ${snippet} )`;\n        return `${this.getType(toType)}( ${snippet} )`; // fromType is float-like\n    }\n    getSignature() {\n        return `// Three.js r${0, $ilwiq.REVISION} - NodeMaterial System\\n`;\n    }\n}\nvar $c311d175151ec5c3$export$2e2bcd8739ae039 = $c311d175151ec5c3$var$NodeBuilder;\n\n\n\n\n\nclass $79b147f9a0d9e881$var$NodeFrame {\n    constructor(){\n        this.time = 0;\n        this.deltaTime = 0;\n        this.frameId = 0;\n        this.renderId = 0;\n        this.startTime = null;\n        this.updateMap = new WeakMap();\n        this.updateBeforeMap = new WeakMap();\n        this.renderer = null;\n        this.material = null;\n        this.camera = null;\n        this.object = null;\n        this.scene = null;\n    }\n    _getMaps(referenceMap, nodeRef) {\n        let maps = referenceMap.get(nodeRef);\n        if (maps === undefined) {\n            maps = {\n                renderMap: new WeakMap(),\n                frameMap: new WeakMap()\n            };\n            referenceMap.set(nodeRef, maps);\n        }\n        return maps;\n    }\n    updateBeforeNode(node) {\n        const updateType = node.getUpdateBeforeType();\n        const reference = node.updateReference(this);\n        if (updateType === (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME) {\n            const { frameMap: frameMap } = this._getMaps(this.updateBeforeMap, reference);\n            if (frameMap.get(reference) !== this.frameId) {\n                if (node.updateBefore(this) !== false) frameMap.set(reference, this.frameId);\n            }\n        } else if (updateType === (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER) {\n            const { renderMap: renderMap } = this._getMaps(this.updateBeforeMap, reference);\n            if (renderMap.get(reference) !== this.renderId) {\n                if (node.updateBefore(this) !== false) renderMap.set(reference, this.renderId);\n            }\n        } else if (updateType === (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT) node.updateBefore(this);\n    }\n    updateNode(node) {\n        const updateType = node.getUpdateType();\n        const reference = node.updateReference(this);\n        if (updateType === (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME) {\n            const { frameMap: frameMap } = this._getMaps(this.updateMap, reference);\n            if (frameMap.get(reference) !== this.frameId) {\n                if (node.update(this) !== false) frameMap.set(reference, this.frameId);\n            }\n        } else if (updateType === (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER) {\n            const { renderMap: renderMap } = this._getMaps(this.updateMap, reference);\n            if (renderMap.get(reference) !== this.renderId) {\n                if (node.update(this) !== false) renderMap.set(reference, this.renderId);\n            }\n        } else if (updateType === (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT) node.update(this);\n    }\n    update() {\n        this.frameId++;\n        if (this.lastTime === undefined) this.lastTime = performance.now();\n        this.deltaTime = (performance.now() - this.lastTime) / 1000;\n        this.lastTime = performance.now();\n        this.time += this.deltaTime;\n    }\n}\nvar $79b147f9a0d9e881$export$2e2bcd8739ae039 = $79b147f9a0d9e881$var$NodeFrame;\n\n\nclass $ad7751066410c1cd$var$NodeFunctionInput {\n    constructor(type, name, count = null, qualifier = \"\", isConst = false){\n        this.type = type;\n        this.name = name;\n        this.count = count;\n        this.qualifier = qualifier;\n        this.isConst = isConst;\n    }\n}\n$ad7751066410c1cd$var$NodeFunctionInput.isNodeFunctionInput = true;\nvar $ad7751066410c1cd$export$2e2bcd8739ae039 = $ad7751066410c1cd$var$NodeFunctionInput;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $c187e10c31223a15$var$StructTypeNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(types){\n        super();\n        this.types = types;\n        this.isStructTypeNode = true;\n    }\n    getMemberTypes() {\n        return this.types;\n    }\n}\nvar $c187e10c31223a15$export$2e2bcd8739ae039 = $c187e10c31223a15$var$StructTypeNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"StructTypeNode\", $c187e10c31223a15$var$StructTypeNode);\n\n\n\nclass $c4467f4f76adbbdc$var$OutputStructNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(...members){\n        super();\n        this.isOutputStructNode = true;\n        this.members = members;\n    }\n    setup(builder) {\n        super.setup(builder);\n        const members = this.members;\n        const types = [];\n        for(let i = 0; i < members.length; i++)types.push(members[i].getNodeType(builder));\n        this.nodeType = builder.getStructTypeFromNode(new (0, $c187e10c31223a15$export$2e2bcd8739ae039)(types)).name;\n    }\n    generate(builder, output) {\n        const nodeVar = builder.getVarFromNode(this);\n        nodeVar.isOutputStructVar = true;\n        const propertyName = builder.getPropertyName(nodeVar);\n        const members = this.members;\n        const structPrefix = propertyName !== \"\" ? propertyName + \".\" : \"\";\n        for(let i = 0; i < members.length; i++){\n            const snippet = members[i].build(builder, output);\n            builder.addLineFlowCode(`${structPrefix}m${i} = ${snippet}`);\n        }\n        return propertyName;\n    }\n}\nvar $c4467f4f76adbbdc$export$2e2bcd8739ae039 = $c4467f4f76adbbdc$var$OutputStructNode;\nconst $c4467f4f76adbbdc$export$7a34be181e1b3f6e = (0, $64e573acaa48d904$export$60d11c6747b7deba)($c4467f4f76adbbdc$var$OutputStructNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"OutputStructNode\", $c4467f4f76adbbdc$var$OutputStructNode);\n\n\n\n\n\n\n\n\nclass $12090892b134c7d1$var$HashNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(seedNode){\n        super();\n        this.seedNode = seedNode;\n    }\n    setup() {\n        // Taken from https://www.shadertoy.com/view/XlGcRh, originally from pcg-random.org\n        const state = this.seedNode.uint().mul(747796405).add(2891336453);\n        const word = state.shiftRight(state.shiftRight(28).add(4)).bitXor(state).mul(277803737);\n        const result = word.shiftRight(22).bitXor(word);\n        return result.float().mul(1 / 2 ** 32); // Convert to range [0, 1)\n    }\n}\nvar $12090892b134c7d1$export$2e2bcd8739ae039 = $12090892b134c7d1$var$HashNode;\nconst $12090892b134c7d1$export$d6af199866bfb566 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($12090892b134c7d1$var$HashNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"hash\", $12090892b134c7d1$export$d6af199866bfb566);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"HashNode\", $12090892b134c7d1$var$HashNode);\n\n\n\n\n\nconst $bea81d3d47df4b7c$export$b465b7f8c1ade29b = (x, k)=>(0, $4b9f12ce87d17074$export$9c297f60e22e3389)((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(4.0, x.mul((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, x))), k);\nconst $bea81d3d47df4b7c$export$57790f9172054d97 = (x, k)=>x.lessThan(0.5) ? $bea81d3d47df4b7c$export$b465b7f8c1ade29b(x.mul(2.0), k).div(2.0) : (0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, $bea81d3d47df4b7c$export$b465b7f8c1ade29b((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, x), 2.0), k).div(2.0));\nconst $bea81d3d47df4b7c$export$b18e6ccd140f136b = (x, a, b)=>(0, $4b9f12ce87d17074$export$9c297f60e22e3389)((0, $1a899e4dee2452c3$export$159d9494db57879b)((0, $4b9f12ce87d17074$export$9c297f60e22e3389)(x, a), (0, $1a899e4dee2452c3$export$e16d8520af44a096)((0, $4b9f12ce87d17074$export$9c297f60e22e3389)(x, a), (0, $4b9f12ce87d17074$export$9c297f60e22e3389)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, x), b))), 1.0 / a);\nconst $bea81d3d47df4b7c$export$494db73f2e58d3b = (x, k)=>(0, $4b9f12ce87d17074$export$5de3937cb4b592ed)((0, $4b9f12ce87d17074$export$6b5c1ceb16d01dc3).mul(k.mul(x).sub(1.0))).div((0, $4b9f12ce87d17074$export$6b5c1ceb16d01dc3).mul(k.mul(x).sub(1.0)));\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"parabola\", $bea81d3d47df4b7c$export$b465b7f8c1ade29b);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"gain\", $bea81d3d47df4b7c$export$57790f9172054d97);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"pcurve\", $bea81d3d47df4b7c$export$b18e6ccd140f136b);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"sinc\", $bea81d3d47df4b7c$export$494db73f2e58d3b);\n\n\n// https://github.com/cabbibo/glsl-tri-noise-3d\n\n\nconst $8844c17352a23ab3$export$80f38d456afce276 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x])=>{\n    return x.fract().sub(.5).abs();\n});\nconst $8844c17352a23ab3$export$ac732b7bf15e2f51 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p])=>{\n    return (0, $64e573acaa48d904$export$9100789c9d999364)($8844c17352a23ab3$export$80f38d456afce276(p.z.add($8844c17352a23ab3$export$80f38d456afce276(p.y.mul(1.)))), $8844c17352a23ab3$export$80f38d456afce276(p.z.add($8844c17352a23ab3$export$80f38d456afce276(p.x.mul(1.)))), $8844c17352a23ab3$export$80f38d456afce276(p.y.add($8844c17352a23ab3$export$80f38d456afce276(p.x.mul(1.)))));\n});\nconst $8844c17352a23ab3$export$89102c2848a0961f = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, spd, time])=>{\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const z = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.4).toVar();\n    const rz = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.0).toVar();\n    const bp = (0, $64e573acaa48d904$export$9100789c9d999364)(p).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.0),\n        end: (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(3.0),\n        type: \"float\",\n        condition: \"<=\"\n    }, ()=>{\n        const dg = (0, $64e573acaa48d904$export$9100789c9d999364)($8844c17352a23ab3$export$ac732b7bf15e2f51(bp.mul(2.0))).toVar();\n        p.addAssign(dg.add(time.mul((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.1).mul(spd))));\n        bp.mulAssign(1.8);\n        z.mulAssign(1.5);\n        p.mulAssign(1.2);\n        const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($8844c17352a23ab3$export$80f38d456afce276(p.z.add($8844c17352a23ab3$export$80f38d456afce276(p.x.add($8844c17352a23ab3$export$80f38d456afce276(p.y)))))).toVar();\n        rz.addAssign(t.div(z));\n        bp.addAssign(0.14);\n    });\n    return rz;\n});\n// layouts\n$8844c17352a23ab3$export$80f38d456afce276.setLayout({\n    name: \"tri\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"float\"\n        }\n    ]\n});\n$8844c17352a23ab3$export$ac732b7bf15e2f51.setLayout({\n    name: \"tri3\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        }\n    ]\n});\n$8844c17352a23ab3$export$89102c2848a0961f.setLayout({\n    name: \"triNoise3D\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"spd\",\n            type: \"float\"\n        },\n        {\n            name: \"time\",\n            type: \"float\"\n        }\n    ]\n});\n\n\n\n\n\n\n\n\nlet $55876c950842622b$var$discardExpression;\nclass $55876c950842622b$var$DiscardNode extends (0, $ab000a4873a702a9$export$2e2bcd8739ae039) {\n    constructor(condNode){\n        $55876c950842622b$var$discardExpression = $55876c950842622b$var$discardExpression || (0, $2d5eb7e994ba6fa4$export$743d82c2fd345b72)(\"discard\");\n        super(condNode, $55876c950842622b$var$discardExpression);\n    }\n}\nvar $55876c950842622b$export$2e2bcd8739ae039 = $55876c950842622b$var$DiscardNode;\nconst $55876c950842622b$export$10061501166abdea = (0, $64e573acaa48d904$export$60d11c6747b7deba)($55876c950842622b$var$DiscardNode);\nconst $55876c950842622b$export$584af591d945b55a = (condNode)=>$55876c950842622b$export$10061501166abdea(condNode).append();\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"discard\", $55876c950842622b$export$584af591d945b55a); // @TODO: Check... this cause a little confusing using in chaining\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"DiscardNode\", $55876c950842622b$var$DiscardNode);\n\n\n\n\n\nclass $460d92623733c4c9$var$FunctionOverloadingNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(functionNodes = [], ...parametersNodes){\n        super();\n        this.functionNodes = functionNodes;\n        this.parametersNodes = parametersNodes;\n        this._candidateFnCall = null;\n    }\n    getNodeType() {\n        return this.functionNodes[0].shaderNode.layout.type;\n    }\n    setup(builder) {\n        const params = this.parametersNodes;\n        let candidateFnCall = this._candidateFnCall;\n        if (candidateFnCall === null) {\n            let candidateFn = null;\n            let candidateScore = -1;\n            for (const functionNode of this.functionNodes){\n                const shaderNode = functionNode.shaderNode;\n                const layout = shaderNode.layout;\n                if (layout === null) throw new Error(\"FunctionOverloadingNode: FunctionNode must be a layout.\");\n                const inputs = layout.inputs;\n                if (params.length === inputs.length) {\n                    let score = 0;\n                    for(let i = 0; i < params.length; i++){\n                        const param = params[i];\n                        const input = inputs[i];\n                        if (param.getNodeType(builder) === input.type) score++;\n                        else score = 0;\n                    }\n                    if (score > candidateScore) {\n                        candidateFn = functionNode;\n                        candidateScore = score;\n                    }\n                }\n            }\n            this._candidateFnCall = candidateFnCall = candidateFn(...params);\n        }\n        return candidateFnCall;\n    }\n}\nvar $460d92623733c4c9$export$2e2bcd8739ae039 = $460d92623733c4c9$var$FunctionOverloadingNode;\nconst $460d92623733c4c9$var$overloadingBaseFn = (0, $64e573acaa48d904$export$60d11c6747b7deba)($460d92623733c4c9$var$FunctionOverloadingNode);\nconst $460d92623733c4c9$export$16973c2f8bfadf46 = (functionNodes)=>(...params)=>$460d92623733c4c9$var$overloadingBaseFn(functionNodes, ...params);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"FunctionOverloadingNode\", $460d92623733c4c9$var$FunctionOverloadingNode);\n\n\n\n\n\n\n\n\n\nclass $4759ae0a1a2b1b23$var$MatcapUVNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(){\n        super(\"vec2\");\n    }\n    setup() {\n        const x = (0, $64e573acaa48d904$export$9100789c9d999364)((0, $f38f6f7a1974ae48$export$80de5077965297a8).z, 0, (0, $f38f6f7a1974ae48$export$80de5077965297a8).x.negate()).normalize();\n        const y = (0, $f38f6f7a1974ae48$export$80de5077965297a8).cross(x);\n        return (0, $64e573acaa48d904$export$e9830bc863290a54)(x.dot((0, $b8bdffed4c803471$export$c58d63d09d102e3c)), y.dot((0, $b8bdffed4c803471$export$c58d63d09d102e3c))).mul(0.495).add(0.5);\n    }\n}\nvar $4759ae0a1a2b1b23$export$2e2bcd8739ae039 = $4759ae0a1a2b1b23$var$MatcapUVNode;\nconst $4759ae0a1a2b1b23$export$1144db64d9b88baf = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($4759ae0a1a2b1b23$var$MatcapUVNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"MatcapUVNode\", $4759ae0a1a2b1b23$var$MatcapUVNode);\n\n\n\n\n\n\n\n\nclass $6ffb9e9f5ecc5502$var$TimerNode extends (0, $5a2c5e11c304ade5$export$2e2bcd8739ae039) {\n    constructor(scope = $6ffb9e9f5ecc5502$var$TimerNode.LOCAL, scale = 1, value = 0){\n        super(value);\n        this.scope = scope;\n        this.scale = scale;\n        this.updateType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME;\n    }\n    /*\n\t@TODO:\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === TimerNode.FRAME ) {\n\n\t\t\treturn 'uint';\n\n\t\t}\n\n\t\treturn 'float';\n\n\t}\n*/ update(frame) {\n        const scope = this.scope;\n        const scale = this.scale;\n        if (scope === $6ffb9e9f5ecc5502$var$TimerNode.LOCAL) this.value += frame.deltaTime * scale;\n        else if (scope === $6ffb9e9f5ecc5502$var$TimerNode.DELTA) this.value = frame.deltaTime * scale;\n        else if (scope === $6ffb9e9f5ecc5502$var$TimerNode.FRAME) this.value = frame.frameId;\n        else // global\n        this.value = frame.time * scale;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.scope = this.scope;\n        data.scale = this.scale;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.scope = data.scope;\n        this.scale = data.scale;\n    }\n}\n$6ffb9e9f5ecc5502$var$TimerNode.LOCAL = \"local\";\n$6ffb9e9f5ecc5502$var$TimerNode.GLOBAL = \"global\";\n$6ffb9e9f5ecc5502$var$TimerNode.DELTA = \"delta\";\n$6ffb9e9f5ecc5502$var$TimerNode.FRAME = \"frame\";\nvar $6ffb9e9f5ecc5502$export$2e2bcd8739ae039 = $6ffb9e9f5ecc5502$var$TimerNode;\nconst $6ffb9e9f5ecc5502$export$f66c752b9fc69480 = (timeScale, value = 0)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $6ffb9e9f5ecc5502$var$TimerNode($6ffb9e9f5ecc5502$var$TimerNode.LOCAL, timeScale, value));\nconst $6ffb9e9f5ecc5502$export$64181be8d819441c = (timeScale, value = 0)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $6ffb9e9f5ecc5502$var$TimerNode($6ffb9e9f5ecc5502$var$TimerNode.GLOBAL, timeScale, value));\nconst $6ffb9e9f5ecc5502$export$f39c9dbd50e14b55 = (timeScale, value = 0)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $6ffb9e9f5ecc5502$var$TimerNode($6ffb9e9f5ecc5502$var$TimerNode.DELTA, timeScale, value));\nconst $6ffb9e9f5ecc5502$export$d0519621a9bf0b25 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($6ffb9e9f5ecc5502$var$TimerNode, $6ffb9e9f5ecc5502$var$TimerNode.FRAME).uint();\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TimerNode\", $6ffb9e9f5ecc5502$var$TimerNode);\n\n\n\nclass $75bb1ee776998e4f$var$OscNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(method = $75bb1ee776998e4f$var$OscNode.SINE, timeNode = (0, $6ffb9e9f5ecc5502$export$f66c752b9fc69480)()){\n        super();\n        this.method = method;\n        this.timeNode = timeNode;\n    }\n    getNodeType(builder) {\n        return this.timeNode.getNodeType(builder);\n    }\n    setup() {\n        const method = this.method;\n        const timeNode = (0, $64e573acaa48d904$export$e97474e17004dd41)(this.timeNode);\n        let outputNode = null;\n        if (method === $75bb1ee776998e4f$var$OscNode.SINE) outputNode = timeNode.add(0.75).mul(Math.PI * 2).sin().mul(0.5).add(0.5);\n        else if (method === $75bb1ee776998e4f$var$OscNode.SQUARE) outputNode = timeNode.fract().round();\n        else if (method === $75bb1ee776998e4f$var$OscNode.TRIANGLE) outputNode = timeNode.add(0.5).fract().mul(2).sub(1).abs();\n        else if (method === $75bb1ee776998e4f$var$OscNode.SAWTOOTH) outputNode = timeNode.fract();\n        return outputNode;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.method = this.method;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.method = data.method;\n    }\n}\n$75bb1ee776998e4f$var$OscNode.SINE = \"sine\";\n$75bb1ee776998e4f$var$OscNode.SQUARE = \"square\";\n$75bb1ee776998e4f$var$OscNode.TRIANGLE = \"triangle\";\n$75bb1ee776998e4f$var$OscNode.SAWTOOTH = \"sawtooth\";\nvar $75bb1ee776998e4f$export$2e2bcd8739ae039 = $75bb1ee776998e4f$var$OscNode;\nconst $75bb1ee776998e4f$export$2729ea64685a2715 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($75bb1ee776998e4f$var$OscNode, $75bb1ee776998e4f$var$OscNode.SINE);\nconst $75bb1ee776998e4f$export$e4c95ccdd8049dee = (0, $64e573acaa48d904$export$60d11c6747b7deba)($75bb1ee776998e4f$var$OscNode, $75bb1ee776998e4f$var$OscNode.SQUARE);\nconst $75bb1ee776998e4f$export$21076a275844ac3f = (0, $64e573acaa48d904$export$60d11c6747b7deba)($75bb1ee776998e4f$var$OscNode, $75bb1ee776998e4f$var$OscNode.TRIANGLE);\nconst $75bb1ee776998e4f$export$e1eddefd255f1d35 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($75bb1ee776998e4f$var$OscNode, $75bb1ee776998e4f$var$OscNode.SAWTOOTH);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"OscNode\", $75bb1ee776998e4f$var$OscNode);\n\n\n\n\n\nclass $9e302b9293f4844a$var$PackingNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(scope, node){\n        super();\n        this.scope = scope;\n        this.node = node;\n    }\n    getNodeType(builder) {\n        return this.node.getNodeType(builder);\n    }\n    setup() {\n        const { scope: scope, node: node } = this;\n        let result = null;\n        if (scope === $9e302b9293f4844a$var$PackingNode.DIRECTION_TO_COLOR) result = node.mul(0.5).add(0.5);\n        else if (scope === $9e302b9293f4844a$var$PackingNode.COLOR_TO_DIRECTION) result = node.mul(2.0).sub(1);\n        return result;\n    }\n}\n$9e302b9293f4844a$var$PackingNode.DIRECTION_TO_COLOR = \"directionToColor\";\n$9e302b9293f4844a$var$PackingNode.COLOR_TO_DIRECTION = \"colorToDirection\";\nvar $9e302b9293f4844a$export$2e2bcd8739ae039 = $9e302b9293f4844a$var$PackingNode;\nconst $9e302b9293f4844a$export$a0a884e7f644b818 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($9e302b9293f4844a$var$PackingNode, $9e302b9293f4844a$var$PackingNode.DIRECTION_TO_COLOR);\nconst $9e302b9293f4844a$export$cafa8df232264cc9 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($9e302b9293f4844a$var$PackingNode, $9e302b9293f4844a$var$PackingNode.COLOR_TO_DIRECTION);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"directionToColor\", $9e302b9293f4844a$export$a0a884e7f644b818);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"colorToDirection\", $9e302b9293f4844a$export$cafa8df232264cc9);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PackingNode\", $9e302b9293f4844a$var$PackingNode);\n\n\n\n\nclass $62b5a52b673bdb12$var$RemapNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(node, inLowNode, inHighNode, outLowNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0), outHighNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1)){\n        super();\n        this.node = node;\n        this.inLowNode = inLowNode;\n        this.inHighNode = inHighNode;\n        this.outLowNode = outLowNode;\n        this.outHighNode = outHighNode;\n        this.doClamp = true;\n    }\n    setup() {\n        const { node: node, inLowNode: inLowNode, inHighNode: inHighNode, outLowNode: outLowNode, outHighNode: outHighNode, doClamp: doClamp } = this;\n        let t = node.sub(inLowNode).div(inHighNode.sub(inLowNode));\n        if (doClamp === true) t = t.clamp();\n        return t.mul(outHighNode.sub(outLowNode)).add(outLowNode);\n    }\n}\nvar $62b5a52b673bdb12$export$2e2bcd8739ae039 = $62b5a52b673bdb12$var$RemapNode;\nconst $62b5a52b673bdb12$export$aee1dbae5de2db9d = (0, $64e573acaa48d904$export$60d11c6747b7deba)($62b5a52b673bdb12$var$RemapNode, null, null, {\n    doClamp: false\n});\nconst $62b5a52b673bdb12$export$806e65b7e825a84a = (0, $64e573acaa48d904$export$60d11c6747b7deba)($62b5a52b673bdb12$var$RemapNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"remap\", $62b5a52b673bdb12$export$aee1dbae5de2db9d);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"remapClamp\", $62b5a52b673bdb12$export$806e65b7e825a84a);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"RemapNode\", $62b5a52b673bdb12$var$RemapNode);\n\n\n\n\n\nclass $9a3a3d2800a30984$var$RotateUVNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(uvNode, rotationNode, centerNode = (0, $64e573acaa48d904$export$e9830bc863290a54)(0.5)){\n        super(\"vec2\");\n        this.uvNode = uvNode;\n        this.rotationNode = rotationNode;\n        this.centerNode = centerNode;\n    }\n    setup() {\n        const { uvNode: uvNode, rotationNode: rotationNode, centerNode: centerNode } = this;\n        const vector = uvNode.sub(centerNode);\n        return vector.rotate(rotationNode).add(centerNode);\n    }\n}\nvar $9a3a3d2800a30984$export$2e2bcd8739ae039 = $9a3a3d2800a30984$var$RotateUVNode;\nconst $9a3a3d2800a30984$export$acd5aa41c3c41974 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($9a3a3d2800a30984$var$RotateUVNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"rotateUV\", $9a3a3d2800a30984$export$acd5aa41c3c41974);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"RotateUVNode\", $9a3a3d2800a30984$var$RotateUVNode);\n\n\n\n\n\n\nclass $ff9294daf0f794c0$var$RotateNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(positionNode, rotationNode){\n        super();\n        this.positionNode = positionNode;\n        this.rotationNode = rotationNode;\n    }\n    getNodeType(builder) {\n        return this.positionNode.getNodeType(builder);\n    }\n    setup(builder) {\n        const { rotationNode: rotationNode, positionNode: positionNode } = this;\n        const nodeType = this.getNodeType(builder);\n        if (nodeType === \"vec2\") {\n            const cosAngle = rotationNode.cos();\n            const sinAngle = rotationNode.sin();\n            const rotationMatrix = (0, $64e573acaa48d904$export$f7543b5409a93c6b)(cosAngle, sinAngle, sinAngle.negate(), cosAngle);\n            return rotationMatrix.mul(positionNode);\n        } else {\n            const rotation = rotationNode;\n            const rotationXMatrix = (0, $64e573acaa48d904$export$d2b4acf069bf09f5)((0, $64e573acaa48d904$export$6dba2a1f0d609415)(1.0, 0.0, 0.0, 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0.0, (0, $4b9f12ce87d17074$export$50d414a77b60d802)(rotation.x), (0, $4b9f12ce87d17074$export$5de3937cb4b592ed)(rotation.x).negate(), 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0.0, (0, $4b9f12ce87d17074$export$5de3937cb4b592ed)(rotation.x), (0, $4b9f12ce87d17074$export$50d414a77b60d802)(rotation.x), 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0.0, 0.0, 0.0, 1.0));\n            const rotationYMatrix = (0, $64e573acaa48d904$export$d2b4acf069bf09f5)((0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $4b9f12ce87d17074$export$50d414a77b60d802)(rotation.y), 0.0, (0, $4b9f12ce87d17074$export$5de3937cb4b592ed)(rotation.y), 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0.0, 1.0, 0.0, 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $4b9f12ce87d17074$export$5de3937cb4b592ed)(rotation.y).negate(), 0.0, (0, $4b9f12ce87d17074$export$50d414a77b60d802)(rotation.y), 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0.0, 0.0, 0.0, 1.0));\n            const rotationZMatrix = (0, $64e573acaa48d904$export$d2b4acf069bf09f5)((0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $4b9f12ce87d17074$export$50d414a77b60d802)(rotation.z), (0, $4b9f12ce87d17074$export$5de3937cb4b592ed)(rotation.z).negate(), 0.0, 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $4b9f12ce87d17074$export$5de3937cb4b592ed)(rotation.z), (0, $4b9f12ce87d17074$export$50d414a77b60d802)(rotation.z), 0.0, 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0.0, 0.0, 1.0, 0.0), (0, $64e573acaa48d904$export$6dba2a1f0d609415)(0.0, 0.0, 0.0, 1.0));\n            return rotationXMatrix.mul(rotationYMatrix).mul(rotationZMatrix).mul((0, $64e573acaa48d904$export$6dba2a1f0d609415)(positionNode, 1.0)).xyz;\n        }\n    }\n}\nvar $ff9294daf0f794c0$export$2e2bcd8739ae039 = $ff9294daf0f794c0$var$RotateNode;\nconst $ff9294daf0f794c0$export$bb628a54ab399bc9 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($ff9294daf0f794c0$var$RotateNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"rotate\", $ff9294daf0f794c0$export$bb628a54ab399bc9);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"RotateNode\", $ff9294daf0f794c0$var$RotateNode);\n\n\n\n\n\n\n\nclass $22637862fb1c2c60$var$SpriteSheetUVNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(countNode, uvNode = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), frameNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0)){\n        super(\"vec2\");\n        this.countNode = countNode;\n        this.uvNode = uvNode;\n        this.frameNode = frameNode;\n    }\n    setup() {\n        const { frameNode: frameNode, uvNode: uvNode, countNode: countNode } = this;\n        const { width: width, height: height } = countNode;\n        const frameNum = frameNode.mod(width.mul(height)).floor();\n        const column = frameNum.mod(width);\n        const row = height.sub(frameNum.add(1).div(width).ceil());\n        const scale = countNode.reciprocal();\n        const uvFrameOffset = (0, $64e573acaa48d904$export$e9830bc863290a54)(column, row);\n        return uvNode.add(uvFrameOffset).mul(scale);\n    }\n}\nvar $22637862fb1c2c60$export$2e2bcd8739ae039 = $22637862fb1c2c60$var$SpriteSheetUVNode;\nconst $22637862fb1c2c60$export$f653ad67bdc54b70 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($22637862fb1c2c60$var$SpriteSheetUVNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"SpriteSheetUVNode\", $22637862fb1c2c60$var$SpriteSheetUVNode);\n\n\n\n\n\nclass $5a421bc687dc4a68$var$StorageArrayElementNode extends (0, $a62d64263fea5012$export$2e2bcd8739ae039) {\n    constructor(storageBufferNode, indexNode){\n        super(storageBufferNode, indexNode);\n        this.isStorageArrayElementNode = true;\n    }\n    set storageBufferNode(value) {\n        this.node = value;\n    }\n    get storageBufferNode() {\n        return this.node;\n    }\n    setup(builder) {\n        if (builder.isAvailable(\"storageBuffer\") === false) {\n            if (!this.node.instanceIndex && this.node.bufferObject === true) builder.setupPBO(this.node);\n        }\n        return super.setup(builder);\n    }\n    generate(builder, output) {\n        let snippet;\n        const isAssignContext = builder.context.assign;\n        //\n        if (builder.isAvailable(\"storageBuffer\") === false) {\n            const { node: node } = this;\n            if (!node.instanceIndex && this.node.bufferObject === true && isAssignContext !== true) snippet = builder.generatePBO(this);\n            else snippet = node.build(builder);\n        } else snippet = super.generate(builder);\n        if (isAssignContext !== true) {\n            const type = this.getNodeType(builder);\n            snippet = builder.format(snippet, type, output);\n        }\n        return snippet;\n    }\n}\nvar $5a421bc687dc4a68$export$2e2bcd8739ae039 = $5a421bc687dc4a68$var$StorageArrayElementNode;\nconst $5a421bc687dc4a68$export$9c4d65803fb1edd1 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($5a421bc687dc4a68$var$StorageArrayElementNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"storageElement\", $5a421bc687dc4a68$export$9c4d65803fb1edd1);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"StorageArrayElementNode\", $5a421bc687dc4a68$var$StorageArrayElementNode);\n\n\n\n\n\n\n\n\n\nclass $fa6828b33e09c0e9$var$TriplanarTexturesNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(textureXNode, textureYNode = null, textureZNode = null, scaleNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1), positionNode = (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f), normalNode = (0, $b8bdffed4c803471$export$c94af1e24aa56d8f)){\n        super(\"vec4\");\n        this.textureXNode = textureXNode;\n        this.textureYNode = textureYNode;\n        this.textureZNode = textureZNode;\n        this.scaleNode = scaleNode;\n        this.positionNode = positionNode;\n        this.normalNode = normalNode;\n    }\n    setup() {\n        const { textureXNode: textureXNode, textureYNode: textureYNode, textureZNode: textureZNode, scaleNode: scaleNode, positionNode: positionNode, normalNode: normalNode } = this;\n        // Ref: https://github.com/keijiro/StandardTriplanar\n        // Blending factor of triplanar mapping\n        let bf = normalNode.abs().normalize();\n        bf = bf.div(bf.dot((0, $64e573acaa48d904$export$9100789c9d999364)(1.0)));\n        // Triplanar mapping\n        const tx = positionNode.yz.mul(scaleNode);\n        const ty = positionNode.zx.mul(scaleNode);\n        const tz = positionNode.xy.mul(scaleNode);\n        // Base color\n        const textureX = textureXNode.value;\n        const textureY = textureYNode !== null ? textureYNode.value : textureX;\n        const textureZ = textureZNode !== null ? textureZNode.value : textureX;\n        const cx = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(textureX, tx).mul(bf.x);\n        const cy = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(textureY, ty).mul(bf.y);\n        const cz = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(textureZ, tz).mul(bf.z);\n        return (0, $1a899e4dee2452c3$export$e16d8520af44a096)(cx, cy, cz);\n    }\n}\nvar $fa6828b33e09c0e9$export$2e2bcd8739ae039 = $fa6828b33e09c0e9$var$TriplanarTexturesNode;\nconst $fa6828b33e09c0e9$export$98913c3ae6fbe803 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($fa6828b33e09c0e9$var$TriplanarTexturesNode);\nconst $fa6828b33e09c0e9$export$86ecb77d774ad294 = (...params)=>$fa6828b33e09c0e9$export$98913c3ae6fbe803(...params);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"triplanarTexture\", $fa6828b33e09c0e9$export$86ecb77d774ad294);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TriplanarTexturesNode\", $fa6828b33e09c0e9$var$TriplanarTexturesNode);\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $b7ce77d9013abc09$var$_reflectorPlane = new (0, $ilwiq.Plane)();\nconst $b7ce77d9013abc09$var$_normal = new (0, $ilwiq.Vector3)();\nconst $b7ce77d9013abc09$var$_reflectorWorldPosition = new (0, $ilwiq.Vector3)();\nconst $b7ce77d9013abc09$var$_cameraWorldPosition = new (0, $ilwiq.Vector3)();\nconst $b7ce77d9013abc09$var$_rotationMatrix = new (0, $ilwiq.Matrix4)();\nconst $b7ce77d9013abc09$var$_lookAtPosition = new (0, $ilwiq.Vector3)(0, 0, -1);\nconst $b7ce77d9013abc09$var$clipPlane = new (0, $ilwiq.Vector4)();\nconst $b7ce77d9013abc09$var$_view = new (0, $ilwiq.Vector3)();\nconst $b7ce77d9013abc09$var$_target = new (0, $ilwiq.Vector3)();\nconst $b7ce77d9013abc09$var$_q = new (0, $ilwiq.Vector4)();\nconst $b7ce77d9013abc09$var$_size = new (0, $ilwiq.Vector2)();\nconst $b7ce77d9013abc09$var$_defaultRT = new (0, $ilwiq.RenderTarget)();\nconst $b7ce77d9013abc09$var$_defaultUV = (0, $64e573acaa48d904$export$e9830bc863290a54)((0, $5aad3d206b752601$export$76b08933cd505895).x.oneMinus(), (0, $5aad3d206b752601$export$76b08933cd505895).y);\nlet $b7ce77d9013abc09$var$_inReflector = false;\nclass $b7ce77d9013abc09$var$ReflectorNode extends (0, $1f6ba41f58cce433$export$2e2bcd8739ae039) {\n    constructor(parameters = {}){\n        super($b7ce77d9013abc09$var$_defaultRT.texture, $b7ce77d9013abc09$var$_defaultUV);\n        const { target: target = new (0, $ilwiq.Object3D)(), resolution: resolution = 1, generateMipmaps: generateMipmaps = false, bounces: bounces = true } = parameters;\n        //\n        this.target = target;\n        this.resolution = resolution;\n        this.generateMipmaps = generateMipmaps;\n        this.bounces = bounces;\n        this.updateBeforeType = bounces ? (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER : (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME;\n        this.virtualCameras = new WeakMap();\n        this.renderTargets = new WeakMap();\n    }\n    _updateResolution(renderTarget, renderer) {\n        const resolution = this.resolution;\n        renderer.getDrawingBufferSize($b7ce77d9013abc09$var$_size);\n        renderTarget.setSize(Math.round($b7ce77d9013abc09$var$_size.width * resolution), Math.round($b7ce77d9013abc09$var$_size.height * resolution));\n    }\n    setup(builder) {\n        this._updateResolution($b7ce77d9013abc09$var$_defaultRT, builder.renderer);\n        return super.setup(builder);\n    }\n    getTextureNode() {\n        return this.textureNode;\n    }\n    getVirtualCamera(camera) {\n        let virtualCamera = this.virtualCameras.get(camera);\n        if (virtualCamera === undefined) {\n            virtualCamera = camera.clone();\n            this.virtualCameras.set(camera, virtualCamera);\n        }\n        return virtualCamera;\n    }\n    getRenderTarget(camera) {\n        let renderTarget = this.renderTargets.get(camera);\n        if (renderTarget === undefined) {\n            renderTarget = new (0, $ilwiq.RenderTarget)(0, 0, {\n                type: (0, $ilwiq.HalfFloatType)\n            });\n            if (this.generateMipmaps === true) {\n                renderTarget.texture.minFilter = (0, $ilwiq.LinearMipMapLinearFilter);\n                renderTarget.texture.generateMipmaps = true;\n            }\n            this.renderTargets.set(camera, renderTarget);\n        }\n        return renderTarget;\n    }\n    updateBefore(frame) {\n        if (this.bounces === false && $b7ce77d9013abc09$var$_inReflector) return false;\n        $b7ce77d9013abc09$var$_inReflector = true;\n        const { scene: scene, camera: camera, renderer: renderer, material: material } = frame;\n        const { target: target } = this;\n        const virtualCamera = this.getVirtualCamera(camera);\n        const renderTarget = this.getRenderTarget(virtualCamera);\n        renderer.getDrawingBufferSize($b7ce77d9013abc09$var$_size);\n        this._updateResolution(renderTarget, renderer);\n        //\n        $b7ce77d9013abc09$var$_reflectorWorldPosition.setFromMatrixPosition(target.matrixWorld);\n        $b7ce77d9013abc09$var$_cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n        $b7ce77d9013abc09$var$_rotationMatrix.extractRotation(target.matrixWorld);\n        $b7ce77d9013abc09$var$_normal.set(0, 0, 1);\n        $b7ce77d9013abc09$var$_normal.applyMatrix4($b7ce77d9013abc09$var$_rotationMatrix);\n        $b7ce77d9013abc09$var$_view.subVectors($b7ce77d9013abc09$var$_reflectorWorldPosition, $b7ce77d9013abc09$var$_cameraWorldPosition);\n        // Avoid rendering when reflector is facing away\n        if ($b7ce77d9013abc09$var$_view.dot($b7ce77d9013abc09$var$_normal) > 0) return;\n        $b7ce77d9013abc09$var$_view.reflect($b7ce77d9013abc09$var$_normal).negate();\n        $b7ce77d9013abc09$var$_view.add($b7ce77d9013abc09$var$_reflectorWorldPosition);\n        $b7ce77d9013abc09$var$_rotationMatrix.extractRotation(camera.matrixWorld);\n        $b7ce77d9013abc09$var$_lookAtPosition.set(0, 0, -1);\n        $b7ce77d9013abc09$var$_lookAtPosition.applyMatrix4($b7ce77d9013abc09$var$_rotationMatrix);\n        $b7ce77d9013abc09$var$_lookAtPosition.add($b7ce77d9013abc09$var$_cameraWorldPosition);\n        $b7ce77d9013abc09$var$_target.subVectors($b7ce77d9013abc09$var$_reflectorWorldPosition, $b7ce77d9013abc09$var$_lookAtPosition);\n        $b7ce77d9013abc09$var$_target.reflect($b7ce77d9013abc09$var$_normal).negate();\n        $b7ce77d9013abc09$var$_target.add($b7ce77d9013abc09$var$_reflectorWorldPosition);\n        //\n        virtualCamera.coordinateSystem = camera.coordinateSystem;\n        virtualCamera.position.copy($b7ce77d9013abc09$var$_view);\n        virtualCamera.up.set(0, 1, 0);\n        virtualCamera.up.applyMatrix4($b7ce77d9013abc09$var$_rotationMatrix);\n        virtualCamera.up.reflect($b7ce77d9013abc09$var$_normal);\n        virtualCamera.lookAt($b7ce77d9013abc09$var$_target);\n        virtualCamera.near = camera.near;\n        virtualCamera.far = camera.far;\n        virtualCamera.updateMatrixWorld();\n        virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n        // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n        // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n        $b7ce77d9013abc09$var$_reflectorPlane.setFromNormalAndCoplanarPoint($b7ce77d9013abc09$var$_normal, $b7ce77d9013abc09$var$_reflectorWorldPosition);\n        $b7ce77d9013abc09$var$_reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n        $b7ce77d9013abc09$var$clipPlane.set($b7ce77d9013abc09$var$_reflectorPlane.normal.x, $b7ce77d9013abc09$var$_reflectorPlane.normal.y, $b7ce77d9013abc09$var$_reflectorPlane.normal.z, $b7ce77d9013abc09$var$_reflectorPlane.constant);\n        const projectionMatrix = virtualCamera.projectionMatrix;\n        $b7ce77d9013abc09$var$_q.x = (Math.sign($b7ce77d9013abc09$var$clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n        $b7ce77d9013abc09$var$_q.y = (Math.sign($b7ce77d9013abc09$var$clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n        $b7ce77d9013abc09$var$_q.z = -1;\n        $b7ce77d9013abc09$var$_q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n        // Calculate the scaled plane vector\n        $b7ce77d9013abc09$var$clipPlane.multiplyScalar(1.0 / $b7ce77d9013abc09$var$clipPlane.dot($b7ce77d9013abc09$var$_q));\n        const clipBias = 0;\n        // Replacing the third row of the projection matrix\n        projectionMatrix.elements[2] = $b7ce77d9013abc09$var$clipPlane.x;\n        projectionMatrix.elements[6] = $b7ce77d9013abc09$var$clipPlane.y;\n        projectionMatrix.elements[10] = $b7ce77d9013abc09$var$clipPlane.z - clipBias;\n        projectionMatrix.elements[14] = $b7ce77d9013abc09$var$clipPlane.w;\n        //\n        this.value = renderTarget.texture;\n        material.visible = false;\n        const currentRenderTarget = renderer.getRenderTarget();\n        renderer.setRenderTarget(renderTarget);\n        renderer.render(scene, virtualCamera);\n        renderer.setRenderTarget(currentRenderTarget);\n        material.visible = true;\n        $b7ce77d9013abc09$var$_inReflector = false;\n    }\n}\nconst $b7ce77d9013abc09$export$b5a7f174a914fa82 = (parameters)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $b7ce77d9013abc09$var$ReflectorNode(parameters));\nvar $b7ce77d9013abc09$export$2e2bcd8739ae039 = $b7ce77d9013abc09$var$ReflectorNode;\n\n\n\n\n\n\n\n\n\n\nclass $52ba485ef810e651$var$BitangentNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $52ba485ef810e651$var$BitangentNode.LOCAL){\n        super(\"vec3\");\n        this.scope = scope;\n    }\n    getHash() {\n        return `bitangent-${this.scope}`;\n    }\n    generate(builder) {\n        const scope = this.scope;\n        let crossNormalTangent;\n        if (scope === $52ba485ef810e651$var$BitangentNode.GEOMETRY) crossNormalTangent = (0, $b8bdffed4c803471$export$2d025416a9cb464f).cross((0, $cbc2a1ac0ca143f0$export$ffefde522c47f278));\n        else if (scope === $52ba485ef810e651$var$BitangentNode.LOCAL) crossNormalTangent = (0, $b8bdffed4c803471$export$c94af1e24aa56d8f).cross((0, $cbc2a1ac0ca143f0$export$f53a7d05db86e284));\n        else if (scope === $52ba485ef810e651$var$BitangentNode.VIEW) crossNormalTangent = (0, $b8bdffed4c803471$export$c7d7ec78bf3ab28a).cross((0, $cbc2a1ac0ca143f0$export$610e156c53541bb9));\n        else if (scope === $52ba485ef810e651$var$BitangentNode.WORLD) crossNormalTangent = (0, $b8bdffed4c803471$export$8cce2f8527757c54).cross((0, $cbc2a1ac0ca143f0$export$58a1135040e57d7d));\n        const vertexNode = crossNormalTangent.mul((0, $cbc2a1ac0ca143f0$export$ffefde522c47f278).w).xyz;\n        const outputNode = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(vertexNode));\n        return outputNode.build(builder, this.getNodeType(builder));\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.scope = this.scope;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.scope = data.scope;\n    }\n}\n$52ba485ef810e651$var$BitangentNode.GEOMETRY = \"geometry\";\n$52ba485ef810e651$var$BitangentNode.LOCAL = \"local\";\n$52ba485ef810e651$var$BitangentNode.VIEW = \"view\";\n$52ba485ef810e651$var$BitangentNode.WORLD = \"world\";\nvar $52ba485ef810e651$export$2e2bcd8739ae039 = $52ba485ef810e651$var$BitangentNode;\nconst $52ba485ef810e651$export$11772476513377e9 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($52ba485ef810e651$var$BitangentNode, $52ba485ef810e651$var$BitangentNode.GEOMETRY);\nconst $52ba485ef810e651$export$851992b7cb630fa = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($52ba485ef810e651$var$BitangentNode, $52ba485ef810e651$var$BitangentNode.LOCAL);\nconst $52ba485ef810e651$export$d7aac59a4a8f24d4 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($52ba485ef810e651$var$BitangentNode, $52ba485ef810e651$var$BitangentNode.VIEW);\nconst $52ba485ef810e651$export$dbd309b70bea5ac6 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($52ba485ef810e651$var$BitangentNode, $52ba485ef810e651$var$BitangentNode.WORLD);\nconst $52ba485ef810e651$export$38ca19aed25b489d = (0, $4b9f12ce87d17074$export$a3295358bff77e)((0, $b8bdffed4c803471$export$c58d63d09d102e3c).cross((0, $cbc2a1ac0ca143f0$export$c6b946ad70a6b9af)).mul((0, $cbc2a1ac0ca143f0$export$ffefde522c47f278).w));\nconst $52ba485ef810e651$export$224a749e3d392247 = (0, $4b9f12ce87d17074$export$a3295358bff77e)($52ba485ef810e651$export$38ca19aed25b489d.transformDirection((0, $bab16494dbba4b41$export$6f7d94c027189d78)));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"BitangentNode\", $52ba485ef810e651$var$BitangentNode);\n\n\n\n\n\n\nconst $21ac2e218bcd6cd4$export$6b671943eab6b881 = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)((0, $cbc2a1ac0ca143f0$export$610e156c53541bb9), (0, $52ba485ef810e651$export$d7aac59a4a8f24d4), (0, $b8bdffed4c803471$export$c7d7ec78bf3ab28a));\nconst $21ac2e218bcd6cd4$export$9512f0b14d82ed8f = (0, $f38f6f7a1974ae48$export$80de5077965297a8).mul($21ac2e218bcd6cd4$export$6b671943eab6b881) /*.normalize()*/ ;\nconst $21ac2e218bcd6cd4$export$a2debdc580a4d165 = (uv, scale)=>uv.sub($21ac2e218bcd6cd4$export$9512f0b14d82ed8f.mul(scale));\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $81b87afda96c5855$var$VertexColorNode extends (0, $30ecc590d6fb0411$export$2e2bcd8739ae039) {\n    constructor(index = 0){\n        super(null, \"vec4\");\n        this.isVertexColorNode = true;\n        this.index = index;\n    }\n    getAttributeName() {\n        const index = this.index;\n        return \"color\" + (index > 0 ? index : \"\");\n    }\n    generate(builder) {\n        const attributeName = this.getAttributeName(builder);\n        const geometryAttribute = builder.hasGeometryAttribute(attributeName);\n        let result;\n        if (geometryAttribute === true) result = super.generate(builder);\n        else // Vertex color fallback should be white\n        result = builder.generateConst(this.nodeType, new (0, $ilwiq.Vector4)(1, 1, 1, 1));\n        return result;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.index = this.index;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.index = data.index;\n    }\n}\nvar $81b87afda96c5855$export$2e2bcd8739ae039 = $81b87afda96c5855$var$VertexColorNode;\nconst $81b87afda96c5855$export$c8138cad8c736bdb = (...params)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $81b87afda96c5855$var$VertexColorNode(...params));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"VertexColorNode\", $81b87afda96c5855$var$VertexColorNode);\n\n\n\n\n\n\n\n\n\n\nclass $6cd745c2ea0d829e$var$RendererReferenceNode extends (0, $bc3fcdce5f983ff8$export$2e2bcd8739ae039) {\n    constructor(property, inputType, renderer = null){\n        super(property, inputType, renderer);\n        this.renderer = renderer;\n    }\n    updateReference(state) {\n        this.reference = this.renderer !== null ? this.renderer : state.renderer;\n        return this.reference;\n    }\n}\nvar $6cd745c2ea0d829e$export$2e2bcd8739ae039 = $6cd745c2ea0d829e$var$RendererReferenceNode;\nconst $6cd745c2ea0d829e$export$ab54dbb569ffae37 = (name, type, renderer)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $6cd745c2ea0d829e$var$RendererReferenceNode(name, type, renderer));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"RendererReferenceNode\", $6cd745c2ea0d829e$var$RendererReferenceNode);\n\n\n\n\n\n\n\n\n// Mipped Bicubic Texture Filtering by N8\n// https://www.shadertoy.com/view/Dl2SDW\nconst $377129c2cd62e2d1$var$bC = 1.0 / 6.0;\nconst $377129c2cd62e2d1$var$w0 = (a)=>(0, $1a899e4dee2452c3$export$6e3a27864ab166fe)($377129c2cd62e2d1$var$bC, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(a, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(a, a.negate().add(3.0)).sub(3.0)).add(1.0));\nconst $377129c2cd62e2d1$var$w1 = (a)=>(0, $1a899e4dee2452c3$export$6e3a27864ab166fe)($377129c2cd62e2d1$var$bC, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(a, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(a, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(3.0, a).sub(6.0))).add(4.0));\nconst $377129c2cd62e2d1$var$w2 = (a)=>(0, $1a899e4dee2452c3$export$6e3a27864ab166fe)($377129c2cd62e2d1$var$bC, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(a, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(a, (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(-3, a).add(3.0)).add(3.0)).add(1.0));\nconst $377129c2cd62e2d1$var$w3 = (a)=>(0, $1a899e4dee2452c3$export$6e3a27864ab166fe)($377129c2cd62e2d1$var$bC, (0, $4b9f12ce87d17074$export$9c297f60e22e3389)(a, 3));\nconst $377129c2cd62e2d1$var$g0 = (a)=>$377129c2cd62e2d1$var$w0(a).add($377129c2cd62e2d1$var$w1(a));\nconst $377129c2cd62e2d1$var$g1 = (a)=>$377129c2cd62e2d1$var$w2(a).add($377129c2cd62e2d1$var$w3(a));\n// h0 and h1 are the two offset functions\nconst $377129c2cd62e2d1$var$h0 = (a)=>(0, $1a899e4dee2452c3$export$e16d8520af44a096)(-1, $377129c2cd62e2d1$var$w1(a).div($377129c2cd62e2d1$var$w0(a).add($377129c2cd62e2d1$var$w1(a))));\nconst $377129c2cd62e2d1$var$h1 = (a)=>(0, $1a899e4dee2452c3$export$e16d8520af44a096)(1.0, $377129c2cd62e2d1$var$w3(a).div($377129c2cd62e2d1$var$w2(a).add($377129c2cd62e2d1$var$w3(a))));\nconst $377129c2cd62e2d1$var$bicubic = (textureNode, texelSize, lod)=>{\n    const uv = textureNode.uvNode;\n    const uvScaled = (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(uv, texelSize.zw).add(0.5);\n    const iuv = (0, $4b9f12ce87d17074$export$a3fe094919f356fd)(uvScaled);\n    const fuv = (0, $4b9f12ce87d17074$export$a57bfe0eb79af278)(uvScaled);\n    const g0x = $377129c2cd62e2d1$var$g0(fuv.x);\n    const g1x = $377129c2cd62e2d1$var$g1(fuv.x);\n    const h0x = $377129c2cd62e2d1$var$h0(fuv.x);\n    const h1x = $377129c2cd62e2d1$var$h1(fuv.x);\n    const h0y = $377129c2cd62e2d1$var$h0(fuv.y);\n    const h1y = $377129c2cd62e2d1$var$h1(fuv.y);\n    const p0 = (0, $64e573acaa48d904$export$e9830bc863290a54)(iuv.x.add(h0x), iuv.y.add(h0y)).sub(0.5).mul(texelSize.xy);\n    const p1 = (0, $64e573acaa48d904$export$e9830bc863290a54)(iuv.x.add(h1x), iuv.y.add(h0y)).sub(0.5).mul(texelSize.xy);\n    const p2 = (0, $64e573acaa48d904$export$e9830bc863290a54)(iuv.x.add(h0x), iuv.y.add(h1y)).sub(0.5).mul(texelSize.xy);\n    const p3 = (0, $64e573acaa48d904$export$e9830bc863290a54)(iuv.x.add(h1x), iuv.y.add(h1y)).sub(0.5).mul(texelSize.xy);\n    const a = $377129c2cd62e2d1$var$g0(fuv.y).mul((0, $1a899e4dee2452c3$export$e16d8520af44a096)(g0x.mul(textureNode.uv(p0).level(lod)), g1x.mul(textureNode.uv(p1).level(lod))));\n    const b = $377129c2cd62e2d1$var$g1(fuv.y).mul((0, $1a899e4dee2452c3$export$e16d8520af44a096)(g0x.mul(textureNode.uv(p2).level(lod)), g1x.mul(textureNode.uv(p3).level(lod))));\n    return a.add(b);\n};\nconst $377129c2cd62e2d1$var$textureBicubicMethod = (textureNode, lodNode)=>{\n    const fLodSize = (0, $64e573acaa48d904$export$e9830bc863290a54)(textureNode.size((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(lodNode)));\n    const cLodSize = (0, $64e573acaa48d904$export$e9830bc863290a54)(textureNode.size((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(lodNode.add(1.0))));\n    const fLodSizeInv = (0, $1a899e4dee2452c3$export$159d9494db57879b)(1.0, fLodSize);\n    const cLodSizeInv = (0, $1a899e4dee2452c3$export$159d9494db57879b)(1.0, cLodSize);\n    const fSample = $377129c2cd62e2d1$var$bicubic(textureNode, (0, $64e573acaa48d904$export$6dba2a1f0d609415)(fLodSizeInv, fLodSize), (0, $4b9f12ce87d17074$export$a3fe094919f356fd)(lodNode));\n    const cSample = $377129c2cd62e2d1$var$bicubic(textureNode, (0, $64e573acaa48d904$export$6dba2a1f0d609415)(cLodSizeInv, cLodSize), (0, $4b9f12ce87d17074$export$803ce6b71a0a94b2)(lodNode));\n    return (0, $4b9f12ce87d17074$export$a57bfe0eb79af278)(lodNode).mix(fSample, cSample);\n};\nclass $377129c2cd62e2d1$var$TextureBicubicNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(textureNode, blurNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(3)){\n        super(\"vec4\");\n        this.textureNode = textureNode;\n        this.blurNode = blurNode;\n    }\n    setup() {\n        return $377129c2cd62e2d1$var$textureBicubicMethod(this.textureNode, this.blurNode);\n    }\n}\nvar $377129c2cd62e2d1$export$2e2bcd8739ae039 = $377129c2cd62e2d1$var$TextureBicubicNode;\nconst $377129c2cd62e2d1$export$c7dcb77ffba0478b = (0, $64e573acaa48d904$export$60d11c6747b7deba)($377129c2cd62e2d1$var$TextureBicubicNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"bicubic\", $377129c2cd62e2d1$export$c7dcb77ffba0478b);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TextureBicubicNode\", $377129c2cd62e2d1$var$TextureBicubicNode);\n\n\n\n\n\n\n\n\nclass $9f5f3c10215bcabb$var$PointUVNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(){\n        super(\"vec2\");\n        this.isPointUVNode = true;\n    }\n    generate() {\n        return \"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )\";\n    }\n}\nvar $9f5f3c10215bcabb$export$2e2bcd8739ae039 = $9f5f3c10215bcabb$var$PointUVNode;\nconst $9f5f3c10215bcabb$export$50a103c0d3009b9c = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($9f5f3c10215bcabb$var$PointUVNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PointUVNode\", $9f5f3c10215bcabb$var$PointUVNode);\n\n\n\n\n\n\n\n\n\nclass $ed90125cba067264$var$SceneNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $ed90125cba067264$var$SceneNode.BACKGROUND_BLURRINESS, scene = null){\n        super();\n        this.scope = scope;\n        this.scene = scene;\n    }\n    setup(builder) {\n        const scope = this.scope;\n        const scene = this.scene !== null ? this.scene : builder.scene;\n        let output;\n        if (scope === $ed90125cba067264$var$SceneNode.BACKGROUND_BLURRINESS) output = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"backgroundBlurriness\", \"float\", scene);\n        else if (scope === $ed90125cba067264$var$SceneNode.BACKGROUND_INTENSITY) output = (0, $bc3fcdce5f983ff8$export$ca50aac9f3ba507f)(\"backgroundIntensity\", \"float\", scene);\n        else console.error(\"THREE.SceneNode: Unknown scope:\", scope);\n        return output;\n    }\n}\n$ed90125cba067264$var$SceneNode.BACKGROUND_BLURRINESS = \"backgroundBlurriness\";\n$ed90125cba067264$var$SceneNode.BACKGROUND_INTENSITY = \"backgroundIntensity\";\nvar $ed90125cba067264$export$2e2bcd8739ae039 = $ed90125cba067264$var$SceneNode;\nconst $ed90125cba067264$export$4e4686c12357d6e1 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($ed90125cba067264$var$SceneNode, $ed90125cba067264$var$SceneNode.BACKGROUND_BLURRINESS);\nconst $ed90125cba067264$export$aefe029977c9e2d3 = (0, $64e573acaa48d904$export$25c7ddd7ae9b45f3)($ed90125cba067264$var$SceneNode, $ed90125cba067264$var$SceneNode.BACKGROUND_INTENSITY);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"SceneNode\", $ed90125cba067264$var$SceneNode);\n\n\n\n\n\n\n\n\nclass $2e19d531317cb1ed$var$StorageBufferNode extends (0, $a987daf999c976be$export$2e2bcd8739ae039) {\n    constructor(value, bufferType, bufferCount = 0){\n        super(value, bufferType, bufferCount);\n        this.isStorageBufferNode = true;\n        this.bufferObject = false;\n        this._attribute = null;\n        this._varying = null;\n    }\n    getInputType() {\n        return \"storageBuffer\";\n    }\n    element(indexNode) {\n        return (0, $5a421bc687dc4a68$export$9c4d65803fb1edd1)(this, indexNode);\n    }\n    setBufferObject(value) {\n        this.bufferObject = value;\n        return this;\n    }\n    generate(builder) {\n        if (builder.isAvailable(\"storageBuffer\")) return super.generate(builder);\n        const nodeType = this.getNodeType(builder);\n        if (this._attribute === null) {\n            this._attribute = (0, $a2ee15aa30b9df14$export$1a0889be1cc680b2)(this.value);\n            this._varying = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(this._attribute);\n        }\n        const output = this._varying.build(builder, nodeType);\n        builder.registerTransform(output, this._attribute);\n        return output;\n    }\n}\nvar $2e19d531317cb1ed$export$2e2bcd8739ae039 = $2e19d531317cb1ed$var$StorageBufferNode;\nconst $2e19d531317cb1ed$export$ddcffe0146c8f882 = (value, type, count)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $2e19d531317cb1ed$var$StorageBufferNode(value, type, count));\nconst $2e19d531317cb1ed$export$4c8781371e5dd1de = (value, type, count)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $2e19d531317cb1ed$var$StorageBufferNode(value, type, count).setBufferObject(true));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"StorageBufferNode\", $2e19d531317cb1ed$var$StorageBufferNode);\n\n\n\n\n\n\n\nclass $589b7dbb0b726765$var$TextureStoreNode extends (0, $1f6ba41f58cce433$export$2e2bcd8739ae039) {\n    constructor(value, uvNode, storeNode = null){\n        super(value, uvNode);\n        this.storeNode = storeNode;\n        this.isStoreTextureNode = true;\n    }\n    getInputType() {\n        return \"storageTexture\";\n    }\n    setup(builder) {\n        super.setup(builder);\n        const properties = builder.getNodeProperties(this);\n        properties.storeNode = this.storeNode;\n    }\n    generate(builder, output) {\n        let snippet;\n        if (this.storeNode !== null) snippet = this.generateStore(builder);\n        else snippet = super.generate(builder, output);\n        return snippet;\n    }\n    generateStore(builder) {\n        const properties = builder.getNodeProperties(this);\n        const { uvNode: uvNode, storeNode: storeNode } = properties;\n        const textureProperty = super.generate(builder, \"property\");\n        const uvSnippet = uvNode.build(builder, \"uvec2\");\n        const storeSnippet = storeNode.build(builder, \"vec4\");\n        const snippet = builder.generateTextureStore(builder, textureProperty, uvSnippet, storeSnippet);\n        builder.addLineFlowCode(snippet);\n    }\n}\nvar $589b7dbb0b726765$export$2e2bcd8739ae039 = $589b7dbb0b726765$var$TextureStoreNode;\nconst $589b7dbb0b726765$var$textureStoreBase = (0, $64e573acaa48d904$export$60d11c6747b7deba)($589b7dbb0b726765$var$TextureStoreNode);\nconst $589b7dbb0b726765$export$487fc156e9e78580 = (value, uvNode, storeNode)=>{\n    const node = $589b7dbb0b726765$var$textureStoreBase(value, uvNode, storeNode);\n    if (storeNode !== null) node.append();\n    return node;\n};\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"TextureStoreNode\", $589b7dbb0b726765$var$TextureStoreNode);\n\n\n\n\n\n\nclass $21f046272e35fd77$var$UserDataNode extends (0, $bc3fcdce5f983ff8$export$2e2bcd8739ae039) {\n    constructor(property, inputType, userData = null){\n        super(property, inputType, userData);\n        this.userData = userData;\n    }\n    update(frame) {\n        this.reference = this.userData !== null ? this.userData : frame.object.userData;\n        super.update(frame);\n    }\n}\nvar $21f046272e35fd77$export$2e2bcd8739ae039 = $21f046272e35fd77$var$UserDataNode;\nconst $21f046272e35fd77$export$c2507140e5bb8721 = (name, inputType, userData)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $21f046272e35fd77$var$UserDataNode(name, inputType, userData));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"UserDataNode\", $21f046272e35fd77$var$UserDataNode);\n\n\n\n\n\n\nconst $45078c8cf7199bb1$export$12868464378242d5 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ base: base, blend: blend })=>{\n    const fn = (c)=>blend[c].lessThan((0, $4b9f12ce87d17074$export$fd293b15f47e270)).cond(blend[c], base[c].oneMinus().div(blend[c]).oneMinus().max(0));\n    return (0, $64e573acaa48d904$export$9100789c9d999364)(fn(\"x\"), fn(\"y\"), fn(\"z\"));\n}).setLayout({\n    name: \"burnColor\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"base\",\n            type: \"vec3\"\n        },\n        {\n            name: \"blend\",\n            type: \"vec3\"\n        }\n    ]\n});\nconst $45078c8cf7199bb1$export$20744c9ea7cb4182 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ base: base, blend: blend })=>{\n    const fn = (c)=>blend[c].equal(1.0).cond(blend[c], base[c].div(blend[c].oneMinus()).max(0));\n    return (0, $64e573acaa48d904$export$9100789c9d999364)(fn(\"x\"), fn(\"y\"), fn(\"z\"));\n}).setLayout({\n    name: \"dodgeColor\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"base\",\n            type: \"vec3\"\n        },\n        {\n            name: \"blend\",\n            type: \"vec3\"\n        }\n    ]\n});\nconst $45078c8cf7199bb1$export$80eb8887666700bd = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ base: base, blend: blend })=>{\n    const fn = (c)=>base[c].oneMinus().mul(blend[c].oneMinus()).oneMinus();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)(fn(\"x\"), fn(\"y\"), fn(\"z\"));\n}).setLayout({\n    name: \"screenColor\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"base\",\n            type: \"vec3\"\n        },\n        {\n            name: \"blend\",\n            type: \"vec3\"\n        }\n    ]\n});\nconst $45078c8cf7199bb1$export$fb5a4f9091ecd26a = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ base: base, blend: blend })=>{\n    const fn = (c)=>base[c].lessThan(0.5).cond(base[c].mul(blend[c], 2.0), base[c].oneMinus().mul(blend[c].oneMinus()).oneMinus());\n    //const fn = ( c ) => mix( base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus(), base[ c ].mul( blend[ c ], 2.0 ), step( base[ c ], 0.5 ) );\n    return (0, $64e573acaa48d904$export$9100789c9d999364)(fn(\"x\"), fn(\"y\"), fn(\"z\"));\n}).setLayout({\n    name: \"overlayColor\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"base\",\n            type: \"vec3\"\n        },\n        {\n            name: \"blend\",\n            type: \"vec3\"\n        }\n    ]\n});\nclass $45078c8cf7199bb1$var$BlendModeNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(blendMode, baseNode, blendNode){\n        super();\n        this.blendMode = blendMode;\n        this.baseNode = baseNode;\n        this.blendNode = blendNode;\n    }\n    setup() {\n        const { blendMode: blendMode, baseNode: baseNode, blendNode: blendNode } = this;\n        const params = {\n            base: baseNode,\n            blend: blendNode\n        };\n        let outputNode = null;\n        if (blendMode === $45078c8cf7199bb1$var$BlendModeNode.BURN) outputNode = $45078c8cf7199bb1$export$12868464378242d5(params);\n        else if (blendMode === $45078c8cf7199bb1$var$BlendModeNode.DODGE) outputNode = $45078c8cf7199bb1$export$20744c9ea7cb4182(params);\n        else if (blendMode === $45078c8cf7199bb1$var$BlendModeNode.SCREEN) outputNode = $45078c8cf7199bb1$export$80eb8887666700bd(params);\n        else if (blendMode === $45078c8cf7199bb1$var$BlendModeNode.OVERLAY) outputNode = $45078c8cf7199bb1$export$fb5a4f9091ecd26a(params);\n        return outputNode;\n    }\n}\n$45078c8cf7199bb1$var$BlendModeNode.BURN = \"burn\";\n$45078c8cf7199bb1$var$BlendModeNode.DODGE = \"dodge\";\n$45078c8cf7199bb1$var$BlendModeNode.SCREEN = \"screen\";\n$45078c8cf7199bb1$var$BlendModeNode.OVERLAY = \"overlay\";\nvar $45078c8cf7199bb1$export$2e2bcd8739ae039 = $45078c8cf7199bb1$var$BlendModeNode;\nconst $45078c8cf7199bb1$export$9c0bd85cee0180d7 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($45078c8cf7199bb1$var$BlendModeNode, $45078c8cf7199bb1$var$BlendModeNode.BURN);\nconst $45078c8cf7199bb1$export$aff2976bcdc2c076 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($45078c8cf7199bb1$var$BlendModeNode, $45078c8cf7199bb1$var$BlendModeNode.DODGE);\nconst $45078c8cf7199bb1$export$29dd17c7f3c81c36 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($45078c8cf7199bb1$var$BlendModeNode, $45078c8cf7199bb1$var$BlendModeNode.OVERLAY);\nconst $45078c8cf7199bb1$export$be623a1d3e871e62 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($45078c8cf7199bb1$var$BlendModeNode, $45078c8cf7199bb1$var$BlendModeNode.SCREEN);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"burn\", $45078c8cf7199bb1$export$9c0bd85cee0180d7);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"dodge\", $45078c8cf7199bb1$export$aff2976bcdc2c076);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"overlay\", $45078c8cf7199bb1$export$29dd17c7f3c81c36);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"screen\", $45078c8cf7199bb1$export$be623a1d3e871e62);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"BlendModeNode\", $45078c8cf7199bb1$var$BlendModeNode);\n\n\n\n\n\n\n\n\n\n// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\nconst $2addaf1aca385ff6$var$dHdxy_fwd = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ textureNode: textureNode, bumpScale: bumpScale })=>{\n    let texNode = textureNode;\n    if (texNode.isTextureNode !== true) texNode.traverse((node)=>{\n        if (node.isTextureNode === true) texNode = node;\n    });\n    if (texNode.isTextureNode !== true) throw new Error(\"THREE.TSL: dHdxy_fwd() requires a TextureNode.\");\n    const Hll = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(textureNode);\n    const uvNode = texNode.uvNode || (0, $94fcc899fcb75301$export$c774ebbac59e31d3)();\n    // It's used to preserve the same TextureNode instance\n    const sampleTexture = (uv)=>textureNode.cache().context({\n            getUV: ()=>uv,\n            forceUVContext: true\n        });\n    return (0, $64e573acaa48d904$export$e9830bc863290a54)((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(sampleTexture(uvNode.add(uvNode.dFdx()))).sub(Hll), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(sampleTexture(uvNode.add(uvNode.dFdy()))).sub(Hll)).mul(bumpScale);\n});\nconst $2addaf1aca385ff6$var$perturbNormalArb = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { surf_pos: surf_pos, surf_norm: surf_norm, dHdxy: dHdxy } = inputs;\n    // normalize is done to ensure that the bump map looks the same regardless of the texture's scale\n    const vSigmaX = surf_pos.dFdx().normalize();\n    const vSigmaY = surf_pos.dFdy().normalize();\n    const vN = surf_norm; // normalized\n    const R1 = vSigmaY.cross(vN);\n    const R2 = vN.cross(vSigmaX);\n    const fDet = vSigmaX.dot(R1).mul((0, $2be1b52cd1acf25a$export$c2922972355d19f8));\n    const vGrad = fDet.sign().mul(dHdxy.x.mul(R1).add(dHdxy.y.mul(R2)));\n    return fDet.abs().mul(surf_norm).sub(vGrad).normalize();\n});\nclass $2addaf1aca385ff6$var$BumpMapNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(textureNode, scaleNode = null){\n        super(\"vec3\");\n        this.textureNode = textureNode;\n        this.scaleNode = scaleNode;\n    }\n    setup() {\n        const bumpScale = this.scaleNode !== null ? this.scaleNode : 1;\n        const dHdxy = $2addaf1aca385ff6$var$dHdxy_fwd({\n            textureNode: this.textureNode,\n            bumpScale: bumpScale\n        });\n        return $2addaf1aca385ff6$var$perturbNormalArb({\n            surf_pos: (0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd),\n            surf_norm: (0, $b8bdffed4c803471$export$c7d7ec78bf3ab28a),\n            dHdxy: dHdxy\n        });\n    }\n}\nvar $2addaf1aca385ff6$export$2e2bcd8739ae039 = $2addaf1aca385ff6$var$BumpMapNode;\nconst $2addaf1aca385ff6$export$f698f3a86d4e368b = (0, $64e573acaa48d904$export$60d11c6747b7deba)($2addaf1aca385ff6$var$BumpMapNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"bumpMap\", $2addaf1aca385ff6$export$f698f3a86d4e368b);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"BumpMapNode\", $2addaf1aca385ff6$var$BumpMapNode);\n\n\n\n\n\n\n\nconst $9fd94097d02ed2fc$var$saturationNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, adjustment: adjustment })=>{\n    return adjustment.mix($9fd94097d02ed2fc$export$5c6e3c2b59b7fbbe(color.rgb), color.rgb);\n});\nconst $9fd94097d02ed2fc$var$vibranceNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, adjustment: adjustment })=>{\n    const average = (0, $1a899e4dee2452c3$export$e16d8520af44a096)(color.r, color.g, color.b).div(3.0);\n    const mx = color.r.max(color.g.max(color.b));\n    const amt = mx.sub(average).mul(adjustment).mul(-3);\n    return (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(color.rgb, mx, amt);\n});\nconst $9fd94097d02ed2fc$var$hueNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, adjustment: adjustment })=>{\n    const k = (0, $64e573acaa48d904$export$9100789c9d999364)(0.57735, 0.57735, 0.57735);\n    const cosAngle = adjustment.cos();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)(color.rgb.mul(cosAngle).add(k.cross(color.rgb).mul(adjustment.sin()).add(k.mul((0, $4b9f12ce87d17074$export$94132a0e348806d4)(k, color.rgb).mul(cosAngle.oneMinus())))));\n});\nclass $9fd94097d02ed2fc$var$ColorAdjustmentNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(method, colorNode, adjustmentNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1)){\n        super(\"vec3\");\n        this.method = method;\n        this.colorNode = colorNode;\n        this.adjustmentNode = adjustmentNode;\n    }\n    setup() {\n        const { method: method, colorNode: colorNode, adjustmentNode: adjustmentNode } = this;\n        const callParams = {\n            color: colorNode,\n            adjustment: adjustmentNode\n        };\n        let outputNode = null;\n        if (method === $9fd94097d02ed2fc$var$ColorAdjustmentNode.SATURATION) outputNode = $9fd94097d02ed2fc$var$saturationNode(callParams);\n        else if (method === $9fd94097d02ed2fc$var$ColorAdjustmentNode.VIBRANCE) outputNode = $9fd94097d02ed2fc$var$vibranceNode(callParams);\n        else if (method === $9fd94097d02ed2fc$var$ColorAdjustmentNode.HUE) outputNode = $9fd94097d02ed2fc$var$hueNode(callParams);\n        else console.error(`${this.type}: Method \"${this.method}\" not supported!`);\n        return outputNode;\n    }\n}\n$9fd94097d02ed2fc$var$ColorAdjustmentNode.SATURATION = \"saturation\";\n$9fd94097d02ed2fc$var$ColorAdjustmentNode.VIBRANCE = \"vibrance\";\n$9fd94097d02ed2fc$var$ColorAdjustmentNode.HUE = \"hue\";\nvar $9fd94097d02ed2fc$export$2e2bcd8739ae039 = $9fd94097d02ed2fc$var$ColorAdjustmentNode;\nconst $9fd94097d02ed2fc$export$c8ee7f6ff22a137e = (0, $64e573acaa48d904$export$60d11c6747b7deba)($9fd94097d02ed2fc$var$ColorAdjustmentNode, $9fd94097d02ed2fc$var$ColorAdjustmentNode.SATURATION);\nconst $9fd94097d02ed2fc$export$9d69f5c452819e4 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($9fd94097d02ed2fc$var$ColorAdjustmentNode, $9fd94097d02ed2fc$var$ColorAdjustmentNode.VIBRANCE);\nconst $9fd94097d02ed2fc$export$97d7b0c7ddb78dcf = (0, $64e573acaa48d904$export$60d11c6747b7deba)($9fd94097d02ed2fc$var$ColorAdjustmentNode, $9fd94097d02ed2fc$var$ColorAdjustmentNode.HUE);\nconst $9fd94097d02ed2fc$export$7de5c0daa14eb656 = (0, $64e573acaa48d904$export$9100789c9d999364)(0.2125, 0.7154, 0.0721);\nconst $9fd94097d02ed2fc$export$5c6e3c2b59b7fbbe = (color, luma = $9fd94097d02ed2fc$export$7de5c0daa14eb656)=>(0, $4b9f12ce87d17074$export$94132a0e348806d4)(color, luma);\nconst $9fd94097d02ed2fc$export$454d09aca5f3ea63 = (color, threshold)=>(0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)((0, $64e573acaa48d904$export$9100789c9d999364)(0.0), color, $9fd94097d02ed2fc$export$5c6e3c2b59b7fbbe(color).sub(threshold).max(0));\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"saturation\", $9fd94097d02ed2fc$export$c8ee7f6ff22a137e);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"vibrance\", $9fd94097d02ed2fc$export$9d69f5c452819e4);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"hue\", $9fd94097d02ed2fc$export$97d7b0c7ddb78dcf);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"threshold\", $9fd94097d02ed2fc$export$454d09aca5f3ea63);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ColorAdjustmentNode\", $9fd94097d02ed2fc$var$ColorAdjustmentNode);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n// Normal Mapping Without Precomputed Tangents\n// http://www.thetenthplanet.de/archives/1180\nconst $dc29e1c3a610392c$var$perturbNormal2Arb = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { eye_pos: eye_pos, surf_norm: surf_norm, mapN: mapN, uv: uv } = inputs;\n    const q0 = eye_pos.dFdx();\n    const q1 = eye_pos.dFdy();\n    const st0 = uv.dFdx();\n    const st1 = uv.dFdy();\n    const N = surf_norm; // normalized\n    const q1perp = q1.cross(N);\n    const q0perp = N.cross(q0);\n    const T = q1perp.mul(st0.x).add(q0perp.mul(st1.x));\n    const B = q1perp.mul(st0.y).add(q0perp.mul(st1.y));\n    const det = T.dot(T).max(B.dot(B));\n    const scale = (0, $2be1b52cd1acf25a$export$c2922972355d19f8).mul(det.inverseSqrt());\n    return (0, $1a899e4dee2452c3$export$e16d8520af44a096)(T.mul(mapN.x, scale), B.mul(mapN.y, scale), N.mul(mapN.z)).normalize();\n});\nclass $dc29e1c3a610392c$var$NormalMapNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(node, scaleNode = null){\n        super(\"vec3\");\n        this.node = node;\n        this.scaleNode = scaleNode;\n        this.normalMapType = (0, $ilwiq.TangentSpaceNormalMap);\n    }\n    setup(builder) {\n        const { normalMapType: normalMapType, scaleNode: scaleNode } = this;\n        let normalMap = this.node.mul(2.0).sub(1.0);\n        if (scaleNode !== null) normalMap = (0, $64e573acaa48d904$export$9100789c9d999364)(normalMap.xy.mul(scaleNode), normalMap.z);\n        let outputNode = null;\n        if (normalMapType === (0, $ilwiq.ObjectSpaceNormalMap)) outputNode = (0, $69c7546a6c9d8c2a$export$7375cd766aaa851d).mul(normalMap).normalize();\n        else if (normalMapType === (0, $ilwiq.TangentSpaceNormalMap)) {\n            const tangent = builder.hasGeometryAttribute(\"tangent\");\n            if (tangent === true) outputNode = (0, $21ac2e218bcd6cd4$export$6b671943eab6b881).mul(normalMap).normalize();\n            else outputNode = $dc29e1c3a610392c$var$perturbNormal2Arb({\n                eye_pos: (0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd),\n                surf_norm: (0, $b8bdffed4c803471$export$c7d7ec78bf3ab28a),\n                mapN: normalMap,\n                uv: (0, $94fcc899fcb75301$export$c774ebbac59e31d3)()\n            });\n        }\n        return outputNode;\n    }\n}\nvar $dc29e1c3a610392c$export$2e2bcd8739ae039 = $dc29e1c3a610392c$var$NormalMapNode;\nconst $dc29e1c3a610392c$export$7eb074e5fa623050 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($dc29e1c3a610392c$var$NormalMapNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"normalMap\", $dc29e1c3a610392c$export$7eb074e5fa623050);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"NormalMapNode\", $dc29e1c3a610392c$var$NormalMapNode);\n\n\n\n\n\nclass $f1d0c77778203dd9$var$PosterizeNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(sourceNode, stepsNode){\n        super();\n        this.sourceNode = sourceNode;\n        this.stepsNode = stepsNode;\n    }\n    setup() {\n        const { sourceNode: sourceNode, stepsNode: stepsNode } = this;\n        return sourceNode.mul(stepsNode).floor().div(stepsNode);\n    }\n}\nvar $f1d0c77778203dd9$export$2e2bcd8739ae039 = $f1d0c77778203dd9$var$PosterizeNode;\nconst $f1d0c77778203dd9$export$59be2f703dc04855 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($f1d0c77778203dd9$var$PosterizeNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"posterize\", $f1d0c77778203dd9$export$59be2f703dc04855);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PosterizeNode\", $f1d0c77778203dd9$var$PosterizeNode);\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n// exposure only\nconst $2fff765b3e5206cf$var$LinearToneMappingNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, exposure: exposure })=>{\n    return color.mul(exposure).clamp();\n});\n// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf\nconst $2fff765b3e5206cf$var$ReinhardToneMappingNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, exposure: exposure })=>{\n    color = color.mul(exposure);\n    return color.div(color.add(1.0)).clamp();\n});\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nconst $2fff765b3e5206cf$var$OptimizedCineonToneMappingNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, exposure: exposure })=>{\n    // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n    color = color.mul(exposure);\n    color = color.sub(0.004).max(0.0);\n    const a = color.mul(color.mul(6.2).add(0.5));\n    const b = color.mul(color.mul(6.2).add(1.7)).add(0.06);\n    return a.div(b).pow(2.2);\n});\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nconst $2fff765b3e5206cf$var$RRTAndODTFit = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color })=>{\n    const a = color.mul(color.add(0.0245786)).sub(0.000090537);\n    const b = color.mul(color.add(0.4329510).mul(0.983729)).add(0.238081);\n    return a.div(b);\n});\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nconst $2fff765b3e5206cf$var$ACESFilmicToneMappingNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, exposure: exposure })=>{\n    // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n    const ACESInputMat = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)(0.59719, 0.35458, 0.04823, 0.07600, 0.90834, 0.01566, 0.02840, 0.13383, 0.83777);\n    // ODT_SAT => XYZ => D60_2_D65 => sRGB\n    const ACESOutputMat = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)(1.60475, -0.53108, -0.07367, -0.10208, 1.10813, -0.00605, -0.00327, -0.07276, 1.07602);\n    color = color.mul(exposure).div(0.6);\n    color = ACESInputMat.mul(color);\n    // Apply RRT and ODT\n    color = $2fff765b3e5206cf$var$RRTAndODTFit({\n        color: color\n    });\n    color = ACESOutputMat.mul(color);\n    // Clamp to [0, 1]\n    return color.clamp();\n});\nconst $2fff765b3e5206cf$var$LINEAR_REC2020_TO_LINEAR_SRGB = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)((0, $64e573acaa48d904$export$9100789c9d999364)(1.6605, -0.1246, -0.0182), (0, $64e573acaa48d904$export$9100789c9d999364)(-0.5876, 1.1329, -0.1006), (0, $64e573acaa48d904$export$9100789c9d999364)(-0.0728, -0.0083, 1.1187));\nconst $2fff765b3e5206cf$var$LINEAR_SRGB_TO_LINEAR_REC2020 = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)((0, $64e573acaa48d904$export$9100789c9d999364)(0.6274, 0.0691, 0.0164), (0, $64e573acaa48d904$export$9100789c9d999364)(0.3293, 0.9195, 0.0880), (0, $64e573acaa48d904$export$9100789c9d999364)(0.0433, 0.0113, 0.8956));\nconst $2fff765b3e5206cf$var$agxDefaultContrastApprox = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable])=>{\n    const x = (0, $64e573acaa48d904$export$9100789c9d999364)(x_immutable).toVar();\n    const x2 = (0, $64e573acaa48d904$export$9100789c9d999364)(x.mul(x)).toVar();\n    const x4 = (0, $64e573acaa48d904$export$9100789c9d999364)(x2.mul(x2)).toVar();\n    return (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(15.5).mul(x4.mul(x2)).sub((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(40.14, x4.mul(x))).add((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(31.96, x4).sub((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(6.868, x2.mul(x))).add((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(0.4298, x2).add((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(0.1191, x).sub(0.00232))));\n});\nconst $2fff765b3e5206cf$var$AGXToneMappingNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ color: color, exposure: exposure })=>{\n    const colortone = (0, $64e573acaa48d904$export$9100789c9d999364)(color).toVar();\n    const AgXInsetMatrix = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)((0, $64e573acaa48d904$export$9100789c9d999364)(0.856627153315983, 0.137318972929847, 0.11189821299995), (0, $64e573acaa48d904$export$9100789c9d999364)(0.0951212405381588, 0.761241990602591, 0.0767994186031903), (0, $64e573acaa48d904$export$9100789c9d999364)(0.0482516061458583, 0.101439036467562, 0.811302368396859));\n    const AgXOutsetMatrix = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)((0, $64e573acaa48d904$export$9100789c9d999364)(1.1271005818144368, -0.1413297634984383, -0.14132976349843826), (0, $64e573acaa48d904$export$9100789c9d999364)(-0.11060664309660323, 1.157823702216272, -0.11060664309660294), (0, $64e573acaa48d904$export$9100789c9d999364)(-0.016493938717834573, -0.016493938717834257, 1.2519364065950405));\n    const AgxMinEv = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(-12.47393);\n    const AgxMaxEv = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(4.026069);\n    colortone.mulAssign(exposure);\n    colortone.assign($2fff765b3e5206cf$var$LINEAR_SRGB_TO_LINEAR_REC2020.mul(colortone));\n    colortone.assign(AgXInsetMatrix.mul(colortone));\n    colortone.assign((0, $4b9f12ce87d17074$export$8960430cfd85939f)(colortone, 1e-10));\n    colortone.assign((0, $4b9f12ce87d17074$export$b9fae0bba9d9094d)(colortone));\n    colortone.assign(colortone.sub(AgxMinEv).div(AgxMaxEv.sub(AgxMinEv)));\n    colortone.assign((0, $4b9f12ce87d17074$export$7d15b64cf5a3a4c4)(colortone, 0.0, 1.0));\n    colortone.assign($2fff765b3e5206cf$var$agxDefaultContrastApprox(colortone));\n    colortone.assign(AgXOutsetMatrix.mul(colortone));\n    colortone.assign((0, $4b9f12ce87d17074$export$9c297f60e22e3389)((0, $4b9f12ce87d17074$export$8960430cfd85939f)((0, $64e573acaa48d904$export$9100789c9d999364)(0.0), colortone), (0, $64e573acaa48d904$export$9100789c9d999364)(2.2)));\n    colortone.assign($2fff765b3e5206cf$var$LINEAR_REC2020_TO_LINEAR_SRGB.mul(colortone));\n    colortone.assign((0, $4b9f12ce87d17074$export$7d15b64cf5a3a4c4)(colortone, 0.0, 1.0));\n    return colortone;\n});\nconst $2fff765b3e5206cf$var$toneMappingLib = {\n    [(0, $ilwiq.LinearToneMapping)]: $2fff765b3e5206cf$var$LinearToneMappingNode,\n    [(0, $ilwiq.ReinhardToneMapping)]: $2fff765b3e5206cf$var$ReinhardToneMappingNode,\n    [(0, $ilwiq.CineonToneMapping)]: $2fff765b3e5206cf$var$OptimizedCineonToneMappingNode,\n    [(0, $ilwiq.ACESFilmicToneMapping)]: $2fff765b3e5206cf$var$ACESFilmicToneMappingNode,\n    [(0, $ilwiq.AgXToneMapping)]: $2fff765b3e5206cf$var$AGXToneMappingNode\n};\nclass $2fff765b3e5206cf$var$ToneMappingNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(toneMapping = (0, $ilwiq.NoToneMapping), exposureNode = $2fff765b3e5206cf$export$6a4fd05fb7fdb032, colorNode = null){\n        super(\"vec3\");\n        this.toneMapping = toneMapping;\n        this.exposureNode = exposureNode;\n        this.colorNode = colorNode;\n    }\n    getCacheKey() {\n        let cacheKey = super.getCacheKey();\n        cacheKey = \"{toneMapping:\" + this.toneMapping + \",nodes:\" + cacheKey + \"}\";\n        return cacheKey;\n    }\n    setup(builder) {\n        const colorNode = this.colorNode || builder.context.color;\n        const toneMapping = this.toneMapping;\n        if (toneMapping === (0, $ilwiq.NoToneMapping)) return colorNode;\n        const toneMappingParams = {\n            exposure: this.exposureNode,\n            color: colorNode\n        };\n        const toneMappingNode = $2fff765b3e5206cf$var$toneMappingLib[toneMapping];\n        let outputNode = null;\n        if (toneMappingNode) outputNode = toneMappingNode(toneMappingParams);\n        else {\n            console.error(\"ToneMappingNode: Unsupported Tone Mapping configuration.\", toneMapping);\n            outputNode = colorNode;\n        }\n        return outputNode;\n    }\n}\nvar $2fff765b3e5206cf$export$2e2bcd8739ae039 = $2fff765b3e5206cf$var$ToneMappingNode;\nconst $2fff765b3e5206cf$export$91d5b91df9dcddb2 = (mapping, exposure, color)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $2fff765b3e5206cf$var$ToneMappingNode(mapping, (0, $64e573acaa48d904$export$e97474e17004dd41)(exposure), (0, $64e573acaa48d904$export$e97474e17004dd41)(color)));\nconst $2fff765b3e5206cf$export$6a4fd05fb7fdb032 = (0, $6cd745c2ea0d829e$export$ab54dbb569ffae37)(\"toneMappingExposure\", \"float\");\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"toneMapping\", (color, mapping, exposure)=>$2fff765b3e5206cf$export$91d5b91df9dcddb2(mapping, exposure, color));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ToneMappingNode\", $2fff765b3e5206cf$var$ToneMappingNode);\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nlet $e846a19a35b3ac4d$var$_sharedFramebuffer = null;\nclass $e846a19a35b3ac4d$var$ViewportSharedTextureNode extends (0, $24ec004cbc0fcec7$export$2e2bcd8739ae039) {\n    constructor(uvNode = (0, $5aad3d206b752601$export$76b08933cd505895), levelNode = null){\n        if ($e846a19a35b3ac4d$var$_sharedFramebuffer === null) $e846a19a35b3ac4d$var$_sharedFramebuffer = new (0, $ilwiq.FramebufferTexture)();\n        super(uvNode, levelNode, $e846a19a35b3ac4d$var$_sharedFramebuffer);\n    }\n    updateReference() {\n        return this;\n    }\n}\nvar $e846a19a35b3ac4d$export$2e2bcd8739ae039 = $e846a19a35b3ac4d$var$ViewportSharedTextureNode;\nconst $e846a19a35b3ac4d$export$53eb1fc033315f55 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($e846a19a35b3ac4d$var$ViewportSharedTextureNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"viewportSharedTexture\", $e846a19a35b3ac4d$export$53eb1fc033315f55);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ViewportSharedTextureNode\", $e846a19a35b3ac4d$var$ViewportSharedTextureNode);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $692fde6ccb23330d$var$PassTextureNode extends (0, $1f6ba41f58cce433$export$2e2bcd8739ae039) {\n    constructor(passNode, texture){\n        super(texture);\n        this.passNode = passNode;\n        this.setUpdateMatrix(false);\n    }\n    setup(builder) {\n        this.passNode.build(builder);\n        return super.setup(builder);\n    }\n    clone() {\n        return new this.constructor(this.passNode, this.value);\n    }\n}\nclass $692fde6ccb23330d$var$PassNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(scope, scene, camera){\n        super(\"vec4\");\n        this.scope = scope;\n        this.scene = scene;\n        this.camera = camera;\n        this._pixelRatio = 1;\n        this._width = 1;\n        this._height = 1;\n        const depthTexture = new (0, $ilwiq.DepthTexture)();\n        depthTexture.isRenderTargetTexture = true;\n        //depthTexture.type = FloatType;\n        depthTexture.name = \"PostProcessingDepth\";\n        const renderTarget = new (0, $ilwiq.RenderTarget)(this._width * this._pixelRatio, this._height * this._pixelRatio, {\n            type: (0, $ilwiq.HalfFloatType)\n        });\n        renderTarget.texture.name = \"PostProcessing\";\n        renderTarget.depthTexture = depthTexture;\n        this.renderTarget = renderTarget;\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).FRAME;\n        this._textureNode = (0, $64e573acaa48d904$export$e97474e17004dd41)(new $692fde6ccb23330d$var$PassTextureNode(this, renderTarget.texture));\n        this._depthTextureNode = (0, $64e573acaa48d904$export$e97474e17004dd41)(new $692fde6ccb23330d$var$PassTextureNode(this, depthTexture));\n        this._depthNode = null;\n        this._viewZNode = null;\n        this._cameraNear = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this._cameraFar = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this.isPassNode = true;\n    }\n    isGlobal() {\n        return true;\n    }\n    getTextureNode() {\n        return this._textureNode;\n    }\n    getTextureDepthNode() {\n        return this._depthTextureNode;\n    }\n    getViewZNode() {\n        if (this._viewZNode === null) {\n            const cameraNear = this._cameraNear;\n            const cameraFar = this._cameraFar;\n            this._viewZNode = (0, $17aa36cef00f0046$export$be58bb2e0c565f9d)(this._depthTextureNode, cameraNear, cameraFar);\n        }\n        return this._viewZNode;\n    }\n    getDepthNode() {\n        if (this._depthNode === null) {\n            const cameraNear = this._cameraNear;\n            const cameraFar = this._cameraFar;\n            this._depthNode = (0, $17aa36cef00f0046$export$22f8344c678d1434)(this.getViewZNode(), cameraNear, cameraFar);\n        }\n        return this._depthNode;\n    }\n    setup() {\n        return this.scope === $692fde6ccb23330d$var$PassNode.COLOR ? this.getTextureNode() : this.getDepthNode();\n    }\n    updateBefore(frame) {\n        const { renderer: renderer } = frame;\n        const { scene: scene, camera: camera } = this;\n        this._pixelRatio = renderer.getPixelRatio();\n        const size = renderer.getSize(new (0, $ilwiq.Vector2)());\n        this.setSize(size.width, size.height);\n        const currentToneMapping = renderer.toneMapping;\n        const currentToneMappingNode = renderer.toneMappingNode;\n        const currentRenderTarget = renderer.getRenderTarget();\n        this._cameraNear.value = camera.near;\n        this._cameraFar.value = camera.far;\n        renderer.toneMapping = (0, $ilwiq.NoToneMapping);\n        renderer.toneMappingNode = null;\n        renderer.setRenderTarget(this.renderTarget);\n        renderer.render(scene, camera);\n        renderer.toneMapping = currentToneMapping;\n        renderer.toneMappingNode = currentToneMappingNode;\n        renderer.setRenderTarget(currentRenderTarget);\n    }\n    setSize(width, height) {\n        this._width = width;\n        this._height = height;\n        const effectiveWidth = this._width * this._pixelRatio;\n        const effectiveHeight = this._height * this._pixelRatio;\n        this.renderTarget.setSize(effectiveWidth, effectiveHeight);\n    }\n    setPixelRatio(pixelRatio) {\n        this._pixelRatio = pixelRatio;\n        this.setSize(this._width, this._height);\n    }\n    dispose() {\n        this.renderTarget.dispose();\n    }\n}\n$692fde6ccb23330d$var$PassNode.COLOR = \"color\";\n$692fde6ccb23330d$var$PassNode.DEPTH = \"depth\";\nvar $692fde6ccb23330d$export$2e2bcd8739ae039 = $692fde6ccb23330d$var$PassNode;\nconst $692fde6ccb23330d$export$167b0ad523238611 = (scene, camera)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $692fde6ccb23330d$var$PassNode($692fde6ccb23330d$var$PassNode.COLOR, scene, camera));\nconst $692fde6ccb23330d$export$c017166c1605c3ce = (pass, texture)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $692fde6ccb23330d$var$PassTextureNode(pass, texture));\nconst $692fde6ccb23330d$export$e1b0df3d1505bf0b = (scene, camera)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $692fde6ccb23330d$var$PassNode($692fde6ccb23330d$var$PassNode.DEPTH, scene, camera));\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PassNode\", $692fde6ccb23330d$var$PassNode);\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n// Helper for passes that need to fill the viewport with a single quad.\nconst $c8776e54551061c7$var$_camera = new (0, $ilwiq.OrthographicCamera)(-1, 1, 1, -1, 0, 1);\n// https://github.com/mrdoob/three.js/pull/21358\nclass $c8776e54551061c7$var$QuadGeometry extends (0, $ilwiq.BufferGeometry) {\n    constructor(flipY = false){\n        super();\n        const uv = flipY === false ? [\n            0,\n            -1,\n            0,\n            1,\n            2,\n            1\n        ] : [\n            0,\n            2,\n            0,\n            0,\n            2,\n            0\n        ];\n        this.setAttribute(\"position\", new (0, $ilwiq.Float32BufferAttribute)([\n            -1,\n            3,\n            0,\n            -1,\n            -1,\n            0,\n            3,\n            -1,\n            0\n        ], 3));\n        this.setAttribute(\"uv\", new (0, $ilwiq.Float32BufferAttribute)(uv, 2));\n    }\n}\nconst $c8776e54551061c7$var$_geometry = new $c8776e54551061c7$var$QuadGeometry();\nclass $c8776e54551061c7$var$QuadMesh extends (0, $ilwiq.Mesh) {\n    constructor(material = null){\n        super($c8776e54551061c7$var$_geometry, material);\n        this.camera = $c8776e54551061c7$var$_camera;\n    }\n    renderAsync(renderer) {\n        return renderer.renderAsync(this, $c8776e54551061c7$var$_camera);\n    }\n    render(renderer) {\n        renderer.render(this, $c8776e54551061c7$var$_camera);\n    }\n}\nvar $c8776e54551061c7$export$2e2bcd8739ae039 = $c8776e54551061c7$var$QuadMesh;\n\n\n// WebGPU: The use of a single QuadMesh for both gaussian blur passes results in a single RenderObject with a SampledTexture binding that\n// alternates between source textures and triggers creation of new BindGroups and BindGroupLayouts every frame.\nconst $ef71ed4c2ca5e033$var$quadMesh1 = new (0, $c8776e54551061c7$export$2e2bcd8739ae039)();\nconst $ef71ed4c2ca5e033$var$quadMesh2 = new (0, $c8776e54551061c7$export$2e2bcd8739ae039)();\nclass $ef71ed4c2ca5e033$var$GaussianBlurNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(textureNode, sigma = 2){\n        super(\"vec4\");\n        this.textureNode = textureNode;\n        this.sigma = sigma;\n        this.directionNode = (0, $64e573acaa48d904$export$e9830bc863290a54)(1);\n        this._invSize = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(new (0, $ilwiq.Vector2)());\n        this._passDirection = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(new (0, $ilwiq.Vector2)());\n        this._horizontalRT = new (0, $ilwiq.RenderTarget)();\n        this._horizontalRT.texture.name = \"GaussianBlurNode.horizontal\";\n        this._verticalRT = new (0, $ilwiq.RenderTarget)();\n        this._verticalRT.texture.name = \"GaussianBlurNode.vertical\";\n        this._textureNode = (0, $692fde6ccb23330d$export$c017166c1605c3ce)(this, this._verticalRT.texture);\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER;\n        this.resolution = new (0, $ilwiq.Vector2)(1, 1);\n    }\n    setSize(width, height) {\n        width = Math.max(Math.round(width * this.resolution.x), 1);\n        height = Math.max(Math.round(height * this.resolution.y), 1);\n        this._invSize.value.set(1 / width, 1 / height);\n        this._horizontalRT.setSize(width, height);\n        this._verticalRT.setSize(width, height);\n    }\n    updateBefore(frame) {\n        const { renderer: renderer } = frame;\n        const textureNode = this.textureNode;\n        const map = textureNode.value;\n        const currentRenderTarget = renderer.getRenderTarget();\n        const currentTexture = textureNode.value;\n        $ef71ed4c2ca5e033$var$quadMesh1.material = this._material;\n        $ef71ed4c2ca5e033$var$quadMesh2.material = this._material;\n        this.setSize(map.image.width, map.image.height);\n        const textureType = map.type;\n        this._horizontalRT.texture.type = textureType;\n        this._verticalRT.texture.type = textureType;\n        // horizontal\n        renderer.setRenderTarget(this._horizontalRT);\n        this._passDirection.value.set(1, 0);\n        $ef71ed4c2ca5e033$var$quadMesh1.render(renderer);\n        // vertical\n        textureNode.value = this._horizontalRT.texture;\n        renderer.setRenderTarget(this._verticalRT);\n        this._passDirection.value.set(0, 1);\n        $ef71ed4c2ca5e033$var$quadMesh2.render(renderer);\n        // restore\n        renderer.setRenderTarget(currentRenderTarget);\n        textureNode.value = currentTexture;\n    }\n    getTextureNode() {\n        return this._textureNode;\n    }\n    setup(builder) {\n        const textureNode = this.textureNode;\n        if (textureNode.isTextureNode !== true) {\n            console.error(\"GaussianBlurNode requires a TextureNode.\");\n            return (0, $64e573acaa48d904$export$6dba2a1f0d609415)();\n        }\n        //\n        const uvNode = textureNode.uvNode || (0, $94fcc899fcb75301$export$c774ebbac59e31d3)();\n        const sampleTexture = (uv)=>textureNode.cache().context({\n                getUV: ()=>uv,\n                forceUVContext: true\n            });\n        const blur = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            const kernelSize = 3 + 2 * this.sigma;\n            const gaussianCoefficients = this._getCoefficients(kernelSize);\n            const invSize = this._invSize;\n            const direction = (0, $64e573acaa48d904$export$e9830bc863290a54)(this.directionNode).mul(this._passDirection);\n            const weightSum = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(gaussianCoefficients[0]).toVar();\n            const diffuseSum = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(sampleTexture(uvNode).mul(weightSum)).toVar();\n            for(let i = 1; i < kernelSize; i++){\n                const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(i);\n                const w = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(gaussianCoefficients[i]);\n                const uvOffset = (0, $64e573acaa48d904$export$e9830bc863290a54)(direction.mul(invSize.mul(x))).toVar();\n                const sample1 = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(sampleTexture(uvNode.add(uvOffset)));\n                const sample2 = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(sampleTexture(uvNode.sub(uvOffset)));\n                diffuseSum.addAssign(sample1.add(sample2).mul(w));\n                weightSum.addAssign((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(2.0, w));\n            }\n            return diffuseSum.div(weightSum);\n        });\n        //\n        const material = this._material || (this._material = builder.createNodeMaterial());\n        material.fragmentNode = blur();\n        //\n        const properties = builder.getNodeProperties(this);\n        properties.textureNode = textureNode;\n        //\n        return this._textureNode;\n    }\n    _getCoefficients(kernelRadius) {\n        const coefficients = [];\n        for(let i = 0; i < kernelRadius; i++)coefficients.push(0.39894 * Math.exp(-0.5 * i * i / (kernelRadius * kernelRadius)) / kernelRadius);\n        return coefficients;\n    }\n}\nconst $ef71ed4c2ca5e033$export$585298029a8c6b39 = (node, sigma)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $ef71ed4c2ca5e033$var$GaussianBlurNode((0, $64e573acaa48d904$export$e97474e17004dd41)(node), sigma));\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"gaussianBlur\", $ef71ed4c2ca5e033$export$585298029a8c6b39);\nvar $ef71ed4c2ca5e033$export$2e2bcd8739ae039 = $ef71ed4c2ca5e033$var$GaussianBlurNode;\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\n\nconst $686a7b73ffb1f14f$var$quadMeshComp = new (0, $c8776e54551061c7$export$2e2bcd8739ae039)();\nclass $686a7b73ffb1f14f$var$AfterImageNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(textureNode, damp = 0.96){\n        super(textureNode);\n        this.textureNode = textureNode;\n        this.textureNodeOld = (0, $1f6ba41f58cce433$export$ab69073b3903a075)();\n        this.damp = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(damp);\n        this._compRT = new (0, $ilwiq.RenderTarget)();\n        this._compRT.texture.name = \"AfterImageNode.comp\";\n        this._oldRT = new (0, $ilwiq.RenderTarget)();\n        this._oldRT.texture.name = \"AfterImageNode.old\";\n        this._textureNode = (0, $692fde6ccb23330d$export$c017166c1605c3ce)(this, this._compRT.texture);\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER;\n    }\n    getTextureNode() {\n        return this._textureNode;\n    }\n    setSize(width, height) {\n        this._compRT.setSize(width, height);\n        this._oldRT.setSize(width, height);\n    }\n    updateBefore(frame) {\n        const { renderer: renderer } = frame;\n        const textureNode = this.textureNode;\n        const map = textureNode.value;\n        const textureType = map.type;\n        this._compRT.texture.type = textureType;\n        this._oldRT.texture.type = textureType;\n        const currentRenderTarget = renderer.getRenderTarget();\n        const currentTexture = textureNode.value;\n        this.textureNodeOld.value = this._oldRT.texture;\n        // comp\n        renderer.setRenderTarget(this._compRT);\n        $686a7b73ffb1f14f$var$quadMeshComp.render(renderer);\n        // Swap the textures\n        const temp = this._oldRT;\n        this._oldRT = this._compRT;\n        this._compRT = temp;\n        // set size before swapping fails\n        this.setSize(map.image.width, map.image.height);\n        renderer.setRenderTarget(currentRenderTarget);\n        textureNode.value = currentTexture;\n    }\n    setup(builder) {\n        const textureNode = this.textureNode;\n        const textureNodeOld = this.textureNodeOld;\n        if (textureNode.isTextureNode !== true) {\n            console.error(\"AfterImageNode requires a TextureNode.\");\n            return (0, $64e573acaa48d904$export$6dba2a1f0d609415)();\n        }\n        //\n        const uvNode = textureNode.uvNode || (0, $94fcc899fcb75301$export$c774ebbac59e31d3)();\n        textureNodeOld.uvNode = uvNode;\n        const sampleTexture = (uv)=>textureNode.cache().context({\n                getUV: ()=>uv,\n                forceUVContext: true\n            });\n        const when_gt = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, y_immutable])=>{\n            const y = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(y_immutable).toVar();\n            const x = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(x_immutable).toVar();\n            return (0, $4b9f12ce87d17074$export$8960430cfd85939f)((0, $4b9f12ce87d17074$export$c5552dfdbc7cec71)(x.sub(y)), 0.0);\n        });\n        const afterImg = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            const texelOld = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(textureNodeOld);\n            const texelNew = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(sampleTexture(uvNode));\n            texelOld.mulAssign(this.damp.mul(when_gt(texelOld, 0.1)));\n            return (0, $4b9f12ce87d17074$export$8960430cfd85939f)(texelNew, texelOld);\n        });\n        //\n        const materialComposed = this._materialComposed || (this._materialComposed = builder.createNodeMaterial());\n        materialComposed.fragmentNode = afterImg();\n        $686a7b73ffb1f14f$var$quadMeshComp.material = materialComposed;\n        //\n        const properties = builder.getNodeProperties(this);\n        properties.textureNode = textureNode;\n        //\n        return this._textureNode;\n    }\n}\nconst $686a7b73ffb1f14f$export$76c8ebee99ebd018 = (node, damp)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $686a7b73ffb1f14f$var$AfterImageNode((0, $64e573acaa48d904$export$e97474e17004dd41)(node), damp));\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"afterImage\", $686a7b73ffb1f14f$export$76c8ebee99ebd018);\nvar $686a7b73ffb1f14f$export$2e2bcd8739ae039 = $686a7b73ffb1f14f$var$AfterImageNode;\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nconst $f50d9b87a7a336ae$var$quadMesh = new (0, $c8776e54551061c7$export$2e2bcd8739ae039)();\nclass $f50d9b87a7a336ae$var$AnamorphicNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(textureNode, tresholdNode, scaleNode, samples){\n        super(\"vec4\");\n        this.textureNode = textureNode;\n        this.tresholdNode = tresholdNode;\n        this.scaleNode = scaleNode;\n        this.colorNode = (0, $64e573acaa48d904$export$9100789c9d999364)(0.1, 0.0, 1.0);\n        this.samples = samples;\n        this.resolution = new (0, $ilwiq.Vector2)(1, 1);\n        this._renderTarget = new (0, $ilwiq.RenderTarget)();\n        this._renderTarget.texture.name = \"anamorphic\";\n        this._invSize = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(new (0, $ilwiq.Vector2)());\n        this._textureNode = (0, $692fde6ccb23330d$export$c017166c1605c3ce)(this, this._renderTarget.texture);\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).RENDER;\n    }\n    getTextureNode() {\n        return this._textureNode;\n    }\n    setSize(width, height) {\n        this._invSize.value.set(1 / width, 1 / height);\n        width = Math.max(Math.round(width * this.resolution.x), 1);\n        height = Math.max(Math.round(height * this.resolution.y), 1);\n        this._renderTarget.setSize(width, height);\n    }\n    updateBefore(frame) {\n        const { renderer: renderer } = frame;\n        const textureNode = this.textureNode;\n        const map = textureNode.value;\n        this._renderTarget.texture.type = map.type;\n        const currentRenderTarget = renderer.getRenderTarget();\n        const currentTexture = textureNode.value;\n        $f50d9b87a7a336ae$var$quadMesh.material = this._material;\n        this.setSize(map.image.width, map.image.height);\n        // render\n        renderer.setRenderTarget(this._renderTarget);\n        $f50d9b87a7a336ae$var$quadMesh.render(renderer);\n        // restore\n        renderer.setRenderTarget(currentRenderTarget);\n        textureNode.value = currentTexture;\n    }\n    setup(builder) {\n        const textureNode = this.textureNode;\n        if (textureNode.isTextureNode !== true) {\n            console.error(\"AnamorphNode requires a TextureNode.\");\n            return (0, $64e573acaa48d904$export$6dba2a1f0d609415)();\n        }\n        //\n        const uvNode = textureNode.uvNode || (0, $94fcc899fcb75301$export$c774ebbac59e31d3)();\n        const sampleTexture = (uv)=>textureNode.cache().context({\n                getUV: ()=>uv,\n                forceUVContext: true\n            });\n        const anamorph = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            const samples = this.samples;\n            const halfSamples = Math.floor(samples / 2);\n            const total = (0, $64e573acaa48d904$export$9100789c9d999364)(0).toVar();\n            (0, $477d263401558a8d$export$f9ef67375ddc185)({\n                start: -halfSamples,\n                end: halfSamples\n            }, ({ i: i })=>{\n                const softness = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(i).abs().div(halfSamples).oneMinus();\n                const uv = (0, $64e573acaa48d904$export$e9830bc863290a54)(uvNode.x.add(this._invSize.x.mul(i).mul(this.scaleNode)), uvNode.y);\n                const color = sampleTexture(uv);\n                const pass = (0, $9fd94097d02ed2fc$export$454d09aca5f3ea63)(color, this.tresholdNode).mul(softness);\n                total.addAssign(pass);\n            });\n            return total.mul(this.colorNode);\n        });\n        //\n        const material = this._material || (this._material = builder.createNodeMaterial());\n        material.fragmentNode = anamorph();\n        //\n        const properties = builder.getNodeProperties(this);\n        properties.textureNode = textureNode;\n        //\n        return this._textureNode;\n    }\n}\nconst $f50d9b87a7a336ae$export$39ed2c432b59f759 = (node, threshold = .9, scale = 3, samples = 32)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $f50d9b87a7a336ae$var$AnamorphicNode((0, $64e573acaa48d904$export$e97474e17004dd41)(node), (0, $64e573acaa48d904$export$e97474e17004dd41)(threshold), (0, $64e573acaa48d904$export$e97474e17004dd41)(scale), samples));\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"anamorphic\", $f50d9b87a7a336ae$export$39ed2c432b59f759);\nvar $f50d9b87a7a336ae$export$2e2bcd8739ae039 = $f50d9b87a7a336ae$var$AnamorphicNode;\n\n\n\n\n\n\n\n\nclass $406e115494500d7a$var$FunctionCallNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(functionNode = null, parameters = {}){\n        super();\n        this.functionNode = functionNode;\n        this.parameters = parameters;\n    }\n    setParameters(parameters) {\n        this.parameters = parameters;\n        return this;\n    }\n    getParameters() {\n        return this.parameters;\n    }\n    getNodeType(builder) {\n        return this.functionNode.getNodeType(builder);\n    }\n    generate(builder) {\n        const params = [];\n        const functionNode = this.functionNode;\n        const inputs = functionNode.getInputs(builder);\n        const parameters = this.parameters;\n        if (Array.isArray(parameters)) for(let i = 0; i < parameters.length; i++){\n            const inputNode = inputs[i];\n            const node = parameters[i];\n            params.push(node.build(builder, inputNode.type));\n        }\n        else for (const inputNode of inputs){\n            const node = parameters[inputNode.name];\n            if (node !== undefined) params.push(node.build(builder, inputNode.type));\n            else throw new Error(`FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.`);\n        }\n        const functionName = functionNode.build(builder, \"property\");\n        return `${functionName}( ${params.join(\", \")} )`;\n    }\n}\nvar $406e115494500d7a$export$2e2bcd8739ae039 = $406e115494500d7a$var$FunctionCallNode;\nconst $406e115494500d7a$export$848feb93d8f32b9b = (func, ...params)=>{\n    params = params.length > 1 || params[0] && params[0].isNode === true ? (0, $64e573acaa48d904$export$34baf9226cd3d576)(params) : (0, $64e573acaa48d904$export$773e99721425b3b3)(params[0]);\n    return (0, $64e573acaa48d904$export$e97474e17004dd41)(new $406e115494500d7a$var$FunctionCallNode((0, $64e573acaa48d904$export$e97474e17004dd41)(func), params));\n};\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"call\", $406e115494500d7a$export$848feb93d8f32b9b);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"FunctionCallNode\", $406e115494500d7a$var$FunctionCallNode);\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $f447679c40dee83e$var$ScriptableValueNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(value = null){\n        super();\n        this._value = value;\n        this._cache = null;\n        this.inputType = null;\n        this.outpuType = null;\n        this.events = new (0, $ilwiq.EventDispatcher)();\n        this.isScriptableValueNode = true;\n    }\n    get isScriptableOutputNode() {\n        return this.outputType !== null;\n    }\n    set value(val) {\n        if (this._value === val) return;\n        if (this._cache && this.inputType === \"URL\" && this.value.value instanceof ArrayBuffer) {\n            URL.revokeObjectURL(this._cache);\n            this._cache = null;\n        }\n        this._value = val;\n        this.events.dispatchEvent({\n            type: \"change\"\n        });\n        this.refresh();\n    }\n    get value() {\n        return this._value;\n    }\n    refresh() {\n        this.events.dispatchEvent({\n            type: \"refresh\"\n        });\n    }\n    getValue() {\n        const value = this.value;\n        if (value && this._cache === null && this.inputType === \"URL\" && value.value instanceof ArrayBuffer) this._cache = URL.createObjectURL(new Blob([\n            value.value\n        ]));\n        else if (value && value.value !== null && value.value !== undefined && ((this.inputType === \"URL\" || this.inputType === \"String\") && typeof value.value === \"string\" || this.inputType === \"Number\" && typeof value.value === \"number\" || this.inputType === \"Vector2\" && value.value.isVector2 || this.inputType === \"Vector3\" && value.value.isVector3 || this.inputType === \"Vector4\" && value.value.isVector4 || this.inputType === \"Color\" && value.value.isColor || this.inputType === \"Matrix3\" && value.value.isMatrix3 || this.inputType === \"Matrix4\" && value.value.isMatrix4)) return value.value;\n        return this._cache || value;\n    }\n    getNodeType(builder) {\n        return this.value && this.value.isNode ? this.value.getNodeType(builder) : \"float\";\n    }\n    setup() {\n        return this.value && this.value.isNode ? this.value : (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)();\n    }\n    serialize(data) {\n        super.serialize(data);\n        if (this.value !== null) {\n            if (this.inputType === \"ArrayBuffer\") data.value = (0, $0bf48deb29103875$export$70c4ae293293ca1e)(this.value);\n            else data.value = this.value ? this.value.toJSON(data.meta).uuid : null;\n        } else data.value = null;\n        data.inputType = this.inputType;\n        data.outputType = this.outputType;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        let value = null;\n        if (data.value !== null) {\n            if (data.inputType === \"ArrayBuffer\") value = (0, $0bf48deb29103875$export$a7a17e76664e3e44)(data.value);\n            else if (data.inputType === \"Texture\") value = data.meta.textures[data.value];\n            else value = data.meta.nodes[data.value] || null;\n        }\n        this.value = value;\n        this.inputType = data.inputType;\n        this.outputType = data.outputType;\n    }\n}\nvar $f447679c40dee83e$export$2e2bcd8739ae039 = $f447679c40dee83e$var$ScriptableValueNode;\nconst $f447679c40dee83e$export$42b02b32bb931341 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($f447679c40dee83e$var$ScriptableValueNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"scriptableValue\", $f447679c40dee83e$export$42b02b32bb931341);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ScriptableValueNode\", $f447679c40dee83e$var$ScriptableValueNode);\n\n\n\nclass $3b97e526da0b8d9c$var$Resources extends Map {\n    get(key, callback = null, ...params) {\n        if (this.has(key)) return super.get(key);\n        if (callback !== null) {\n            const value = callback(...params);\n            this.set(key, value);\n            return value;\n        }\n    }\n}\nclass $3b97e526da0b8d9c$var$Parameters {\n    constructor(scriptableNode){\n        this.scriptableNode = scriptableNode;\n    }\n    get parameters() {\n        return this.scriptableNode.parameters;\n    }\n    get layout() {\n        return this.scriptableNode.getLayout();\n    }\n    getInputLayout(id) {\n        return this.scriptableNode.getInputLayout(id);\n    }\n    get(name) {\n        const param = this.parameters[name];\n        const value = param ? param.getValue() : null;\n        return value;\n    }\n}\nconst $3b97e526da0b8d9c$export$90b4d2ff6acb88af = new $3b97e526da0b8d9c$var$Resources();\nclass $3b97e526da0b8d9c$var$ScriptableNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(codeNode = null, parameters = {}){\n        super();\n        this.codeNode = codeNode;\n        this.parameters = parameters;\n        this._local = new $3b97e526da0b8d9c$var$Resources();\n        this._output = (0, $f447679c40dee83e$export$42b02b32bb931341)();\n        this._outputs = {};\n        this._source = this.source;\n        this._method = null;\n        this._object = null;\n        this._value = null;\n        this._needsOutputUpdate = true;\n        this.onRefresh = this.onRefresh.bind(this);\n        this.isScriptableNode = true;\n    }\n    get source() {\n        return this.codeNode ? this.codeNode.code : \"\";\n    }\n    setLocal(name, value) {\n        return this._local.set(name, value);\n    }\n    getLocal(name) {\n        return this._local.get(name);\n    }\n    onRefresh() {\n        this._refresh();\n    }\n    getInputLayout(id) {\n        for (const element of this.getLayout()){\n            if (element.inputType && (element.id === id || element.name === id)) return element;\n        }\n    }\n    getOutputLayout(id) {\n        for (const element of this.getLayout()){\n            if (element.outputType && (element.id === id || element.name === id)) return element;\n        }\n    }\n    setOutput(name, value) {\n        const outputs = this._outputs;\n        if (outputs[name] === undefined) outputs[name] = (0, $f447679c40dee83e$export$42b02b32bb931341)(value);\n        else outputs[name].value = value;\n        return this;\n    }\n    getOutput(name) {\n        return this._outputs[name];\n    }\n    getParameter(name) {\n        return this.parameters[name];\n    }\n    setParameter(name, value) {\n        const parameters = this.parameters;\n        if (value && value.isScriptableNode) {\n            this.deleteParameter(name);\n            parameters[name] = value;\n            parameters[name].getDefaultOutput().events.addEventListener(\"refresh\", this.onRefresh);\n        } else if (value && value.isScriptableValueNode) {\n            this.deleteParameter(name);\n            parameters[name] = value;\n            parameters[name].events.addEventListener(\"refresh\", this.onRefresh);\n        } else if (parameters[name] === undefined) {\n            parameters[name] = (0, $f447679c40dee83e$export$42b02b32bb931341)(value);\n            parameters[name].events.addEventListener(\"refresh\", this.onRefresh);\n        } else parameters[name].value = value;\n        return this;\n    }\n    getValue() {\n        return this.getDefaultOutput().getValue();\n    }\n    deleteParameter(name) {\n        let valueNode = this.parameters[name];\n        if (valueNode) {\n            if (valueNode.isScriptableNode) valueNode = valueNode.getDefaultOutput();\n            valueNode.events.removeEventListener(\"refresh\", this.onRefresh);\n        }\n        return this;\n    }\n    clearParameters() {\n        for (const name of Object.keys(this.parameters))this.deleteParameter(name);\n        this.needsUpdate = true;\n        return this;\n    }\n    call(name, ...params) {\n        const object = this.getObject();\n        const method = object[name];\n        if (typeof method === \"function\") return method(...params);\n    }\n    async callAsync(name, ...params) {\n        const object = this.getObject();\n        const method = object[name];\n        if (typeof method === \"function\") return method.constructor.name === \"AsyncFunction\" ? await method(...params) : method(...params);\n    }\n    getNodeType(builder) {\n        return this.getDefaultOutputNode().getNodeType(builder);\n    }\n    refresh(output = null) {\n        if (output !== null) this.getOutput(output).refresh();\n        else this._refresh();\n    }\n    getObject() {\n        if (this.needsUpdate) this.dispose();\n        if (this._object !== null) return this._object;\n        //\n        const refresh = ()=>this.refresh();\n        const setOutput = (id, value)=>this.setOutput(id, value);\n        const parameters = new $3b97e526da0b8d9c$var$Parameters(this);\n        const THREE = $3b97e526da0b8d9c$export$90b4d2ff6acb88af.get(\"THREE\");\n        const TSL = $3b97e526da0b8d9c$export$90b4d2ff6acb88af.get(\"TSL\");\n        const method = this.getMethod(this.codeNode);\n        const params = [\n            parameters,\n            this._local,\n            $3b97e526da0b8d9c$export$90b4d2ff6acb88af,\n            refresh,\n            setOutput,\n            THREE,\n            TSL\n        ];\n        this._object = method(...params);\n        const layout = this._object.layout;\n        if (layout) {\n            if (layout.cache === false) this._local.clear();\n            // default output\n            this._output.outputType = layout.outputType || null;\n            if (Array.isArray(layout.elements)) for (const element of layout.elements){\n                const id = element.id || element.name;\n                if (element.inputType) {\n                    if (this.getParameter(id) === undefined) this.setParameter(id, null);\n                    this.getParameter(id).inputType = element.inputType;\n                }\n                if (element.outputType) {\n                    if (this.getOutput(id) === undefined) this.setOutput(id, null);\n                    this.getOutput(id).outputType = element.outputType;\n                }\n            }\n        }\n        return this._object;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        for(const name in this.parameters){\n            let valueNode = this.parameters[name];\n            if (valueNode.isScriptableNode) valueNode = valueNode.getDefaultOutput();\n            valueNode.events.addEventListener(\"refresh\", this.onRefresh);\n        }\n    }\n    getLayout() {\n        return this.getObject().layout;\n    }\n    getDefaultOutputNode() {\n        const output = this.getDefaultOutput().value;\n        if (output && output.isNode) return output;\n        return (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)();\n    }\n    getDefaultOutput() {\n        return this._exec()._output;\n    }\n    getMethod() {\n        if (this.needsUpdate) this.dispose();\n        if (this._method !== null) return this._method;\n        //\n        const parametersProps = [\n            \"parameters\",\n            \"local\",\n            \"global\",\n            \"refresh\",\n            \"setOutput\",\n            \"THREE\",\n            \"TSL\"\n        ];\n        const interfaceProps = [\n            \"layout\",\n            \"init\",\n            \"main\",\n            \"dispose\"\n        ];\n        const properties = interfaceProps.join(\", \");\n        const declarations = \"var \" + properties + \"; var output = {};\\n\";\n        const returns = \"\\nreturn { ...output, \" + properties + \" };\";\n        const code = declarations + this.codeNode.code + returns;\n        //\n        this._method = new Function(...parametersProps, code);\n        return this._method;\n    }\n    dispose() {\n        if (this._method === null) return;\n        if (this._object && typeof this._object.dispose === \"function\") this._object.dispose();\n        this._method = null;\n        this._object = null;\n        this._source = null;\n        this._value = null;\n        this._needsOutputUpdate = true;\n        this._output.value = null;\n        this._outputs = {};\n    }\n    setup() {\n        return this.getDefaultOutputNode();\n    }\n    set needsUpdate(value) {\n        if (value === true) this.dispose();\n    }\n    get needsUpdate() {\n        return this.source !== this._source;\n    }\n    _exec() {\n        if (this.codeNode === null) return this;\n        if (this._needsOutputUpdate === true) {\n            this._value = this.call(\"main\");\n            this._needsOutputUpdate = false;\n        }\n        this._output.value = this._value;\n        return this;\n    }\n    _refresh() {\n        this.needsUpdate = true;\n        this._exec();\n        this._output.refresh();\n    }\n}\nvar $3b97e526da0b8d9c$export$2e2bcd8739ae039 = $3b97e526da0b8d9c$var$ScriptableNode;\nconst $3b97e526da0b8d9c$export$79490bb4e7cba98b = (0, $64e573acaa48d904$export$60d11c6747b7deba)($3b97e526da0b8d9c$var$ScriptableNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"scriptable\", $3b97e526da0b8d9c$export$79490bb4e7cba98b);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ScriptableNode\", $3b97e526da0b8d9c$var$ScriptableNode);\n\n\n\n\n\n\nclass $3809eb68bf73c76a$var$FogNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(colorNode, factorNode){\n        super(\"float\");\n        this.isFogNode = true;\n        this.colorNode = colorNode;\n        this.factorNode = factorNode;\n    }\n    getViewZNode(builder) {\n        let viewZ;\n        const getViewZ = builder.context.getViewZ;\n        if (getViewZ !== undefined) viewZ = getViewZ(this);\n        return (viewZ || (0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd).z).negate();\n    }\n    setup() {\n        return this.factorNode;\n    }\n}\nvar $3809eb68bf73c76a$export$2e2bcd8739ae039 = $3809eb68bf73c76a$var$FogNode;\nconst $3809eb68bf73c76a$export$fc12593d977205a8 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($3809eb68bf73c76a$var$FogNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"fog\", $3809eb68bf73c76a$export$fc12593d977205a8);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"FogNode\", $3809eb68bf73c76a$var$FogNode);\n\n\n\n\n\n\nclass $e2425efb24061140$var$FogRangeNode extends (0, $3809eb68bf73c76a$export$2e2bcd8739ae039) {\n    constructor(colorNode, nearNode, farNode){\n        super(colorNode);\n        this.isFogRangeNode = true;\n        this.nearNode = nearNode;\n        this.farNode = farNode;\n    }\n    setup(builder) {\n        const viewZ = this.getViewZNode(builder);\n        return (0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(this.nearNode, this.farNode, viewZ);\n    }\n}\nvar $e2425efb24061140$export$2e2bcd8739ae039 = $e2425efb24061140$var$FogRangeNode;\nconst $e2425efb24061140$export$40551637e51894d4 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($e2425efb24061140$var$FogRangeNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"rangeFog\", $e2425efb24061140$export$40551637e51894d4);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"FogRangeNode\", $e2425efb24061140$var$FogRangeNode);\n\n\n\n\n\nclass $c729351a4eb4857e$var$FogExp2Node extends (0, $3809eb68bf73c76a$export$2e2bcd8739ae039) {\n    constructor(colorNode, densityNode){\n        super(colorNode);\n        this.isFogExp2Node = true;\n        this.densityNode = densityNode;\n    }\n    setup(builder) {\n        const viewZ = this.getViewZNode(builder);\n        const density = this.densityNode;\n        return density.mul(density, viewZ, viewZ).negate().exp().oneMinus();\n    }\n}\nvar $c729351a4eb4857e$export$2e2bcd8739ae039 = $c729351a4eb4857e$var$FogExp2Node;\nconst $c729351a4eb4857e$export$31ec25b1026406ff = (0, $64e573acaa48d904$export$60d11c6747b7deba)($c729351a4eb4857e$var$FogExp2Node);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"densityFog\", $c729351a4eb4857e$export$31ec25b1026406ff);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"FogExp2Node\", $c729351a4eb4857e$var$FogExp2Node);\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nlet $87c28f8674e7c05e$var$min = null;\nlet $87c28f8674e7c05e$var$max = null;\nclass $87c28f8674e7c05e$var$RangeNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(minNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(), maxNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)()){\n        super();\n        this.minNode = minNode;\n        this.maxNode = maxNode;\n    }\n    getVectorLength(builder) {\n        const minLength = builder.getTypeLength((0, $0bf48deb29103875$export$cc7ab17e03dab419)(this.minNode.value));\n        const maxLength = builder.getTypeLength((0, $0bf48deb29103875$export$cc7ab17e03dab419)(this.maxNode.value));\n        return minLength > maxLength ? minLength : maxLength;\n    }\n    getNodeType(builder) {\n        return builder.object.isInstancedMesh === true ? builder.getTypeFromLength(this.getVectorLength(builder)) : \"float\";\n    }\n    setup(builder) {\n        const object = builder.object;\n        let output = null;\n        if (object.isInstancedMesh === true) {\n            const minValue = this.minNode.value;\n            const maxValue = this.maxNode.value;\n            const minLength = builder.getTypeLength((0, $0bf48deb29103875$export$cc7ab17e03dab419)(minValue));\n            const maxLength = builder.getTypeLength((0, $0bf48deb29103875$export$cc7ab17e03dab419)(maxValue));\n            $87c28f8674e7c05e$var$min = $87c28f8674e7c05e$var$min || new (0, $ilwiq.Vector4)();\n            $87c28f8674e7c05e$var$max = $87c28f8674e7c05e$var$max || new (0, $ilwiq.Vector4)();\n            $87c28f8674e7c05e$var$min.setScalar(0);\n            $87c28f8674e7c05e$var$max.setScalar(0);\n            if (minLength === 1) $87c28f8674e7c05e$var$min.setScalar(minValue);\n            else if (minValue.isColor) $87c28f8674e7c05e$var$min.set(minValue.r, minValue.g, minValue.b);\n            else $87c28f8674e7c05e$var$min.set(minValue.x, minValue.y, minValue.z || 0, minValue.w || 0);\n            if (maxLength === 1) $87c28f8674e7c05e$var$max.setScalar(maxValue);\n            else if (maxValue.isColor) $87c28f8674e7c05e$var$max.set(maxValue.r, maxValue.g, maxValue.b);\n            else $87c28f8674e7c05e$var$max.set(maxValue.x, maxValue.y, maxValue.z || 0, maxValue.w || 0);\n            const stride = 4;\n            const length = stride * object.count;\n            const array = new Float32Array(length);\n            for(let i = 0; i < length; i++){\n                const index = i % stride;\n                const minElementValue = $87c28f8674e7c05e$var$min.getComponent(index);\n                const maxElementValue = $87c28f8674e7c05e$var$max.getComponent(index);\n                array[i] = (0, $ilwiq.MathUtils).lerp(minElementValue, maxElementValue, Math.random());\n            }\n            const nodeType = this.getNodeType(builder);\n            output = (0, $a987daf999c976be$export$ab1029bcae9ddb4a)(array, \"vec4\", object.count).element((0, $655b15d454d9aca1$export$3691cd4c77fcb2c4)).convert(nodeType);\n        //output = bufferAttribute( array, 'vec4', 4, 0 ).convert( nodeType );\n        } else output = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0);\n        return output;\n    }\n}\nvar $87c28f8674e7c05e$export$2e2bcd8739ae039 = $87c28f8674e7c05e$var$RangeNode;\nconst $87c28f8674e7c05e$export$d02631cccf789723 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($87c28f8674e7c05e$var$RangeNode);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"RangeNode\", $87c28f8674e7c05e$var$RangeNode);\n\n\n\n\n\nclass $8390cbdc39eb8daf$var$ComputeNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(computeNode, count, workgroupSize = [\n        64\n    ]){\n        super(\"void\");\n        this.isComputeNode = true;\n        this.computeNode = computeNode;\n        this.count = count;\n        this.workgroupSize = workgroupSize;\n        this.dispatchCount = 0;\n        this.version = 1;\n        this.updateBeforeType = (0, $d70807ef9a9432a5$export$26f7a8bbd9469530).OBJECT;\n        this.updateDispatchCount();\n    }\n    dispose() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    }\n    set needsUpdate(value) {\n        if (value === true) this.version++;\n    }\n    updateDispatchCount() {\n        const { count: count, workgroupSize: workgroupSize } = this;\n        let size = workgroupSize[0];\n        for(let i = 1; i < workgroupSize.length; i++)size *= workgroupSize[i];\n        this.dispatchCount = Math.ceil(count / size);\n    }\n    onInit() {}\n    updateBefore({ renderer: renderer }) {\n        renderer.compute(this);\n    }\n    generate(builder) {\n        const { shaderStage: shaderStage } = builder;\n        if (shaderStage === \"compute\") {\n            const snippet = this.computeNode.build(builder, \"void\");\n            if (snippet !== \"\") builder.addLineFlowCode(snippet);\n        }\n    }\n}\nvar $8390cbdc39eb8daf$export$2e2bcd8739ae039 = $8390cbdc39eb8daf$var$ComputeNode;\nconst $8390cbdc39eb8daf$export$3b12cb22b12b954b = (node, count, workgroupSize)=>(0, $64e573acaa48d904$export$e97474e17004dd41)(new $8390cbdc39eb8daf$var$ComputeNode((0, $64e573acaa48d904$export$e97474e17004dd41)(node), count, workgroupSize));\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"compute\", $8390cbdc39eb8daf$export$3b12cb22b12b954b);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"ComputeNode\", $8390cbdc39eb8daf$var$ComputeNode);\n\n\n\n\n\n\nclass $a2368c5766fd8ca1$var$LightNode extends (0, $ed612ca4cc02a8a6$export$2e2bcd8739ae039) {\n    constructor(scope = $a2368c5766fd8ca1$var$LightNode.TARGET_DIRECTION, light = null){\n        super();\n        this.scope = scope;\n        this.light = light;\n    }\n    setup() {\n        const { scope: scope, light: light } = this;\n        let output = null;\n        if (scope === $a2368c5766fd8ca1$var$LightNode.TARGET_DIRECTION) output = (0, $bab16494dbba4b41$export$6f7d94c027189d78).transformDirection((0, $96d95a21a7a422db$export$85aefaa6fa23372c)(light).sub((0, $96d95a21a7a422db$export$85aefaa6fa23372c)(light.target)));\n        return output;\n    }\n    serialize(data) {\n        super.serialize(data);\n        data.scope = this.scope;\n    }\n    deserialize(data) {\n        super.deserialize(data);\n        this.scope = data.scope;\n    }\n}\n$a2368c5766fd8ca1$var$LightNode.TARGET_DIRECTION = \"targetDirection\";\nvar $a2368c5766fd8ca1$export$2e2bcd8739ae039 = $a2368c5766fd8ca1$var$LightNode;\nconst $a2368c5766fd8ca1$export$bee642e950dff992 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($a2368c5766fd8ca1$var$LightNode, $a2368c5766fd8ca1$var$LightNode.TARGET_DIRECTION);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"LightNode\", $a2368c5766fd8ca1$var$LightNode);\n\n\n\n\n\nconst $59bf9032899d3796$export$f35276a09da0cd36 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { lightDistance: lightDistance, cutoffDistance: cutoffDistance, decayExponent: decayExponent } = inputs;\n    // based upon Frostbite 3 Moving to Physically-based Rendering\n    // page 32, equation 26: E[window1]\n    // https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n    const distanceFalloff = lightDistance.pow(decayExponent).max(0.01).reciprocal();\n    return cutoffDistance.greaterThan(0).cond(distanceFalloff.mul(lightDistance.div(cutoffDistance).pow4().oneMinus().clamp().pow2()), distanceFalloff);\n}); // validated\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $728dd7107af8707a$var$PointLightNode extends (0, $bb48a619ccab5421$export$2e2bcd8739ae039) {\n    constructor(light = null){\n        super(light);\n        this.cutoffDistanceNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this.decayExponentNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n    }\n    update(frame) {\n        const { light: light } = this;\n        super.update(frame);\n        this.cutoffDistanceNode.value = light.distance;\n        this.decayExponentNode.value = light.decay;\n    }\n    setup(builder) {\n        const { colorNode: colorNode, cutoffDistanceNode: cutoffDistanceNode, decayExponentNode: decayExponentNode, light: light } = this;\n        const lightingModel = builder.context.lightingModel;\n        const lVector = (0, $96d95a21a7a422db$export$a7c813ba72ca1af0)(light).sub((0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd)); // @TODO: Add it into LightNode\n        const lightDirection = lVector.normalize();\n        const lightDistance = lVector.length();\n        const lightAttenuation = (0, $59bf9032899d3796$export$f35276a09da0cd36)({\n            lightDistance: lightDistance,\n            cutoffDistance: cutoffDistanceNode,\n            decayExponent: decayExponentNode\n        });\n        const lightColor = colorNode.mul(lightAttenuation);\n        const reflectedLight = builder.context.reflectedLight;\n        lightingModel.direct({\n            lightDirection: lightDirection,\n            lightColor: lightColor,\n            reflectedLight: reflectedLight\n        }, builder.stack, builder);\n    }\n}\nvar $728dd7107af8707a$export$2e2bcd8739ae039 = $728dd7107af8707a$var$PointLightNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"PointLightNode\", $728dd7107af8707a$var$PointLightNode);\n(0, $78e340fa4839c21a$export$505493ddf8b9d5d8)((0, $ilwiq.PointLight), $728dd7107af8707a$var$PointLightNode);\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $98665e686eef642b$var$DirectionalLightNode extends (0, $bb48a619ccab5421$export$2e2bcd8739ae039) {\n    constructor(light = null){\n        super(light);\n    }\n    setup(builder) {\n        super.setup(builder);\n        const lightingModel = builder.context.lightingModel;\n        const lightColor = this.colorNode;\n        const lightDirection = (0, $a2368c5766fd8ca1$export$bee642e950dff992)(this.light);\n        const reflectedLight = builder.context.reflectedLight;\n        lightingModel.direct({\n            lightDirection: lightDirection,\n            lightColor: lightColor,\n            reflectedLight: reflectedLight\n        }, builder.stack, builder);\n    }\n}\nvar $98665e686eef642b$export$2e2bcd8739ae039 = $98665e686eef642b$var$DirectionalLightNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"DirectionalLightNode\", $98665e686eef642b$var$DirectionalLightNode);\n(0, $78e340fa4839c21a$export$505493ddf8b9d5d8)((0, $ilwiq.DirectionalLight), $98665e686eef642b$var$DirectionalLightNode);\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $b67836d3785d959e$var$SpotLightNode extends (0, $bb48a619ccab5421$export$2e2bcd8739ae039) {\n    constructor(light = null){\n        super(light);\n        this.coneCosNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this.penumbraCosNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this.cutoffDistanceNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n        this.decayExponentNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(0);\n    }\n    update(frame) {\n        super.update(frame);\n        const { light: light } = this;\n        this.coneCosNode.value = Math.cos(light.angle);\n        this.penumbraCosNode.value = Math.cos(light.angle * (1 - light.penumbra));\n        this.cutoffDistanceNode.value = light.distance;\n        this.decayExponentNode.value = light.decay;\n    }\n    getSpotAttenuation(angleCosine) {\n        const { coneCosNode: coneCosNode, penumbraCosNode: penumbraCosNode } = this;\n        return (0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(coneCosNode, penumbraCosNode, angleCosine);\n    }\n    setup(builder) {\n        super.setup(builder);\n        const lightingModel = builder.context.lightingModel;\n        const { colorNode: colorNode, cutoffDistanceNode: cutoffDistanceNode, decayExponentNode: decayExponentNode, light: light } = this;\n        const lVector = (0, $96d95a21a7a422db$export$a7c813ba72ca1af0)(light).sub((0, $f38f6f7a1974ae48$export$3dfd735ebeac9bfd)); // @TODO: Add it into LightNode\n        const lightDirection = lVector.normalize();\n        const angleCos = lightDirection.dot((0, $a2368c5766fd8ca1$export$bee642e950dff992)(light));\n        const spotAttenuation = this.getSpotAttenuation(angleCos);\n        const lightDistance = lVector.length();\n        const lightAttenuation = (0, $59bf9032899d3796$export$f35276a09da0cd36)({\n            lightDistance: lightDistance,\n            cutoffDistance: cutoffDistanceNode,\n            decayExponent: decayExponentNode\n        });\n        const lightColor = colorNode.mul(spotAttenuation).mul(lightAttenuation);\n        const reflectedLight = builder.context.reflectedLight;\n        lightingModel.direct({\n            lightDirection: lightDirection,\n            lightColor: lightColor,\n            reflectedLight: reflectedLight\n        }, builder.stack, builder);\n    }\n}\nvar $b67836d3785d959e$export$2e2bcd8739ae039 = $b67836d3785d959e$var$SpotLightNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"SpotLightNode\", $b67836d3785d959e$var$SpotLightNode);\n(0, $78e340fa4839c21a$export$505493ddf8b9d5d8)((0, $ilwiq.SpotLight), $b67836d3785d959e$var$SpotLightNode);\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $18f320338d367599$var$IESSpotLight extends (0, $ilwiq.SpotLight) {\n    constructor(color, intensity, distance, angle, penumbra, decay){\n        super(color, intensity, distance, angle, penumbra, decay);\n        this.iesMap = null;\n    }\n    copy(source, recursive) {\n        super.copy(source, recursive);\n        this.iesMap = source.iesMap;\n        return this;\n    }\n}\nvar $18f320338d367599$export$2e2bcd8739ae039 = $18f320338d367599$var$IESSpotLight;\n\n\nclass $36460bd64d9cbbe7$var$IESSpotLightNode extends (0, $b67836d3785d959e$export$2e2bcd8739ae039) {\n    getSpotAttenuation(angleCosine) {\n        const iesMap = this.light.iesMap;\n        let spotAttenuation = null;\n        if (iesMap && iesMap.isTexture === true) {\n            const angle = angleCosine.acos().mul(1.0 / Math.PI);\n            spotAttenuation = (0, $1f6ba41f58cce433$export$ab69073b3903a075)(iesMap, (0, $64e573acaa48d904$export$e9830bc863290a54)(angle, 0), 0).r;\n        } else spotAttenuation = super.getSpotAttenuation(angleCosine);\n        return spotAttenuation;\n    }\n}\nvar $36460bd64d9cbbe7$export$2e2bcd8739ae039 = $36460bd64d9cbbe7$var$IESSpotLightNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"IESSpotLightNode\", $36460bd64d9cbbe7$var$IESSpotLightNode);\n(0, $78e340fa4839c21a$export$505493ddf8b9d5d8)((0, $18f320338d367599$export$2e2bcd8739ae039), $36460bd64d9cbbe7$var$IESSpotLightNode);\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $e14fac9aa6af7cb8$var$AmbientLightNode extends (0, $bb48a619ccab5421$export$2e2bcd8739ae039) {\n    constructor(light = null){\n        super(light);\n    }\n    setup({ context: context }) {\n        context.irradiance.addAssign(this.colorNode);\n    }\n}\nvar $e14fac9aa6af7cb8$export$2e2bcd8739ae039 = $e14fac9aa6af7cb8$var$AmbientLightNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"AmbientLightNode\", $e14fac9aa6af7cb8$var$AmbientLightNode);\n(0, $78e340fa4839c21a$export$505493ddf8b9d5d8)((0, $ilwiq.AmbientLight), $e14fac9aa6af7cb8$var$AmbientLightNode);\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $cfe0d9eb45995a58$var$HemisphereLightNode extends (0, $bb48a619ccab5421$export$2e2bcd8739ae039) {\n    constructor(light = null){\n        super(light);\n        this.lightPositionNode = (0, $96d95a21a7a422db$export$85aefaa6fa23372c)(light);\n        this.lightDirectionNode = this.lightPositionNode.normalize();\n        this.groundColorNode = (0, $5a2c5e11c304ade5$export$379455b567eff87d)(new (0, $ilwiq.Color)());\n    }\n    update(frame) {\n        const { light: light } = this;\n        super.update(frame);\n        this.lightPositionNode.object3d = light;\n        this.groundColorNode.value.copy(light.groundColor).multiplyScalar(light.intensity);\n    }\n    setup(builder) {\n        const { colorNode: colorNode, groundColorNode: groundColorNode, lightDirectionNode: lightDirectionNode } = this;\n        const dotNL = (0, $b8bdffed4c803471$export$c7d7ec78bf3ab28a).dot(lightDirectionNode);\n        const hemiDiffuseWeight = dotNL.mul(0.5).add(0.5);\n        const irradiance = (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(groundColorNode, colorNode, hemiDiffuseWeight);\n        builder.context.irradiance.addAssign(irradiance);\n    }\n}\nvar $cfe0d9eb45995a58$export$2e2bcd8739ae039 = $cfe0d9eb45995a58$var$HemisphereLightNode;\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"HemisphereLightNode\", $cfe0d9eb45995a58$var$HemisphereLightNode);\n(0, $78e340fa4839c21a$export$505493ddf8b9d5d8)((0, $ilwiq.HemisphereLight), $cfe0d9eb45995a58$var$HemisphereLightNode);\n\n\n\n\n\n\n\n\n\n\n\nconst $b1661f52600f5bf9$var$checkerShaderNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const uv = inputs.uv.mul(2.0);\n    const cx = uv.x.floor();\n    const cy = uv.y.floor();\n    const result = cx.add(cy).mod(2.0);\n    return result.sign();\n});\nclass $b1661f52600f5bf9$var$CheckerNode extends (0, $58313529b84a82fb$export$2e2bcd8739ae039) {\n    constructor(uvNode = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)()){\n        super(\"float\");\n        this.uvNode = uvNode;\n    }\n    setup() {\n        return $b1661f52600f5bf9$var$checkerShaderNode({\n            uv: this.uvNode\n        });\n    }\n}\nvar $b1661f52600f5bf9$export$2e2bcd8739ae039 = $b1661f52600f5bf9$var$CheckerNode;\nconst $b1661f52600f5bf9$export$86201b36d8e19735 = (0, $64e573acaa48d904$export$60d11c6747b7deba)($b1661f52600f5bf9$var$CheckerNode);\n(0, $64e573acaa48d904$export$9faee53f34e0de2f)(\"checker\", $b1661f52600f5bf9$export$86201b36d8e19735);\n(0, $ed612ca4cc02a8a6$export$4e255b694af9c429)(\"CheckerNode\", $b1661f52600f5bf9$var$CheckerNode);\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $391f9a0c4aca814c$var$NodeLoader extends (0, $ilwiq.Loader) {\n    constructor(manager){\n        super(manager);\n        this.textures = {};\n    }\n    load(url, onLoad, onProgress, onError) {\n        const loader = new (0, $ilwiq.FileLoader)(this.manager);\n        loader.setPath(this.path);\n        loader.setRequestHeader(this.requestHeader);\n        loader.setWithCredentials(this.withCredentials);\n        loader.load(url, (text)=>{\n            try {\n                onLoad(this.parse(JSON.parse(text)));\n            } catch (e) {\n                if (onError) onError(e);\n                else console.error(e);\n                this.manager.itemError(url);\n            }\n        }, onProgress, onError);\n    }\n    parseNodes(json) {\n        const nodes = {};\n        if (json !== undefined) {\n            for (const nodeJSON of json){\n                const { uuid: uuid, type: type } = nodeJSON;\n                nodes[uuid] = (0, $64e573acaa48d904$export$e97474e17004dd41)((0, $ed612ca4cc02a8a6$export$13b1d4e5d42ef527)(type)); // @TODO: Maybe nodeObjectify the node in createNodeFromType?\n                nodes[uuid].uuid = uuid;\n            }\n            const meta = {\n                nodes: nodes,\n                textures: this.textures\n            };\n            for (const nodeJSON of json){\n                nodeJSON.meta = meta;\n                const node = nodes[nodeJSON.uuid];\n                node.deserialize(nodeJSON);\n                delete nodeJSON.meta;\n            }\n        }\n        return nodes;\n    }\n    parse(json) {\n        const node = (0, $64e573acaa48d904$export$e97474e17004dd41)((0, $ed612ca4cc02a8a6$export$13b1d4e5d42ef527)(json.type));\n        node.uuid = json.uuid;\n        const nodes = this.parseNodes(json.nodes);\n        const meta = {\n            nodes: nodes,\n            textures: this.textures\n        };\n        json.meta = meta;\n        node.deserialize(json);\n        delete json.meta;\n        return node;\n    }\n    setTextures(value) {\n        this.textures = value;\n        return this;\n    }\n}\nvar $391f9a0c4aca814c$export$2e2bcd8739ae039 = $391f9a0c4aca814c$var$NodeLoader;\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n// @TODO: We can simplify \"export { default as SomeNode, other, exports } from '...'\" to just \"export * from '...'\" if we will use only named exports\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $084366e78c3056ee$var$defaultValues = new (0, $ilwiq.PointsMaterial)();\nclass $084366e78c3056ee$var$InstancedPointsNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(params = {}){\n        super();\n        this.normals = false;\n        this.lights = false;\n        this.useAlphaToCoverage = true;\n        this.useColor = params.vertexColors;\n        this.pointWidth = 1;\n        this.pointColorNode = null;\n        this.setDefaultValues($084366e78c3056ee$var$defaultValues);\n        this.setupShaders();\n        this.setValues(params);\n    }\n    setupShaders() {\n        const useAlphaToCoverage = this.alphaToCoverage;\n        const useColor = this.useColor;\n        this.vertexNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            //vUv = uv;\n            (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)((0, $64e573acaa48d904$export$e9830bc863290a54)(), \"vUv\").assign((0, $94fcc899fcb75301$export$c774ebbac59e31d3)()); // @TODO: Analyze other way to do this\n            const instancePosition = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instancePosition\");\n            // camera space\n            const mvPos = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"vec4\", \"mvPos\");\n            mvPos.assign((0, $69c7546a6c9d8c2a$export$57d0df277658535e).mul((0, $64e573acaa48d904$export$6dba2a1f0d609415)(instancePosition, 1.0)));\n            const aspect = (0, $5aad3d206b752601$export$d7b7311ec04a3e8f).z.div((0, $5aad3d206b752601$export$d7b7311ec04a3e8f).w);\n            // clip space\n            const clipPos = (0, $bab16494dbba4b41$export$dc8d743682f60b2d).mul(mvPos);\n            // offset in ndc space\n            const offset = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"vec2\", \"offset\");\n            offset.assign((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).xy);\n            offset.assign(offset.mul((0, $1b774580ee2e7ae3$export$fadc4e3375c15b33)));\n            offset.assign(offset.div((0, $5aad3d206b752601$export$d7b7311ec04a3e8f).z));\n            offset.y.assign(offset.y.mul(aspect));\n            // back to clip space\n            offset.assign(offset.mul(clipPos.w));\n            //clipPos.xy += offset;\n            clipPos.assign(clipPos.add((0, $64e573acaa48d904$export$6dba2a1f0d609415)(offset, 0, 0)));\n            return clipPos;\n        //vec4 mvPosition = mvPos; // this was used for somethihng...\n        })();\n        this.fragmentNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            const vUv = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)((0, $64e573acaa48d904$export$e9830bc863290a54)(), \"vUv\");\n            // force assignment into correct place in flow\n            const alpha = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"alpha\");\n            alpha.assign(1);\n            const a = vUv.x;\n            const b = vUv.y;\n            const len2 = a.mul(a).add(b.mul(b));\n            if (useAlphaToCoverage) {\n                // force assignment out of following 'if' statement - to avoid uniform control flow errors\n                const dlen = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"dlen\");\n                dlen.assign(len2.fwidth());\n                alpha.assign((0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(dlen.oneMinus(), dlen.add(1), len2).oneMinus());\n            } else len2.greaterThan(1.0).discard();\n            let pointColorNode;\n            if (this.pointColorNode) pointColorNode = this.pointColorNode;\n            else if (useColor) {\n                const instanceColor = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instanceColor\");\n                pointColorNode = instanceColor.mul((0, $1b774580ee2e7ae3$export$852ee2194711a41a));\n            } else pointColorNode = (0, $1b774580ee2e7ae3$export$852ee2194711a41a);\n            return (0, $64e573acaa48d904$export$6dba2a1f0d609415)(pointColorNode, alpha);\n        })();\n        this.needsUpdate = true;\n    }\n    get alphaToCoverage() {\n        return this.useAlphaToCoverage;\n    }\n    set alphaToCoverage(value) {\n        if (this.useAlphaToCoverage !== value) {\n            this.useAlphaToCoverage = value;\n            this.setupShaders();\n        }\n    }\n}\nvar $084366e78c3056ee$export$2e2bcd8739ae039 = $084366e78c3056ee$var$InstancedPointsNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"InstancedPointsNodeMaterial\", $084366e78c3056ee$var$InstancedPointsNodeMaterial);\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $6aed58752e28f095$var$defaultValues = new (0, $ilwiq.LineBasicMaterial)();\nclass $6aed58752e28f095$var$LineBasicNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isLineBasicNodeMaterial = true;\n        this.lights = false;\n        this.normals = false;\n        this.setDefaultValues($6aed58752e28f095$var$defaultValues);\n        this.setValues(parameters);\n    }\n}\nvar $6aed58752e28f095$export$2e2bcd8739ae039 = $6aed58752e28f095$var$LineBasicNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"LineBasicNodeMaterial\", $6aed58752e28f095$var$LineBasicNodeMaterial);\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $a1ab63fdcfebff2c$var$defaultValues = new (0, $ilwiq.LineDashedMaterial)();\nclass $a1ab63fdcfebff2c$var$LineDashedNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isLineDashedNodeMaterial = true;\n        this.lights = false;\n        this.normals = false;\n        this.setDefaultValues($a1ab63fdcfebff2c$var$defaultValues);\n        this.offsetNode = null;\n        this.dashScaleNode = null;\n        this.dashSizeNode = null;\n        this.gapSizeNode = null;\n        this.setValues(parameters);\n    }\n    setupVariants() {\n        const offsetNode = this.offsetNode;\n        const dashScaleNode = this.dashScaleNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.dashScaleNode) : (0, $1b774580ee2e7ae3$export$505058bbaa0ad019);\n        const dashSizeNode = this.dashSizeNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.dashSizeNode) : (0, $1b774580ee2e7ae3$export$200b8bf19a7aecc9);\n        const gapSizeNode = this.dashSizeNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.dashGapNode) : (0, $1b774580ee2e7ae3$export$3154261658c8ee4b);\n        (0, $39f1d8052e434d46$export$c295bac1d6792172).assign(dashSizeNode);\n        (0, $39f1d8052e434d46$export$146ecbc129c598d1).assign(gapSizeNode);\n        const vLineDistance = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)((0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"lineDistance\").mul(dashScaleNode));\n        const vLineDistanceOffset = offsetNode ? vLineDistance.add(offsetNode) : vLineDistance;\n        vLineDistanceOffset.mod((0, $39f1d8052e434d46$export$c295bac1d6792172).add((0, $39f1d8052e434d46$export$146ecbc129c598d1))).greaterThan((0, $39f1d8052e434d46$export$c295bac1d6792172)).discard();\n    }\n}\nvar $a1ab63fdcfebff2c$export$2e2bcd8739ae039 = $a1ab63fdcfebff2c$var$LineDashedNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"LineDashedNodeMaterial\", $a1ab63fdcfebff2c$var$LineDashedNodeMaterial);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $7bd65180ac4e97d3$var$defaultValues = new (0, $ilwiq.LineDashedMaterial)();\nclass $7bd65180ac4e97d3$var$Line2NodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(params = {}){\n        super();\n        this.normals = false;\n        this.lights = false;\n        this.setDefaultValues($7bd65180ac4e97d3$var$defaultValues);\n        this.useAlphaToCoverage = true;\n        this.useColor = params.vertexColors;\n        this.useDash = params.dashed;\n        this.useWorldUnits = false;\n        this.dashOffset = 0;\n        this.lineWidth = 1;\n        this.lineColorNode = null;\n        this.offsetNode = null;\n        this.dashScaleNode = null;\n        this.dashSizeNode = null;\n        this.gapSizeNode = null;\n        this.setupShaders();\n        this.setValues(params);\n    }\n    setupShaders() {\n        const useAlphaToCoverage = this.alphaToCoverage;\n        const useColor = this.useColor;\n        const useDash = this.dashed;\n        const useWorldUnits = this.worldUnits;\n        const trimSegment = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ start: start, end: end })=>{\n            const a = (0, $bab16494dbba4b41$export$dc8d743682f60b2d).element(2).element(2); // 3nd entry in 3th column\n            const b = (0, $bab16494dbba4b41$export$dc8d743682f60b2d).element(3).element(2); // 3nd entry in 4th column\n            const nearEstimate = b.mul(-0.5).div(a);\n            const alpha = nearEstimate.sub(start.z).div(end.z.sub(start.z));\n            return (0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(start.xyz, end.xyz, alpha), end.w);\n        });\n        this.vertexNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec2\", \"vUv\").assign((0, $94fcc899fcb75301$export$c774ebbac59e31d3)());\n            const instanceStart = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instanceStart\");\n            const instanceEnd = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instanceEnd\");\n            // camera space\n            const start = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"vec4\", \"start\");\n            const end = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"vec4\", \"end\");\n            start.assign((0, $69c7546a6c9d8c2a$export$57d0df277658535e).mul((0, $64e573acaa48d904$export$6dba2a1f0d609415)(instanceStart, 1.0))); // force assignment into correct place in flow\n            end.assign((0, $69c7546a6c9d8c2a$export$57d0df277658535e).mul((0, $64e573acaa48d904$export$6dba2a1f0d609415)(instanceEnd, 1.0)));\n            if (useWorldUnits) {\n                (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec3\", \"worldStart\").assign(start.xyz);\n                (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec3\", \"worldEnd\").assign(end.xyz);\n            }\n            const aspect = (0, $5aad3d206b752601$export$d7b7311ec04a3e8f).z.div((0, $5aad3d206b752601$export$d7b7311ec04a3e8f).w);\n            // special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n            // clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n            // but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n            // perhaps there is a more elegant solution -- WestLangley\n            const perspective = (0, $bab16494dbba4b41$export$dc8d743682f60b2d).element(2).element(3).equal(-1); // 4th entry in the 3rd column\n            (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(perspective, ()=>{\n                (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(start.z.lessThan(0.0).and(end.z.greaterThan(0.0)), ()=>{\n                    end.assign(trimSegment({\n                        start: start,\n                        end: end\n                    }));\n                }).elseif(end.z.lessThan(0.0).and(start.z.greaterThanEqual(0.0)), ()=>{\n                    start.assign(trimSegment({\n                        start: end,\n                        end: start\n                    }));\n                });\n            });\n            // clip space\n            const clipStart = (0, $bab16494dbba4b41$export$dc8d743682f60b2d).mul(start);\n            const clipEnd = (0, $bab16494dbba4b41$export$dc8d743682f60b2d).mul(end);\n            // ndc space\n            const ndcStart = clipStart.xyz.div(clipStart.w);\n            const ndcEnd = clipEnd.xyz.div(clipEnd.w);\n            // direction\n            const dir = ndcEnd.xy.sub(ndcStart.xy).temp();\n            // account for clip-space aspect ratio\n            dir.x.assign(dir.x.mul(aspect));\n            dir.assign(dir.normalize());\n            const clip = (0, $414b1568201c856d$export$8d72b093afd1813e)((0, $64e573acaa48d904$export$6dba2a1f0d609415)());\n            if (useWorldUnits) {\n                // get the offset direction as perpendicular to the view vector\n                const worldDir = end.xyz.sub(start.xyz).normalize();\n                const tmpFwd = (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(start.xyz, end.xyz, 0.5).normalize();\n                const worldUp = worldDir.cross(tmpFwd).normalize();\n                const worldFwd = worldDir.cross(worldUp);\n                const worldPos = (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec4\", \"worldPos\");\n                worldPos.assign((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.5).cond(start, end));\n                // height offset\n                const hw = (0, $1b774580ee2e7ae3$export$dc06cf49d582ad47).mul(0.5);\n                worldPos.addAssign((0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).x.lessThan(0.0).cond(worldUp.mul(hw), worldUp.mul(hw).negate()), 0));\n                // don't extend the line if we're rendering dashes because we\n                // won't be rendering the endcaps\n                if (!useDash) {\n                    // cap extension\n                    worldPos.addAssign((0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.5).cond(worldDir.mul(hw).negate(), worldDir.mul(hw)), 0));\n                    // add width to the box\n                    worldPos.addAssign((0, $64e573acaa48d904$export$6dba2a1f0d609415)(worldFwd.mul(hw), 0));\n                    // endcaps\n                    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.greaterThan(1.0).or((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.0)), ()=>{\n                        worldPos.subAssign((0, $64e573acaa48d904$export$6dba2a1f0d609415)(worldFwd.mul(2.0).mul(hw), 0));\n                    });\n                }\n                // project the worldpos\n                clip.assign((0, $bab16494dbba4b41$export$dc8d743682f60b2d).mul(worldPos));\n                // shift the depth of the projected points so the line\n                // segments overlap neatly\n                const clipPose = (0, $414b1568201c856d$export$8d72b093afd1813e)((0, $64e573acaa48d904$export$9100789c9d999364)());\n                clipPose.assign((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.5).cond(ndcStart, ndcEnd));\n                clip.z.assign(clipPose.z.mul(clip.w));\n            } else {\n                const offset = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"vec2\", \"offset\");\n                offset.assign((0, $64e573acaa48d904$export$e9830bc863290a54)(dir.y, dir.x.negate()));\n                // undo aspect ratio adjustment\n                dir.x.assign(dir.x.div(aspect));\n                offset.x.assign(offset.x.div(aspect));\n                // sign flip\n                offset.assign((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).x.lessThan(0.0).cond(offset.negate(), offset));\n                // endcaps\n                (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.0), ()=>{\n                    offset.assign(offset.sub(dir));\n                }).elseif((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.greaterThan(1.0), ()=>{\n                    offset.assign(offset.add(dir));\n                });\n                // adjust for linewidth\n                offset.assign(offset.mul((0, $1b774580ee2e7ae3$export$dc06cf49d582ad47)));\n                // adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n                offset.assign(offset.div((0, $5aad3d206b752601$export$d7b7311ec04a3e8f).w));\n                // select end\n                clip.assign((0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.5).cond(clipStart, clipEnd));\n                // back to clip space\n                offset.assign(offset.mul(clip.w));\n                clip.assign(clip.add((0, $64e573acaa48d904$export$6dba2a1f0d609415)(offset, 0, 0)));\n            }\n            return clip;\n        })();\n        const closestLineToLine = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ p1: p1, p2: p2, p3: p3, p4: p4 })=>{\n            const p13 = p1.sub(p3);\n            const p43 = p4.sub(p3);\n            const p21 = p2.sub(p1);\n            const d1343 = p13.dot(p43);\n            const d4321 = p43.dot(p21);\n            const d1321 = p13.dot(p21);\n            const d4343 = p43.dot(p43);\n            const d2121 = p21.dot(p21);\n            const denom = d2121.mul(d4343).sub(d4321.mul(d4321));\n            const numer = d1343.mul(d4321).sub(d1321.mul(d4343));\n            const mua = numer.div(denom).clamp();\n            const mub = d1343.add(d4321.mul(mua)).div(d4343).clamp();\n            return (0, $64e573acaa48d904$export$e9830bc863290a54)(mua, mub);\n        });\n        this.fragmentNode = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n            const vUv = (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec2\", \"vUv\");\n            if (useDash) {\n                const offsetNode = this.offsetNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.offsetNodeNode) : (0, $1b774580ee2e7ae3$export$194200c8fa44fbfb);\n                const dashScaleNode = this.dashScaleNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.dashScaleNode) : (0, $1b774580ee2e7ae3$export$505058bbaa0ad019);\n                const dashSizeNode = this.dashSizeNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.dashSizeNode) : (0, $1b774580ee2e7ae3$export$200b8bf19a7aecc9);\n                const gapSizeNode = this.dashSizeNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.dashGapNode) : (0, $1b774580ee2e7ae3$export$3154261658c8ee4b);\n                (0, $39f1d8052e434d46$export$c295bac1d6792172).assign(dashSizeNode);\n                (0, $39f1d8052e434d46$export$146ecbc129c598d1).assign(gapSizeNode);\n                const instanceDistanceStart = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instanceDistanceStart\");\n                const instanceDistanceEnd = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instanceDistanceEnd\");\n                const lineDistance = (0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.5).cond(dashScaleNode.mul(instanceDistanceStart), (0, $1b774580ee2e7ae3$export$505058bbaa0ad019).mul(instanceDistanceEnd));\n                const vLineDistance = (0, $9e2d95b0bb876d67$export$3f47f02b8134ef8a)(lineDistance.add((0, $1b774580ee2e7ae3$export$194200c8fa44fbfb)));\n                const vLineDistanceOffset = offsetNode ? vLineDistance.add(offsetNode) : vLineDistance;\n                vUv.y.lessThan(-1).or(vUv.y.greaterThan(1.0)).discard(); // discard endcaps\n                vLineDistanceOffset.mod((0, $39f1d8052e434d46$export$c295bac1d6792172).add((0, $39f1d8052e434d46$export$146ecbc129c598d1))).greaterThan((0, $39f1d8052e434d46$export$c295bac1d6792172)).discard(); // todo - FIX\n            }\n            // force assignment into correct place in flow\n            const alpha = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"alpha\");\n            alpha.assign(1);\n            if (useWorldUnits) {\n                const worldStart = (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec3\", \"worldStart\");\n                const worldEnd = (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec3\", \"worldEnd\");\n                // Find the closest points on the view ray and the line segment\n                const rayEnd = (0, $39f1d8052e434d46$export$cb5f8cbf8b7bd600)(\"vec4\", \"worldPos\").xyz.normalize().mul(1e5);\n                const lineDir = worldEnd.sub(worldStart);\n                const params = closestLineToLine({\n                    p1: worldStart,\n                    p2: worldEnd,\n                    p3: (0, $64e573acaa48d904$export$9100789c9d999364)(0.0, 0.0, 0.0),\n                    p4: rayEnd\n                });\n                const p1 = worldStart.add(lineDir.mul(params.x));\n                const p2 = rayEnd.mul(params.y);\n                const delta = p1.sub(p2);\n                const len = delta.length();\n                const norm = len.div((0, $1b774580ee2e7ae3$export$dc06cf49d582ad47));\n                if (!useDash) {\n                    if (useAlphaToCoverage) {\n                        const dnorm = norm.fwidth();\n                        alpha.assign((0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(dnorm.negate().add(0.5), dnorm.add(0.5), norm).oneMinus());\n                    } else norm.greaterThan(0.5).discard();\n                }\n            } else // round endcaps\n            if (useAlphaToCoverage) {\n                const a = vUv.x;\n                const b = vUv.y.greaterThan(0.0).cond(vUv.y.sub(1.0), vUv.y.add(1.0));\n                const len2 = a.mul(a).add(b.mul(b));\n                // force assignment out of following 'if' statement - to avoid uniform control flow errors\n                const dlen = (0, $39f1d8052e434d46$export$d541bacb2bda4494)(\"float\", \"dlen\");\n                dlen.assign(len2.fwidth());\n                (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(vUv.y.abs().greaterThan(1.0), ()=>{\n                    alpha.assign((0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(dlen.oneMinus(), dlen.add(1), len2).oneMinus());\n                });\n            } else (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(vUv.y.abs().greaterThan(1.0), ()=>{\n                const a = vUv.x;\n                const b = vUv.y.greaterThan(0.0).cond(vUv.y.sub(1.0), vUv.y.add(1.0));\n                const len2 = a.mul(a).add(b.mul(b));\n                len2.greaterThan(1.0).discard();\n            });\n            let lineColorNode;\n            if (this.lineColorNode) lineColorNode = this.lineColorNode;\n            else if (useColor) {\n                const instanceColorStart = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instanceColorStart\");\n                const instanceColorEnd = (0, $30ecc590d6fb0411$export$af4b9a83f4b00434)(\"instanceColorEnd\");\n                const instanceColor = (0, $f38f6f7a1974ae48$export$a0f5007edcaeec62).y.lessThan(0.5).cond(instanceColorStart, instanceColorEnd);\n                lineColorNode = instanceColor.mul((0, $1b774580ee2e7ae3$export$852ee2194711a41a));\n            } else lineColorNode = (0, $1b774580ee2e7ae3$export$852ee2194711a41a);\n            return (0, $64e573acaa48d904$export$6dba2a1f0d609415)(lineColorNode, alpha);\n        })();\n        this.needsUpdate = true;\n    }\n    get worldUnits() {\n        return this.useWorldUnits;\n    }\n    set worldUnits(value) {\n        if (this.useWorldUnits !== value) {\n            this.useWorldUnits = value;\n            this.setupShaders();\n        }\n    }\n    get dashed() {\n        return this.useDash;\n    }\n    set dashed(value) {\n        if (this.useDash !== value) {\n            this.useDash = value;\n            this.setupShaders();\n        }\n    }\n    get alphaToCoverage() {\n        return this.useAlphaToCoverage;\n    }\n    set alphaToCoverage(value) {\n        if (this.useAlphaToCoverage !== value) {\n            this.useAlphaToCoverage = value;\n            this.setupShaders();\n        }\n    }\n}\nvar $7bd65180ac4e97d3$export$2e2bcd8739ae039 = $7bd65180ac4e97d3$var$Line2NodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"Line2NodeMaterial\", $7bd65180ac4e97d3$var$Line2NodeMaterial);\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $e744517f1f842325$var$defaultValues = new (0, $ilwiq.MeshNormalMaterial)();\nclass $e744517f1f842325$var$MeshNormalNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isMeshNormalNodeMaterial = true;\n        this.colorSpaced = false;\n        this.setDefaultValues($e744517f1f842325$var$defaultValues);\n        this.setValues(parameters);\n    }\n    setupDiffuseColor() {\n        const opacityNode = this.opacityNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.opacityNode) : (0, $1b774580ee2e7ae3$export$a61065844a540229);\n        (0, $39f1d8052e434d46$export$3a790f19f33c5176).assign((0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $9e302b9293f4844a$export$a0a884e7f644b818)((0, $b8bdffed4c803471$export$c58d63d09d102e3c)), opacityNode));\n    }\n}\nvar $e744517f1f842325$export$2e2bcd8739ae039 = $e744517f1f842325$var$MeshNormalNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"MeshNormalNodeMaterial\", $e744517f1f842325$var$MeshNormalNodeMaterial);\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $ea28acc48ba63a82$var$defaultValues = new (0, $ilwiq.MeshBasicMaterial)();\nclass $ea28acc48ba63a82$var$MeshBasicNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isMeshBasicNodeMaterial = true;\n        this.lights = false;\n        //this.normals = false; @TODO: normals usage by context\n        this.setDefaultValues($ea28acc48ba63a82$var$defaultValues);\n        this.setValues(parameters);\n    }\n}\nvar $ea28acc48ba63a82$export$2e2bcd8739ae039 = $ea28acc48ba63a82$var$MeshBasicNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"MeshBasicNodeMaterial\", $ea28acc48ba63a82$var$MeshBasicNodeMaterial);\n\n\n\n\n\nconst $2b7c3efb3816dd42$var$F_Schlick = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ f0: f0, f90: f90, dotVH: dotVH })=>{\n    // Original approximation by Christophe Schlick '94\n    // float fresnel = pow( 1.0 - dotVH, 5.0 );\n    // Optimized variant (presented by Epic at SIGGRAPH '13)\n    // https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n    const fresnel = dotVH.mul(-5.55473).sub(6.98316).mul(dotVH).exp2();\n    return f0.mul(fresnel.oneMinus()).add(f90.mul(fresnel));\n}); // validated\nvar $2b7c3efb3816dd42$export$2e2bcd8739ae039 = $2b7c3efb3816dd42$var$F_Schlick;\n\n\n\nconst $18b1e0b3f7355037$var$BRDF_Lambert = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    return inputs.diffuseColor.mul(1 / Math.PI); // punctual light\n}); // validated\nvar $18b1e0b3f7355037$export$2e2bcd8739ae039 = $18b1e0b3f7355037$var$BRDF_Lambert;\n\n\n\n\n\n\n\nconst $cabb4146008f1d9c$var$G_BlinnPhong_Implicit = ()=>(0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.25);\nconst $cabb4146008f1d9c$var$D_BlinnPhong = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ dotNH: dotNH })=>{\n    return (0, $39f1d8052e434d46$export$245b4c35387657dc).mul(0.5 / Math.PI).add(1.0).mul(dotNH.pow((0, $39f1d8052e434d46$export$245b4c35387657dc)));\n});\nconst $cabb4146008f1d9c$var$BRDF_BlinnPhong = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ lightDirection: lightDirection })=>{\n    const halfDir = lightDirection.add((0, $f38f6f7a1974ae48$export$80de5077965297a8)).normalize();\n    const dotNH = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot(halfDir).clamp();\n    const dotVH = (0, $f38f6f7a1974ae48$export$80de5077965297a8).dot(halfDir).clamp();\n    const F = (0, $2b7c3efb3816dd42$export$2e2bcd8739ae039)({\n        f0: (0, $39f1d8052e434d46$export$e1aa5ee431e11795),\n        f90: 1.0,\n        dotVH: dotVH\n    });\n    const G = $cabb4146008f1d9c$var$G_BlinnPhong_Implicit();\n    const D = $cabb4146008f1d9c$var$D_BlinnPhong({\n        dotNH: dotNH\n    });\n    return F.mul(G).mul(D);\n});\nclass $cabb4146008f1d9c$var$PhongLightingModel extends (0, $f9fd258025b318dd$export$2e2bcd8739ae039) {\n    constructor(specular = true){\n        super();\n        this.specular = specular;\n    }\n    direct({ lightDirection: lightDirection, lightColor: lightColor, reflectedLight: reflectedLight }) {\n        const dotNL = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot(lightDirection).clamp();\n        const irradiance = dotNL.mul(lightColor);\n        reflectedLight.directDiffuse.addAssign(irradiance.mul((0, $18b1e0b3f7355037$export$2e2bcd8739ae039)({\n            diffuseColor: (0, $39f1d8052e434d46$export$3a790f19f33c5176).rgb\n        })));\n        if (this.specular === true) reflectedLight.directSpecular.addAssign(irradiance.mul($cabb4146008f1d9c$var$BRDF_BlinnPhong({\n            lightDirection: lightDirection\n        })).mul((0, $1b774580ee2e7ae3$export$aab42c7f7fd50fe)));\n    }\n    indirectDiffuse({ irradiance: irradiance, reflectedLight: reflectedLight }) {\n        reflectedLight.indirectDiffuse.addAssign(irradiance.mul((0, $18b1e0b3f7355037$export$2e2bcd8739ae039)({\n            diffuseColor: $39f1d8052e434d46$export$3a790f19f33c5176\n        })));\n    }\n}\nvar $cabb4146008f1d9c$export$2e2bcd8739ae039 = $cabb4146008f1d9c$var$PhongLightingModel;\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $3899d873f8f0089f$var$defaultValues = new (0, $ilwiq.MeshLambertMaterial)();\nclass $3899d873f8f0089f$var$MeshLambertNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isMeshLambertNodeMaterial = true;\n        this.lights = true;\n        this.setDefaultValues($3899d873f8f0089f$var$defaultValues);\n        this.setValues(parameters);\n    }\n    setupLightingModel() {\n        return new (0, $cabb4146008f1d9c$export$2e2bcd8739ae039)(false); // ( specular ) -> force lambert\n    }\n}\nvar $3899d873f8f0089f$export$2e2bcd8739ae039 = $3899d873f8f0089f$var$MeshLambertNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"MeshLambertNodeMaterial\", $3899d873f8f0089f$var$MeshLambertNodeMaterial);\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $9683d95a67b6c653$var$defaultValues = new (0, $ilwiq.MeshPhongMaterial)();\nclass $9683d95a67b6c653$var$MeshPhongNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isMeshPhongNodeMaterial = true;\n        this.lights = true;\n        this.shininessNode = null;\n        this.specularNode = null;\n        this.setDefaultValues($9683d95a67b6c653$var$defaultValues);\n        this.setValues(parameters);\n    }\n    setupLightingModel() {\n        return new (0, $cabb4146008f1d9c$export$2e2bcd8739ae039)();\n    }\n    setupVariants() {\n        // SHININESS\n        const shininessNode = (this.shininessNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.shininessNode) : (0, $1b774580ee2e7ae3$export$e3d16a46fd4e0183)).max(1e-4); // to prevent pow( 0.0, 0.0 )\n        (0, $39f1d8052e434d46$export$245b4c35387657dc).assign(shininessNode);\n        // SPECULAR COLOR\n        const specularNode = this.specularNode || (0, $1b774580ee2e7ae3$export$5447cf3a560d2eed);\n        (0, $39f1d8052e434d46$export$e1aa5ee431e11795).assign(specularNode);\n    }\n    copy(source) {\n        this.shininessNode = source.shininessNode;\n        this.specularNode = source.specularNode;\n        return super.copy(source);\n    }\n}\nvar $9683d95a67b6c653$export$2e2bcd8739ae039 = $9683d95a67b6c653$var$MeshPhongNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"MeshPhongNodeMaterial\", $9683d95a67b6c653$var$MeshPhongNodeMaterial);\n\n\n\n\n\n\n\n\nconst $d951bb04aae6a6da$var$getGeometryRoughness = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(()=>{\n    const dxy = (0, $b8bdffed4c803471$export$2d025416a9cb464f).dFdx().abs().max((0, $b8bdffed4c803471$export$2d025416a9cb464f).dFdy().abs());\n    const geometryRoughness = dxy.x.max(dxy.y).max(dxy.z);\n    return geometryRoughness;\n});\nvar $d951bb04aae6a6da$export$2e2bcd8739ae039 = $d951bb04aae6a6da$var$getGeometryRoughness;\n\n\n\nconst $ef578de3b1c1c38b$var$getRoughness = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { roughness: roughness } = inputs;\n    const geometryRoughness = (0, $d951bb04aae6a6da$export$2e2bcd8739ae039)();\n    let roughnessFactor = roughness.max(0.0525); // 0.0525 corresponds to the base mip of a 256 cubemap.\n    roughnessFactor = roughnessFactor.add(geometryRoughness);\n    roughnessFactor = roughnessFactor.min(1.0);\n    return roughnessFactor;\n});\nvar $ef578de3b1c1c38b$export$2e2bcd8739ae039 = $ef578de3b1c1c38b$var$getRoughness;\n\n\n\n\n\n\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nconst $a592aefd9a57443e$var$V_GGX_SmithCorrelated = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { alpha: alpha, dotNL: dotNL, dotNV: dotNV } = inputs;\n    const a2 = alpha.pow2();\n    const gv = dotNL.mul(a2.add(a2.oneMinus().mul(dotNV.pow2())).sqrt());\n    const gl = dotNV.mul(a2.add(a2.oneMinus().mul(dotNL.pow2())).sqrt());\n    return (0, $1a899e4dee2452c3$export$159d9494db57879b)(0.5, gv.add(gl).max((0, $4b9f12ce87d17074$export$fd293b15f47e270)));\n}).setLayout({\n    name: \"V_GGX_SmithCorrelated\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"alpha\",\n            type: \"float\"\n        },\n        {\n            name: \"dotNL\",\n            type: \"float\"\n        },\n        {\n            name: \"dotNV\",\n            type: \"float\"\n        }\n    ]\n}); // validated\nvar $a592aefd9a57443e$export$2e2bcd8739ae039 = $a592aefd9a57443e$var$V_GGX_SmithCorrelated;\n\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst $0656d21c7bca06e4$var$D_GGX = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ alpha: alpha, dotNH: dotNH })=>{\n    const a2 = alpha.pow2();\n    const denom = dotNH.pow2().mul(a2.oneMinus()).oneMinus(); // avoid alpha = 0 with dotNH = 1\n    return a2.div(denom.pow2()).mul(1 / Math.PI);\n}).setLayout({\n    name: \"D_GGX\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"alpha\",\n            type: \"float\"\n        },\n        {\n            name: \"dotNH\",\n            type: \"float\"\n        }\n    ]\n}); // validated\nvar $0656d21c7bca06e4$export$2e2bcd8739ae039 = $0656d21c7bca06e4$var$D_GGX;\n\n\n\n\n\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nconst $39f97bfab1e53803$var$BRDF_GGX = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { lightDirection: lightDirection, f0: f0, f90: f90, roughness: roughness, iridescenceFresnel: iridescenceFresnel } = inputs;\n    const normalView = inputs.normalView || (0, $b8bdffed4c803471$export$c58d63d09d102e3c);\n    const alpha = roughness.pow2(); // UE4's roughness\n    const halfDir = lightDirection.add((0, $f38f6f7a1974ae48$export$80de5077965297a8)).normalize();\n    const dotNL = normalView.dot(lightDirection).clamp();\n    const dotNV = normalView.dot((0, $f38f6f7a1974ae48$export$80de5077965297a8)).clamp(); // @ TODO: Move to core dotNV\n    const dotNH = normalView.dot(halfDir).clamp();\n    const dotVH = (0, $f38f6f7a1974ae48$export$80de5077965297a8).dot(halfDir).clamp();\n    let F = (0, $2b7c3efb3816dd42$export$2e2bcd8739ae039)({\n        f0: f0,\n        f90: f90,\n        dotVH: dotVH\n    });\n    if (iridescenceFresnel) F = (0, $39f1d8052e434d46$export$8fa8908d67be43df).mix(F, iridescenceFresnel);\n    const V = (0, $a592aefd9a57443e$export$2e2bcd8739ae039)({\n        alpha: alpha,\n        dotNL: dotNL,\n        dotNV: dotNV\n    });\n    const D = (0, $0656d21c7bca06e4$export$2e2bcd8739ae039)({\n        alpha: alpha,\n        dotNH: dotNH\n    });\n    return F.mul(V).mul(D);\n}); // validated\nvar $39f97bfab1e53803$export$2e2bcd8739ae039 = $39f97bfab1e53803$var$BRDF_GGX;\n\n\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\nconst $9e1039afc7d3407e$var$DFGApprox = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ roughness: roughness, dotNV: dotNV })=>{\n    const c0 = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(-1, -0.0275, -0.572, 0.022);\n    const c1 = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(1, 0.0425, 1.04, -0.04);\n    const r = roughness.mul(c0).add(c1);\n    const a004 = r.x.mul(r.x).min(dotNV.mul(-9.28).exp2()).mul(r.x).add(r.y);\n    const fab = (0, $64e573acaa48d904$export$e9830bc863290a54)(-1.04, 1.04).mul(a004).add(r.zw);\n    return fab;\n}).setLayout({\n    name: \"DFGApprox\",\n    type: \"vec2\",\n    inputs: [\n        {\n            name: \"roughness\",\n            type: \"float\"\n        },\n        {\n            name: \"dotNV\",\n            type: \"vec3\"\n        }\n    ]\n});\nvar $9e1039afc7d3407e$export$2e2bcd8739ae039 = $9e1039afc7d3407e$var$DFGApprox;\n\n\n\n\nconst $3bfaead20e0c0358$var$EnvironmentBRDF = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)((inputs)=>{\n    const { dotNV: dotNV, specularColor: specularColor, specularF90: specularF90, roughness: roughness } = inputs;\n    const fab = (0, $9e1039afc7d3407e$export$2e2bcd8739ae039)({\n        dotNV: dotNV,\n        roughness: roughness\n    });\n    return specularColor.mul(fab.x).add(specularF90.mul(fab.y));\n});\nvar $3bfaead20e0c0358$export$2e2bcd8739ae039 = $3bfaead20e0c0358$var$EnvironmentBRDF;\n\n\n\n\nconst $afdc49dcc398bbdc$var$Schlick_to_F0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ f: f, f90: f90, dotVH: dotVH })=>{\n    const x = dotVH.oneMinus().saturate();\n    const x2 = x.mul(x);\n    const x5 = x.mul(x2, x2).clamp(0, .9999);\n    return f.sub((0, $64e573acaa48d904$export$9100789c9d999364)(f90).mul(x5)).div(x5.oneMinus());\n}).setLayout({\n    name: \"Schlick_to_F0\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"f\",\n            type: \"vec3\"\n        },\n        {\n            name: \"f90\",\n            type: \"float\"\n        },\n        {\n            name: \"dotVH\",\n            type: \"float\"\n        }\n    ]\n});\nvar $afdc49dcc398bbdc$export$2e2bcd8739ae039 = $afdc49dcc398bbdc$var$Schlick_to_F0;\n\n\n\n\n\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nconst $25e530a9e50643cf$var$D_Charlie = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ roughness: roughness, dotNH: dotNH })=>{\n    const alpha = roughness.pow2();\n    // Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n    const invAlpha = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.0).div(alpha);\n    const cos2h = dotNH.pow2();\n    const sin2h = cos2h.oneMinus().max(0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n    return (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(2.0).add(invAlpha).mul(sin2h.pow(invAlpha.mul(0.5))).div(2.0 * Math.PI);\n}).setLayout({\n    name: \"D_Charlie\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"roughness\",\n            type: \"float\"\n        },\n        {\n            name: \"dotNH\",\n            type: \"float\"\n        }\n    ]\n});\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nconst $25e530a9e50643cf$var$V_Neubelt = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ dotNV: dotNV, dotNL: dotNL })=>{\n    // Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n    return (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.0).div((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(4.0).mul(dotNL.add(dotNV).sub(dotNL.mul(dotNV))));\n}).setLayout({\n    name: \"V_Neubelt\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"dotNV\",\n            type: \"float\"\n        },\n        {\n            name: \"dotNL\",\n            type: \"float\"\n        }\n    ]\n});\nconst $25e530a9e50643cf$var$BRDF_Sheen = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ lightDirection: lightDirection })=>{\n    const halfDir = lightDirection.add((0, $f38f6f7a1974ae48$export$80de5077965297a8)).normalize();\n    const dotNL = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot(lightDirection).clamp();\n    const dotNV = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot((0, $f38f6f7a1974ae48$export$80de5077965297a8)).clamp();\n    const dotNH = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot(halfDir).clamp();\n    const D = $25e530a9e50643cf$var$D_Charlie({\n        roughness: (0, $39f1d8052e434d46$export$40c82d21b5c7315b),\n        dotNH: dotNH\n    });\n    const V = $25e530a9e50643cf$var$V_Neubelt({\n        dotNV: dotNV,\n        dotNL: dotNL\n    });\n    return (0, $39f1d8052e434d46$export$7cccf56baed94cee).mul(D).mul(V);\n});\nvar $25e530a9e50643cf$export$2e2bcd8739ae039 = $25e530a9e50643cf$var$BRDF_Sheen;\n\n\n\n\n\n\n\n\n\n//\n// Iridescence\n//\n// XYZ to linear-sRGB color space\nconst $945901ff02126f32$var$XYZ_TO_REC709 = (0, $64e573acaa48d904$export$e43bd9f504e4ac00)(3.2404542, -0.969266, 0.0556434, -1.5371385, 1.8760108, -0.2040259, -0.4985314, 0.0415560, 1.0572252);\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nconst $945901ff02126f32$var$Fresnel0ToIor = (fresnel0)=>{\n    const sqrtF0 = fresnel0.sqrt();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)(1.0).add(sqrtF0).div((0, $64e573acaa48d904$export$9100789c9d999364)(1.0).sub(sqrtF0));\n};\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nconst $945901ff02126f32$var$IorToFresnel0 = (transmittedIor, incidentIor)=>{\n    return transmittedIor.sub(incidentIor).div(transmittedIor.add(incidentIor)).pow2();\n};\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nconst $945901ff02126f32$var$evalSensitivity = (OPD, shift)=>{\n    const phase = OPD.mul(2.0 * Math.PI * 1.0e-9);\n    const val = (0, $64e573acaa48d904$export$9100789c9d999364)(5.4856e-13, 4.4201e-13, 5.2481e-13);\n    const pos = (0, $64e573acaa48d904$export$9100789c9d999364)(1.6810e+06, 1.7953e+06, 2.2084e+06);\n    const VAR = (0, $64e573acaa48d904$export$9100789c9d999364)(4.3278e+09, 9.3046e+09, 6.6121e+09);\n    const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(9.7470e-14 * Math.sqrt(2.0 * Math.PI * 4.5282e+09)).mul(phase.mul(2.2399e+06).add(shift.x).cos()).mul(phase.pow2().mul(-4528200000).exp());\n    let xyz = val.mul(VAR.mul(2.0 * Math.PI).sqrt()).mul(pos.mul(phase).add(shift).cos()).mul(phase.pow2().negate().mul(VAR).exp());\n    xyz = (0, $64e573acaa48d904$export$9100789c9d999364)(xyz.x.add(x), xyz.y, xyz.z).div(1.0685e-7);\n    const rgb = $945901ff02126f32$var$XYZ_TO_REC709.mul(xyz);\n    return rgb;\n};\nconst $945901ff02126f32$var$evalIridescence = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ outsideIOR: outsideIOR, eta2: eta2, cosTheta1: cosTheta1, thinFilmThickness: thinFilmThickness, baseF0: baseF0 })=>{\n    // Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n    const iridescenceIOR = (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(outsideIOR, eta2, (0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(0.0, 0.03, thinFilmThickness));\n    // Evaluate the cosTheta on the base layer (Snell law)\n    const sinTheta2Sq = outsideIOR.div(iridescenceIOR).pow2().mul((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1).sub(cosTheta1.pow2()));\n    // Handle TIR:\n    const cosTheta2Sq = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1).sub(sinTheta2Sq);\n    /*if ( cosTheta2Sq < 0.0 ) {\n\n\t\t\treturn vec3( 1.0 );\n\n\t}*/ const cosTheta2 = cosTheta2Sq.sqrt();\n    // First interface\n    const R0 = $945901ff02126f32$var$IorToFresnel0(iridescenceIOR, outsideIOR);\n    const R12 = (0, $2b7c3efb3816dd42$export$2e2bcd8739ae039)({\n        f0: R0,\n        f90: 1.0,\n        dotVH: cosTheta1\n    });\n    //const R21 = R12;\n    const T121 = R12.oneMinus();\n    const phi12 = iridescenceIOR.lessThan(outsideIOR).cond(Math.PI, 0.0);\n    const phi21 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(Math.PI).sub(phi12);\n    // Second interface\n    const baseIOR = $945901ff02126f32$var$Fresnel0ToIor(baseF0.clamp(0.0, 0.9999)); // guard against 1.0\n    const R1 = $945901ff02126f32$var$IorToFresnel0(baseIOR, iridescenceIOR.vec3());\n    const R23 = (0, $2b7c3efb3816dd42$export$2e2bcd8739ae039)({\n        f0: R1,\n        f90: 1.0,\n        dotVH: cosTheta2\n    });\n    const phi23 = (0, $64e573acaa48d904$export$9100789c9d999364)(baseIOR.x.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.y.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.z.lessThan(iridescenceIOR).cond(Math.PI, 0.0));\n    // Phase shift\n    const OPD = iridescenceIOR.mul(thinFilmThickness, cosTheta2, 2.0);\n    const phi = (0, $64e573acaa48d904$export$9100789c9d999364)(phi21).add(phi23);\n    // Compound terms\n    const R123 = R12.mul(R23).clamp(1e-5, 0.9999);\n    const r123 = R123.sqrt();\n    const Rs = T121.pow2().mul(R23).div((0, $64e573acaa48d904$export$9100789c9d999364)(1.0).sub(R123));\n    // Reflectance term for m = 0 (DC term amplitude)\n    const C0 = R12.add(Rs);\n    let I = C0;\n    // Reflectance term for m > 0 (pairs of diracs)\n    let Cm = Rs.sub(T121);\n    for(let m = 1; m <= 2; ++m){\n        Cm = Cm.mul(r123);\n        const Sm = $945901ff02126f32$var$evalSensitivity((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(m).mul(OPD), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(m).mul(phi)).mul(2.0);\n        I = I.add(Cm.mul(Sm));\n    }\n    // Since out of gamut colors might be produced, negative color values are clamped to 0.\n    return I.max((0, $64e573acaa48d904$export$9100789c9d999364)(0.0));\n}).setLayout({\n    name: \"evalIridescence\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"outsideIOR\",\n            type: \"float\"\n        },\n        {\n            name: \"eta2\",\n            type: \"float\"\n        },\n        {\n            name: \"cosTheta1\",\n            type: \"float\"\n        },\n        {\n            name: \"thinFilmThickness\",\n            type: \"float\"\n        },\n        {\n            name: \"baseF0\",\n            type: \"vec3\"\n        }\n    ]\n});\n//\n//\tSheen\n//\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nconst $945901ff02126f32$var$IBLSheenBRDF = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(({ normal: normal, viewDir: viewDir, roughness: roughness })=>{\n    const dotNV = normal.dot(viewDir).saturate();\n    const r2 = roughness.pow2();\n    const a = (0, $ab000a4873a702a9$export$7ffafceb12143143)(roughness.lessThan(0.25), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(-339.2).mul(r2).add((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(161.4).mul(roughness)).sub(25.9), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(-8.48).mul(r2).add((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(14.3).mul(roughness)).sub(9.95));\n    const b = (0, $ab000a4873a702a9$export$7ffafceb12143143)(roughness.lessThan(0.25), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(44.0).mul(r2).sub((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(23.7).mul(roughness)).add(3.26), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.97).mul(r2).sub((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(3.27).mul(roughness)).add(0.72));\n    const DG = (0, $ab000a4873a702a9$export$7ffafceb12143143)(roughness.lessThan(0.25), 0.0, (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.1).mul(roughness).sub(0.025)).add(a.mul(dotNV).add(b).exp());\n    return DG.mul(1.0 / Math.PI).saturate();\n});\nconst $945901ff02126f32$var$clearcoatF0 = (0, $64e573acaa48d904$export$9100789c9d999364)(0.04);\nconst $945901ff02126f32$var$clearcoatF90 = (0, $64e573acaa48d904$export$9100789c9d999364)(1);\n//\nclass $945901ff02126f32$var$PhysicalLightingModel extends (0, $f9fd258025b318dd$export$2e2bcd8739ae039) {\n    constructor(clearcoat = false, sheen = false, iridescence = false){\n        super();\n        this.clearcoat = clearcoat;\n        this.sheen = sheen;\n        this.iridescence = iridescence;\n        this.clearcoatRadiance = null;\n        this.clearcoatSpecularDirect = null;\n        this.clearcoatSpecularIndirect = null;\n        this.sheenSpecularDirect = null;\n        this.sheenSpecularIndirect = null;\n        this.iridescenceFresnel = null;\n        this.iridescenceF0 = null;\n    }\n    start() {\n        if (this.clearcoat === true) {\n            this.clearcoatRadiance = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"clearcoatRadiance\");\n            this.clearcoatSpecularDirect = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"clearcoatSpecularDirect\");\n            this.clearcoatSpecularIndirect = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"clearcoatSpecularIndirect\");\n        }\n        if (this.sheen === true) {\n            this.sheenSpecularDirect = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"sheenSpecularDirect\");\n            this.sheenSpecularIndirect = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"sheenSpecularIndirect\");\n        }\n        if (this.iridescence === true) {\n            const dotNVi = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot((0, $f38f6f7a1974ae48$export$80de5077965297a8)).clamp();\n            this.iridescenceFresnel = $945901ff02126f32$var$evalIridescence({\n                outsideIOR: (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.0),\n                eta2: (0, $39f1d8052e434d46$export$e8f290002a000efa),\n                cosTheta1: dotNVi,\n                thinFilmThickness: (0, $39f1d8052e434d46$export$af4f9ca0bc04b1e),\n                baseF0: (0, $39f1d8052e434d46$export$e1aa5ee431e11795)\n            });\n            this.iridescenceF0 = (0, $afdc49dcc398bbdc$export$2e2bcd8739ae039)({\n                f: this.iridescenceFresnel,\n                f90: 1.0,\n                dotVH: dotNVi\n            });\n        }\n    }\n    // Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n    // Approximates multiscattering in order to preserve energy.\n    // http://www.jcgt.org/published/0008/01/03/\n    computeMultiscattering(singleScatter, multiScatter, specularF90 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1)) {\n        const dotNV = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot((0, $f38f6f7a1974ae48$export$80de5077965297a8)).clamp(); // @ TODO: Move to core dotNV\n        const fab = (0, $9e1039afc7d3407e$export$2e2bcd8739ae039)({\n            roughness: $39f1d8052e434d46$export$df3004878062a594,\n            dotNV: dotNV\n        });\n        const Fr = this.iridescenceF0 ? (0, $39f1d8052e434d46$export$8fa8908d67be43df).mix((0, $39f1d8052e434d46$export$e1aa5ee431e11795), this.iridescenceF0) : (0, $39f1d8052e434d46$export$e1aa5ee431e11795);\n        const FssEss = Fr.mul(fab.x).add(specularF90.mul(fab.y));\n        const Ess = fab.x.add(fab.y);\n        const Ems = Ess.oneMinus();\n        const Favg = (0, $39f1d8052e434d46$export$e1aa5ee431e11795).add((0, $39f1d8052e434d46$export$e1aa5ee431e11795).oneMinus().mul(0.047619)); // 1/21\n        const Fms = FssEss.mul(Favg).div(Ems.mul(Favg).oneMinus());\n        singleScatter.addAssign(FssEss);\n        multiScatter.addAssign(Fms.mul(Ems));\n    }\n    direct({ lightDirection: lightDirection, lightColor: lightColor, reflectedLight: reflectedLight }) {\n        const dotNL = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot(lightDirection).clamp();\n        const irradiance = dotNL.mul(lightColor);\n        if (this.sheen === true) this.sheenSpecularDirect.addAssign(irradiance.mul((0, $25e530a9e50643cf$export$2e2bcd8739ae039)({\n            lightDirection: lightDirection\n        })));\n        if (this.clearcoat === true) {\n            const dotNLcc = (0, $b8bdffed4c803471$export$71a9f037ea1539e0).dot(lightDirection).clamp();\n            const ccIrradiance = dotNLcc.mul(lightColor);\n            this.clearcoatSpecularDirect.addAssign(ccIrradiance.mul((0, $39f97bfab1e53803$export$2e2bcd8739ae039)({\n                lightDirection: lightDirection,\n                f0: $945901ff02126f32$var$clearcoatF0,\n                f90: $945901ff02126f32$var$clearcoatF90,\n                roughness: (0, $39f1d8052e434d46$export$2747d91296dfac86),\n                normalView: (0, $b8bdffed4c803471$export$71a9f037ea1539e0)\n            })));\n        }\n        reflectedLight.directDiffuse.addAssign(irradiance.mul((0, $18b1e0b3f7355037$export$2e2bcd8739ae039)({\n            diffuseColor: (0, $39f1d8052e434d46$export$3a790f19f33c5176).rgb\n        })));\n        reflectedLight.directSpecular.addAssign(irradiance.mul((0, $39f97bfab1e53803$export$2e2bcd8739ae039)({\n            lightDirection: lightDirection,\n            f0: (0, $39f1d8052e434d46$export$e1aa5ee431e11795),\n            f90: 1,\n            roughness: $39f1d8052e434d46$export$df3004878062a594,\n            iridescence: this.iridescence,\n            iridescenceFresnel: this.iridescenceFresnel\n        })));\n    }\n    indirectDiffuse({ irradiance: irradiance, reflectedLight: reflectedLight }) {\n        reflectedLight.indirectDiffuse.addAssign(irradiance.mul((0, $18b1e0b3f7355037$export$2e2bcd8739ae039)({\n            diffuseColor: $39f1d8052e434d46$export$3a790f19f33c5176\n        })));\n    }\n    indirectSpecular({ radiance: radiance, iblIrradiance: iblIrradiance, reflectedLight: reflectedLight }) {\n        if (this.sheen === true) this.sheenSpecularIndirect.addAssign(iblIrradiance.mul((0, $39f1d8052e434d46$export$7cccf56baed94cee), $945901ff02126f32$var$IBLSheenBRDF({\n            normal: (0, $b8bdffed4c803471$export$c58d63d09d102e3c),\n            viewDir: (0, $f38f6f7a1974ae48$export$80de5077965297a8),\n            roughness: (0, $39f1d8052e434d46$export$40c82d21b5c7315b)\n        })));\n        if (this.clearcoat === true) {\n            const dotNVcc = (0, $b8bdffed4c803471$export$71a9f037ea1539e0).dot((0, $f38f6f7a1974ae48$export$80de5077965297a8)).clamp();\n            const clearcoatEnv = (0, $3bfaead20e0c0358$export$2e2bcd8739ae039)({\n                dotNV: dotNVcc,\n                specularColor: $945901ff02126f32$var$clearcoatF0,\n                specularF90: $945901ff02126f32$var$clearcoatF90,\n                roughness: (0, $39f1d8052e434d46$export$2747d91296dfac86)\n            });\n            this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(clearcoatEnv));\n        }\n        // Both indirect specular and indirect diffuse light accumulate here\n        const singleScattering = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"singleScattering\");\n        const multiScattering = (0, $64e573acaa48d904$export$9100789c9d999364)().temp(\"multiScattering\");\n        const cosineWeightedIrradiance = iblIrradiance.mul(1 / Math.PI);\n        this.computeMultiscattering(singleScattering, multiScattering);\n        const totalScattering = singleScattering.add(multiScattering);\n        const diffuse = (0, $39f1d8052e434d46$export$3a790f19f33c5176).mul(totalScattering.r.max(totalScattering.g).max(totalScattering.b).oneMinus());\n        reflectedLight.indirectSpecular.addAssign(radiance.mul(singleScattering));\n        reflectedLight.indirectSpecular.addAssign(multiScattering.mul(cosineWeightedIrradiance));\n        reflectedLight.indirectDiffuse.addAssign(diffuse.mul(cosineWeightedIrradiance));\n    }\n    ambientOcclusion({ ambientOcclusion: ambientOcclusion, reflectedLight: reflectedLight }) {\n        const dotNV = (0, $b8bdffed4c803471$export$c58d63d09d102e3c).dot((0, $f38f6f7a1974ae48$export$80de5077965297a8)).clamp(); // @ TODO: Move to core dotNV\n        const aoNV = dotNV.add(ambientOcclusion);\n        const aoExp = (0, $39f1d8052e434d46$export$df3004878062a594).mul(-16).oneMinus().negate().exp2();\n        const aoNode = ambientOcclusion.sub(aoNV.pow(aoExp).oneMinus()).clamp();\n        if (this.clearcoat === true) this.clearcoatSpecularIndirect.mulAssign(ambientOcclusion);\n        if (this.sheen === true) this.sheenSpecularIndirect.mulAssign(ambientOcclusion);\n        reflectedLight.indirectDiffuse.mulAssign(ambientOcclusion);\n        reflectedLight.indirectSpecular.mulAssign(aoNode);\n    }\n    finish(context) {\n        const { outgoingLight: outgoingLight } = context;\n        if (this.clearcoat === true) {\n            const dotNVcc = (0, $b8bdffed4c803471$export$71a9f037ea1539e0).dot((0, $f38f6f7a1974ae48$export$80de5077965297a8)).clamp();\n            const Fcc = (0, $2b7c3efb3816dd42$export$2e2bcd8739ae039)({\n                dotVH: dotNVcc,\n                f0: $945901ff02126f32$var$clearcoatF0,\n                f90: $945901ff02126f32$var$clearcoatF90\n            });\n            const clearcoatLight = outgoingLight.mul((0, $39f1d8052e434d46$export$9b0829dedd347475).mul(Fcc).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul((0, $39f1d8052e434d46$export$9b0829dedd347475)));\n            outgoingLight.assign(clearcoatLight);\n        }\n        if (this.sheen === true) {\n            const sheenEnergyComp = (0, $39f1d8052e434d46$export$7cccf56baed94cee).r.max((0, $39f1d8052e434d46$export$7cccf56baed94cee).g).max((0, $39f1d8052e434d46$export$7cccf56baed94cee).b).mul(0.157).oneMinus();\n            const sheenLight = outgoingLight.mul(sheenEnergyComp).add(this.sheenSpecularDirect, this.sheenSpecularIndirect);\n            outgoingLight.assign(sheenLight);\n        }\n    }\n}\nvar $945901ff02126f32$export$2e2bcd8739ae039 = $945901ff02126f32$var$PhysicalLightingModel;\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $c36b3908a77c1e8c$var$defaultValues = new (0, $ilwiq.MeshStandardMaterial)();\nclass $c36b3908a77c1e8c$var$MeshStandardNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isMeshStandardNodeMaterial = true;\n        this.emissiveNode = null;\n        this.metalnessNode = null;\n        this.roughnessNode = null;\n        this.setDefaultValues($c36b3908a77c1e8c$var$defaultValues);\n        this.setValues(parameters);\n    }\n    setupLightingModel() {\n        return new (0, $945901ff02126f32$export$2e2bcd8739ae039)();\n    }\n    setupVariants() {\n        // METALNESS\n        const metalnessNode = this.metalnessNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.metalnessNode) : (0, $1b774580ee2e7ae3$export$ed4ec59eb9c0ad6c);\n        (0, $39f1d8052e434d46$export$a0ae10b9403517f8).assign(metalnessNode);\n        // ROUGHNESS\n        let roughnessNode = this.roughnessNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.roughnessNode) : (0, $1b774580ee2e7ae3$export$c372ad2642cfd701);\n        roughnessNode = (0, $ef578de3b1c1c38b$export$2e2bcd8739ae039)({\n            roughness: roughnessNode\n        });\n        (0, $39f1d8052e434d46$export$df3004878062a594).assign(roughnessNode);\n        // SPECULAR COLOR\n        const specularColorNode = (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)((0, $64e573acaa48d904$export$9100789c9d999364)(0.04), (0, $39f1d8052e434d46$export$3a790f19f33c5176).rgb, metalnessNode);\n        (0, $39f1d8052e434d46$export$e1aa5ee431e11795).assign(specularColorNode);\n        // DIFFUSE COLOR\n        (0, $39f1d8052e434d46$export$3a790f19f33c5176).assign((0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $39f1d8052e434d46$export$3a790f19f33c5176).rgb.mul(metalnessNode.oneMinus()), (0, $39f1d8052e434d46$export$3a790f19f33c5176).a));\n    }\n    copy(source) {\n        this.emissiveNode = source.emissiveNode;\n        this.metalnessNode = source.metalnessNode;\n        this.roughnessNode = source.roughnessNode;\n        return super.copy(source);\n    }\n}\nvar $c36b3908a77c1e8c$export$2e2bcd8739ae039 = $c36b3908a77c1e8c$var$MeshStandardNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"MeshStandardNodeMaterial\", $c36b3908a77c1e8c$var$MeshStandardNodeMaterial);\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $035b25db3b7ff26f$var$defaultValues = new (0, $ilwiq.MeshPhysicalMaterial)();\nclass $035b25db3b7ff26f$var$MeshPhysicalNodeMaterial extends (0, $c36b3908a77c1e8c$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isMeshPhysicalNodeMaterial = true;\n        this.clearcoatNode = null;\n        this.clearcoatRoughnessNode = null;\n        this.clearcoatNormalNode = null;\n        this.sheenNode = null;\n        this.sheenRoughnessNode = null;\n        this.iridescenceNode = null;\n        this.iridescenceIORNode = null;\n        this.iridescenceThicknessNode = null;\n        this.specularIntensityNode = null;\n        this.specularColorNode = null;\n        this.transmissionNode = null;\n        this.thicknessNode = null;\n        this.attenuationDistanceNode = null;\n        this.attenuationColorNode = null;\n        this.setDefaultValues($035b25db3b7ff26f$var$defaultValues);\n        this.setValues(parameters);\n    }\n    get useClearcoat() {\n        return this.clearcoat > 0 || this.clearcoatNode !== null;\n    }\n    get useIridescence() {\n        return this.iridescence > 0 || this.iridescenceNode !== null;\n    }\n    get useSheen() {\n        return this.sheen > 0 || this.sheenNode !== null;\n    }\n    setupLightingModel() {\n        return new (0, $945901ff02126f32$export$2e2bcd8739ae039)(this.useClearcoat, this.useSheen, this.useIridescence);\n    }\n    setupVariants(builder) {\n        super.setupVariants(builder);\n        // CLEARCOAT\n        if (this.useClearcoat) {\n            const clearcoatNode = this.clearcoatNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.clearcoatNode) : (0, $1b774580ee2e7ae3$export$bcb4b1fc59604158);\n            const clearcoatRoughnessNode = this.clearcoatRoughnessNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.clearcoatRoughnessNode) : (0, $1b774580ee2e7ae3$export$1deee7039751e39b);\n            (0, $39f1d8052e434d46$export$9b0829dedd347475).assign(clearcoatNode);\n            (0, $39f1d8052e434d46$export$2747d91296dfac86).assign(clearcoatRoughnessNode);\n        }\n        // SHEEN\n        if (this.useSheen) {\n            const sheenNode = this.sheenNode ? (0, $64e573acaa48d904$export$9100789c9d999364)(this.sheenNode) : (0, $1b774580ee2e7ae3$export$ca8d8f9bb84c2b06);\n            const sheenRoughnessNode = this.sheenRoughnessNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.sheenRoughnessNode) : (0, $1b774580ee2e7ae3$export$c53217b49af64201);\n            (0, $39f1d8052e434d46$export$7cccf56baed94cee).assign(sheenNode);\n            (0, $39f1d8052e434d46$export$40c82d21b5c7315b).assign(sheenRoughnessNode);\n        }\n        // IRIDESCENCE\n        if (this.useIridescence) {\n            const iridescenceNode = this.iridescenceNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.iridescenceNode) : (0, $1b774580ee2e7ae3$export$2991d95653bddf71);\n            const iridescenceIORNode = this.iridescenceIORNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.iridescenceIORNode) : (0, $1b774580ee2e7ae3$export$4d5a92c4b0801e42);\n            const iridescenceThicknessNode = this.iridescenceThicknessNode ? (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(this.iridescenceThicknessNode) : (0, $1b774580ee2e7ae3$export$edac0c112e716da0);\n            (0, $39f1d8052e434d46$export$8fa8908d67be43df).assign(iridescenceNode);\n            (0, $39f1d8052e434d46$export$e8f290002a000efa).assign(iridescenceIORNode);\n            (0, $39f1d8052e434d46$export$af4f9ca0bc04b1e).assign(iridescenceThicknessNode);\n        }\n    }\n    setupNormal(builder) {\n        super.setupNormal(builder);\n        // CLEARCOAT NORMAL\n        const clearcoatNormalNode = this.clearcoatNormalNode ? (0, $64e573acaa48d904$export$9100789c9d999364)(this.clearcoatNormalNode) : (0, $1b774580ee2e7ae3$export$1e8c99bce15509ea);\n        (0, $b8bdffed4c803471$export$71a9f037ea1539e0).assign(clearcoatNormalNode);\n    }\n    copy(source) {\n        this.clearcoatNode = source.clearcoatNode;\n        this.clearcoatRoughnessNode = source.clearcoatRoughnessNode;\n        this.clearcoatNormalNode = source.clearcoatNormalNode;\n        this.sheenNode = source.sheenNode;\n        this.sheenRoughnessNode = source.sheenRoughnessNode;\n        this.iridescenceNode = source.iridescenceNode;\n        this.iridescenceIORNode = source.iridescenceIORNode;\n        this.iridescenceThicknessNode = source.iridescenceThicknessNode;\n        this.specularIntensityNode = source.specularIntensityNode;\n        this.specularColorNode = source.specularColorNode;\n        this.transmissionNode = source.transmissionNode;\n        this.thicknessNode = source.thicknessNode;\n        this.attenuationDistanceNode = source.attenuationDistanceNode;\n        this.attenuationColorNode = source.attenuationColorNode;\n        return super.copy(source);\n    }\n}\nvar $035b25db3b7ff26f$export$2e2bcd8739ae039 = $035b25db3b7ff26f$var$MeshPhysicalNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"MeshPhysicalNodeMaterial\", $035b25db3b7ff26f$var$MeshPhysicalNodeMaterial);\n\n\n\n\n\n\n\n\nclass $bf8e5fa59de1abe1$var$SSSLightingModel extends (0, $945901ff02126f32$export$2e2bcd8739ae039) {\n    constructor(useClearcoat, useSheen, useIridescence, useSSS){\n        super(useClearcoat, useSheen, useIridescence);\n        this.useSSS = useSSS;\n    }\n    direct({ lightDirection: lightDirection, lightColor: lightColor, reflectedLight: reflectedLight }, stack, builder) {\n        if (this.useSSS === true) {\n            const material = builder.material;\n            const { thicknessColorNode: thicknessColorNode, thicknessDistortionNode: thicknessDistortionNode, thicknessAmbientNode: thicknessAmbientNode, thicknessAttenuationNode: thicknessAttenuationNode, thicknessPowerNode: thicknessPowerNode, thicknessScaleNode: thicknessScaleNode } = material;\n            const scatteringHalf = lightDirection.add((0, $b8bdffed4c803471$export$c58d63d09d102e3c).mul(thicknessDistortionNode)).normalize();\n            const scatteringDot = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $f38f6f7a1974ae48$export$80de5077965297a8).dot(scatteringHalf.negate()).saturate().pow(thicknessPowerNode).mul(thicknessScaleNode));\n            const scatteringIllu = (0, $64e573acaa48d904$export$9100789c9d999364)(scatteringDot.add(thicknessAmbientNode).mul(thicknessColorNode));\n            reflectedLight.directDiffuse.addAssign(scatteringIllu.mul(thicknessAttenuationNode.mul(lightColor)));\n        }\n        super.direct({\n            lightDirection: lightDirection,\n            lightColor: lightColor,\n            reflectedLight: reflectedLight\n        }, stack, builder);\n    }\n}\nclass $bf8e5fa59de1abe1$var$MeshSSSNodeMaterial extends (0, $035b25db3b7ff26f$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super(parameters);\n        this.thicknessColorNode = null;\n        this.thicknessDistortionNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.1);\n        this.thicknessAmbientNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.0);\n        this.thicknessAttenuationNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(.1);\n        this.thicknessPowerNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(2.0);\n        this.thicknessScaleNode = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(10.0);\n    }\n    get useSSS() {\n        return this.thicknessColorNode !== null;\n    }\n    setupLightingModel() {\n        return new $bf8e5fa59de1abe1$var$SSSLightingModel(this.useClearcoat, this.useSheen, this.useIridescence, this.useSSS);\n    }\n    copy(source) {\n        this.thicknessColorNode = source.thicknessColorNode;\n        this.thicknessDistortionNode = source.thicknessDistortionNode;\n        this.thicknessAmbientNode = source.thicknessAmbientNode;\n        this.thicknessAttenuationNode = source.thicknessAttenuationNode;\n        this.thicknessPowerNode = source.thicknessPowerNode;\n        this.thicknessScaleNode = source.thicknessScaleNode;\n        return super.copy(source);\n    }\n}\nvar $bf8e5fa59de1abe1$export$2e2bcd8739ae039 = $bf8e5fa59de1abe1$var$MeshSSSNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"MeshSSSNodeMaterial\", $bf8e5fa59de1abe1$var$MeshSSSNodeMaterial);\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $e834329877aa2350$var$defaultValues = new (0, $ilwiq.PointsMaterial)();\nclass $e834329877aa2350$var$PointsNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isPointsNodeMaterial = true;\n        this.lights = false;\n        this.normals = false;\n        this.transparent = true;\n        this.sizeNode = null;\n        this.setDefaultValues($e834329877aa2350$var$defaultValues);\n        this.setValues(parameters);\n    }\n    copy(source) {\n        this.sizeNode = source.sizeNode;\n        return super.copy(source);\n    }\n}\nvar $e834329877aa2350$export$2e2bcd8739ae039 = $e834329877aa2350$var$PointsNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"PointsNodeMaterial\", $e834329877aa2350$var$PointsNodeMaterial);\n\n\n\n\n\n\n\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $6d3ee420372fd62a$var$defaultValues = new (0, $ilwiq.SpriteMaterial)();\nclass $6d3ee420372fd62a$var$SpriteNodeMaterial extends (0, $10ae8478bd7328e0$export$2e2bcd8739ae039) {\n    constructor(parameters){\n        super();\n        this.isSpriteNodeMaterial = true;\n        this.lights = false;\n        this.normals = false;\n        this.positionNode = null;\n        this.rotationNode = null;\n        this.scaleNode = null;\n        this.setDefaultValues($6d3ee420372fd62a$var$defaultValues);\n        this.setValues(parameters);\n    }\n    setupPosition({ object: object, context: context }) {\n        // < VERTEX STAGE >\n        const { positionNode: positionNode, rotationNode: rotationNode, scaleNode: scaleNode } = this;\n        const vertex = (0, $f38f6f7a1974ae48$export$78cc3a7ea225109f);\n        let mvPosition = (0, $69c7546a6c9d8c2a$export$57d0df277658535e).mul((0, $64e573acaa48d904$export$9100789c9d999364)(positionNode || 0));\n        let scale = (0, $64e573acaa48d904$export$e9830bc863290a54)((0, $69c7546a6c9d8c2a$export$e1011125af6f8b40)[0].xyz.length(), (0, $69c7546a6c9d8c2a$export$e1011125af6f8b40)[1].xyz.length());\n        if (scaleNode !== null) scale = scale.mul(scaleNode);\n        let alignedPosition = vertex.xy;\n        if (object.center && object.center.isVector2 === true) alignedPosition = alignedPosition.sub((0, $5a2c5e11c304ade5$export$379455b567eff87d)(object.center).sub(0.5));\n        alignedPosition = alignedPosition.mul(scale);\n        const rotation = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(rotationNode || (0, $1b774580ee2e7ae3$export$22a360a238f20723));\n        const rotatedPosition = alignedPosition.rotate(rotation);\n        mvPosition = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(mvPosition.xy.add(rotatedPosition), mvPosition.zw);\n        const modelViewProjection = (0, $bab16494dbba4b41$export$dc8d743682f60b2d).mul(mvPosition);\n        context.vertex = vertex;\n        return modelViewProjection;\n    }\n    copy(source) {\n        this.positionNode = source.positionNode;\n        this.rotationNode = source.rotationNode;\n        this.scaleNode = source.scaleNode;\n        return super.copy(source);\n    }\n}\nvar $6d3ee420372fd62a$export$2e2bcd8739ae039 = $6d3ee420372fd62a$var$SpriteNodeMaterial;\n(0, $10ae8478bd7328e0$export$319f45b172b6f79c)(\"SpriteNodeMaterial\", $6d3ee420372fd62a$var$SpriteNodeMaterial);\n\n\n\n\nconst $baf74944e4f4d36f$var$superFromTypeFunction = (0, $ilwiq.MaterialLoader).createMaterialFromType;\n(0, $ilwiq.MaterialLoader).createMaterialFromType = function(type) {\n    const material = (0, $10ae8478bd7328e0$export$c8ea147e614cf837)(type);\n    if (material !== undefined) return material;\n    return $baf74944e4f4d36f$var$superFromTypeFunction.call(this, type);\n};\nclass $baf74944e4f4d36f$var$NodeMaterialLoader extends (0, $ilwiq.MaterialLoader) {\n    constructor(manager){\n        super(manager);\n        this.nodes = {};\n    }\n    parse(json) {\n        const material = super.parse(json);\n        const nodes = this.nodes;\n        const inputNodes = json.inputNodes;\n        for(const property in inputNodes){\n            const uuid = inputNodes[property];\n            material[property] = nodes[uuid];\n        }\n        return material;\n    }\n    setNodes(value) {\n        this.nodes = value;\n        return this;\n    }\n}\nvar $baf74944e4f4d36f$export$2e2bcd8739ae039 = $baf74944e4f4d36f$var$NodeMaterialLoader;\n\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nclass $11104eead85243ec$var$NodeObjectLoader extends (0, $ilwiq.ObjectLoader) {\n    constructor(manager){\n        super(manager);\n        this._nodesJSON = null;\n    }\n    parse(json, onLoad) {\n        this._nodesJSON = json.nodes;\n        const data = super.parse(json, onLoad);\n        this._nodesJSON = null; // dispose\n        return data;\n    }\n    parseNodes(json, textures) {\n        if (json !== undefined) {\n            const loader = new (0, $391f9a0c4aca814c$export$2e2bcd8739ae039)();\n            loader.setTextures(textures);\n            return loader.parseNodes(json);\n        }\n        return {};\n    }\n    parseMaterials(json, textures) {\n        const materials = {};\n        if (json !== undefined) {\n            const nodes = this.parseNodes(this._nodesJSON, textures);\n            const loader = new (0, $baf74944e4f4d36f$export$2e2bcd8739ae039)();\n            loader.setTextures(textures);\n            loader.setNodes(nodes);\n            for(let i = 0, l = json.length; i < l; i++){\n                const data = json[i];\n                materials[data.uuid] = loader.parse(data);\n            }\n        }\n        return materials;\n    }\n}\nvar $11104eead85243ec$export$2e2bcd8739ae039 = $11104eead85243ec$var$NodeObjectLoader;\n\n\n\nclass $aacec6295d723cc5$var$NodeParser {\n    parseFunction() {\n        console.warn(\"Abstract function.\");\n    }\n}\nvar $aacec6295d723cc5$export$2e2bcd8739ae039 = $aacec6295d723cc5$var$NodeParser;\n\n\nclass $f82b2028b643a115$var$NodeFunction {\n    constructor(type, inputs, name = \"\", presicion = \"\"){\n        this.type = type;\n        this.inputs = inputs;\n        this.name = name;\n        this.presicion = presicion;\n    }\n    getCode() {\n        console.warn(\"Abstract function.\");\n    }\n}\n$f82b2028b643a115$var$NodeFunction.isNodeFunction = true;\nvar $f82b2028b643a115$export$2e2bcd8739ae039 = $f82b2028b643a115$var$NodeFunction;\n\n\n\nconst $cd98589f530f6662$var$declarationRegexp = /^\\s*(highp|mediump|lowp)?\\s*([a-z_0-9]+)\\s*([a-z_0-9]+)?\\s*\\(([\\s\\S]*?)\\)/i;\nconst $cd98589f530f6662$var$propertiesRegexp = /[a-z_0-9]+/ig;\nconst $cd98589f530f6662$var$pragmaMain = \"#pragma main\";\nconst $cd98589f530f6662$var$parse = (source)=>{\n    source = source.trim();\n    const pragmaMainIndex = source.indexOf($cd98589f530f6662$var$pragmaMain);\n    const mainCode = pragmaMainIndex !== -1 ? source.slice(pragmaMainIndex + $cd98589f530f6662$var$pragmaMain.length) : source;\n    const declaration = mainCode.match($cd98589f530f6662$var$declarationRegexp);\n    if (declaration !== null && declaration.length === 5) {\n        // tokenizer\n        const inputsCode = declaration[4];\n        const propsMatches = [];\n        let nameMatch = null;\n        while((nameMatch = $cd98589f530f6662$var$propertiesRegexp.exec(inputsCode)) !== null)propsMatches.push(nameMatch);\n        // parser\n        const inputs = [];\n        let i = 0;\n        while(i < propsMatches.length){\n            const isConst = propsMatches[i][0] === \"const\";\n            if (isConst === true) i++;\n            let qualifier = propsMatches[i][0];\n            if (qualifier === \"in\" || qualifier === \"out\" || qualifier === \"inout\") i++;\n            else qualifier = \"\";\n            const type = propsMatches[i++][0];\n            let count = Number.parseInt(propsMatches[i][0]);\n            if (Number.isNaN(count) === false) i++;\n            else count = null;\n            const name = propsMatches[i++][0];\n            inputs.push(new (0, $ad7751066410c1cd$export$2e2bcd8739ae039)(type, name, count, qualifier, isConst));\n        }\n        //\n        const blockCode = mainCode.substring(declaration[0].length);\n        const name = declaration[3] !== undefined ? declaration[3] : \"\";\n        const type = declaration[2];\n        const presicion = declaration[1] !== undefined ? declaration[1] : \"\";\n        const headerCode = pragmaMainIndex !== -1 ? source.slice(0, pragmaMainIndex) : \"\";\n        return {\n            type: type,\n            inputs: inputs,\n            name: name,\n            presicion: presicion,\n            inputsCode: inputsCode,\n            blockCode: blockCode,\n            headerCode: headerCode\n        };\n    } else throw new Error(\"FunctionNode: Function is not a GLSL code.\");\n};\nclass $cd98589f530f6662$var$GLSLNodeFunction extends (0, $f82b2028b643a115$export$2e2bcd8739ae039) {\n    constructor(source){\n        const { type: type, inputs: inputs, name: name, presicion: presicion, inputsCode: inputsCode, blockCode: blockCode, headerCode: headerCode } = $cd98589f530f6662$var$parse(source);\n        super(type, inputs, name, presicion);\n        this.inputsCode = inputsCode;\n        this.blockCode = blockCode;\n        this.headerCode = headerCode;\n    }\n    getCode(name = this.name) {\n        let code;\n        const blockCode = this.blockCode;\n        if (blockCode !== \"\") {\n            const { type: type, inputsCode: inputsCode, headerCode: headerCode, presicion: presicion } = this;\n            let declarationCode = `${type} ${name} ( ${inputsCode.trim()} )`;\n            if (presicion !== \"\") declarationCode = `${presicion} ${declarationCode}`;\n            code = headerCode + declarationCode + blockCode;\n        } else // interface function\n        code = \"\";\n        return code;\n    }\n}\nvar $cd98589f530f6662$export$2e2bcd8739ae039 = $cd98589f530f6662$var$GLSLNodeFunction;\n\n\nclass $dc4d721a6d2be829$var$GLSLNodeParser extends (0, $aacec6295d723cc5$export$2e2bcd8739ae039) {\n    parseFunction(source) {\n        return new (0, $cd98589f530f6662$export$2e2bcd8739ae039)(source);\n    }\n}\nvar $dc4d721a6d2be829$export$2e2bcd8739ae039 = $dc4d721a6d2be829$var$GLSLNodeParser;\n\n\n\n// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\n\n\n\n\n\nconst $43e99bbd272b419a$export$fcb3e1b8d74c8b23 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([b_immutable, t_immutable, f_immutable])=>{\n    const f = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(f_immutable).toVar();\n    const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(t_immutable).toVar();\n    const b = (0, $64e573acaa48d904$export$87b259aa03e3d267)(b_immutable).toVar();\n    return (0, $ab000a4873a702a9$export$7ffafceb12143143)(b, t, f);\n});\nconst $43e99bbd272b419a$export$806591ac4956b890 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([val_immutable, b_immutable])=>{\n    const b = (0, $64e573acaa48d904$export$87b259aa03e3d267)(b_immutable).toVar();\n    const val = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(val_immutable).toVar();\n    return (0, $ab000a4873a702a9$export$7ffafceb12143143)(b, val.negate(), val);\n});\nconst $43e99bbd272b419a$export$c4655eced0ba6aa5 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable])=>{\n    const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x_immutable).toVar();\n    return (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)((0, $4b9f12ce87d17074$export$a3fe094919f356fd)(x));\n});\nconst $43e99bbd272b419a$export$2924b498742ec559 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, i])=>{\n    const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x_immutable).toVar();\n    i.assign($43e99bbd272b419a$export$c4655eced0ba6aa5(x));\n    return x.sub((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(i));\n});\nconst $43e99bbd272b419a$var$mx_bilerp_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable])=>{\n    const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(t_immutable).toVar();\n    const s = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(s_immutable).toVar();\n    const v3 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v3_immutable).toVar();\n    const v2 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v2_immutable).toVar();\n    const v1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v1_immutable).toVar();\n    const v0 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v0_immutable).toVar();\n    const s1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, s)).toVar();\n    return (0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nconst $43e99bbd272b419a$var$mx_bilerp_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable])=>{\n    const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(t_immutable).toVar();\n    const s = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(s_immutable).toVar();\n    const v3 = (0, $64e573acaa48d904$export$9100789c9d999364)(v3_immutable).toVar();\n    const v2 = (0, $64e573acaa48d904$export$9100789c9d999364)(v2_immutable).toVar();\n    const v1 = (0, $64e573acaa48d904$export$9100789c9d999364)(v1_immutable).toVar();\n    const v0 = (0, $64e573acaa48d904$export$9100789c9d999364)(v0_immutable).toVar();\n    const s1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, s)).toVar();\n    return (0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, t).mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))));\n});\nconst $43e99bbd272b419a$export$d7adc3042282e3fa = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_bilerp_0,\n    $43e99bbd272b419a$var$mx_bilerp_1\n]);\nconst $43e99bbd272b419a$var$mx_trilerp_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable])=>{\n    const r = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(r_immutable).toVar();\n    const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(t_immutable).toVar();\n    const s = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(s_immutable).toVar();\n    const v7 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v7_immutable).toVar();\n    const v6 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v6_immutable).toVar();\n    const v5 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v5_immutable).toVar();\n    const v4 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v4_immutable).toVar();\n    const v3 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v3_immutable).toVar();\n    const v2 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v2_immutable).toVar();\n    const v1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v1_immutable).toVar();\n    const v0 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v0_immutable).toVar();\n    const s1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, s)).toVar();\n    const t1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, t)).toVar();\n    const r1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, r)).toVar();\n    return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nconst $43e99bbd272b419a$var$mx_trilerp_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable])=>{\n    const r = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(r_immutable).toVar();\n    const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(t_immutable).toVar();\n    const s = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(s_immutable).toVar();\n    const v7 = (0, $64e573acaa48d904$export$9100789c9d999364)(v7_immutable).toVar();\n    const v6 = (0, $64e573acaa48d904$export$9100789c9d999364)(v6_immutable).toVar();\n    const v5 = (0, $64e573acaa48d904$export$9100789c9d999364)(v5_immutable).toVar();\n    const v4 = (0, $64e573acaa48d904$export$9100789c9d999364)(v4_immutable).toVar();\n    const v3 = (0, $64e573acaa48d904$export$9100789c9d999364)(v3_immutable).toVar();\n    const v2 = (0, $64e573acaa48d904$export$9100789c9d999364)(v2_immutable).toVar();\n    const v1 = (0, $64e573acaa48d904$export$9100789c9d999364)(v1_immutable).toVar();\n    const v0 = (0, $64e573acaa48d904$export$9100789c9d999364)(v0_immutable).toVar();\n    const s1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, s)).toVar();\n    const t1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, t)).toVar();\n    const r1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, r)).toVar();\n    return r1.mul(t1.mul(v0.mul(s1).add(v1.mul(s))).add(t.mul(v2.mul(s1).add(v3.mul(s))))).add(r.mul(t1.mul(v4.mul(s1).add(v5.mul(s))).add(t.mul(v6.mul(s1).add(v7.mul(s))))));\n});\nconst $43e99bbd272b419a$export$83e686cd331bbe85 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_trilerp_0,\n    $43e99bbd272b419a$var$mx_trilerp_1\n]);\nconst $43e99bbd272b419a$var$mx_gradient_float_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([hash_immutable, x_immutable, y_immutable])=>{\n    const y = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x_immutable).toVar();\n    const hash = (0, $64e573acaa48d904$export$877455b195f03b92)(hash_immutable).toVar();\n    const h = (0, $64e573acaa48d904$export$877455b195f03b92)(hash.bitAnd((0, $64e573acaa48d904$export$877455b195f03b92)(7))).toVar();\n    const u = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$fcb3e1b8d74c8b23(h.lessThan((0, $64e573acaa48d904$export$877455b195f03b92)(4)), x, y)).toVar();\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(2.0, $43e99bbd272b419a$export$fcb3e1b8d74c8b23(h.lessThan((0, $64e573acaa48d904$export$877455b195f03b92)(4)), y, x))).toVar();\n    return $43e99bbd272b419a$export$806591ac4956b890(u, (0, $64e573acaa48d904$export$87b259aa03e3d267)(h.bitAnd((0, $64e573acaa48d904$export$877455b195f03b92)(1)))).add($43e99bbd272b419a$export$806591ac4956b890(v, (0, $64e573acaa48d904$export$87b259aa03e3d267)(h.bitAnd((0, $64e573acaa48d904$export$877455b195f03b92)(2)))));\n});\nconst $43e99bbd272b419a$var$mx_gradient_float_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([hash_immutable, x_immutable, y_immutable, z_immutable])=>{\n    const z = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(z_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x_immutable).toVar();\n    const hash = (0, $64e573acaa48d904$export$877455b195f03b92)(hash_immutable).toVar();\n    const h = (0, $64e573acaa48d904$export$877455b195f03b92)(hash.bitAnd((0, $64e573acaa48d904$export$877455b195f03b92)(15))).toVar();\n    const u = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$fcb3e1b8d74c8b23(h.lessThan((0, $64e573acaa48d904$export$877455b195f03b92)(8)), x, y)).toVar();\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$fcb3e1b8d74c8b23(h.lessThan((0, $64e573acaa48d904$export$877455b195f03b92)(4)), y, $43e99bbd272b419a$export$fcb3e1b8d74c8b23(h.equal((0, $64e573acaa48d904$export$877455b195f03b92)(12)).or(h.equal((0, $64e573acaa48d904$export$877455b195f03b92)(14))), x, z))).toVar();\n    return $43e99bbd272b419a$export$806591ac4956b890(u, (0, $64e573acaa48d904$export$87b259aa03e3d267)(h.bitAnd((0, $64e573acaa48d904$export$877455b195f03b92)(1)))).add($43e99bbd272b419a$export$806591ac4956b890(v, (0, $64e573acaa48d904$export$87b259aa03e3d267)(h.bitAnd((0, $64e573acaa48d904$export$877455b195f03b92)(2)))));\n});\nconst $43e99bbd272b419a$export$a7c336d113e7d56e = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_gradient_float_0,\n    $43e99bbd272b419a$var$mx_gradient_float_1\n]);\nconst $43e99bbd272b419a$var$mx_gradient_vec3_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([hash_immutable, x_immutable, y_immutable])=>{\n    const y = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x_immutable).toVar();\n    const hash = (0, $64e573acaa48d904$export$bffc171a9468d831)(hash_immutable).toVar();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$a7c336d113e7d56e(hash.x, x, y), $43e99bbd272b419a$export$a7c336d113e7d56e(hash.y, x, y), $43e99bbd272b419a$export$a7c336d113e7d56e(hash.z, x, y));\n});\nconst $43e99bbd272b419a$var$mx_gradient_vec3_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([hash_immutable, x_immutable, y_immutable, z_immutable])=>{\n    const z = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(z_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x_immutable).toVar();\n    const hash = (0, $64e573acaa48d904$export$bffc171a9468d831)(hash_immutable).toVar();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$a7c336d113e7d56e(hash.x, x, y, z), $43e99bbd272b419a$export$a7c336d113e7d56e(hash.y, x, y, z), $43e99bbd272b419a$export$a7c336d113e7d56e(hash.z, x, y, z));\n});\nconst $43e99bbd272b419a$export$5fad2327a2fce05 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_gradient_vec3_0,\n    $43e99bbd272b419a$var$mx_gradient_vec3_1\n]);\nconst $43e99bbd272b419a$var$mx_gradient_scale2d_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v_immutable])=>{\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v_immutable).toVar();\n    return (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(0.6616, v);\n});\nconst $43e99bbd272b419a$var$mx_gradient_scale3d_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v_immutable])=>{\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v_immutable).toVar();\n    return (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(0.9820, v);\n});\nconst $43e99bbd272b419a$var$mx_gradient_scale2d_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v_immutable])=>{\n    const v = (0, $64e573acaa48d904$export$9100789c9d999364)(v_immutable).toVar();\n    return (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(0.6616, v);\n});\nconst $43e99bbd272b419a$export$9545d7b50b8a37fa = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_gradient_scale2d_0,\n    $43e99bbd272b419a$var$mx_gradient_scale2d_1\n]);\nconst $43e99bbd272b419a$var$mx_gradient_scale3d_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([v_immutable])=>{\n    const v = (0, $64e573acaa48d904$export$9100789c9d999364)(v_immutable).toVar();\n    return (0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(0.9820, v);\n});\nconst $43e99bbd272b419a$export$de4bf689fdc55e48 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_gradient_scale3d_0,\n    $43e99bbd272b419a$var$mx_gradient_scale3d_1\n]);\nconst $43e99bbd272b419a$export$6d9d66de1ac63983 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, k_immutable])=>{\n    const k = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(k_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$877455b195f03b92)(x_immutable).toVar();\n    return x.shiftLeft(k).bitOr(x.shiftRight((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(32).sub(k)));\n});\nconst $43e99bbd272b419a$export$b37358d1d465116c = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([a, b, c])=>{\n    a.subAssign(c);\n    a.bitXorAssign($43e99bbd272b419a$export$6d9d66de1ac63983(c, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(4)));\n    c.addAssign(b);\n    b.subAssign(a);\n    b.bitXorAssign($43e99bbd272b419a$export$6d9d66de1ac63983(a, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(6)));\n    a.addAssign(c);\n    c.subAssign(b);\n    c.bitXorAssign($43e99bbd272b419a$export$6d9d66de1ac63983(b, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(8)));\n    b.addAssign(a);\n    a.subAssign(c);\n    a.bitXorAssign($43e99bbd272b419a$export$6d9d66de1ac63983(c, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(16)));\n    c.addAssign(b);\n    b.subAssign(a);\n    b.bitXorAssign($43e99bbd272b419a$export$6d9d66de1ac63983(a, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(19)));\n    a.addAssign(c);\n    c.subAssign(b);\n    c.bitXorAssign($43e99bbd272b419a$export$6d9d66de1ac63983(b, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(4)));\n    b.addAssign(a);\n});\nconst $43e99bbd272b419a$export$ec469612ab433c08 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([a_immutable, b_immutable, c_immutable])=>{\n    const c = (0, $64e573acaa48d904$export$877455b195f03b92)(c_immutable).toVar();\n    const b = (0, $64e573acaa48d904$export$877455b195f03b92)(b_immutable).toVar();\n    const a = (0, $64e573acaa48d904$export$877455b195f03b92)(a_immutable).toVar();\n    c.bitXorAssign(b);\n    c.subAssign($43e99bbd272b419a$export$6d9d66de1ac63983(b, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(14)));\n    a.bitXorAssign(c);\n    a.subAssign($43e99bbd272b419a$export$6d9d66de1ac63983(c, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(11)));\n    b.bitXorAssign(a);\n    b.subAssign($43e99bbd272b419a$export$6d9d66de1ac63983(a, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(25)));\n    c.bitXorAssign(b);\n    c.subAssign($43e99bbd272b419a$export$6d9d66de1ac63983(b, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(16)));\n    a.bitXorAssign(c);\n    a.subAssign($43e99bbd272b419a$export$6d9d66de1ac63983(c, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(4)));\n    b.bitXorAssign(a);\n    b.subAssign($43e99bbd272b419a$export$6d9d66de1ac63983(a, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(14)));\n    c.bitXorAssign(b);\n    c.subAssign($43e99bbd272b419a$export$6d9d66de1ac63983(b, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(24)));\n    return c;\n});\nconst $43e99bbd272b419a$export$3af44866218d463 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([bits_immutable])=>{\n    const bits = (0, $64e573acaa48d904$export$877455b195f03b92)(bits_immutable).toVar();\n    return (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(bits).div((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xffffffff))));\n});\nconst $43e99bbd272b419a$export$cebcae46bfff0866 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([t_immutable])=>{\n    const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(t_immutable).toVar();\n    return t.mul(t.mul(t.mul(t.mul(t.mul(6.0).sub(15.0)).add(10.0))));\n});\nconst $43e99bbd272b419a$var$mx_hash_int_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable])=>{\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const len = (0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$877455b195f03b92)(1)).toVar();\n    const seed = (0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xdeadbeef)).add(len.shiftLeft((0, $64e573acaa48d904$export$877455b195f03b92)(2)).add((0, $64e573acaa48d904$export$877455b195f03b92)(13)))).toVar();\n    return $43e99bbd272b419a$export$ec469612ab433c08(seed.add((0, $64e573acaa48d904$export$877455b195f03b92)(x)), seed, seed);\n});\nconst $43e99bbd272b419a$var$mx_hash_int_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, y_immutable])=>{\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const len = (0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$877455b195f03b92)(2)).toVar();\n    const a = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), b = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), c = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar();\n    a.assign(b.assign(c.assign((0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xdeadbeef)).add(len.shiftLeft((0, $64e573acaa48d904$export$877455b195f03b92)(2)).add((0, $64e573acaa48d904$export$877455b195f03b92)(13))))));\n    a.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(x));\n    b.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(y));\n    return $43e99bbd272b419a$export$ec469612ab433c08(a, b, c);\n});\nconst $43e99bbd272b419a$var$mx_hash_int_2 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, y_immutable, z_immutable])=>{\n    const z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(z_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const len = (0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$877455b195f03b92)(3)).toVar();\n    const a = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), b = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), c = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar();\n    a.assign(b.assign(c.assign((0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xdeadbeef)).add(len.shiftLeft((0, $64e573acaa48d904$export$877455b195f03b92)(2)).add((0, $64e573acaa48d904$export$877455b195f03b92)(13))))));\n    a.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(x));\n    b.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(y));\n    c.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(z));\n    return $43e99bbd272b419a$export$ec469612ab433c08(a, b, c);\n});\nconst $43e99bbd272b419a$var$mx_hash_int_3 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, y_immutable, z_immutable, xx_immutable])=>{\n    const xx = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(xx_immutable).toVar();\n    const z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(z_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const len = (0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$877455b195f03b92)(4)).toVar();\n    const a = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), b = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), c = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar();\n    a.assign(b.assign(c.assign((0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xdeadbeef)).add(len.shiftLeft((0, $64e573acaa48d904$export$877455b195f03b92)(2)).add((0, $64e573acaa48d904$export$877455b195f03b92)(13))))));\n    a.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(x));\n    b.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(y));\n    c.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(z));\n    $43e99bbd272b419a$export$b37358d1d465116c(a, b, c);\n    a.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(xx));\n    return $43e99bbd272b419a$export$ec469612ab433c08(a, b, c);\n});\nconst $43e99bbd272b419a$var$mx_hash_int_4 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable])=>{\n    const yy = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(yy_immutable).toVar();\n    const xx = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(xx_immutable).toVar();\n    const z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(z_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const len = (0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$877455b195f03b92)(5)).toVar();\n    const a = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), b = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar(), c = (0, $64e573acaa48d904$export$877455b195f03b92)().toVar();\n    a.assign(b.assign(c.assign((0, $64e573acaa48d904$export$877455b195f03b92)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xdeadbeef)).add(len.shiftLeft((0, $64e573acaa48d904$export$877455b195f03b92)(2)).add((0, $64e573acaa48d904$export$877455b195f03b92)(13))))));\n    a.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(x));\n    b.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(y));\n    c.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(z));\n    $43e99bbd272b419a$export$b37358d1d465116c(a, b, c);\n    a.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(xx));\n    b.addAssign((0, $64e573acaa48d904$export$877455b195f03b92)(yy));\n    return $43e99bbd272b419a$export$ec469612ab433c08(a, b, c);\n});\nconst $43e99bbd272b419a$export$e3e1bc14345163b2 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_hash_int_0,\n    $43e99bbd272b419a$var$mx_hash_int_1,\n    $43e99bbd272b419a$var$mx_hash_int_2,\n    $43e99bbd272b419a$var$mx_hash_int_3,\n    $43e99bbd272b419a$var$mx_hash_int_4\n]);\nconst $43e99bbd272b419a$var$mx_hash_vec3_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, y_immutable])=>{\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const h = (0, $64e573acaa48d904$export$877455b195f03b92)($43e99bbd272b419a$export$e3e1bc14345163b2(x, y)).toVar();\n    const result = (0, $64e573acaa48d904$export$bffc171a9468d831)().toVar();\n    result.x.assign(h.bitAnd((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xFF)));\n    result.y.assign(h.shiftRight((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(8)).bitAnd((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xFF)));\n    result.z.assign(h.shiftRight((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(16)).bitAnd((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xFF)));\n    return result;\n});\nconst $43e99bbd272b419a$var$mx_hash_vec3_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([x_immutable, y_immutable, z_immutable])=>{\n    const z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(z_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const h = (0, $64e573acaa48d904$export$877455b195f03b92)($43e99bbd272b419a$export$e3e1bc14345163b2(x, y, z)).toVar();\n    const result = (0, $64e573acaa48d904$export$bffc171a9468d831)().toVar();\n    result.x.assign(h.bitAnd((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xFF)));\n    result.y.assign(h.shiftRight((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(8)).bitAnd((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xFF)));\n    result.z.assign(h.shiftRight((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(16)).bitAnd((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0xFF)));\n    return result;\n});\nconst $43e99bbd272b419a$export$88774482b8eec1ca = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_hash_vec3_0,\n    $43e99bbd272b419a$var$mx_hash_vec3_1\n]);\nconst $43e99bbd272b419a$var$mx_perlin_noise_float_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const fx = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.x, X)).toVar();\n    const fy = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.y, Y)).toVar();\n    const u = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fx)).toVar();\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fy)).toVar();\n    const result = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$d7adc3042282e3fa($43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X, Y), fx, fy), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y), fx.sub(1.0), fy), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X, Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx, fy.sub(1.0)), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n    return $43e99bbd272b419a$export$9545d7b50b8a37fa(result);\n});\nconst $43e99bbd272b419a$var$mx_perlin_noise_float_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const fx = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.x, X)).toVar();\n    const fy = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.y, Y)).toVar();\n    const fz = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.z, Z)).toVar();\n    const u = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fx)).toVar();\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fy)).toVar();\n    const w = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fz)).toVar();\n    const result = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$83e686cd331bbe85($43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X, Y, Z), fx, fy, fz), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y, Z), fx.sub(1.0), fy, fz), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X, Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z), fx, fy.sub(1.0), fz), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X, Y, Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx, fy, fz.sub(1.0)), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y, Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx.sub(1.0), fy, fz.sub(1.0)), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X, Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx, fy.sub(1.0), fz.sub(1.0)), $43e99bbd272b419a$export$a7c336d113e7d56e($43e99bbd272b419a$export$e3e1bc14345163b2(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n    return $43e99bbd272b419a$export$de4bf689fdc55e48(result);\n});\nconst $43e99bbd272b419a$export$8156a390e7b52cb6 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_perlin_noise_float_0,\n    $43e99bbd272b419a$var$mx_perlin_noise_float_1\n]);\nconst $43e99bbd272b419a$var$mx_perlin_noise_vec3_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const fx = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.x, X)).toVar();\n    const fy = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.y, Y)).toVar();\n    const u = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fx)).toVar();\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fy)).toVar();\n    const result = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$d7adc3042282e3fa($43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X, Y), fx, fy), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y), fx.sub(1.0), fy), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X, Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx, fy.sub(1.0)), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx.sub(1.0), fy.sub(1.0)), u, v)).toVar();\n    return $43e99bbd272b419a$export$9545d7b50b8a37fa(result);\n});\nconst $43e99bbd272b419a$var$mx_perlin_noise_vec3_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const fx = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.x, X)).toVar();\n    const fy = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.y, Y)).toVar();\n    const fz = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2924b498742ec559(p.z, Z)).toVar();\n    const u = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fx)).toVar();\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fy)).toVar();\n    const w = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$cebcae46bfff0866(fz)).toVar();\n    const result = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$83e686cd331bbe85($43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X, Y, Z), fx, fy, fz), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y, Z), fx.sub(1.0), fy, fz), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X, Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z), fx, fy.sub(1.0), fz), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z), fx.sub(1.0), fy.sub(1.0), fz), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X, Y, Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx, fy, fz.sub(1.0)), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y, Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx.sub(1.0), fy, fz.sub(1.0)), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X, Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx, fy.sub(1.0), fz.sub(1.0)), $43e99bbd272b419a$export$5fad2327a2fce05($43e99bbd272b419a$export$88774482b8eec1ca(X.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Y.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), Z.add((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), fx.sub(1.0), fy.sub(1.0), fz.sub(1.0)), u, v, w)).toVar();\n    return $43e99bbd272b419a$export$de4bf689fdc55e48(result);\n});\nconst $43e99bbd272b419a$export$48933da469822a3e = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_perlin_noise_vec3_0,\n    $43e99bbd272b419a$var$mx_perlin_noise_vec3_1\n]);\nconst $43e99bbd272b419a$var$mx_cell_noise_float_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p)).toVar();\n    return $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix));\n});\nconst $43e99bbd272b419a$var$mx_cell_noise_float_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.x)).toVar();\n    const iy = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.y)).toVar();\n    return $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy));\n});\nconst $43e99bbd272b419a$var$mx_cell_noise_float_2 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.x)).toVar();\n    const iy = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.y)).toVar();\n    const iz = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.z)).toVar();\n    return $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz));\n});\nconst $43e99bbd272b419a$var$mx_cell_noise_float_3 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.x)).toVar();\n    const iy = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.y)).toVar();\n    const iz = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.z)).toVar();\n    const iw = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.w)).toVar();\n    return $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz, iw));\n});\nconst $43e99bbd272b419a$export$5eaa094b2411a56b = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_cell_noise_float_0,\n    $43e99bbd272b419a$var$mx_cell_noise_float_1,\n    $43e99bbd272b419a$var$mx_cell_noise_float_2,\n    $43e99bbd272b419a$var$mx_cell_noise_float_3\n]);\nconst $43e99bbd272b419a$var$mx_cell_noise_vec3_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p)).toVar();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(2))));\n});\nconst $43e99bbd272b419a$var$mx_cell_noise_vec3_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.x)).toVar();\n    const iy = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.y)).toVar();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(2))));\n});\nconst $43e99bbd272b419a$var$mx_cell_noise_vec3_2 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.x)).toVar();\n    const iy = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.y)).toVar();\n    const iz = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.z)).toVar();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(2))));\n});\nconst $43e99bbd272b419a$var$mx_cell_noise_vec3_3 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable])=>{\n    const p = (0, $64e573acaa48d904$export$6dba2a1f0d609415)(p_immutable).toVar();\n    const ix = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.x)).toVar();\n    const iy = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.y)).toVar();\n    const iz = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.z)).toVar();\n    const iw = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)($43e99bbd272b419a$export$c4655eced0ba6aa5(p.w)).toVar();\n    return (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz, iw, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz, iw, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1))), $43e99bbd272b419a$export$3af44866218d463($43e99bbd272b419a$export$e3e1bc14345163b2(ix, iy, iz, iw, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(2))));\n});\nconst $43e99bbd272b419a$export$f001280a89d27de0 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_cell_noise_vec3_0,\n    $43e99bbd272b419a$var$mx_cell_noise_vec3_1,\n    $43e99bbd272b419a$var$mx_cell_noise_vec3_2,\n    $43e99bbd272b419a$var$mx_cell_noise_vec3_3\n]);\nconst $43e99bbd272b419a$export$2a6701b70ee390ec = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable])=>{\n    const diminish = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(diminish_immutable).toVar();\n    const lacunarity = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(lacunarity_immutable).toVar();\n    const octaves = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const result = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(0.0).toVar();\n    const amplitude = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.0).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0),\n        end: octaves\n    }, ({ i: i })=>{\n        result.addAssign(amplitude.mul($43e99bbd272b419a$export$8156a390e7b52cb6(p)));\n        amplitude.mulAssign(diminish);\n        p.mulAssign(lacunarity);\n    });\n    return result;\n});\nconst $43e99bbd272b419a$export$12ba67f6f21a3945 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable])=>{\n    const diminish = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(diminish_immutable).toVar();\n    const lacunarity = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(lacunarity_immutable).toVar();\n    const octaves = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const result = (0, $64e573acaa48d904$export$9100789c9d999364)(0.0).toVar();\n    const amplitude = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1.0).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0),\n        end: octaves\n    }, ({ i: i })=>{\n        result.addAssign(amplitude.mul($43e99bbd272b419a$export$48933da469822a3e(p)));\n        amplitude.mulAssign(diminish);\n        p.mulAssign(lacunarity);\n    });\n    return result;\n});\nconst $43e99bbd272b419a$export$dfda353404f4bfd0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable])=>{\n    const diminish = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(diminish_immutable).toVar();\n    const lacunarity = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(lacunarity_immutable).toVar();\n    const octaves = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    return (0, $64e573acaa48d904$export$e9830bc863290a54)($43e99bbd272b419a$export$2a6701b70ee390ec(p, octaves, lacunarity, diminish), $43e99bbd272b419a$export$2a6701b70ee390ec(p.add((0, $64e573acaa48d904$export$9100789c9d999364)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(19), (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(193), (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(17))), octaves, lacunarity, diminish));\n});\nconst $43e99bbd272b419a$export$970ebd521f5a5812 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable])=>{\n    const diminish = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(diminish_immutable).toVar();\n    const lacunarity = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(lacunarity_immutable).toVar();\n    const octaves = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const c = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$12ba67f6f21a3945(p, octaves, lacunarity, diminish)).toVar();\n    const f = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$2a6701b70ee390ec(p.add((0, $64e573acaa48d904$export$9100789c9d999364)((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(19), (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(193), (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(17))), octaves, lacunarity, diminish)).toVar();\n    return (0, $64e573acaa48d904$export$6dba2a1f0d609415)(c, f);\n});\nconst $43e99bbd272b419a$var$mx_worley_distance_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const yoff = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(yoff_immutable).toVar();\n    const xoff = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(xoff_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const tmp = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$f001280a89d27de0((0, $64e573acaa48d904$export$e9830bc863290a54)(x.add(xoff), y.add(yoff)))).toVar();\n    const off = (0, $64e573acaa48d904$export$e9830bc863290a54)(tmp.x, tmp.y).toVar();\n    off.subAssign(0.5);\n    off.mulAssign(jitter);\n    off.addAssign(0.5);\n    const cellpos = (0, $64e573acaa48d904$export$e9830bc863290a54)((0, $64e573acaa48d904$export$e9830bc863290a54)((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(y)).add(off)).toVar();\n    const diff = (0, $64e573acaa48d904$export$e9830bc863290a54)(cellpos.sub(p)).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(2)), ()=>{\n        return (0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.x).add((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.y));\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(3)), ()=>{\n        return (0, $4b9f12ce87d17074$export$8960430cfd85939f)((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.x), (0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.y));\n    });\n    return (0, $4b9f12ce87d17074$export$94132a0e348806d4)(diff, diff);\n});\nconst $43e99bbd272b419a$var$mx_worley_distance_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const zoff = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(zoff_immutable).toVar();\n    const yoff = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(yoff_immutable).toVar();\n    const xoff = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(xoff_immutable).toVar();\n    const z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(z_immutable).toVar();\n    const y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(y_immutable).toVar();\n    const x = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(x_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const off = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$f001280a89d27de0((0, $64e573acaa48d904$export$9100789c9d999364)(x.add(xoff), y.add(yoff), z.add(zoff)))).toVar();\n    off.subAssign(0.5);\n    off.mulAssign(jitter);\n    off.addAssign(0.5);\n    const cellpos = (0, $64e573acaa48d904$export$9100789c9d999364)((0, $64e573acaa48d904$export$9100789c9d999364)((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(x), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(y), (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(z)).add(off)).toVar();\n    const diff = (0, $64e573acaa48d904$export$9100789c9d999364)(cellpos.sub(p)).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(2)), ()=>{\n        return (0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.x).add((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.y).add((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.z)));\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(3)), ()=>{\n        return (0, $4b9f12ce87d17074$export$8960430cfd85939f)((0, $4b9f12ce87d17074$export$8960430cfd85939f)((0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.x), (0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.y)), (0, $4b9f12ce87d17074$export$2335f513bbd82c6d)(diff.z));\n    });\n    return (0, $4b9f12ce87d17074$export$94132a0e348806d4)(diff, diff);\n});\nconst $43e99bbd272b419a$export$6ac922b7b83e46f7 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_worley_distance_0,\n    $43e99bbd272b419a$var$mx_worley_distance_1\n]);\nconst $43e99bbd272b419a$var$mx_worley_noise_float_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const localpos = (0, $64e573acaa48d904$export$e9830bc863290a54)($43e99bbd272b419a$export$2924b498742ec559(p.x, X), $43e99bbd272b419a$export$2924b498742ec559(p.y, Y)).toVar();\n    const sqdist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1e6).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: -1,\n        end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n        name: \"x\",\n        condition: \"<=\"\n    }, ({ x: x })=>{\n        (0, $477d263401558a8d$export$f9ef67375ddc185)({\n            start: -1,\n            end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n            name: \"y\",\n            condition: \"<=\"\n        }, ({ y: y })=>{\n            const dist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$6ac922b7b83e46f7(localpos, x, y, X, Y, jitter, metric)).toVar();\n            sqdist.assign((0, $4b9f12ce87d17074$export$96ec731ed4dcb222)(sqdist, dist));\n        });\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)), ()=>{\n        sqdist.assign((0, $4b9f12ce87d17074$export$eba8049fb5020b81)(sqdist));\n    });\n    return sqdist;\n});\nconst $43e99bbd272b419a$var$mx_worley_noise_vec2_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const localpos = (0, $64e573acaa48d904$export$e9830bc863290a54)($43e99bbd272b419a$export$2924b498742ec559(p.x, X), $43e99bbd272b419a$export$2924b498742ec559(p.y, Y)).toVar();\n    const sqdist = (0, $64e573acaa48d904$export$e9830bc863290a54)(1e6, 1e6).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: -1,\n        end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n        name: \"x\",\n        condition: \"<=\"\n    }, ({ x: x })=>{\n        (0, $477d263401558a8d$export$f9ef67375ddc185)({\n            start: -1,\n            end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n            name: \"y\",\n            condition: \"<=\"\n        }, ({ y: y })=>{\n            const dist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$6ac922b7b83e46f7(localpos, x, y, X, Y, jitter, metric)).toVar();\n            (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(dist.lessThan(sqdist.x), ()=>{\n                sqdist.y.assign(sqdist.x);\n                sqdist.x.assign(dist);\n            }).elseif(dist.lessThan(sqdist.y), ()=>{\n                sqdist.y.assign(dist);\n            });\n        });\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)), ()=>{\n        sqdist.assign((0, $4b9f12ce87d17074$export$eba8049fb5020b81)(sqdist));\n    });\n    return sqdist;\n});\nconst $43e99bbd272b419a$var$mx_worley_noise_vec3_0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$e9830bc863290a54)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const localpos = (0, $64e573acaa48d904$export$e9830bc863290a54)($43e99bbd272b419a$export$2924b498742ec559(p.x, X), $43e99bbd272b419a$export$2924b498742ec559(p.y, Y)).toVar();\n    const sqdist = (0, $64e573acaa48d904$export$9100789c9d999364)(1e6, 1e6, 1e6).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: -1,\n        end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n        name: \"x\",\n        condition: \"<=\"\n    }, ({ x: x })=>{\n        (0, $477d263401558a8d$export$f9ef67375ddc185)({\n            start: -1,\n            end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n            name: \"y\",\n            condition: \"<=\"\n        }, ({ y: y })=>{\n            const dist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$6ac922b7b83e46f7(localpos, x, y, X, Y, jitter, metric)).toVar();\n            (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(dist.lessThan(sqdist.x), ()=>{\n                sqdist.z.assign(sqdist.y);\n                sqdist.y.assign(sqdist.x);\n                sqdist.x.assign(dist);\n            }).elseif(dist.lessThan(sqdist.y), ()=>{\n                sqdist.z.assign(sqdist.y);\n                sqdist.y.assign(dist);\n            }).elseif(dist.lessThan(sqdist.z), ()=>{\n                sqdist.z.assign(dist);\n            });\n        });\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)), ()=>{\n        sqdist.assign((0, $4b9f12ce87d17074$export$eba8049fb5020b81)(sqdist));\n    });\n    return sqdist;\n});\nconst $43e99bbd272b419a$var$mx_worley_noise_float_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const localpos = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$2924b498742ec559(p.x, X), $43e99bbd272b419a$export$2924b498742ec559(p.y, Y), $43e99bbd272b419a$export$2924b498742ec559(p.z, Z)).toVar();\n    const sqdist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(1e6).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: -1,\n        end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n        name: \"x\",\n        condition: \"<=\"\n    }, ({ x: x })=>{\n        (0, $477d263401558a8d$export$f9ef67375ddc185)({\n            start: -1,\n            end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n            name: \"y\",\n            condition: \"<=\"\n        }, ({ y: y })=>{\n            (0, $477d263401558a8d$export$f9ef67375ddc185)({\n                start: -1,\n                end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n                name: \"z\",\n                condition: \"<=\"\n            }, ({ z: z })=>{\n                const dist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$6ac922b7b83e46f7(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n                sqdist.assign((0, $4b9f12ce87d17074$export$96ec731ed4dcb222)(sqdist, dist));\n            });\n        });\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)), ()=>{\n        sqdist.assign((0, $4b9f12ce87d17074$export$eba8049fb5020b81)(sqdist));\n    });\n    return sqdist;\n});\nconst $43e99bbd272b419a$export$ee237dfb83b6bbea = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_worley_noise_float_0,\n    $43e99bbd272b419a$var$mx_worley_noise_float_1\n]);\nconst $43e99bbd272b419a$var$mx_worley_noise_vec2_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const localpos = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$2924b498742ec559(p.x, X), $43e99bbd272b419a$export$2924b498742ec559(p.y, Y), $43e99bbd272b419a$export$2924b498742ec559(p.z, Z)).toVar();\n    const sqdist = (0, $64e573acaa48d904$export$e9830bc863290a54)(1e6, 1e6).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: -1,\n        end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n        name: \"x\",\n        condition: \"<=\"\n    }, ({ x: x })=>{\n        (0, $477d263401558a8d$export$f9ef67375ddc185)({\n            start: -1,\n            end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n            name: \"y\",\n            condition: \"<=\"\n        }, ({ y: y })=>{\n            (0, $477d263401558a8d$export$f9ef67375ddc185)({\n                start: -1,\n                end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n                name: \"z\",\n                condition: \"<=\"\n            }, ({ z: z })=>{\n                const dist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$6ac922b7b83e46f7(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n                (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(dist.lessThan(sqdist.x), ()=>{\n                    sqdist.y.assign(sqdist.x);\n                    sqdist.x.assign(dist);\n                }).elseif(dist.lessThan(sqdist.y), ()=>{\n                    sqdist.y.assign(dist);\n                });\n            });\n        });\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)), ()=>{\n        sqdist.assign((0, $4b9f12ce87d17074$export$eba8049fb5020b81)(sqdist));\n    });\n    return sqdist;\n});\nconst $43e99bbd272b419a$export$f83e54c8c80af323 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_worley_noise_vec2_0,\n    $43e99bbd272b419a$var$mx_worley_noise_vec2_1\n]);\nconst $43e99bbd272b419a$var$mx_worley_noise_vec3_1 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([p_immutable, jitter_immutable, metric_immutable])=>{\n    const metric = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(metric_immutable).toVar();\n    const jitter = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(jitter_immutable).toVar();\n    const p = (0, $64e573acaa48d904$export$9100789c9d999364)(p_immutable).toVar();\n    const X = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Y = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar(), Z = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)().toVar();\n    const localpos = (0, $64e573acaa48d904$export$9100789c9d999364)($43e99bbd272b419a$export$2924b498742ec559(p.x, X), $43e99bbd272b419a$export$2924b498742ec559(p.y, Y), $43e99bbd272b419a$export$2924b498742ec559(p.z, Z)).toVar();\n    const sqdist = (0, $64e573acaa48d904$export$9100789c9d999364)(1e6, 1e6, 1e6).toVar();\n    (0, $477d263401558a8d$export$f9ef67375ddc185)({\n        start: -1,\n        end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n        name: \"x\",\n        condition: \"<=\"\n    }, ({ x: x })=>{\n        (0, $477d263401558a8d$export$f9ef67375ddc185)({\n            start: -1,\n            end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n            name: \"y\",\n            condition: \"<=\"\n        }, ({ y: y })=>{\n            (0, $477d263401558a8d$export$f9ef67375ddc185)({\n                start: -1,\n                end: (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1),\n                name: \"z\",\n                condition: \"<=\"\n            }, ({ z: z })=>{\n                const dist = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)($43e99bbd272b419a$export$6ac922b7b83e46f7(localpos, x, y, z, X, Y, Z, jitter, metric)).toVar();\n                (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(dist.lessThan(sqdist.x), ()=>{\n                    sqdist.z.assign(sqdist.y);\n                    sqdist.y.assign(sqdist.x);\n                    sqdist.x.assign(dist);\n                }).elseif(dist.lessThan(sqdist.y), ()=>{\n                    sqdist.z.assign(sqdist.y);\n                    sqdist.y.assign(dist);\n                }).elseif(dist.lessThan(sqdist.z), ()=>{\n                    sqdist.z.assign(dist);\n                });\n            });\n        });\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(metric.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)), ()=>{\n        sqdist.assign((0, $4b9f12ce87d17074$export$eba8049fb5020b81)(sqdist));\n    });\n    return sqdist;\n});\nconst $43e99bbd272b419a$export$b7934e3309df8a41 = (0, $460d92623733c4c9$export$16973c2f8bfadf46)([\n    $43e99bbd272b419a$var$mx_worley_noise_vec3_0,\n    $43e99bbd272b419a$var$mx_worley_noise_vec3_1\n]);\n// layouts\n$43e99bbd272b419a$export$fcb3e1b8d74c8b23.setLayout({\n    name: \"mx_select\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"b\",\n            type: \"bool\"\n        },\n        {\n            name: \"t\",\n            type: \"float\"\n        },\n        {\n            name: \"f\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$806591ac4956b890.setLayout({\n    name: \"mx_negate_if\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"val\",\n            type: \"float\"\n        },\n        {\n            name: \"b\",\n            type: \"bool\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$c4655eced0ba6aa5.setLayout({\n    name: \"mx_floor\",\n    type: \"int\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_bilerp_0.setLayout({\n    name: \"mx_bilerp_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"v0\",\n            type: \"float\"\n        },\n        {\n            name: \"v1\",\n            type: \"float\"\n        },\n        {\n            name: \"v2\",\n            type: \"float\"\n        },\n        {\n            name: \"v3\",\n            type: \"float\"\n        },\n        {\n            name: \"s\",\n            type: \"float\"\n        },\n        {\n            name: \"t\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_bilerp_1.setLayout({\n    name: \"mx_bilerp_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"v0\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v1\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v2\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v3\",\n            type: \"vec3\"\n        },\n        {\n            name: \"s\",\n            type: \"float\"\n        },\n        {\n            name: \"t\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_trilerp_0.setLayout({\n    name: \"mx_trilerp_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"v0\",\n            type: \"float\"\n        },\n        {\n            name: \"v1\",\n            type: \"float\"\n        },\n        {\n            name: \"v2\",\n            type: \"float\"\n        },\n        {\n            name: \"v3\",\n            type: \"float\"\n        },\n        {\n            name: \"v4\",\n            type: \"float\"\n        },\n        {\n            name: \"v5\",\n            type: \"float\"\n        },\n        {\n            name: \"v6\",\n            type: \"float\"\n        },\n        {\n            name: \"v7\",\n            type: \"float\"\n        },\n        {\n            name: \"s\",\n            type: \"float\"\n        },\n        {\n            name: \"t\",\n            type: \"float\"\n        },\n        {\n            name: \"r\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_trilerp_1.setLayout({\n    name: \"mx_trilerp_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"v0\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v1\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v2\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v3\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v4\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v5\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v6\",\n            type: \"vec3\"\n        },\n        {\n            name: \"v7\",\n            type: \"vec3\"\n        },\n        {\n            name: \"s\",\n            type: \"float\"\n        },\n        {\n            name: \"t\",\n            type: \"float\"\n        },\n        {\n            name: \"r\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_float_0.setLayout({\n    name: \"mx_gradient_float_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"hash\",\n            type: \"uint\"\n        },\n        {\n            name: \"x\",\n            type: \"float\"\n        },\n        {\n            name: \"y\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_float_1.setLayout({\n    name: \"mx_gradient_float_1\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"hash\",\n            type: \"uint\"\n        },\n        {\n            name: \"x\",\n            type: \"float\"\n        },\n        {\n            name: \"y\",\n            type: \"float\"\n        },\n        {\n            name: \"z\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_vec3_0.setLayout({\n    name: \"mx_gradient_vec3_0\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"hash\",\n            type: \"uvec3\"\n        },\n        {\n            name: \"x\",\n            type: \"float\"\n        },\n        {\n            name: \"y\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_vec3_1.setLayout({\n    name: \"mx_gradient_vec3_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"hash\",\n            type: \"uvec3\"\n        },\n        {\n            name: \"x\",\n            type: \"float\"\n        },\n        {\n            name: \"y\",\n            type: \"float\"\n        },\n        {\n            name: \"z\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_scale2d_0.setLayout({\n    name: \"mx_gradient_scale2d_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"v\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_scale3d_0.setLayout({\n    name: \"mx_gradient_scale3d_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"v\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_scale2d_1.setLayout({\n    name: \"mx_gradient_scale2d_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"v\",\n            type: \"vec3\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_gradient_scale3d_1.setLayout({\n    name: \"mx_gradient_scale3d_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"v\",\n            type: \"vec3\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$6d9d66de1ac63983.setLayout({\n    name: \"mx_rotl32\",\n    type: \"uint\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"uint\"\n        },\n        {\n            name: \"k\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$ec469612ab433c08.setLayout({\n    name: \"mx_bjfinal\",\n    type: \"uint\",\n    inputs: [\n        {\n            name: \"a\",\n            type: \"uint\"\n        },\n        {\n            name: \"b\",\n            type: \"uint\"\n        },\n        {\n            name: \"c\",\n            type: \"uint\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$3af44866218d463.setLayout({\n    name: \"mx_bits_to_01\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"bits\",\n            type: \"uint\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$cebcae46bfff0866.setLayout({\n    name: \"mx_fade\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"t\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_hash_int_0.setLayout({\n    name: \"mx_hash_int_0\",\n    type: \"uint\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_hash_int_1.setLayout({\n    name: \"mx_hash_int_1\",\n    type: \"uint\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_hash_int_2.setLayout({\n    name: \"mx_hash_int_2\",\n    type: \"uint\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        },\n        {\n            name: \"z\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_hash_int_3.setLayout({\n    name: \"mx_hash_int_3\",\n    type: \"uint\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        },\n        {\n            name: \"z\",\n            type: \"int\"\n        },\n        {\n            name: \"xx\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_hash_int_4.setLayout({\n    name: \"mx_hash_int_4\",\n    type: \"uint\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        },\n        {\n            name: \"z\",\n            type: \"int\"\n        },\n        {\n            name: \"xx\",\n            type: \"int\"\n        },\n        {\n            name: \"yy\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_hash_vec3_0.setLayout({\n    name: \"mx_hash_vec3_0\",\n    type: \"uvec3\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_hash_vec3_1.setLayout({\n    name: \"mx_hash_vec3_1\",\n    type: \"uvec3\",\n    inputs: [\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        },\n        {\n            name: \"z\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_perlin_noise_float_0.setLayout({\n    name: \"mx_perlin_noise_float_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_perlin_noise_float_1.setLayout({\n    name: \"mx_perlin_noise_float_1\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_perlin_noise_vec3_0.setLayout({\n    name: \"mx_perlin_noise_vec3_0\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_perlin_noise_vec3_1.setLayout({\n    name: \"mx_perlin_noise_vec3_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_float_0.setLayout({\n    name: \"mx_cell_noise_float_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_float_1.setLayout({\n    name: \"mx_cell_noise_float_1\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_float_2.setLayout({\n    name: \"mx_cell_noise_float_2\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_float_3.setLayout({\n    name: \"mx_cell_noise_float_3\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec4\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_vec3_0.setLayout({\n    name: \"mx_cell_noise_vec3_0\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_vec3_1.setLayout({\n    name: \"mx_cell_noise_vec3_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_vec3_2.setLayout({\n    name: \"mx_cell_noise_vec3_2\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_cell_noise_vec3_3.setLayout({\n    name: \"mx_cell_noise_vec3_3\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec4\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$2a6701b70ee390ec.setLayout({\n    name: \"mx_fractal_noise_float\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"octaves\",\n            type: \"int\"\n        },\n        {\n            name: \"lacunarity\",\n            type: \"float\"\n        },\n        {\n            name: \"diminish\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$12ba67f6f21a3945.setLayout({\n    name: \"mx_fractal_noise_vec3\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"octaves\",\n            type: \"int\"\n        },\n        {\n            name: \"lacunarity\",\n            type: \"float\"\n        },\n        {\n            name: \"diminish\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$dfda353404f4bfd0.setLayout({\n    name: \"mx_fractal_noise_vec2\",\n    type: \"vec2\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"octaves\",\n            type: \"int\"\n        },\n        {\n            name: \"lacunarity\",\n            type: \"float\"\n        },\n        {\n            name: \"diminish\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$export$970ebd521f5a5812.setLayout({\n    name: \"mx_fractal_noise_vec4\",\n    type: \"vec4\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"octaves\",\n            type: \"int\"\n        },\n        {\n            name: \"lacunarity\",\n            type: \"float\"\n        },\n        {\n            name: \"diminish\",\n            type: \"float\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_distance_0.setLayout({\n    name: \"mx_worley_distance_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        },\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        },\n        {\n            name: \"xoff\",\n            type: \"int\"\n        },\n        {\n            name: \"yoff\",\n            type: \"int\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_distance_1.setLayout({\n    name: \"mx_worley_distance_1\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"x\",\n            type: \"int\"\n        },\n        {\n            name: \"y\",\n            type: \"int\"\n        },\n        {\n            name: \"z\",\n            type: \"int\"\n        },\n        {\n            name: \"xoff\",\n            type: \"int\"\n        },\n        {\n            name: \"yoff\",\n            type: \"int\"\n        },\n        {\n            name: \"zoff\",\n            type: \"int\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_noise_float_0.setLayout({\n    name: \"mx_worley_noise_float_0\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_noise_vec2_0.setLayout({\n    name: \"mx_worley_noise_vec2_0\",\n    type: \"vec2\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_noise_vec3_0.setLayout({\n    name: \"mx_worley_noise_vec3_0\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec2\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_noise_float_1.setLayout({\n    name: \"mx_worley_noise_float_1\",\n    type: \"float\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_noise_vec2_1.setLayout({\n    name: \"mx_worley_noise_vec2_1\",\n    type: \"vec2\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n$43e99bbd272b419a$var$mx_worley_noise_vec3_1.setLayout({\n    name: \"mx_worley_noise_vec3_1\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"p\",\n            type: \"vec3\"\n        },\n        {\n            name: \"jitter\",\n            type: \"float\"\n        },\n        {\n            name: \"metric\",\n            type: \"int\"\n        }\n    ]\n});\n\n\n// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_hsv.glsl\n\n\n\nconst $8c74f20ed8829a7c$export$1c73a657835dd60c = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([hsv_immutable])=>{\n    const hsv = (0, $64e573acaa48d904$export$9100789c9d999364)(hsv_immutable).toVar();\n    const h = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(hsv.x).toVar();\n    const s = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(hsv.y).toVar();\n    const v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(hsv.z).toVar();\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(s.lessThan(0.0001), ()=>{\n        return (0, $64e573acaa48d904$export$9100789c9d999364)(v, v, v);\n    }).else(()=>{\n        h.assign((0, $1a899e4dee2452c3$export$6e3a27864ab166fe)(6.0, h.sub((0, $4b9f12ce87d17074$export$a3fe094919f356fd)(h))));\n        const hi = (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)((0, $4b9f12ce87d17074$export$1fe87bd59b089f0)(h)).toVar();\n        const f = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(h.sub((0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(hi))).toVar();\n        const p = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v.mul((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, s))).toVar();\n        const q = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v.mul((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, s.mul(f)))).toVar();\n        const t = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(v.mul((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, s.mul((0, $1a899e4dee2452c3$export$f93b5905241a7cca)(1.0, f))))).toVar();\n        (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(hi.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(0)), ()=>{\n            return (0, $64e573acaa48d904$export$9100789c9d999364)(v, t, p);\n        }).elseif(hi.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1)), ()=>{\n            return (0, $64e573acaa48d904$export$9100789c9d999364)(q, v, p);\n        }).elseif(hi.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(2)), ()=>{\n            return (0, $64e573acaa48d904$export$9100789c9d999364)(p, v, t);\n        }).elseif(hi.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(3)), ()=>{\n            return (0, $64e573acaa48d904$export$9100789c9d999364)(p, q, v);\n        }).elseif(hi.equal((0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(4)), ()=>{\n            return (0, $64e573acaa48d904$export$9100789c9d999364)(t, p, v);\n        });\n        return (0, $64e573acaa48d904$export$9100789c9d999364)(v, p, q);\n    });\n});\nconst $8c74f20ed8829a7c$export$477554281ec906c0 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([c_immutable])=>{\n    const c = (0, $64e573acaa48d904$export$9100789c9d999364)(c_immutable).toVar();\n    const r = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(c.x).toVar();\n    const g = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(c.y).toVar();\n    const b = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(c.z).toVar();\n    const mincomp = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $4b9f12ce87d17074$export$96ec731ed4dcb222)(r, (0, $4b9f12ce87d17074$export$96ec731ed4dcb222)(g, b))).toVar();\n    const maxcomp = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)((0, $4b9f12ce87d17074$export$8960430cfd85939f)(r, (0, $4b9f12ce87d17074$export$8960430cfd85939f)(g, b))).toVar();\n    const delta = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(maxcomp.sub(mincomp)).toVar();\n    const h = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)().toVar(), s = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)().toVar(), v = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)().toVar();\n    v.assign(maxcomp);\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(maxcomp.greaterThan(0.0), ()=>{\n        s.assign(delta.div(maxcomp));\n    }).else(()=>{\n        s.assign(0.0);\n    });\n    (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(s.lessThanEqual(0.0), ()=>{\n        h.assign(0.0);\n    }).else(()=>{\n        (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(r.greaterThanEqual(maxcomp), ()=>{\n            h.assign(g.sub(b).div(delta));\n        }).elseif(g.greaterThanEqual(maxcomp), ()=>{\n            h.assign((0, $1a899e4dee2452c3$export$e16d8520af44a096)(2.0, b.sub(r).div(delta)));\n        }).else(()=>{\n            h.assign((0, $1a899e4dee2452c3$export$e16d8520af44a096)(4.0, r.sub(g).div(delta)));\n        });\n        h.mulAssign(1.0 / 6.0);\n        (0, $64e573acaa48d904$export$1f9ff5f4a6c9361a)(h.lessThan(0.0), ()=>{\n            h.addAssign(1.0);\n        });\n    });\n    return (0, $64e573acaa48d904$export$9100789c9d999364)(h, s, v);\n});\n// layouts\n$8c74f20ed8829a7c$export$1c73a657835dd60c.setLayout({\n    name: \"mx_hsvtorgb\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"hsv\",\n            type: \"vec3\"\n        }\n    ]\n});\n$8c74f20ed8829a7c$export$477554281ec906c0.setLayout({\n    name: \"mx_rgbtohsv\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"c\",\n            type: \"vec3\"\n        }\n    ]\n});\n\n\n// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_transform_color.glsl\n\n\n\nconst $87598b1df24ebe59$export$988eb684c3dd11f6 = (0, $64e573acaa48d904$export$ab8c2ade1f37d88b)(([color_immutable])=>{\n    const color = (0, $64e573acaa48d904$export$9100789c9d999364)(color_immutable).toVar();\n    const isAbove = (0, $64e573acaa48d904$export$625ee0a1e433837e)((0, $1a899e4dee2452c3$export$f517ea36c68d4644)(color, (0, $64e573acaa48d904$export$9100789c9d999364)(0.04045))).toVar();\n    const linSeg = (0, $64e573acaa48d904$export$9100789c9d999364)(color.div(12.92)).toVar();\n    const powSeg = (0, $64e573acaa48d904$export$9100789c9d999364)((0, $4b9f12ce87d17074$export$9c297f60e22e3389)((0, $4b9f12ce87d17074$export$8960430cfd85939f)(color.add((0, $64e573acaa48d904$export$9100789c9d999364)(0.055)), (0, $64e573acaa48d904$export$9100789c9d999364)(0.0)).div(1.055), (0, $64e573acaa48d904$export$9100789c9d999364)(2.4))).toVar();\n    return (0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(linSeg, powSeg, isAbove);\n});\n// layouts\n$87598b1df24ebe59$export$988eb684c3dd11f6.setLayout({\n    name: \"mx_srgb_texture_to_lin_rec709\",\n    type: \"vec3\",\n    inputs: [\n        {\n            name: \"color\",\n            type: \"vec3\"\n        }\n    ]\n});\n\n\n\n\n\nconst $d92041f36106ef22$export$3abc4ab271c90c12 = (threshold, value)=>{\n    threshold = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(threshold);\n    value = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(value);\n    const afwidth = (0, $64e573acaa48d904$export$e9830bc863290a54)(value.dFdx(), value.dFdy()).length().mul(0.70710678118654757);\n    return (0, $4b9f12ce87d17074$export$4053e36566dd3d9a)(threshold.sub(afwidth), threshold.add(afwidth), value);\n};\nconst $d92041f36106ef22$var$_ramp = (a, b, uv, p)=>(0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(a, b, uv[p].clamp());\nconst $d92041f36106ef22$export$b8397ca5ab92c8eb = (valuel, valuer, texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)())=>$d92041f36106ef22$var$_ramp(valuel, valuer, texcoord, \"x\");\nconst $d92041f36106ef22$export$8f10382b4ad0dbdf = (valuet, valueb, texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)())=>$d92041f36106ef22$var$_ramp(valuet, valueb, texcoord, \"y\");\nconst $d92041f36106ef22$var$_split = (a, b, center, uv, p)=>(0, $4b9f12ce87d17074$export$2c9e8a9632a706b2)(a, b, $d92041f36106ef22$export$3abc4ab271c90c12(center, uv[p]));\nconst $d92041f36106ef22$export$c99c1f94d5fd9c82 = (valuel, valuer, center, texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)())=>$d92041f36106ef22$var$_split(valuel, valuer, center, texcoord, \"x\");\nconst $d92041f36106ef22$export$b2177b377f6c02c7 = (valuet, valueb, center, texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)())=>$d92041f36106ef22$var$_split(valuet, valueb, center, texcoord, \"y\");\nconst $d92041f36106ef22$export$a85ea9382bad03f4 = (uv_scale = 1, uv_offset = 0, uv_geo = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)())=>uv_geo.mul(uv_scale).add(uv_offset);\nconst $d92041f36106ef22$export$3af405f73b3ef1a4 = (in1, in2 = 1)=>{\n    in1 = (0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(in1);\n    return in1.abs().pow(in2).mul(in1.sign());\n};\nconst $d92041f36106ef22$export$a5846f4df8e00325 = (input, amount = 1, pivot = .5)=>(0, $64e573acaa48d904$export$6b5cd3983e3ee5ab)(input).sub(pivot).mul(amount).add(pivot);\nconst $d92041f36106ef22$export$28ad0acc0579e60b = (texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), amplitude = 1, pivot = 0)=>(0, $43e99bbd272b419a$export$8156a390e7b52cb6)(texcoord.convert(\"vec2|vec3\")).mul(amplitude).add(pivot);\nconst $d92041f36106ef22$export$e5fcad86905f3008 = (texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), amplitude = 1, pivot = 0)=>(0, $43e99bbd272b419a$export$48933da469822a3e)(texcoord.convert(\"vec2|vec3\")).mul(amplitude).add(pivot);\nconst $d92041f36106ef22$export$d9085b548a873a4f = (texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), amplitude = 1, pivot = 0)=>{\n    texcoord = texcoord.convert(\"vec2|vec3\"); // overloading type\n    const noise_vec4 = (0, $64e573acaa48d904$export$6dba2a1f0d609415)((0, $43e99bbd272b419a$export$48933da469822a3e)(texcoord), (0, $43e99bbd272b419a$export$8156a390e7b52cb6)(texcoord.add((0, $64e573acaa48d904$export$e9830bc863290a54)(19, 73))));\n    return noise_vec4.mul(amplitude).add(pivot);\n};\nconst $d92041f36106ef22$export$ee237dfb83b6bbea = (texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), jitter = 1)=>(0, $43e99bbd272b419a$export$ee237dfb83b6bbea)(texcoord.convert(\"vec2|vec3\"), jitter, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1));\nconst $d92041f36106ef22$export$f83e54c8c80af323 = (texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), jitter = 1)=>(0, $43e99bbd272b419a$export$f83e54c8c80af323)(texcoord.convert(\"vec2|vec3\"), jitter, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1));\nconst $d92041f36106ef22$export$b7934e3309df8a41 = (texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), jitter = 1)=>(0, $43e99bbd272b419a$export$b7934e3309df8a41)(texcoord.convert(\"vec2|vec3\"), jitter, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(1));\nconst $d92041f36106ef22$export$5eaa094b2411a56b = (texcoord = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)())=>(0, $43e99bbd272b419a$export$5eaa094b2411a56b)(texcoord.convert(\"vec2|vec3\"));\nconst $d92041f36106ef22$export$2a6701b70ee390ec = (position = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1)=>(0, $43e99bbd272b419a$export$2a6701b70ee390ec)(position, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves), lacunarity, diminish).mul(amplitude);\nconst $d92041f36106ef22$export$dfda353404f4bfd0 = (position = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1)=>(0, $43e99bbd272b419a$export$dfda353404f4bfd0)(position, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves), lacunarity, diminish).mul(amplitude);\nconst $d92041f36106ef22$export$12ba67f6f21a3945 = (position = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1)=>(0, $43e99bbd272b419a$export$12ba67f6f21a3945)(position, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves), lacunarity, diminish).mul(amplitude);\nconst $d92041f36106ef22$export$970ebd521f5a5812 = (position = (0, $94fcc899fcb75301$export$c774ebbac59e31d3)(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1)=>(0, $43e99bbd272b419a$export$970ebd521f5a5812)(position, (0, $64e573acaa48d904$export$7d260a2a5f8bc19e)(octaves), lacunarity, diminish).mul(amplitude);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const ENV_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/aristea_wreck_puresky_2k.hdr';\nconst $f06a0a82aa9331ef$var$ENV_URL = \"https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/peppermint_powerplant_2k.hdr\";\nconst $f06a0a82aa9331ef$var$MORPH_URL = \"https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/models/gltf/RobotExpressive/RobotExpressive.glb\";\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/main/models/trex/scene.gltf';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/Bee.glb';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/golden_finch_dragon.glb';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/flint_maw.glb';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/BrainStem.glb';\nconst $f06a0a82aa9331ef$var$SKINNED_URL = \"https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/project_polly.glb\";\n// const SKINNED_URL = 'https://github.com/disini/3DModels/raw/main/glb/animated/Bee.glb';\n// const CREDITS = 'Model by DailyArt on Sketchfab';\nconst $f06a0a82aa9331ef$var$CREDITS = \" \";\nconst $f06a0a82aa9331ef$var$DESCRIPTION = \"Rendering deformable geometry with path tracing.\";\nlet $f06a0a82aa9331ef$var$pathTracer, $f06a0a82aa9331ef$var$renderer, $f06a0a82aa9331ef$var$controls, $f06a0a82aa9331ef$var$camera, $f06a0a82aa9331ef$var$scene, $f06a0a82aa9331ef$var$clock;\nlet $f06a0a82aa9331ef$var$mixer, $f06a0a82aa9331ef$var$mixerAction;\nlet $f06a0a82aa9331ef$var$loader;\nlet $f06a0a82aa9331ef$var$counter = 0;\nconst $f06a0a82aa9331ef$var$params = {\n    bounces: 5,\n    samplesPerFrame: 1,\n    renderScale: 1 / window.devicePixelRatio,\n    tiles: 1,\n    autoPause: true,\n    // autoPause: false,\n    pause: false,\n    continuous: false,\n    stableNoise: false,\n    ...(0, $cE5k3.getScaledSettings)()\n};\nconst $f06a0a82aa9331ef$var$cameraParam = {\n    // lookAtXDelta: 1,\n    // lookAtYDelta: 1,\n    posYDelta: 1\n};\n$f06a0a82aa9331ef$var$init();\nasync function $f06a0a82aa9331ef$var$init() {\n    $f06a0a82aa9331ef$var$loader = new (0, $e2Pv4.LoaderElement)();\n    $f06a0a82aa9331ef$var$loader.setDescription($f06a0a82aa9331ef$var$DESCRIPTION);\n    $f06a0a82aa9331ef$var$loader.attach(document.body);\n    // renderer\n    $f06a0a82aa9331ef$var$renderer = new (0, $ilwiq.WebGLRenderer)({\n        antialias: true\n    });\n    $f06a0a82aa9331ef$var$renderer.toneMapping = (0, $ilwiq.ACESFilmicToneMapping);\n    document.body.appendChild($f06a0a82aa9331ef$var$renderer.domElement);\n    // path tracer\n    $f06a0a82aa9331ef$var$pathTracer = new (0, $8mHfG.WebGLPathTracer)($f06a0a82aa9331ef$var$renderer);\n    $f06a0a82aa9331ef$var$pathTracer.multipleImportanceSampling = false;\n    $f06a0a82aa9331ef$var$pathTracer.tiles.set($f06a0a82aa9331ef$var$params.tiles, $f06a0a82aa9331ef$var$params.tiles);\n    $f06a0a82aa9331ef$var$pathTracer.filterGlossyFactor = 0.25;\n    $f06a0a82aa9331ef$var$pathTracer.minSamples = 1;\n    $f06a0a82aa9331ef$var$pathTracer.renderDelay = 0;\n    $f06a0a82aa9331ef$var$pathTracer.fadeDuration = 0;\n    // scene\n    $f06a0a82aa9331ef$var$scene = new (0, $ilwiq.Scene)();\n    const oriCamPos = new (0, $ilwiq.Vector3)(-5.5, 8.5, 7.5);\n    // camera\n    $f06a0a82aa9331ef$var$camera = new (0, $ilwiq.PerspectiveCamera)(75, window.innerWidth / window.innerHeight, 0.025, 500);\n    // camera.position.set( 5.5, 3.5, 7.5 );\n    // camera.position.set( -5.5, 8.5, 7.5 );\n    $f06a0a82aa9331ef$var$camera.position.set(oriCamPos.x, oriCamPos.y, oriCamPos.z);\n    let curCamPos = oriCamPos;\n    // controls\n    $f06a0a82aa9331ef$var$controls = new (0, $5Rd1x.OrbitControls)($f06a0a82aa9331ef$var$camera, $f06a0a82aa9331ef$var$renderer.domElement);\n    $f06a0a82aa9331ef$var$camera.lookAt($f06a0a82aa9331ef$var$controls.target);\n    $f06a0a82aa9331ef$var$controls.addEventListener(\"change\", ()=>$f06a0a82aa9331ef$var$pathTracer.updateCamera());\n    $f06a0a82aa9331ef$var$controls.update();\n    // clock\n    $f06a0a82aa9331ef$var$clock = new (0, $ilwiq.Clock)();\n    // load assets\n    const modelUrl = window.location.hash === \"#morphtarget\" ? $f06a0a82aa9331ef$var$MORPH_URL : $f06a0a82aa9331ef$var$SKINNED_URL;\n    const [envTexture, gltf] = await Promise.all([\n        new (0, $891vQ.RGBELoader)().loadAsync($f06a0a82aa9331ef$var$ENV_URL),\n        new (0, $7lx9d.GLTFLoader)().setMeshoptDecoder((0, $kp7Te.MeshoptDecoder)).loadAsync(modelUrl)\n    ]);\n    // update env map\n    const generator = new (0, $eLX8K.BlurredEnvMapGenerator)($f06a0a82aa9331ef$var$renderer);\n    const blurredTex = generator.generate(envTexture, 0.01);\n    $f06a0a82aa9331ef$var$scene.background = blurredTex;\n    $f06a0a82aa9331ef$var$scene.environment = blurredTex;\n    generator.dispose();\n    // animations\n    const animations = gltf.animations;\n    $f06a0a82aa9331ef$var$mixer = new (0, $ilwiq.AnimationMixer)(gltf.scene);\n    $f06a0a82aa9331ef$var$mixerAction = $f06a0a82aa9331ef$var$mixer.clipAction(animations[0]);\n    $f06a0a82aa9331ef$var$mixerAction.play();\n    $f06a0a82aa9331ef$var$mixerAction.paused = $f06a0a82aa9331ef$var$params.pause;\n    // initialize scene\n    $f06a0a82aa9331ef$var$scene.add(gltf.scene);\n    // https://blog.csdn.net/weixin_48070278/article/details/132275988\n    gltf.scene.scale.set(10, 10, 10);\n    // gltf.scene.scale.set(3, 3, 3);\n    let pos = gltf.scene.position;\n    console.log(\"pos == \" + pos.x + \", \" + pos.y + \", \" + pos.z);\n    // const modelCenterBox = new THREE.Box3().setFromObject\n    // gltf.scene.position.set(pos.x, pos.y - 10, pos.z);\n    const floorTex = (0, $1EdOY.generateRadialFloorTexture)(2048);\n    const floorPlane = new (0, $ilwiq.Mesh)(new (0, $ilwiq.PlaneGeometry)(), new (0, $ilwiq.MeshStandardMaterial)({\n        map: floorTex,\n        transparent: true,\n        color: 0xdddddd,\n        roughness: 0.15,\n        metalness: 1.0\n    }));\n    floorPlane.scale.setScalar(50);\n    floorPlane.rotation.x = -Math.PI / 2;\n    floorPlane.position.y = 0.075;\n    $f06a0a82aa9331ef$var$scene.add(floorPlane);\n    // initial generation\n    $f06a0a82aa9331ef$var$pathTracer.setScene($f06a0a82aa9331ef$var$scene, $f06a0a82aa9331ef$var$camera);\n    $f06a0a82aa9331ef$var$loader.setPercentage(1);\n    $f06a0a82aa9331ef$var$loader.setCredits($f06a0a82aa9331ef$var$CREDITS);\n    $f06a0a82aa9331ef$var$onParamsChange();\n    $f06a0a82aa9331ef$var$onResize();\n    window.addEventListener(\"resize\", $f06a0a82aa9331ef$var$onResize);\n    // gui\n    const gui = new (0, $jiuw3.GUI)();\n    gui.add($f06a0a82aa9331ef$var$params, \"tiles\", 1, 4, 1).onChange((value)=>{\n        $f06a0a82aa9331ef$var$pathTracer.tiles.set(value, value);\n    });\n    gui.add($f06a0a82aa9331ef$var$params, \"bounces\", 1, 10, 1).onChange($f06a0a82aa9331ef$var$regenerateScene);\n    gui.add($f06a0a82aa9331ef$var$params, \"renderScale\", 0.1, 1).onChange((v)=>{\n        $f06a0a82aa9331ef$var$pathTracer.renderScale = v;\n        $f06a0a82aa9331ef$var$pathTracer.reset();\n    });\n    gui.add($f06a0a82aa9331ef$var$params, \"autoPause\").listen();\n    gui.add($f06a0a82aa9331ef$var$params, \"pause\").onChange((v)=>{\n        $f06a0a82aa9331ef$var$params.autoPause = false;\n        $f06a0a82aa9331ef$var$setPause(v);\n    }).listen();\n    gui.add($f06a0a82aa9331ef$var$params, \"continuous\").onChange(()=>{\n        $f06a0a82aa9331ef$var$params.autoPause = false;\n    });\n    gui.add($f06a0a82aa9331ef$var$params, \"stableNoise\").onChange((v)=>{\n        $f06a0a82aa9331ef$var$pathTracer.stableNoise = v;\n    });\n    // gui.add(params, \"C\")\n    // const cameraFolder = gui.addFolder( 'Camera' );\n    // cameraFolder.add( camera, 'focusDistance', 1, 100 ).onChange( onParamsChange ).listen();\n    // cameraFolder.add( camera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n    // \tcamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n    // \tthis.updateDisplay();\n    // \tonParamsChange();\n    // } );\n    // cameraFolder.add( camera, 'apertureRotation', 0, 12.5 ).onChange( onParamsChange );\n    // cameraFolder.add( camera, 'anamorphicRatio', 0.1, 10.0 ).onChange( onParamsChange );\n    // cameraFolder.add( camera, 'bokehSize', 0, 100 ).onChange( onParamsChange ).listen();\n    // cameraFolder.add( camera, 'fStop', 0.02, 20 ).onChange( onParamsChange ).listen();\n    // cameraFolder.add( camera, 'fStop', 0.02, 20 ).onChange( onParamsChange ).listen();\n    // cameraFolder.add( camera, 'fov', 25, 100 ).onChange( () => {\n    // \tcamera.updateProjectionMatrix();\n    // \tpathTracer.updateCamera();\n    // } ).listen();\n    let targetPos;\n    // cameraFolder.add( camera, 'lookAtY', 25, 100 ).onChange( () => {\n    // \ttargetPos = new Vector3( controls.target.x, controls.target.y + 5, controls.target.z );\n    // \tcamera.lookAt( targetPos );\n    // \tcamera.updateProjectionMatrix();\n    // \tpathTracer.updateCamera();\n    // } ).listen();\n    // cameraFolder.add( cameraParam, 'lookAtYDelta', - 20, 20 ).onChange( () => {\n    // gui.add( cameraParam, 'lookAtYDelta', - 5, 5 ).onChange( value => {\n    // \ttargetPos = new Vector3( controls.target.x, controls.target.y + value, controls.target.z );\n    // \t// controls.target = targetPos;\n    // \tcamera.lookAt( targetPos );\n    // \tcamera.updateProjectionMatrix();\n    // \tpathTracer.updateCamera();\n    // \t// controls.update();\n    // } ).listen();\n    // gui.add( cameraParam, 'posYDelta', - 1, 1 ).onChange( value => {\n    // \t// targetPos = new Vector3( controls.target.x, controls.target.y + value, controls.target.z );\n    // \t// controls.target = targetPos;\n    // \t// camera.lookAt( targetPos );\n    // \tcurCamPos = camera.position;\n    // \tcamera.position.set( curCamPos.x, value, curCamPos.z );\n    // \tcamera.updateProjectionMatrix();\n    // \tpathTracer.updateCamera();\n    // \t// controls.update();\n    // } ).listen();\n    // controls.addEventListener( 'change', () => updateGuiCamPos( gui, camera.position.y ) );\n    // cameraFolder.add( params, 'autoFocus' );\n    $f06a0a82aa9331ef$var$animate();\n}\n// function updateGuiCamPos( gui, v ) {\n// \tgui.cameraParam.controls. = v;\n// }\nfunction $f06a0a82aa9331ef$var$setPause(v) {\n    $f06a0a82aa9331ef$var$mixerAction.paused = v;\n    $f06a0a82aa9331ef$var$params.pause = v;\n    if (v) $f06a0a82aa9331ef$var$regenerateScene();\n}\nfunction $f06a0a82aa9331ef$var$onResize() {\n    $f06a0a82aa9331ef$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    $f06a0a82aa9331ef$var$renderer.setPixelRatio(window.devicePixelRatio);\n    $f06a0a82aa9331ef$var$camera.aspect = window.innerWidth / window.innerHeight;\n    $f06a0a82aa9331ef$var$camera.updateProjectionMatrix();\n    $f06a0a82aa9331ef$var$pathTracer.updateCamera();\n}\nfunction $f06a0a82aa9331ef$var$regenerateScene() {\n    $f06a0a82aa9331ef$var$pathTracer.bounces = $f06a0a82aa9331ef$var$params.bounces;\n    $f06a0a82aa9331ef$var$pathTracer.setScene($f06a0a82aa9331ef$var$scene, $f06a0a82aa9331ef$var$camera);\n}\nfunction $f06a0a82aa9331ef$var$onParamsChange() {\n    $f06a0a82aa9331ef$var$pathTracer.filterGlossyFactor = $f06a0a82aa9331ef$var$params.filterGlossyFactor;\n    $f06a0a82aa9331ef$var$pathTracer.bounces = $f06a0a82aa9331ef$var$params.bounces;\n    $f06a0a82aa9331ef$var$pathTracer.renderScale = $f06a0a82aa9331ef$var$params.renderScale;\n    $f06a0a82aa9331ef$var$pathTracer.updateCamera();\n    $f06a0a82aa9331ef$var$pathTracer.reset();\n}\nfunction $f06a0a82aa9331ef$var$animate() {\n    requestAnimationFrame($f06a0a82aa9331ef$var$animate);\n    // step the animation forward\n    const delta = Math.min($f06a0a82aa9331ef$var$clock.getDelta(), 0.03);\n    $f06a0a82aa9331ef$var$mixer.update(delta);\n    if ($f06a0a82aa9331ef$var$params.autoPause) {\n        // auto pause the animation\n        $f06a0a82aa9331ef$var$counter += delta;\n        // if ( ! params.pause && counter >= 2.5 || params.pause && counter >= 5 ) {\n        if (!$f06a0a82aa9331ef$var$params.pause && $f06a0a82aa9331ef$var$counter >= 8 || $f06a0a82aa9331ef$var$params.pause && $f06a0a82aa9331ef$var$counter >= 30) {\n            $f06a0a82aa9331ef$var$setPause(!$f06a0a82aa9331ef$var$params.pause);\n            $f06a0a82aa9331ef$var$counter = 0;\n        }\n    } else $f06a0a82aa9331ef$var$counter = 0;\n    $f06a0a82aa9331ef$var$pathTracer.dynamicLowRes = $f06a0a82aa9331ef$var$params.continuous;\n    if (!$f06a0a82aa9331ef$var$params.pause && !$f06a0a82aa9331ef$var$params.continuous) {\n        $f06a0a82aa9331ef$var$renderer.render($f06a0a82aa9331ef$var$scene, $f06a0a82aa9331ef$var$camera);\n        $f06a0a82aa9331ef$var$loader.setSamples(0, $f06a0a82aa9331ef$var$pathTracer.isCompiling);\n    } else {\n        // if we're continuously path tracing then update the scene\n        if (!$f06a0a82aa9331ef$var$params.pause && $f06a0a82aa9331ef$var$params.continuous) $f06a0a82aa9331ef$var$regenerateScene();\n        $f06a0a82aa9331ef$var$pathTracer.renderSample();\n        $f06a0a82aa9331ef$var$loader.setSamples($f06a0a82aa9331ef$var$pathTracer.samples, $f06a0a82aa9331ef$var$pathTracer.isCompiling);\n    }\n}\n\n\n//# sourceMappingURL=skinnedMesh.49d8c0b2.js.map\n","import { WebGLRenderTarget, RGBAFormat, HalfFloatType, PMREMGenerator, DataTexture, EquirectangularReflectionMapping, FloatType, DataUtils } from 'three';\r\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\r\nimport { MaterialBase } from '../materials/MaterialBase.js';\r\nimport * as CommonGLSL from '../shader/common/index.js';\r\n\r\nclass PMREMCopyMaterial extends MaterialBase {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( {\r\n\r\n\t\t\tuniforms: {\r\n\r\n\t\t\t\tenvMap: { value: null },\r\n\t\t\t\tblur: { value: 0 },\r\n\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: /* glsl */`\r\n\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\r\n\r\n\t\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\t\t#include <common>\r\n\t\t\t\t#include <cube_uv_reflection_fragment>\r\n\r\n\t\t\t\t${ CommonGLSL.util_functions }\r\n\r\n\t\t\t\tuniform sampler2D envMap;\r\n\t\t\t\tuniform float blur;\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 rayDirection = equirectUvToDirection( vUv );\r\n\t\t\t\t\tgl_FragColor = textureCubeUV( envMap, rayDirection, blur );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class BlurredEnvMapGenerator {\r\n\r\n\tconstructor( renderer ) {\r\n\r\n\t\tthis.renderer = renderer;\r\n\t\tthis.pmremGenerator = new PMREMGenerator( renderer );\r\n\t\tthis.copyQuad = new FullScreenQuad( new PMREMCopyMaterial() );\r\n\t\tthis.renderTarget = new WebGLRenderTarget( 1, 1, { type: FloatType, format: RGBAFormat } );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.pmremGenerator.dispose();\r\n\t\tthis.copyQuad.dispose();\r\n\t\tthis.renderTarget.dispose();\r\n\r\n\t}\r\n\r\n\tgenerate( texture, blur ) {\r\n\r\n\t\tconst { pmremGenerator, renderTarget, copyQuad, renderer } = this;\r\n\r\n\t\t// get the pmrem target\r\n\t\tconst pmremTarget = pmremGenerator.fromEquirectangular( texture );\r\n\r\n\t\t// set up the material\r\n\t\tconst { width, height } = texture.image;\r\n\t\trenderTarget.setSize( width, height );\r\n\t\tcopyQuad.material.envMap = pmremTarget.texture;\r\n\t\tcopyQuad.material.blur = blur;\r\n\r\n\t\t// render\r\n\t\tconst prevRenderTarget = renderer.getRenderTarget();\r\n\t\tconst prevClear = renderer.autoClear;\r\n\r\n\t\trenderer.setRenderTarget( renderTarget );\r\n\t\trenderer.autoClear = true;\r\n\t\tcopyQuad.render( renderer );\r\n\r\n\t\trenderer.setRenderTarget( prevRenderTarget );\r\n\t\trenderer.autoClear = prevClear;\r\n\r\n\t\t// read the data back\r\n\t\tconst buffer = new Uint16Array( width * height * 4 );\r\n\t\tconst readBuffer = new Float32Array( width * height * 4 );\r\n\t\trenderer.readRenderTargetPixels( renderTarget, 0, 0, width, height, readBuffer );\r\n\r\n\t\tfor ( let i = 0, l = readBuffer.length; i < l; i ++ ) {\r\n\r\n\t\t\tbuffer[ i ] = DataUtils.toHalfFloat( readBuffer[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\tconst result = new DataTexture( buffer, width, height, RGBAFormat, HalfFloatType );\r\n\t\tresult.minFilter = texture.minFilter;\r\n\t\tresult.magFilter = texture.magFilter;\r\n\t\tresult.wrapS = texture.wrapS;\r\n\t\tresult.wrapT = texture.wrapT;\r\n\t\tresult.mapping = EquirectangularReflectionMapping;\r\n\t\tresult.needsUpdate = true;\r\n\r\n\t\t// dispose of the now unneeded target\r\n\t\tpmremTarget.dispose();\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n","import { ShaderMaterial } from 'three';\r\n\r\nexport class MaterialBase extends ShaderMaterial {\r\n\r\n\tset needsUpdate( v ) {\r\n\r\n\t\tsuper.needsUpdate = true;\r\n\t\tthis.dispatchEvent( {\r\n\r\n\t\t\ttype: 'recompilation',\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tconstructor( shader ) {\r\n\r\n\t\tsuper( shader );\r\n\r\n\t\tfor ( const key in this.uniforms ) {\r\n\r\n\t\t\tObject.defineProperty( this, key, {\r\n\r\n\t\t\t\tget() {\r\n\r\n\t\t\t\t\treturn this.uniforms[ key ].value;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tset( v ) {\r\n\r\n\t\t\t\t\tthis.uniforms[ key ].value = v;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// sets the given named define value and sets \"needsUpdate\" to true if it's different\r\n\tsetDefine( name, value = undefined ) {\r\n\r\n\t\tif ( value === undefined || value === null ) {\r\n\r\n\t\t\tif ( name in this.defines ) {\r\n\r\n\t\t\t\tdelete this.defines[ name ];\r\n\t\t\t\tthis.needsUpdate = true;\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.defines[ name ] !== value ) {\r\n\r\n\t\t\t\tthis.defines[ name ] = value;\r\n\t\t\t\tthis.needsUpdate = true;\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n}\r\n","export const util_functions = /* glsl */`\r\n\r\n\t// TODO: possibly this should be renamed something related to material or path tracing logic\r\n\r\n\t#ifndef RAY_OFFSET\r\n\t#define RAY_OFFSET 1e-4\r\n\t#endif\r\n\r\n\t// adjust the hit point by the surface normal by a factor of some offset and the\r\n\t// maximum component-wise value of the current point to accommodate floating point\r\n\t// error as values increase.\r\n\tvec3 stepRayOrigin( vec3 rayOrigin, vec3 rayDirection, vec3 offset, float dist ) {\r\n\r\n\t\tvec3 point = rayOrigin + rayDirection * dist;\r\n\t\tvec3 absPoint = abs( point );\r\n\t\tfloat maxPoint = max( absPoint.x, max( absPoint.y, absPoint.z ) );\r\n\t\treturn point + offset * ( maxPoint + 1.0 ) * RAY_OFFSET;\r\n\r\n\t}\r\n\r\n\t// https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_volume/README.md#attenuation\r\n\tvec3 transmissionAttenuation( float dist, vec3 attColor, float attDist ) {\r\n\r\n\t\tvec3 ot = - log( attColor ) / attDist;\r\n\t\treturn exp( - ot * dist );\r\n\r\n\t}\r\n\r\n\tvec3 getHalfVector( vec3 wi, vec3 wo, float eta ) {\r\n\r\n\t\t// get the half vector - assuming if the light incident vector is on the other side\r\n\t\t// of the that it's transmissive.\r\n\t\tvec3 h;\r\n\t\tif ( wi.z > 0.0 ) {\r\n\r\n\t\t\th = normalize( wi + wo );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Scale by the ior ratio to retrieve the appropriate half vector\r\n\t\t\t// From Section 2.2 on computing the transmission half vector:\r\n\t\t\t// https://blog.selfshadow.com/publications/s2015-shading-course/burley/s2015_pbs_disney_bsdf_notes.pdf\r\n\t\t\th = normalize( wi + wo * eta );\r\n\r\n\t\t}\r\n\r\n\t\th *= sign( h.z );\r\n\t\treturn h;\r\n\r\n\t}\r\n\r\n\tvec3 getHalfVector( vec3 a, vec3 b ) {\r\n\r\n\t\treturn normalize( a + b );\r\n\r\n\t}\r\n\r\n\t// The discrepancy between interpolated surface normal and geometry normal can cause issues when a ray\r\n\t// is cast that is on the top side of the geometry normal plane but below the surface normal plane. If\r\n\t// we find a ray like that we ignore it to avoid artifacts.\r\n\t// This function returns if the direction is on the same side of both planes.\r\n\tbool isDirectionValid( vec3 direction, vec3 surfaceNormal, vec3 geometryNormal ) {\r\n\r\n\t\tbool aboveSurfaceNormal = dot( direction, surfaceNormal ) > 0.0;\r\n\t\tbool aboveGeometryNormal = dot( direction, geometryNormal ) > 0.0;\r\n\t\treturn aboveSurfaceNormal == aboveGeometryNormal;\r\n\r\n\t}\r\n\r\n\t// ray sampling x and z are swapped to align with expected background view\r\n\tvec2 equirectDirectionToUv( vec3 direction ) {\r\n\r\n\t\t// from Spherical.setFromCartesianCoords\r\n\t\tvec2 uv = vec2( atan( direction.z, direction.x ), acos( direction.y ) );\r\n\t\tuv /= vec2( 2.0 * PI, PI );\r\n\r\n\t\t// apply adjustments to get values in range [0, 1] and y right side up\r\n\t\tuv.x += 0.5;\r\n\t\tuv.y = 1.0 - uv.y;\r\n\t\treturn uv;\r\n\r\n\t}\r\n\r\n\tvec3 equirectUvToDirection( vec2 uv ) {\r\n\r\n\t\t// undo above adjustments\r\n\t\tuv.x -= 0.5;\r\n\t\tuv.y = 1.0 - uv.y;\r\n\r\n\t\t// from Vector3.setFromSphericalCoords\r\n\t\tfloat theta = uv.x * 2.0 * PI;\r\n\t\tfloat phi = uv.y * PI;\r\n\r\n\t\tfloat sinPhi = sin( phi );\r\n\r\n\t\treturn vec3( sinPhi * cos( theta ), cos( phi ), sinPhi * sin( theta ) );\r\n\r\n\t}\r\n\r\n\t// power heuristic for multiple importance sampling\r\n\tfloat misHeuristic( float a, float b ) {\r\n\r\n\t\tfloat aa = a * a;\r\n\t\tfloat bb = b * b;\r\n\t\treturn aa / ( aa + bb );\r\n\r\n\t}\r\n\r\n\t// tentFilter from Peter Shirley's 'Realistic Ray Tracing (2nd Edition)' book, pg. 60\r\n\t// erichlof/THREE.js-PathTracing-Renderer/\r\n\tfloat tentFilter( float x ) {\r\n\r\n\t\treturn x < 0.5 ? sqrt( 2.0 * x ) - 1.0 : 1.0 - sqrt( 2.0 - ( 2.0 * x ) );\r\n\r\n\t}\r\n`;\r\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearFilter,\n\tLinearSRGBColorSpace\n} from 'three';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: throw new Error( 'THREE.RGBELoader: Read Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_write_error: throw new Error( 'THREE.RGBELoader: Write Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_format_error: throw new Error( 'THREE.RGBELoader: Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: throw new Error( 'THREE.RGBELoader: Memory Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\trgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\t\t\tdestArray[ destOffset + 3 ] = 1;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t// clamping to 65504, the maximum representable value in float16\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 0 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 1 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 2 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tconst w = rgbe_header_info.width,\n\t\t\th = rgbe_header_info.height,\n\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\n\t\tlet data, type;\n\t\tlet numElements;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst floatArray = new Float32Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = floatArray;\n\t\t\t\ttype = FloatType;\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst halfArray = new Uint16Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = halfArray;\n\t\t\t\ttype = HalfFloatType;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'THREE.RGBELoader: Unsupported type: ' + this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: w, height: h,\n\t\t\tdata: data,\n\t\t\theader: rgbe_header_info.string,\n\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\texposure: rgbe_header_info.exposure,\n\t\t\ttype: type\n\t\t};\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.colorSpace = LinearSRGBColorSpace;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n","import * as THREE from 'three';\r\n\r\nexport function generateRadialFloorTexture( dim ) {\r\n\r\n\tconst data = new Uint8Array( dim * dim * 4 );\r\n\r\n\tfor ( let x = 0; x < dim; x ++ ) {\r\n\r\n\t\tfor ( let y = 0; y < dim; y ++ ) {\r\n\r\n\t\t\tconst xNorm = x / ( dim - 1 );\r\n\t\t\tconst yNorm = y / ( dim - 1 );\r\n\r\n\t\t\tconst xCent = 2.0 * ( xNorm - 0.5 );\r\n\t\t\tconst yCent = 2.0 * ( yNorm - 0.5 );\r\n\t\t\tlet a = Math.max( Math.min( 1.0 - Math.sqrt( xCent ** 2 + yCent ** 2 ), 1.0 ), 0.0 );\r\n\t\t\ta = a ** 2;\r\n\t\t\ta = a * 1.5;\r\n\t\t\ta = Math.min( a, 1.0 );\r\n\r\n\t\t\tconst i = y * dim + x;\r\n\t\t\tdata[ i * 4 + 0 ] = 255;\r\n\t\t\tdata[ i * 4 + 1 ] = 255;\r\n\t\t\tdata[ i * 4 + 2 ] = 255;\r\n\t\t\tdata[ i * 4 + 3 ] = a * 255;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst tex = new THREE.DataTexture( data, dim, dim );\r\n\ttex.format = THREE.RGBAFormat;\r\n\ttex.type = THREE.UnsignedByteType;\r\n\ttex.minFilter = THREE.LinearFilter;\r\n\ttex.magFilter = THREE.LinearFilter;\r\n\ttex.wrapS = THREE.RepeatWrapping;\r\n\ttex.wrapT = THREE.RepeatWrapping;\r\n\ttex.needsUpdate = true;\r\n\treturn tex;\r\n\r\n}\r\n","export function getScaledSettings() {\r\n\r\n\tlet tiles = 3;\r\n\tlet renderScale = Math.max( 1 / window.devicePixelRatio, 0.5 );\r\n\r\n\t// adjust performance parameters for mobile\r\n\tconst aspectRatio = window.innerWidth / window.innerHeight;\r\n\tif ( aspectRatio < 0.65 ) {\r\n\r\n\t\ttiles = 4;\r\n\t\trenderScale = 0.5 / window.devicePixelRatio;\r\n\r\n\t}\r\n\r\n\treturn { tiles, renderScale };\r\n\r\n}\r\n","let _styleElement;\r\nfunction initializeStyles() {\r\n\r\n\tif ( _styleElement ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\t_styleElement = document.createElement( 'style' );\r\n\t_styleElement.textContent = /* css */`\r\n\r\n\t\t.loader-container, .description {\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\tfont-family: 'Courier New', Courier, monospace;\r\n\t\t\tcolor: white;\r\n\t\t\tfont-weight: light;\r\n\t\t\talign-items: flex-start;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tpointer-events: none;\r\n\t\t\tuser-select: none;\r\n\t\t}\r\n\r\n\t\t.loader-container {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tbottom: 0;\r\n\t\t}\r\n\r\n\t\t.description {\r\n\t\t\ttop: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.loader-container .bar {\r\n\t\t\theight: 2px;\r\n\t\t\tbackground: white;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples,\r\n\t\t.loader-container .percentage {\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 0 0 1px 1px;\r\n\t\t\tbackground: rgba( 0, 0, 0, 0.2 );\r\n\t\t\tborder-radius: 2px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n\t\t.loader-container:not(.loading) .bar,\r\n\t\t.loader-container:not(.loading) .percentage,\r\n\t\t.loader-container.loading .credits,\r\n\t\t.loader-container.loading .samples,\r\n\t\t.loader-container .credits:empty {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits a,\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples {\r\n\t\t\tcolor: rgba( 255, 255, 255, 0.75 );\r\n\t\t}\r\n\t`;\r\n\tdocument.head.appendChild( _styleElement );\r\n\r\n}\r\n\r\nexport class LoaderElement {\r\n\r\n\tconstructor() {\r\n\r\n\t\tinitializeStyles();\r\n\r\n\t\tconst container = document.createElement( 'div' );\r\n\t\tcontainer.classList.add( 'loader-container' );\r\n\r\n\t\tconst percentageEl = document.createElement( 'div' );\r\n\t\tpercentageEl.classList.add( 'percentage' );\r\n\t\tcontainer.appendChild( percentageEl );\r\n\r\n\t\tconst samplesEl = document.createElement( 'div' );\r\n\t\tsamplesEl.classList.add( 'samples' );\r\n\t\tcontainer.appendChild( samplesEl );\r\n\r\n\t\tconst creditsEl = document.createElement( 'div' );\r\n\t\tcreditsEl.classList.add( 'credits' );\r\n\t\tcontainer.appendChild( creditsEl );\r\n\r\n\t\tconst loaderBarEl = document.createElement( 'div' );\r\n\t\tloaderBarEl.classList.add( 'bar' );\r\n\t\tcontainer.appendChild( loaderBarEl );\r\n\r\n\t\tconst descriptionEl = document.createElement( 'div' );\r\n\t\tdescriptionEl.classList.add( 'description' );\r\n\t\tcontainer.appendChild( descriptionEl );\r\n\r\n\t\tthis._description = descriptionEl;\r\n\t\tthis._loaderBar = loaderBarEl;\r\n\t\tthis._percentage = percentageEl;\r\n\t\tthis._credits = creditsEl;\r\n\t\tthis._samples = samplesEl;\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.setPercentage( 0 );\r\n\r\n\t}\r\n\r\n\tattach( container ) {\r\n\r\n\t\tcontainer.appendChild( this._container );\r\n\t\tcontainer.appendChild( this._description );\r\n\r\n\t}\r\n\r\n\tsetPercentage( perc ) {\r\n\r\n\t\tthis._loaderBar.style.width = `${ perc * 100 }%`;\r\n\r\n\t\tif ( perc === 0 ) {\r\n\r\n\t\t\tthis._percentage.innerText = 'Loading...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._percentage.innerText = `${ ( perc * 100 ).toFixed( 0 ) }%`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( perc >= 1 ) {\r\n\r\n\t\t\tthis._container.classList.remove( 'loading' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._container.classList.add( 'loading' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetSamples( count, compiling = false ) {\r\n\r\n\t\tif ( compiling ) {\r\n\r\n\t\t\tthis._samples.innerText = 'compiling shader...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._samples.innerText = `${ Math.floor( count ) } samples`;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetCredits( credits ) {\r\n\r\n\t\tthis._credits.innerHTML = credits;\r\n\r\n\t}\r\n\r\n\tsetDescription( description ) {\r\n\r\n\t\tthis._description.innerHTML = description;\r\n\r\n\t}\r\n\r\n}\r\n","export const math_functions = /* glsl */`\r\n\r\n\t// Fast arccos approximation used to remove banding artifacts caused by numerical errors in acos.\r\n\t// This is a cubic Lagrange interpolating polynomial for x = [-1, -1/2, 0, 1/2, 1].\r\n\t// For more information see: https://github.com/disini/three-gpu-pathtracer/pull/171#issuecomment-1152275248\r\n\tfloat acosApprox( float x ) {\r\n\r\n\t\tx = clamp( x, -1.0, 1.0 );\r\n\t\treturn ( - 0.69813170079773212 * x * x - 0.87266462599716477 ) * x + 1.5707963267948966;\r\n\r\n\t}\r\n\r\n\t// An acos with input values bound to the range [-1, 1].\r\n\tfloat acosSafe( float x ) {\r\n\r\n\t\treturn acos( clamp( x, -1.0, 1.0 ) );\r\n\r\n\t}\r\n\r\n\tfloat saturateCos( float val ) {\r\n\r\n\t\treturn clamp( val, 0.001, 1.0 );\r\n\r\n\t}\r\n\r\n\tfloat square( float t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec2 square( vec2 t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec3 square( vec3 t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec4 square( vec4 t ) {\r\n\r\n\t\treturn t * t;\r\n\r\n\t}\r\n\r\n\tvec2 rotateVector( vec2 v, float t ) {\r\n\r\n\t\tfloat ac = cos( t );\r\n\t\tfloat as = sin( t );\r\n\t\treturn vec2(\r\n\t\t\tv.x * ac - v.y * as,\r\n\t\t\tv.x * as + v.y * ac\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t// forms a basis with the normal vector as Z\r\n\tmat3 getBasisFromNormal( vec3 normal ) {\r\n\r\n\t\tvec3 other;\r\n\t\tif ( abs( normal.x ) > 0.5 ) {\r\n\r\n\t\t\tother = vec3( 0.0, 1.0, 0.0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tother = vec3( 1.0, 0.0, 0.0 );\r\n\r\n\t\t}\r\n\r\n\t\tvec3 ortho = normalize( cross( normal, other ) );\r\n\t\tvec3 ortho2 = normalize( cross( normal, ortho ) );\r\n\t\treturn mat3( ortho2, ortho, normal );\r\n\r\n\t}\r\n\r\n`;\r\n","export const ggx_functions = /* glsl */`\r\n\r\n\t// The GGX functions provide sampling and distribution information for normals as output so\r\n\t// in order to get probability of scatter direction the half vector must be computed and provided.\r\n\t// [0] https://www.cs.cornell.edu/~srm/publications/EGSR07-btdf.pdf\r\n\t// [1] https://hal.archives-ouvertes.fr/hal-01509746/document\r\n\t// [2] http://jcgt.org/published/0007/04/01/\r\n\t// [4] http://jcgt.org/published/0003/02/03/\r\n\r\n\t// trowbridge-reitz === GGX === GTR\r\n\r\n\tvec3 ggxDirection( vec3 incidentDir, vec2 roughness, vec2 uv ) {\r\n\r\n\t\t// TODO: try GGXVNDF implementation from reference [2], here. Needs to update ggxDistribution\r\n\t\t// function below, as well\r\n\r\n\t\t// Implementation from reference [1]\r\n\t\t// stretch view\r\n\t\tvec3 V = normalize( vec3( roughness * incidentDir.xy, incidentDir.z ) );\r\n\r\n\t\t// orthonormal basis\r\n\t\tvec3 T1 = ( V.z < 0.9999 ) ? normalize( cross( V, vec3( 0.0, 0.0, 1.0 ) ) ) : vec3( 1.0, 0.0, 0.0 );\r\n\t\tvec3 T2 = cross( T1, V );\r\n\r\n\t\t// sample point with polar coordinates (r, phi)\r\n\t\tfloat a = 1.0 / ( 1.0 + V.z );\r\n\t\tfloat r = sqrt( uv.x );\r\n\t\tfloat phi = ( uv.y < a ) ? uv.y / a * PI : PI + ( uv.y - a ) / ( 1.0 - a ) * PI;\r\n\t\tfloat P1 = r * cos( phi );\r\n\t\tfloat P2 = r * sin( phi ) * ( ( uv.y < a ) ? 1.0 : V.z );\r\n\r\n\t\t// compute normal\r\n\t\tvec3 N = P1 * T1 + P2 * T2 + V * sqrt( max( 0.0, 1.0 - P1 * P1 - P2 * P2 ) );\r\n\r\n\t\t// unstretch\r\n\t\tN = normalize( vec3( roughness * N.xy, max( 0.0, N.z ) ) );\r\n\r\n\t\treturn N;\r\n\r\n\t}\r\n\r\n\t// Below are PDF and related functions for use in a Monte Carlo path tracer\r\n\t// as specified in Appendix B of the following paper\r\n\t// See equation (34) from reference [0]\r\n\tfloat ggxLamda( float theta, float roughness ) {\r\n\r\n\t\tfloat tanTheta = tan( theta );\r\n\t\tfloat tanTheta2 = tanTheta * tanTheta;\r\n\t\tfloat alpha2 = roughness * roughness;\r\n\r\n\t\tfloat numerator = - 1.0 + sqrt( 1.0 + alpha2 * tanTheta2 );\r\n\t\treturn numerator / 2.0;\r\n\r\n\t}\r\n\r\n\t// See equation (34) from reference [0]\r\n\tfloat ggxShadowMaskG1( float theta, float roughness ) {\r\n\r\n\t\treturn 1.0 / ( 1.0 + ggxLamda( theta, roughness ) );\r\n\r\n\t}\r\n\r\n\t// See equation (125) from reference [4]\r\n\tfloat ggxShadowMaskG2( vec3 wi, vec3 wo, float roughness ) {\r\n\r\n\t\tfloat incidentTheta = acos( wi.z );\r\n\t\tfloat scatterTheta = acos( wo.z );\r\n\t\treturn 1.0 / ( 1.0 + ggxLamda( incidentTheta, roughness ) + ggxLamda( scatterTheta, roughness ) );\r\n\r\n\t}\r\n\r\n\t// See equation (33) from reference [0]\r\n\tfloat ggxDistribution( vec3 halfVector, float roughness ) {\r\n\r\n\t\tfloat a2 = roughness * roughness;\r\n\t\ta2 = max( EPSILON, a2 );\r\n\t\tfloat cosTheta = halfVector.z;\r\n\t\tfloat cosTheta4 = pow( cosTheta, 4.0 );\r\n\r\n\t\tif ( cosTheta == 0.0 ) return 0.0;\r\n\r\n\t\tfloat theta = acosSafe( halfVector.z );\r\n\t\tfloat tanTheta = tan( theta );\r\n\t\tfloat tanTheta2 = pow( tanTheta, 2.0 );\r\n\r\n\t\tfloat denom = PI * cosTheta4 * pow( a2 + tanTheta2, 2.0 );\r\n\t\treturn ( a2 / denom );\r\n\r\n\t}\r\n\r\n\t// See equation (3) from reference [2]\r\n\tfloat ggxPDF( vec3 wi, vec3 halfVector, float roughness ) {\r\n\r\n\t\tfloat incidentTheta = acos( wi.z );\r\n\t\tfloat D = ggxDistribution( halfVector, roughness );\r\n\t\tfloat G1 = ggxShadowMaskG1( incidentTheta, roughness );\r\n\r\n\t\treturn D * G1 * max( 0.0, dot( wi, halfVector ) ) / wi.z;\r\n\r\n\t}\r\n\r\n`;\r\n","import {\n\tTHREE,\n\tWebGLRenderer,\n\tACESFilmicToneMapping,\n\tScene,\n\tPerspectiveCamera,\n\tClock,\n\tAnimationMixer,\n\tMesh,\n\tPlaneGeometry,\n\tMeshStandardMaterial,\n\tVector3,\n} from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { BlurredEnvMapGenerator, WebGLPathTracer } from '../src/index.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { generateRadialFloorTexture } from './utils/generateRadialFloorTexture.js';\nimport { getScaledSettings } from './utils/getScaledSettings.js';\nimport { LoaderElement } from './utils/LoaderElement.js';\nimport { vec3 } from 'three/examples/jsm/nodes/Nodes.js';\n\n// const ENV_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/aristea_wreck_puresky_2k.hdr';\nconst ENV_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/peppermint_powerplant_2k.hdr';\nconst MORPH_URL = 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/models/gltf/RobotExpressive/RobotExpressive.glb';\n\n\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/main/models/trex/scene.gltf';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/Bee.glb';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/golden_finch_dragon.glb';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/flint_maw.glb';\n// const SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/BrainStem.glb';\nconst SKINNED_URL = 'https://raw.githubusercontent.com/disini/3DModels/main/glb/animated/project_polly.glb';\n// const SKINNED_URL = 'https://github.com/disini/3DModels/raw/main/glb/animated/Bee.glb';\n\n// const CREDITS = 'Model by DailyArt on Sketchfab';\nconst CREDITS = ' ';\nconst DESCRIPTION = 'Rendering deformable geometry with path tracing.';\n\nlet pathTracer, renderer, controls, camera, scene, clock;\nlet mixer, mixerAction;\nlet loader;\nlet counter = 0;\nconst params = {\n\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\trenderScale: 1 / window.devicePixelRatio,\n\ttiles: 1,\n\tautoPause: true,\n\t// autoPause: false,\n\tpause: false,\n\tcontinuous: false,\n\tstableNoise: false,\n\t...getScaledSettings(),\n\n};\n\nconst cameraParam = {\n\t// lookAtXDelta: 1,\n\t// lookAtYDelta: 1,\n\tposYDelta: 1\n\t// lookAtZDelta: 1\n};\n\ninit();\n\nasync function init() {\n\n\tloader = new LoaderElement();\n\tloader.setDescription( DESCRIPTION );\n\tloader.attach( document.body );\n\n\t// renderer\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = ACESFilmicToneMapping;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// path tracer\n\tpathTracer = new WebGLPathTracer( renderer );\n\tpathTracer.multipleImportanceSampling = false;\n\tpathTracer.tiles.set( params.tiles, params.tiles );\n\tpathTracer.filterGlossyFactor = 0.25;\n\tpathTracer.minSamples = 1;\n\tpathTracer.renderDelay = 0;\n\tpathTracer.fadeDuration = 0;\n\n\t// scene\n\tscene = new Scene();\n\n\tconst oriCamPos = new Vector3( -5.5, 8.5, 7.5 );\n\n\t// camera\n\tcamera = new PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\t// camera.position.set( 5.5, 3.5, 7.5 );\n\t// camera.position.set( -5.5, 8.5, 7.5 );\n\tcamera.position.set( oriCamPos.x, oriCamPos.y, oriCamPos.z );\n\tlet curCamPos = oriCamPos;\n\t// controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcamera.lookAt( controls.target );\n\tcontrols.addEventListener( 'change', () => pathTracer.updateCamera() );\n\n\tcontrols.update();\n\n\t// clock\n\tclock = new Clock();\n\n\t// load assets\n\tconst modelUrl = window.location.hash === '#morphtarget' ? MORPH_URL : SKINNED_URL;\n\tconst [ envTexture, gltf ] = await Promise.all( [\n\t\tnew RGBELoader().loadAsync( ENV_URL ),\n\t\tnew GLTFLoader().setMeshoptDecoder( MeshoptDecoder ).loadAsync( modelUrl )\n\t] );\n\n\t// update env map\n\tconst generator = new BlurredEnvMapGenerator( renderer );\n\tconst blurredTex = generator.generate( envTexture, 0.01 );\n\tscene.background = blurredTex;\n\tscene.environment = blurredTex;\n\tgenerator.dispose();\n\n\t// animations\n\tconst animations = gltf.animations;\n\tmixer = new AnimationMixer( gltf.scene );\n\n\tmixerAction = mixer.clipAction( animations[ 0 ] );\n\tmixerAction.play();\n\tmixerAction.paused = params.pause;\n\n\t// initialize scene\n\tscene.add( gltf.scene );\n\n// https://blog.csdn.net/weixin_48070278/article/details/132275988\n\tgltf.scene.scale.set(10, 10, 10);\n\t// gltf.scene.scale.set(3, 3, 3);\n\n\tlet pos = gltf.scene.position;\n\n\tconsole.log(\"pos == \" + pos.x + \", \" + pos.y + \", \" + pos.z);\n\n\t// const modelCenterBox = new THREE.Box3().setFromObject\n\t// gltf.scene.position.set(pos.x, pos.y - 10, pos.z);\n\n\tconst floorTex = generateRadialFloorTexture( 2048 );\n\tconst floorPlane = new Mesh(\n\t\tnew PlaneGeometry(),\n\t\tnew MeshStandardMaterial( {\n\t\t\tmap: floorTex,\n\t\t\ttransparent: true,\n\t\t\tcolor: 0xdddddd,\n\t\t\troughness: 0.15,\n\t\t\tmetalness: 1.0\n\t\t} )\n\t);\n\tfloorPlane.scale.setScalar( 50 );\n\tfloorPlane.rotation.x = - Math.PI / 2;\n\tfloorPlane.position.y = 0.075;\n\tscene.add( floorPlane );\n\n\t// initial generation\n\tpathTracer.setScene( scene, camera );\n\n\tloader.setPercentage( 1 );\n\tloader.setCredits( CREDITS );\n\n\tonParamsChange();\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\t// gui\n\tconst gui = new GUI();\n\tgui.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tpathTracer.tiles.set( value, value );\n\n\t} );\n\tgui.add( params, 'bounces', 1, 10, 1 ).onChange( regenerateScene );\n\tgui.add( params, 'renderScale', 0.1, 1 ).onChange( v => {\n\n\t\tpathTracer.renderScale = v;\n\t\tpathTracer.reset();\n\n\t} );\n\tgui.add( params, 'autoPause' ).listen();\n\tgui.add( params, 'pause' ).onChange( v => {\n\n\t\tparams.autoPause = false;\n\t\tsetPause( v );\n\n\t} ).listen();\n\tgui.add( params, 'continuous' ).onChange( () => {\n\n\t\tparams.autoPause = false;\n\n\t} );\n\tgui.add( params, 'stableNoise' ).onChange( v => {\n\n\t\tpathTracer.stableNoise = v;\n\n\t} );\n\n\t// gui.add(params, \"C\")\n\n\n\n\t// const cameraFolder = gui.addFolder( 'Camera' );\n\t// cameraFolder.add( camera, 'focusDistance', 1, 100 ).onChange( onParamsChange ).listen();\n\t// cameraFolder.add( camera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t// \tcamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t// \tthis.updateDisplay();\n\t// \tonParamsChange();\n\n\n\t// } );\n\t// cameraFolder.add( camera, 'apertureRotation', 0, 12.5 ).onChange( onParamsChange );\n\t// cameraFolder.add( camera, 'anamorphicRatio', 0.1, 10.0 ).onChange( onParamsChange );\n\t// cameraFolder.add( camera, 'bokehSize', 0, 100 ).onChange( onParamsChange ).listen();\n\t// cameraFolder.add( camera, 'fStop', 0.02, 20 ).onChange( onParamsChange ).listen();\n\t// cameraFolder.add( camera, 'fStop', 0.02, 20 ).onChange( onParamsChange ).listen();\n\t// cameraFolder.add( camera, 'fov', 25, 100 ).onChange( () => {\n\n\t// \tcamera.updateProjectionMatrix();\n\t// \tpathTracer.updateCamera();\n\n\t// } ).listen();\n\n\tlet targetPos;\n\n\t// cameraFolder.add( camera, 'lookAtY', 25, 100 ).onChange( () => {\n\n\t// \ttargetPos = new Vector3( controls.target.x, controls.target.y + 5, controls.target.z );\n\t// \tcamera.lookAt( targetPos );\n\t// \tcamera.updateProjectionMatrix();\n\t// \tpathTracer.updateCamera();\n\n\t// } ).listen();\n\n\t// cameraFolder.add( cameraParam, 'lookAtYDelta', - 20, 20 ).onChange( () => {\n\t// gui.add( cameraParam, 'lookAtYDelta', - 5, 5 ).onChange( value => {\n\n\t// \ttargetPos = new Vector3( controls.target.x, controls.target.y + value, controls.target.z );\n\t// \t// controls.target = targetPos;\n\t// \tcamera.lookAt( targetPos );\n\t// \tcamera.updateProjectionMatrix();\n\t// \tpathTracer.updateCamera();\n\t// \t// controls.update();\n\n\t// } ).listen();\n\n\t// gui.add( cameraParam, 'posYDelta', - 1, 1 ).onChange( value => {\n\n\t// \t// targetPos = new Vector3( controls.target.x, controls.target.y + value, controls.target.z );\n\t// \t// controls.target = targetPos;\n\t// \t// camera.lookAt( targetPos );\n\t// \tcurCamPos = camera.position;\n\t// \tcamera.position.set( curCamPos.x, value, curCamPos.z );\n\t// \tcamera.updateProjectionMatrix();\n\t// \tpathTracer.updateCamera();\n\t// \t// controls.update();\n\n\t// } ).listen();\n\n\t// controls.addEventListener( 'change', () => updateGuiCamPos( gui, camera.position.y ) );\n\n\t// cameraFolder.add( params, 'autoFocus' );\n\n\tanimate();\n\n}\n\n// function updateGuiCamPos( gui, v ) {\n\n// \tgui.cameraParam.controls. = v;\n\n// }\n\nfunction setPause( v ) {\n\n\tmixerAction.paused = v;\n\tparams.pause = v;\n\tif ( v ) {\n\n\t\tregenerateScene();\n\n\t}\n\n}\n\nfunction onResize() {\n\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\n\tpathTracer.updateCamera();\n\n}\n\nfunction regenerateScene() {\n\n\tpathTracer.bounces = params.bounces;\n\tpathTracer.setScene( scene, camera );\n\n}\n\nfunction onParamsChange() {\n\n\tpathTracer.filterGlossyFactor = params.filterGlossyFactor;\n\tpathTracer.bounces = params.bounces;\n\tpathTracer.renderScale = params.renderScale;\n\n\tpathTracer.updateCamera();\n\tpathTracer.reset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\t// step the animation forward\n\tconst delta = Math.min( clock.getDelta(), 30 * 0.001 );\n\tmixer.update( delta );\n\n\tif ( params.autoPause ) {\n\n\t\t// auto pause the animation\n\t\tcounter += delta;\n\t\t// if ( ! params.pause && counter >= 2.5 || params.pause && counter >= 5 ) {\n\t\tif ( ! params.pause && counter >= 8 || params.pause && counter >= 30 ) {\n\n\t\t\tsetPause( ! params.pause );\n\t\t\tcounter = 0;\n\n\t\t}\n\n\t} else {\n\n\t\tcounter = 0;\n\n\t}\n\n\tpathTracer.dynamicLowRes = params.continuous;\n\n\tif ( ! params.pause && ! params.continuous ) {\n\n\t\trenderer.render( scene, camera );\n\t\tloader.setSamples( 0, pathTracer.isCompiling );\n\n\t} else {\n\n\t\t// if we're continuously path tracing then update the scene\n\t\tif ( ! params.pause && params.continuous ) {\n\n\t\t\tregenerateScene();\n\n\t\t}\n\n\t\tpathTracer.renderSample();\n\t\tloader.setSamples( pathTracer.samples, pathTracer.isCompiling );\n\n\t}\n\n}\n","// @TODO: We can simplify \"export { default as SomeNode, other, exports } from '...'\" to just \"export * from '...'\" if we will use only named exports\n// this will also solve issues like \"import TempNode from '../core/Node.js'\"\n\n// constants\nexport * from './core/constants.js';\n\n// core\nexport { default as AssignNode, assign } from './core/AssignNode.js';\nexport { default as AttributeNode, attribute } from './core/AttributeNode.js';\nexport { default as BypassNode, bypass } from './core/BypassNode.js';\nexport { default as CacheNode, cache } from './core/CacheNode.js';\nexport { default as ConstNode } from './core/ConstNode.js';\nexport { default as ContextNode, context, label } from './core/ContextNode.js';\nexport { default as IndexNode, vertexIndex, instanceIndex } from './core/IndexNode.js';\nexport { default as LightingModel } from './core/LightingModel.js';\nexport { default as Node, addNodeClass, createNodeFromType } from './core/Node.js';\nexport { default as VarNode, temp } from './core/VarNode.js';\nexport { default as NodeAttribute } from './core/NodeAttribute.js';\nexport { default as NodeBuilder } from './core/NodeBuilder.js';\nexport { default as NodeCache } from './core/NodeCache.js';\nexport { default as NodeCode } from './core/NodeCode.js';\nexport { default as NodeFrame } from './core/NodeFrame.js';\nexport { default as NodeFunctionInput } from './core/NodeFunctionInput.js';\nexport { default as NodeKeywords } from './core/NodeKeywords.js';\nexport { default as NodeUniform } from './core/NodeUniform.js';\nexport { default as NodeVar } from './core/NodeVar.js';\nexport { default as NodeVarying } from './core/NodeVarying.js';\nexport { default as ParameterNode, parameter } from './core/ParameterNode.js';\nexport { default as PropertyNode, property, varyingProperty, output, diffuseColor, roughness, metalness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness, specularColor, shininess, dashSize, gapSize, pointWidth } from './core/PropertyNode.js';\nexport { default as StackNode, stack } from './core/StackNode.js';\nexport { default as TempNode } from './core/TempNode.js';\nexport { default as UniformGroupNode, uniformGroup, objectGroup, renderGroup, frameGroup } from './core/UniformGroupNode.js';\nexport { default as UniformNode, uniform } from './core/UniformNode.js';\nexport { default as VaryingNode, varying } from './core/VaryingNode.js';\nexport { default as OutputStructNode, outputStruct } from './core/OutputStructNode.js';\n\nimport * as NodeUtils from './core/NodeUtils.js';\nexport { NodeUtils };\n\n// math\nexport { default as MathNode, PI, PI2, EPSILON, INFINITY, radians, degrees, exp, exp2, log, log2, sqrt, inverseSqrt, floor, ceil, normalize, fract, sin, cos, tan, asin, acos, atan, abs, sign, length, lengthSq, negate, oneMinus, dFdx, dFdy, round, reciprocal, trunc, fwidth, bitcast, atan2, min, max, mod, step, reflect, distance, difference, dot, cross, pow, pow2, pow3, pow4, transformDirection, mix, clamp, saturate, refract, smoothstep, faceForward, cbrt, all, any, equals } from './math/MathNode.js';\n\nexport { default as OperatorNode, add, sub, mul, div, remainder, equal, lessThan, greaterThan, lessThanEqual, greaterThanEqual, and, or, not, xor, bitAnd, bitNot, bitOr, bitXor, shiftLeft, shiftRight } from './math/OperatorNode.js';\nexport { default as CondNode, cond } from './math/CondNode.js';\nexport { default as HashNode, hash } from './math/HashNode.js';\n\n// math utils\nexport { parabola, gain, pcurve, sinc } from './math/MathUtils.js';\nexport { triNoise3D } from './math/TriNoise3D.js';\n\n// utils\nexport { default as ArrayElementNode } from './utils/ArrayElementNode.js';\nexport { default as ConvertNode } from './utils/ConvertNode.js';\nexport { default as DiscardNode, discard } from './utils/DiscardNode.js';\nexport { default as EquirectUVNode, equirectUV } from './utils/EquirectUVNode.js';\nexport { default as FunctionOverloadingNode, overloadingFn } from './utils/FunctionOverloadingNode.js';\nexport { default as JoinNode } from './utils/JoinNode.js';\nexport { default as LoopNode, loop, Continue, Break } from './utils/LoopNode.js';\nexport { default as MatcapUVNode, matcapUV } from './utils/MatcapUVNode.js';\nexport { default as MaxMipLevelNode, maxMipLevel } from './utils/MaxMipLevelNode.js';\nexport { default as OscNode, oscSine, oscSquare, oscTriangle, oscSawtooth } from './utils/OscNode.js';\nexport { default as PackingNode, directionToColor, colorToDirection } from './utils/PackingNode.js';\nexport { default as RemapNode, remap, remapClamp } from './utils/RemapNode.js';\nexport { default as RotateUVNode, rotateUV } from './utils/RotateUVNode.js';\nexport { default as RotateNode, rotate } from './utils/RotateNode.js';\nexport { default as SetNode } from './utils/SetNode.js';\nexport { default as SplitNode } from './utils/SplitNode.js';\nexport { default as SpriteSheetUVNode, spritesheetUV } from './utils/SpriteSheetUVNode.js';\nexport { default as StorageArrayElementNode } from './utils/StorageArrayElementNode.js';\nexport { default as TimerNode, timerLocal, timerGlobal, timerDelta, frameId } from './utils/TimerNode.js';\nexport { default as TriplanarTexturesNode, triplanarTextures, triplanarTexture } from './utils/TriplanarTexturesNode.js';\nexport { default as ReflectorNode, reflector } from './utils/ReflectorNode.js';\n\n// shadernode\nexport * from './shadernode/ShaderNode.js';\n\n// accessors\nexport { TBNViewMatrix, parallaxDirection, parallaxUV } from './accessors/AccessorsUtils.js';\nexport { default as UniformsNode, uniforms } from './accessors/UniformsNode.js';\nexport { default as BitangentNode, bitangentGeometry, bitangentLocal, bitangentView, bitangentWorld, transformedBitangentView, transformedBitangentWorld } from './accessors/BitangentNode.js';\nexport { default as BufferAttributeNode, bufferAttribute, dynamicBufferAttribute, instancedBufferAttribute, instancedDynamicBufferAttribute } from './accessors/BufferAttributeNode.js';\nexport { default as BufferNode, buffer } from './accessors/BufferNode.js';\nexport { default as CameraNode, cameraProjectionMatrix, cameraProjectionMatrixInverse, cameraViewMatrix, cameraNormalMatrix, cameraWorldMatrix, cameraPosition, cameraNear, cameraFar, cameraLogDepth } from './accessors/CameraNode.js';\nexport { default as VertexColorNode, vertexColor } from './accessors/VertexColorNode.js';\nexport { default as CubeTextureNode, cubeTexture } from './accessors/CubeTextureNode.js';\nexport { default as InstanceNode, instance } from './accessors/InstanceNode.js';\nexport { default as BatchNode, batch } from './accessors/BatchNode.js';\nexport { default as MaterialNode, materialAlphaTest, materialColor, materialShininess, materialEmissive, materialOpacity, materialSpecularColor, materialSpecularStrength, materialReflectivity, materialRoughness, materialMetalness, materialNormal, materialClearcoat, materialClearcoatRoughness, materialClearcoatNormal, materialRotation, materialSheen, materialSheenRoughness, materialIridescence, materialIridescenceIOR, materialIridescenceThickness, materialLineScale, materialLineDashSize, materialLineGapSize, materialLineWidth, materialLineDashOffset, materialPointWidth } from './accessors/MaterialNode.js';\nexport { default as MaterialReferenceNode, materialReference } from './accessors/MaterialReferenceNode.js';\nexport { default as RendererReferenceNode, rendererReference } from './accessors/RendererReferenceNode.js';\nexport { default as MorphNode, morphReference } from './accessors/MorphNode.js';\nexport { default as TextureBicubicNode, textureBicubic } from './accessors/TextureBicubicNode.js';\nexport { default as ModelNode, modelDirection, modelViewMatrix, modelNormalMatrix, modelWorldMatrix, modelPosition, modelViewPosition, modelScale } from './accessors/ModelNode.js';\nexport { default as ModelViewProjectionNode, modelViewProjection } from './accessors/ModelViewProjectionNode.js';\nexport { default as NormalNode, normalGeometry, normalLocal, normalView, normalWorld, transformedNormalView, transformedNormalWorld, transformedClearcoatNormalView } from './accessors/NormalNode.js';\nexport { default as Object3DNode, objectDirection, objectViewMatrix, objectNormalMatrix, objectWorldMatrix, objectPosition, objectScale, objectViewPosition } from './accessors/Object3DNode.js';\nexport { default as PointUVNode, pointUV } from './accessors/PointUVNode.js';\nexport { default as PositionNode, positionGeometry, positionLocal, positionWorld, positionWorldDirection, positionView, positionViewDirection } from './accessors/PositionNode.js';\nexport { default as ReferenceNode, reference, referenceBuffer } from './accessors/ReferenceNode.js';\nexport { default as ReflectVectorNode, reflectVector } from './accessors/ReflectVectorNode.js';\nexport { default as SkinningNode, skinning } from './accessors/SkinningNode.js';\nexport { default as SceneNode, backgroundBlurriness, backgroundIntensity } from './accessors/SceneNode.js';\nexport { default as StorageBufferNode, storage, storageObject } from './accessors/StorageBufferNode.js';\nexport { default as TangentNode, tangentGeometry, tangentLocal, tangentView, tangentWorld, transformedTangentView, transformedTangentWorld } from './accessors/TangentNode.js';\nexport { default as TextureNode, texture, textureLoad, /*textureLevel,*/ sampler } from './accessors/TextureNode.js';\nexport { default as TextureStoreNode, textureStore } from './accessors/TextureStoreNode.js';\nexport { default as UVNode, uv } from './accessors/UVNode.js';\nexport { default as UserDataNode, userData } from './accessors/UserDataNode.js';\n\n// display\nexport { default as BlendModeNode, burn, dodge, overlay, screen } from './display/BlendModeNode.js';\nexport { default as BumpMapNode, bumpMap } from './display/BumpMapNode.js';\nexport { default as ColorAdjustmentNode, saturation, vibrance, hue, lumaCoeffs, luminance, threshold } from './display/ColorAdjustmentNode.js';\nexport { default as ColorSpaceNode, linearToColorSpace, colorSpaceToLinear, linearTosRGB, sRGBToLinear } from './display/ColorSpaceNode.js';\nexport { default as FrontFacingNode, frontFacing, faceDirection } from './display/FrontFacingNode.js';\nexport { default as NormalMapNode, normalMap } from './display/NormalMapNode.js';\nexport { default as PosterizeNode, posterize } from './display/PosterizeNode.js';\nexport { default as ToneMappingNode, toneMapping } from './display/ToneMappingNode.js';\nexport { default as ViewportNode, viewport, viewportCoordinate, viewportResolution, viewportTopLeft, viewportBottomLeft, viewportTopRight, viewportBottomRight } from './display/ViewportNode.js';\nexport { default as ViewportTextureNode, viewportTexture, viewportMipTexture } from './display/ViewportTextureNode.js';\nexport { default as ViewportSharedTextureNode, viewportSharedTexture } from './display/ViewportSharedTextureNode.js';\nexport { default as ViewportDepthTextureNode, viewportDepthTexture } from './display/ViewportDepthTextureNode.js';\nexport { default as ViewportDepthNode, viewZToOrthographicDepth, orthographicDepthToViewZ, viewZToPerspectiveDepth, perspectiveDepthToViewZ, depth, depthTexture, depthPixel } from './display/ViewportDepthNode.js';\nexport { default as GaussianBlurNode, gaussianBlur } from './display/GaussianBlurNode.js';\nexport { default as AfterImageNode, afterImage } from './display/AfterImageNode.js';\nexport { default as AnamorphicNode, anamorphic } from './display/AnamorphicNode.js';\n\nexport { default as PassNode, pass, depthPass } from './display/PassNode.js';\n\n// code\nexport { default as ExpressionNode, expression } from './code/ExpressionNode.js';\nexport { default as CodeNode, code, js, wgsl, glsl } from './code/CodeNode.js';\nexport { default as FunctionCallNode, call } from './code/FunctionCallNode.js';\nexport { default as FunctionNode, wgslFn, glslFn } from './code/FunctionNode.js';\nexport { default as ScriptableNode, scriptable, global } from './code/ScriptableNode.js';\nexport { default as ScriptableValueNode, scriptableValue } from './code/ScriptableValueNode.js';\n\n// fog\nexport { default as FogNode, fog } from './fog/FogNode.js';\nexport { default as FogRangeNode, rangeFog } from './fog/FogRangeNode.js';\nexport { default as FogExp2Node, densityFog } from './fog/FogExp2Node.js';\n\n// geometry\nexport { default as RangeNode, range } from './geometry/RangeNode.js';\n\n// gpgpu\nexport { default as ComputeNode, compute } from './gpgpu/ComputeNode.js';\n\n// lighting\nexport { default as LightNode, lightTargetDirection } from './lighting/LightNode.js';\nexport { default as PointLightNode } from './lighting/PointLightNode.js';\nexport { default as DirectionalLightNode } from './lighting/DirectionalLightNode.js';\nexport { default as SpotLightNode } from './lighting/SpotLightNode.js';\nexport { default as IESSpotLightNode } from './lighting/IESSpotLightNode.js';\nexport { default as AmbientLightNode } from './lighting/AmbientLightNode.js';\nexport { default as LightsNode, lights, lightsNode, addLightNode } from './lighting/LightsNode.js';\nexport { default as LightingNode /* @TODO: lighting (abstract), light */ } from './lighting/LightingNode.js';\nexport { default as LightingContextNode, lightingContext } from './lighting/LightingContextNode.js';\nexport { default as HemisphereLightNode } from './lighting/HemisphereLightNode.js';\nexport { default as EnvironmentNode } from './lighting/EnvironmentNode.js';\nexport { default as AONode } from './lighting/AONode.js';\nexport { default as AnalyticLightNode } from './lighting/AnalyticLightNode.js';\n\n// pmrem\nexport { default as PMREMNode, pmremTexture } from './pmrem/PMREMNode.js';\nexport * as PMREMUtils from './pmrem/PMREMUtils.js';\n\n// procedural\nexport { default as CheckerNode, checker } from './procedural/CheckerNode.js';\n\n// loaders\nexport { default as NodeLoader } from './loaders/NodeLoader.js';\nexport { default as NodeObjectLoader } from './loaders/NodeObjectLoader.js';\nexport { default as NodeMaterialLoader } from './loaders/NodeMaterialLoader.js';\n\n// parsers\nexport { default as GLSLNodeParser } from './parsers/GLSLNodeParser.js'; // @TODO: Move to jsm/renderers/webgl.\n\n// materials\nexport * from './materials/Materials.js';\n\n// materialX\nexport * from './materialx/MaterialXNodes.js';\n\n// functions\nexport { default as BRDF_GGX } from './functions/BSDF/BRDF_GGX.js';\nexport { default as BRDF_Lambert } from './functions/BSDF/BRDF_Lambert.js';\nexport { default as D_GGX } from './functions/BSDF/D_GGX.js';\nexport { default as DFGApprox } from './functions/BSDF/DFGApprox.js';\nexport { default as F_Schlick } from './functions/BSDF/F_Schlick.js';\nexport { default as Schlick_to_F0 } from './functions/BSDF/Schlick_to_F0.js';\nexport { default as V_GGX_SmithCorrelated } from './functions/BSDF/V_GGX_SmithCorrelated.js';\n\nexport { getDistanceAttenuation } from './lighting/LightUtils.js';\n\nexport { default as getGeometryRoughness } from './functions/material/getGeometryRoughness.js';\nexport { default as getRoughness } from './functions/material/getRoughness.js';\n\nexport { default as PhongLightingModel } from './functions/PhongLightingModel.js';\nexport { default as PhysicalLightingModel } from './functions/PhysicalLightingModel.js';\n","export const NodeShaderStage = {\n\tVERTEX: 'vertex',\n\tFRAGMENT: 'fragment'\n};\n\nexport const NodeUpdateType = {\n\tNONE: 'none',\n\tFRAME: 'frame',\n\tRENDER: 'render',\n\tOBJECT: 'object'\n};\n\nexport const NodeType = {\n\tBOOLEAN: 'bool',\n\tINTEGER: 'int',\n\tFLOAT: 'float',\n\tVECTOR2: 'vec2',\n\tVECTOR3: 'vec3',\n\tVECTOR4: 'vec4',\n\tMATRIX2: 'mat2',\n\tMATRIX3: 'mat3',\n\tMATRIX4: 'mat4'\n};\n\nexport const defaultShaderStages = [ 'fragment', 'vertex' ];\nexport const defaultBuildStages = [ 'setup', 'analyze', 'generate' ];\nexport const shaderStages = [ ...defaultShaderStages, 'compute' ];\nexport const vectorComponents = [ 'x', 'y', 'z', 'w' ];\n","import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nimport { vectorComponents } from '../core/constants.js';\n\nclass AssignNode extends TempNode {\n\n\tconstructor( targetNode, sourceNode ) {\n\n\t\tsuper();\n\n\t\tthis.targetNode = targetNode;\n\t\tthis.sourceNode = sourceNode;\n\n\t}\n\n\thasDependencies() {\n\n\t\treturn false;\n\n\t}\n\n\tgetNodeType( builder, output ) {\n\n\t\treturn output !== 'void' ? this.targetNode.getNodeType( builder ) : 'void';\n\n\t}\n\n\tneedsSplitAssign( builder ) {\n\n\t\tconst { targetNode } = this;\n\n\t\tif ( builder.isAvailable( 'swizzleAssign' ) === false && targetNode.isSplitNode && targetNode.components.length > 1 ) {\n\n\t\t\tconst targetLength = builder.getTypeLength( targetNode.node.getNodeType( builder ) );\n\t\t\tconst assignDiferentVector = vectorComponents.join( '' ).slice( 0, targetLength ) !== targetNode.components;\n\n\t\t\treturn assignDiferentVector;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { targetNode, sourceNode } = this;\n\n\t\tconst needsSplitAssign = this.needsSplitAssign( builder );\n\n\t\tconst targetType = targetNode.getNodeType( builder );\n\n\t\tconst target = targetNode.context( { assign: true } ).build( builder );\n\t\tconst source = sourceNode.build( builder, targetType );\n\n\t\tconst sourceType = sourceNode.getNodeType( builder );\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t//\n\n\t\tlet snippet;\n\n\t\tif ( nodeData.initialized === true ) {\n\n\t\t\tif ( output !== 'void' ) {\n\n\t\t\t\tsnippet = target;\n\n\t\t\t}\n\n\t\t} else if ( needsSplitAssign ) {\n\n\t\t\tconst sourceVar = builder.getVarFromNode( this, null, targetType );\n\t\t\tconst sourceProperty = builder.getPropertyName( sourceVar );\n\n\t\t\tbuilder.addLineFlowCode( `${ sourceProperty } = ${ source }` );\n\n\t\t\tconst targetRoot = targetNode.node.context( { assign: true } ).build( builder );\n\n\t\t\tfor ( let i = 0; i < targetNode.components.length; i ++ ) {\n\n\t\t\t\tconst component = targetNode.components[ i ];\n\n\t\t\t\tbuilder.addLineFlowCode( `${ targetRoot }.${ component } = ${ sourceProperty }[ ${ i } ]` );\n\n\t\t\t}\n\n\t\t\tif ( output !== 'void' ) {\n\n\t\t\t\tsnippet = target;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tsnippet = `${ target } = ${ source }`;\n\n\t\t\tif ( output === 'void' || sourceType === 'void' ) {\n\n\t\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t\t\tif ( output !== 'void' ) {\n\n\t\t\t\t\tsnippet = target;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tnodeData.initialized = true;\n\n\t\treturn builder.format( snippet, targetType, output );\n\n\t}\n\n}\n\nexport default AssignNode;\n\nexport const assign = nodeProxy( AssignNode );\n\naddNodeClass( 'AssignNode', AssignNode );\n\naddNodeElement( 'assign', assign );\n","import { EventDispatcher } from 'three';\nimport { NodeUpdateType } from './constants.js';\nimport { getNodeChildren, getCacheKey } from './NodeUtils.js';\nimport { MathUtils } from 'three';\n\nconst NodeClasses = new Map();\n\nlet _nodeId = 0;\n\nclass Node extends EventDispatcher {\n\n\tconstructor( nodeType = null ) {\n\n\t\tsuper();\n\n\t\tthis.nodeType = nodeType;\n\n\t\tthis.updateType = NodeUpdateType.NONE;\n\t\tthis.updateBeforeType = NodeUpdateType.NONE;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.version = 0;\n\n\t\tthis._cacheKey = null;\n\t\tthis._cacheKeyVersion = 0;\n\n\t\tthis.isNode = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _nodeId ++ } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t}\n\n\tget type() {\n\n\t\treturn this.constructor.type;\n\n\t}\n\n\tonUpdate( callback, updateType ) {\n\n\t\tthis.updateType = updateType;\n\t\tthis.update = callback.bind( this.getSelf() );\n\n\t\treturn this;\n\n\t}\n\n\tonFrameUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.FRAME );\n\n\t}\n\n\tonRenderUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.RENDER );\n\n\t}\n\n\tonObjectUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.OBJECT );\n\n\t}\n\n\tgetSelf() {\n\n\t\t// Returns non-node object.\n\n\t\treturn this.self || this;\n\n\t}\n\n\tupdateReference( /*state*/ ) {\n\n\t\treturn this;\n\n\t}\n\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn false;\n\n\t}\n\n\t* getChildren() {\n\n\t\tfor ( const { childNode } of getNodeChildren( this ) ) {\n\n\t\t\tyield childNode;\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tchildNode.traverse( callback );\n\n\t\t}\n\n\t}\n\n\tgetCacheKey( force = false ) {\n\n\t\tforce = force || this.version !== this._cacheKeyVersion;\n\n\t\tif ( force === true || this._cacheKey === null ) {\n\n\t\t\tthis._cacheKey = getCacheKey( this, force );\n\t\t\tthis._cacheKeyVersion = this.version;\n\n\t\t}\n\n\t\treturn this._cacheKey;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn this.uuid;\n\n\t}\n\n\tgetUpdateType() {\n\n\t\treturn this.updateType;\n\n\t}\n\n\tgetUpdateBeforeType() {\n\n\t\treturn this.updateBeforeType;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tif ( nodeProperties.outputNode ) {\n\n\t\t\treturn nodeProperties.outputNode.getNodeType( builder );\n\n\t\t}\n\n\t\treturn this.nodeType;\n\n\t}\n\n\tgetShared( builder ) {\n\n\t\tconst hash = this.getHash( builder );\n\t\tconst nodeFromHash = builder.getNodeFromHash( hash );\n\n\t\treturn nodeFromHash || this;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tnodeProperties[ '_node' + childNode.id ] = childNode;\n\n\t\t}\n\n\t\t// return a outputNode if exists\n\t\treturn null;\n\n\t}\n\n\tconstruct( builder ) { // @deprecated, r157\n\n\t\tconsole.warn( 'THREE.Node: construct() is deprecated. Use setup() instead.' );\n\n\t\treturn this.setup( builder );\n\n\t}\n\n\tincreaseUsage( builder ) {\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\t\tnodeData.usageCount = nodeData.usageCount === undefined ? 1 : nodeData.usageCount + 1;\n\n\t\treturn nodeData.usageCount;\n\n\t}\n\n\tanalyze( builder ) {\n\n\t\tconst usageCount = this.increaseUsage( builder );\n\n\t\tif ( usageCount === 1 ) {\n\n\t\t\t// node flow children\n\n\t\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\t\tfor ( const childNode of Object.values( nodeProperties ) ) {\n\n\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\tif ( outputNode && outputNode.isNode === true ) {\n\n\t\t\treturn outputNode.build( builder, output );\n\n\t\t}\n\n\t}\n\n\tupdateBefore( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tbuild( builder, output = null ) {\n\n\t\tconst refNode = this.getShared( builder );\n\n\t\tif ( this !== refNode ) {\n\n\t\t\treturn refNode.build( builder, output );\n\n\t\t}\n\n\t\tbuilder.addNode( this );\n\t\tbuilder.addChain( this );\n\n\t\t/* Build stages expected results:\n\t\t\t- \"setup\"\t\t-> Node\n\t\t\t- \"analyze\"\t\t-> null\n\t\t\t- \"generate\"\t-> String\n\t\t*/\n\t\tlet result = null;\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'setup' ) {\n\n\t\t\tthis.updateReference( builder );\n\n\t\t\tconst properties = builder.getNodeProperties( this );\n\n\t\t\tif ( properties.initialized !== true || builder.context.tempRead === false ) {\n\n\t\t\t\tconst stackNodesBeforeSetup = builder.stack.nodes.length;\n\n\t\t\t\tproperties.initialized = true;\n\t\t\t\tproperties.outputNode = this.setup( builder );\n\n\t\t\t\tif ( properties.outputNode !== null && builder.stack.nodes.length !== stackNodesBeforeSetup ) {\n\n\t\t\t\t\tproperties.outputNode = builder.stack;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const childNode of Object.values( properties ) ) {\n\n\t\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( buildStage === 'analyze' ) {\n\n\t\t\tthis.analyze( builder );\n\n\t\t} else if ( buildStage === 'generate' ) {\n\n\t\t\tconst isGenerateOnce = this.generate.length === 1;\n\n\t\t\tif ( isGenerateOnce ) {\n\n\t\t\t\tconst type = this.getNodeType( builder );\n\t\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\t\tresult = nodeData.snippet;\n\n\t\t\t\tif ( result === undefined /*|| builder.context.tempRead === false*/ ) {\n\n\t\t\t\t\tresult = this.generate( builder ) || '';\n\n\t\t\t\t\tnodeData.snippet = result;\n\n\t\t\t\t}\n\n\t\t\t\tresult = builder.format( result, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tresult = this.generate( builder, output ) || '';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeChain( this );\n\n\t\treturn result;\n\n\t}\n\n\tgetSerializeChildren() {\n\n\t\treturn getNodeChildren( this );\n\n\t}\n\n\tserialize( json ) {\n\n\t\tconst nodeChildren = this.getSerializeChildren();\n\n\t\tconst inputNodes = {};\n\n\t\tfor ( const { property, index, childNode } of nodeChildren ) {\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tif ( inputNodes[ property ] === undefined ) {\n\n\t\t\t\t\tinputNodes[ property ] = Number.isInteger( index ) ? [] : {};\n\n\t\t\t\t}\n\n\t\t\t\tinputNodes[ property ][ index ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t} else {\n\n\t\t\t\tinputNodes[ property ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( inputNodes ).length > 0 ) {\n\n\t\t\tjson.inputNodes = inputNodes;\n\n\t\t}\n\n\t}\n\n\tdeserialize( json ) {\n\n\t\tif ( json.inputNodes !== undefined ) {\n\n\t\t\tconst nodes = json.meta.nodes;\n\n\t\t\tfor ( const property in json.inputNodes ) {\n\n\t\t\t\tif ( Array.isArray( json.inputNodes[ property ] ) ) {\n\n\t\t\t\t\tconst inputArray = [];\n\n\t\t\t\t\tfor ( const uuid of json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tinputArray.push( nodes[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputArray;\n\n\t\t\t\t} else if ( typeof json.inputNodes[ property ] === 'object' ) {\n\n\t\t\t\t\tconst inputObject = {};\n\n\t\t\t\t\tfor ( const subProperty in json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tconst uuid = json.inputNodes[ property ][ subProperty ];\n\n\t\t\t\t\t\tinputObject[ subProperty ] = nodes[ uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputObject;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst uuid = json.inputNodes[ property ];\n\n\t\t\t\t\tthis[ property ] = nodes[ uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst { uuid, type } = this;\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t}\n\n\t\t// serialize\n\n\t\tlet data = meta.nodes[ uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tdata = {\n\t\t\t\tuuid,\n\t\t\t\ttype,\n\t\t\t\tmeta,\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.6,\n\t\t\t\t\ttype: 'Node',\n\t\t\t\t\tgenerator: 'Node.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( isRoot !== true ) meta.nodes[ data.uuid ] = data;\n\n\t\t\tthis.serialize( data );\n\n\t\t\tdelete data.meta;\n\n\t\t}\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport default Node;\n\nexport function addNodeClass( type, nodeClass ) {\n\n\tif ( typeof nodeClass !== 'function' || ! type ) throw new Error( `Node class ${ type } is not a class` );\n\tif ( NodeClasses.has( type ) ) {\n\n\t\tconsole.warn( `Redefinition of node class ${ type }` );\n\t\treturn;\n\n\t}\n\n\tNodeClasses.set( type, nodeClass );\n\tnodeClass.type = type;\n\n}\n\nexport function createNodeFromType( type ) {\n\n\tconst Class = NodeClasses.get( type );\n\n\tif ( Class !== undefined ) {\n\n\t\treturn new Class();\n\n\t}\n\n}\n","import { Color, Matrix3, Matrix4, Vector2, Vector3, Vector4 } from 'three';\n\nexport function getCacheKey( object, force = false ) {\n\n\tlet cacheKey = '{';\n\n\tif ( object.isNode === true ) {\n\n\t\tcacheKey += object.id;\n\n\t}\n\n\tfor ( const { property, childNode } of getNodeChildren( object ) ) {\n\n\t\tcacheKey += ',' + property.slice( 0, - 4 ) + ':' + childNode.getCacheKey( force );\n\n\t}\n\n\tcacheKey += '}';\n\n\treturn cacheKey;\n\n}\n\nexport function* getNodeChildren( node, toJSON = false ) {\n\n\tfor ( const property in node ) {\n\n\t\t// Ignore private properties.\n\t\tif ( property.startsWith( '_' ) === true ) continue;\n\n\t\tconst object = node[ property ];\n\n\t\tif ( Array.isArray( object ) === true ) {\n\n\t\t\tfor ( let i = 0; i < object.length; i ++ ) {\n\n\t\t\t\tconst child = object[ i ];\n\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\n\n\t\t\t\t\tyield { property, index: i, childNode: child };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( object && object.isNode === true ) {\n\n\t\t\tyield { property, childNode: object };\n\n\t\t} else if ( typeof object === 'object' ) {\n\n\t\t\tfor ( const subProperty in object ) {\n\n\t\t\t\tconst child = object[ subProperty ];\n\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\n\n\t\t\t\t\tyield { property, index: subProperty, childNode: child };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport function getValueType( value ) {\n\n\tif ( value === undefined || value === null ) return null;\n\n\tconst typeOf = typeof value;\n\n\tif ( value.isNode === true ) {\n\n\t\treturn 'node';\n\n\t} else if ( typeOf === 'number' ) {\n\n\t\treturn 'float';\n\n\t} else if ( typeOf === 'boolean' ) {\n\n\t\treturn 'bool';\n\n\t} else if ( typeOf === 'string' ) {\n\n\t\treturn 'string';\n\n\t} else if ( typeOf === 'function' ) {\n\n\t\treturn 'shader';\n\n\t} else if ( value.isVector2 === true ) {\n\n\t\treturn 'vec2';\n\n\t} else if ( value.isVector3 === true ) {\n\n\t\treturn 'vec3';\n\n\t} else if ( value.isVector4 === true ) {\n\n\t\treturn 'vec4';\n\n\t} else if ( value.isMatrix3 === true ) {\n\n\t\treturn 'mat3';\n\n\t} else if ( value.isMatrix4 === true ) {\n\n\t\treturn 'mat4';\n\n\t} else if ( value.isColor === true ) {\n\n\t\treturn 'color';\n\n\t} else if ( value instanceof ArrayBuffer ) {\n\n\t\treturn 'ArrayBuffer';\n\n\t}\n\n\treturn null;\n\n}\n\nexport function getValueFromType( type, ...params ) {\n\n\tconst last4 = type ? type.slice( - 4 ) : undefined;\n\n\tif ( params.length === 1 ) { // ensure same behaviour as in NodeBuilder.format()\n\n\t\tif ( last4 === 'vec2' ) params = [ params[ 0 ], params[ 0 ] ];\n\t\telse if ( last4 === 'vec3' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ] ];\n\t\telse if ( last4 === 'vec4' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ], params[ 0 ] ];\n\n\t}\n\n\tif ( type === 'color' ) {\n\n\t\treturn new Color( ...params );\n\n\t} else if ( last4 === 'vec2' ) {\n\n\t\treturn new Vector2( ...params );\n\n\t} else if ( last4 === 'vec3' ) {\n\n\t\treturn new Vector3( ...params );\n\n\t} else if ( last4 === 'vec4' ) {\n\n\t\treturn new Vector4( ...params );\n\n\t} else if ( last4 === 'mat3' ) {\n\n\t\treturn new Matrix3( ...params );\n\n\t} else if ( last4 === 'mat4' ) {\n\n\t\treturn new Matrix4( ...params );\n\n\t} else if ( type === 'bool' ) {\n\n\t\treturn params[ 0 ] || false;\n\n\t} else if ( ( type === 'float' ) || ( type === 'int' ) || ( type === 'uint' ) ) {\n\n\t\treturn params[ 0 ] || 0;\n\n\t} else if ( type === 'string' ) {\n\n\t\treturn params[ 0 ] || '';\n\n\t} else if ( type === 'ArrayBuffer' ) {\n\n\t\treturn base64ToArrayBuffer( params[ 0 ] );\n\n\t}\n\n\treturn null;\n\n}\n\nexport function arrayBufferToBase64( arrayBuffer ) {\n\n\tlet chars = '';\n\n\tconst array = new Uint8Array( arrayBuffer );\n\n\tfor ( let i = 0; i < array.length; i ++ ) {\n\n\t\tchars += String.fromCharCode( array[ i ] );\n\n\t}\n\n\treturn btoa( chars );\n\n}\n\nexport function base64ToArrayBuffer( base64 ) {\n\n\treturn Uint8Array.from( atob( base64 ), c => c.charCodeAt( 0 ) ).buffer;\n\n}\n","import Node, { addNodeClass } from './Node.js';\n\nclass TempNode extends Node {\n\n\tconstructor( type ) {\n\n\t\tsuper( type );\n\n\t\tthis.isTempNode = true;\n\n\t}\n\n\thasDependencies( builder ) {\n\n\t\treturn builder.getDataFromNode( this ).usageCount > 1;\n\n\t}\n\n\tbuild( builder, output ) {\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'generate' ) {\n\n\t\t\tconst type = builder.getVectorType( this.getNodeType( builder, output ) );\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tif ( builder.context.tempRead !== false && nodeData.propertyName !== undefined ) {\n\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\n\n\t\t\t} else if ( builder.context.tempWrite !== false && type !== 'void' && output !== 'void' && this.hasDependencies( builder ) ) {\n\n\t\t\t\tconst snippet = super.build( builder, type );\n\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this, null, type );\n\t\t\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\t\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}` );\n\n\t\t\t\tnodeData.snippet = snippet;\n\t\t\t\tnodeData.propertyName = propertyName;\n\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn super.build( builder, output );\n\n\t}\n\n}\n\nexport default TempNode;\n\naddNodeClass( 'TempNode', TempNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\nimport ConvertNode from '../utils/ConvertNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport SetNode from '../utils/SetNode.js';\nimport ConstNode from '../core/ConstNode.js';\nimport { getValueFromType, getValueType } from '../core/NodeUtils.js';\n\n//\n\nlet currentStack = null;\n\nconst NodeElements = new Map(); // @TODO: Currently only a few nodes are added, probably also add others\n\nexport function addNodeElement( name, nodeElement ) {\n\n\tif ( NodeElements.has( name ) ) {\n\n\t\tconsole.warn( `Redefinition of node element ${ name }` );\n\t\treturn;\n\n\t}\n\n\tif ( typeof nodeElement !== 'function' ) throw new Error( `Node element ${ name } is not a function` );\n\n\tNodeElements.set( name, nodeElement );\n\n}\n\nconst parseSwizzle = ( props ) => props.replace( /r|s/g, 'x' ).replace( /g|t/g, 'y' ).replace( /b|p/g, 'z' ).replace( /a|q/g, 'w' );\n\nconst shaderNodeHandler = {\n\n\tsetup( NodeClosure, params ) {\n\n\t\tconst inputs = params.shift();\n\n\t\treturn NodeClosure( nodeObjects( inputs ), ...params );\n\n\t},\n\n\tget( node, prop, nodeObj ) {\n\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\n\n\t\t\tif ( node.isStackNode !== true && prop === 'assign' ) {\n\n\t\t\t\treturn ( ...params ) => {\n\n\t\t\t\t\tcurrentStack.assign( nodeObj, ...params );\n\n\t\t\t\t\treturn nodeObj;\n\n\t\t\t\t};\n\n\t\t\t} else if ( NodeElements.has( prop ) ) {\n\n\t\t\t\tconst nodeElement = NodeElements.get( prop );\n\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.add( nodeElement( ...params ) ) : ( ...params ) => nodeElement( nodeObj, ...params );\n\n\t\t\t} else if ( prop === 'self' ) {\n\n\t\t\t\treturn node;\n\n\t\t\t} else if ( prop.endsWith( 'Assign' ) && NodeElements.has( prop.slice( 0, prop.length - 'Assign'.length ) ) ) {\n\n\t\t\t\tconst nodeElement = NodeElements.get( prop.slice( 0, prop.length - 'Assign'.length ) );\n\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.assign( params[ 0 ], nodeElement( ...params ) ) : ( ...params ) => nodeObj.assign( nodeElement( nodeObj, ...params ) );\n\n\t\t\t} else if ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing properties ( swizzle )\n\n\t\t\t\tprop = parseSwizzle( prop );\n\n\t\t\t\treturn nodeObject( new SplitNode( nodeObj, prop ) );\n\n\t\t\t} else if ( /^set[XYZWRGBASTPQ]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// set properties ( swizzle )\n\n\t\t\t\tprop = parseSwizzle( prop.slice( 3 ).toLowerCase() );\n\n\t\t\t\t// sort to xyzw sequence\n\n\t\t\t\tprop = prop.split( '' ).sort().join( '' );\n\n\t\t\t\treturn ( value ) => nodeObject( new SetNode( node, prop, value ) );\n\n\t\t\t} else if ( prop === 'width' || prop === 'height' || prop === 'depth' ) {\n\n\t\t\t\t// accessing property\n\n\t\t\t\tif ( prop === 'width' ) prop = 'x';\n\t\t\t\telse if ( prop === 'height' ) prop = 'y';\n\t\t\t\telse if ( prop === 'depth' ) prop = 'z';\n\n\t\t\t\treturn nodeObject( new SplitNode( node, prop ) );\n\n\t\t\t} else if ( /^\\d+$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing array\n\n\t\t\t\treturn nodeObject( new ArrayElementNode( nodeObj, new ConstNode( Number( prop ), 'uint' ) ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Reflect.get( node, prop, nodeObj );\n\n\t},\n\n\tset( node, prop, value, nodeObj ) {\n\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\n\n\t\t\t// setting properties\n\n\t\t\tif ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true || prop === 'width' || prop === 'height' || prop === 'depth' || /^\\d+$/.test( prop ) === true ) {\n\n\t\t\t\tnodeObj[ prop ].assign( value );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Reflect.set( node, prop, value, nodeObj );\n\n\t}\n\n};\n\nconst nodeObjectsCacheMap = new WeakMap();\nconst nodeBuilderFunctionsCacheMap = new WeakMap();\n\nconst ShaderNodeObject = function ( obj, altType = null ) {\n\n\tconst type = getValueType( obj );\n\n\tif ( type === 'node' ) {\n\n\t\tlet nodeObject = nodeObjectsCacheMap.get( obj );\n\n\t\tif ( nodeObject === undefined ) {\n\n\t\t\tnodeObject = new Proxy( obj, shaderNodeHandler );\n\n\t\t\tnodeObjectsCacheMap.set( obj, nodeObject );\n\t\t\tnodeObjectsCacheMap.set( nodeObject, nodeObject );\n\n\t\t}\n\n\t\treturn nodeObject;\n\n\t} else if ( ( altType === null && ( type === 'float' || type === 'boolean' ) ) || ( type && type !== 'shader' && type !== 'string' ) ) {\n\n\t\treturn nodeObject( getConstNode( obj, altType ) );\n\n\t} else if ( type === 'shader' ) {\n\n\t\treturn tslFn( obj );\n\n\t}\n\n\treturn obj;\n\n};\n\nconst ShaderNodeObjects = function ( objects, altType = null ) {\n\n\tfor ( const name in objects ) {\n\n\t\tobjects[ name ] = nodeObject( objects[ name ], altType );\n\n\t}\n\n\treturn objects;\n\n};\n\nconst ShaderNodeArray = function ( array, altType = null ) {\n\n\tconst len = array.length;\n\n\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\tarray[ i ] = nodeObject( array[ i ], altType );\n\n\t}\n\n\treturn array;\n\n};\n\nconst ShaderNodeProxy = function ( NodeClass, scope = null, factor = null, settings = null ) {\n\n\tconst assignNode = ( node ) => nodeObject( settings !== null ? Object.assign( node, settings ) : node );\n\n\tif ( scope === null ) {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( ...nodeArray( params ) ) );\n\n\t\t};\n\n\t} else if ( factor !== null ) {\n\n\t\tfactor = nodeObject( factor );\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ), factor ) );\n\n\t\t};\n\n\t} else {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ) ) );\n\n\t\t};\n\n\t}\n\n};\n\nconst ShaderNodeImmutable = function ( NodeClass, ...params ) {\n\n\treturn nodeObject( new NodeClass( ...nodeArray( params ) ) );\n\n};\n\nclass ShaderCallNodeInternal extends Node {\n\n\tconstructor( shaderNode, inputNodes ) {\n\n\t\tsuper();\n\n\t\tthis.shaderNode = shaderNode;\n\t\tthis.inputNodes = inputNodes;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\treturn outputNode ? outputNode.getNodeType( builder ) : super.getNodeType( builder );\n\n\t}\n\n\tcall( builder ) {\n\n\t\tconst { shaderNode, inputNodes } = this;\n\n\t\tif ( shaderNode.layout ) {\n\n\t\t\tlet functionNodesCacheMap = nodeBuilderFunctionsCacheMap.get( builder.constructor );\n\n\t\t\tif ( functionNodesCacheMap === undefined ) {\n\n\t\t\t\tfunctionNodesCacheMap = new WeakMap();\n\n\t\t\t\tnodeBuilderFunctionsCacheMap.set( builder.constructor, functionNodesCacheMap );\n\n\t\t\t}\n\n\t\t\tlet functionNode = functionNodesCacheMap.get( shaderNode );\n\n\t\t\tif ( functionNode === undefined ) {\n\n\t\t\t\tfunctionNode = nodeObject( builder.buildFunctionNode( shaderNode ) );\n\n\t\t\t\tfunctionNodesCacheMap.set( shaderNode, functionNode );\n\n\t\t\t}\n\n\t\t\tif ( builder.currentFunctionNode !== null ) {\n\n\t\t\t\tbuilder.currentFunctionNode.includes.push( functionNode );\n\n\t\t\t}\n\n\t\t\treturn nodeObject( functionNode.call( inputNodes ) );\n\n\t\t}\n\n\t\tconst jsFunc = shaderNode.jsFunc;\n\t\tconst outputNode = inputNodes !== null ? jsFunc( inputNodes, builder.stack, builder ) : jsFunc( builder.stack, builder );\n\n\t\treturn nodeObject( outputNode );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tbuilder.addStack();\n\n\t\tbuilder.stack.outputNode = this.call( builder );\n\n\t\treturn builder.removeStack();\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\tif ( outputNode === null ) {\n\n\t\t\t// TSL: It's recommended to use `tslFn` in setup() pass.\n\n\t\t\treturn this.call( builder ).build( builder, output );\n\n\t\t}\n\n\t\treturn super.generate( builder, output );\n\n\t}\n\n}\n\nclass ShaderNodeInternal extends Node {\n\n\tconstructor( jsFunc ) {\n\n\t\tsuper();\n\n\t\tthis.jsFunc = jsFunc;\n\t\tthis.layout = null;\n\n\t}\n\n\tget isArrayInput() {\n\n\t\treturn /^\\((\\s+)?\\[/.test( this.jsFunc.toString() );\n\n\t}\n\n\tsetLayout( layout ) {\n\n\t\tthis.layout = layout;\n\n\t\treturn this;\n\n\t}\n\n\tcall( inputs = null ) {\n\n\t\tnodeObjects( inputs );\n\n\t\treturn nodeObject( new ShaderCallNodeInternal( this, inputs ) );\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.call();\n\n\t}\n\n}\n\nconst bools = [ false, true ];\nconst uints = [ 0, 1, 2, 3 ];\nconst ints = [ - 1, - 2 ];\nconst floats = [ 0.5, 1.5, 1 / 3, 1e-6, 1e6, Math.PI, Math.PI * 2, 1 / Math.PI, 2 / Math.PI, 1 / ( Math.PI * 2 ), Math.PI / 2 ];\n\nconst boolsCacheMap = new Map();\nfor ( const bool of bools ) boolsCacheMap.set( bool, new ConstNode( bool ) );\n\nconst uintsCacheMap = new Map();\nfor ( const uint of uints ) uintsCacheMap.set( uint, new ConstNode( uint, 'uint' ) );\n\nconst intsCacheMap = new Map( [ ...uintsCacheMap ].map( el => new ConstNode( el.value, 'int' ) ) );\nfor ( const int of ints ) intsCacheMap.set( int, new ConstNode( int, 'int' ) );\n\nconst floatsCacheMap = new Map( [ ...intsCacheMap ].map( el => new ConstNode( el.value ) ) );\nfor ( const float of floats ) floatsCacheMap.set( float, new ConstNode( float ) );\nfor ( const float of floats ) floatsCacheMap.set( - float, new ConstNode( - float ) );\n\nconst cacheMaps = { bool: boolsCacheMap, uint: uintsCacheMap, ints: intsCacheMap, float: floatsCacheMap };\n\nconst constNodesCacheMap = new Map( [ ...boolsCacheMap, ...floatsCacheMap ] );\n\nconst getConstNode = ( value, type ) => {\n\n\tif ( constNodesCacheMap.has( value ) ) {\n\n\t\treturn constNodesCacheMap.get( value );\n\n\t} else if ( value.isNode === true ) {\n\n\t\treturn value;\n\n\t} else {\n\n\t\treturn new ConstNode( value, type );\n\n\t}\n\n};\n\nconst safeGetNodeType = ( node ) => {\n\n\ttry {\n\n\t\treturn node.getNodeType();\n\n\t} catch ( _ ) {\n\n\t\treturn undefined;\n\n\t}\n\n};\n\nconst ConvertType = function ( type, cacheMap = null ) {\n\n\treturn ( ...params ) => {\n\n\t\tif ( params.length === 0 || ( ! [ 'bool', 'float', 'int', 'uint' ].includes( type ) && params.every( param => typeof param !== 'object' ) ) ) {\n\n\t\t\tparams = [ getValueFromType( type, ...params ) ];\n\n\t\t}\n\n\t\tif ( params.length === 1 && cacheMap !== null && cacheMap.has( params[ 0 ] ) ) {\n\n\t\t\treturn nodeObject( cacheMap.get( params[ 0 ] ) );\n\n\t\t}\n\n\t\tif ( params.length === 1 ) {\n\n\t\t\tconst node = getConstNode( params[ 0 ], type );\n\t\t\tif ( safeGetNodeType( node ) === type ) return nodeObject( node );\n\t\t\treturn nodeObject( new ConvertNode( node, type ) );\n\n\t\t}\n\n\t\tconst nodes = params.map( param => getConstNode( param ) );\n\t\treturn nodeObject( new JoinNode( nodes, type ) );\n\n\t};\n\n};\n\n// exports\n\n// utils\n\nexport const getConstNodeType = ( value ) => ( value !== undefined && value !== null ) ? ( value.nodeType || value.convertTo || ( typeof value === 'string' ? value : null ) ) : null;\n\n// shader node base\n\nexport function ShaderNode( jsFunc ) {\n\n\treturn new Proxy( new ShaderNodeInternal( jsFunc ), shaderNodeHandler );\n\n}\n\nexport const nodeObject = ( val, altType = null ) => /* new */ ShaderNodeObject( val, altType );\nexport const nodeObjects = ( val, altType = null ) => new ShaderNodeObjects( val, altType );\nexport const nodeArray = ( val, altType = null ) => new ShaderNodeArray( val, altType );\nexport const nodeProxy = ( ...params ) => new ShaderNodeProxy( ...params );\nexport const nodeImmutable = ( ...params ) => new ShaderNodeImmutable( ...params );\n\nexport const shader = ( jsFunc ) => { // @deprecated, r154\n\n\tconsole.warn( 'TSL: shader() is deprecated. Use tslFn() instead.' );\n\n\treturn new ShaderNode( jsFunc );\n\n};\n\nexport const tslFn = ( jsFunc ) => {\n\n\tconst shaderNode = new ShaderNode( jsFunc );\n\n\tconst fn = ( ...params ) => {\n\n\t\tlet inputs;\n\n\t\tnodeObjects( params );\n\n\t\tif ( params[ 0 ] && params[ 0 ].isNode ) {\n\n\t\t\tinputs = [ ...params ];\n\n\t\t} else {\n\n\t\t\tinputs = params[ 0 ];\n\n\t\t}\n\n\t\treturn shaderNode.call( inputs );\n\n\t};\n\n\tfn.shaderNode = shaderNode;\n\tfn.setLayout = ( layout ) => {\n\n\t\tshaderNode.setLayout( layout );\n\n\t\treturn fn;\n\n\t};\n\n\treturn fn;\n\n};\n\naddNodeClass( 'ShaderNode', ShaderNode );\n\n//\n\nexport const setCurrentStack = ( stack ) => {\n\n\tif ( currentStack === stack ) {\n\n\t\t//throw new Error( 'Stack already defined.' );\n\n\t}\n\n\tcurrentStack = stack;\n\n};\n\nexport const getCurrentStack = () => currentStack;\n\nexport const If = ( ...params ) => currentStack.if( ...params );\n\nexport function append( node ) {\n\n\tif ( currentStack ) currentStack.add( node );\n\n\treturn node;\n\n}\n\naddNodeElement( 'append', append );\n\n// types\n// @TODO: Maybe export from ConstNode.js?\n\nexport const color = new ConvertType( 'color' );\n\nexport const float = new ConvertType( 'float', cacheMaps.float );\nexport const int = new ConvertType( 'int', cacheMaps.ints );\nexport const uint = new ConvertType( 'uint', cacheMaps.uint );\nexport const bool = new ConvertType( 'bool', cacheMaps.bool );\n\nexport const vec2 = new ConvertType( 'vec2' );\nexport const ivec2 = new ConvertType( 'ivec2' );\nexport const uvec2 = new ConvertType( 'uvec2' );\nexport const bvec2 = new ConvertType( 'bvec2' );\n\nexport const vec3 = new ConvertType( 'vec3' );\nexport const ivec3 = new ConvertType( 'ivec3' );\nexport const uvec3 = new ConvertType( 'uvec3' );\nexport const bvec3 = new ConvertType( 'bvec3' );\n\nexport const vec4 = new ConvertType( 'vec4' );\nexport const ivec4 = new ConvertType( 'ivec4' );\nexport const uvec4 = new ConvertType( 'uvec4' );\nexport const bvec4 = new ConvertType( 'bvec4' );\n\nexport const mat2 = new ConvertType( 'mat2' );\nexport const imat2 = new ConvertType( 'imat2' );\nexport const umat2 = new ConvertType( 'umat2' );\nexport const bmat2 = new ConvertType( 'bmat2' );\n\nexport const mat3 = new ConvertType( 'mat3' );\nexport const imat3 = new ConvertType( 'imat3' );\nexport const umat3 = new ConvertType( 'umat3' );\nexport const bmat3 = new ConvertType( 'bmat3' );\n\nexport const mat4 = new ConvertType( 'mat4' );\nexport const imat4 = new ConvertType( 'imat4' );\nexport const umat4 = new ConvertType( 'umat4' );\nexport const bmat4 = new ConvertType( 'bmat4' );\n\nexport const string = ( value = '' ) => nodeObject( new ConstNode( value, 'string' ) );\nexport const arrayBuffer = ( value ) => nodeObject( new ConstNode( value, 'ArrayBuffer' ) );\n\naddNodeElement( 'color', color );\naddNodeElement( 'float', float );\naddNodeElement( 'int', int );\naddNodeElement( 'uint', uint );\naddNodeElement( 'bool', bool );\naddNodeElement( 'vec2', vec2 );\naddNodeElement( 'ivec2', ivec2 );\naddNodeElement( 'uvec2', uvec2 );\naddNodeElement( 'bvec2', bvec2 );\naddNodeElement( 'vec3', vec3 );\naddNodeElement( 'ivec3', ivec3 );\naddNodeElement( 'uvec3', uvec3 );\naddNodeElement( 'bvec3', bvec3 );\naddNodeElement( 'vec4', vec4 );\naddNodeElement( 'ivec4', ivec4 );\naddNodeElement( 'uvec4', uvec4 );\naddNodeElement( 'bvec4', bvec4 );\naddNodeElement( 'mat2', mat2 );\naddNodeElement( 'imat2', imat2 );\naddNodeElement( 'umat2', umat2 );\naddNodeElement( 'bmat2', bmat2 );\naddNodeElement( 'mat3', mat3 );\naddNodeElement( 'imat3', imat3 );\naddNodeElement( 'umat3', umat3 );\naddNodeElement( 'bmat3', bmat3 );\naddNodeElement( 'mat4', mat4 );\naddNodeElement( 'imat4', imat4 );\naddNodeElement( 'umat4', umat4 );\naddNodeElement( 'bmat4', bmat4 );\naddNodeElement( 'string', string );\naddNodeElement( 'arrayBuffer', arrayBuffer );\n\n// basic nodes\n// HACK - we cannot export them from the corresponding files because of the cyclic dependency\nexport const element = nodeProxy( ArrayElementNode );\nexport const convert = ( node, types ) => nodeObject( new ConvertNode( nodeObject( node ), types ) );\nexport const split = ( node, channels ) => nodeObject( new SplitNode( nodeObject( node ), channels ) );\n\naddNodeElement( 'element', element );\naddNodeElement( 'convert', convert );\n","import Node, { addNodeClass } from '../core/Node.js';\n\nclass ArrayElementNode extends Node { // @TODO: If extending from TempNode it breaks webgpu_compute\n\n\tconstructor( node, indexNode ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.indexNode = indexNode;\n\n\t\tthis.isArrayElementNode = true;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeSnippet = this.node.build( builder );\n\t\tconst indexSnippet = this.indexNode.build( builder, 'uint' );\n\n\t\treturn `${nodeSnippet}[ ${indexSnippet} ]`;\n\n\t}\n\n}\n\nexport default ArrayElementNode;\n\naddNodeClass( 'ArrayElementNode', ArrayElementNode );\n","import Node, { addNodeClass } from '../core/Node.js';\n\nclass ConvertNode extends Node {\n\n\tconstructor( node, convertTo ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.convertTo = convertTo;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst requestType = this.node.getNodeType( builder );\n\n\t\tlet convertTo = null;\n\n\t\tfor ( const overloadingType of this.convertTo.split( '|' ) ) {\n\n\t\t\tif ( convertTo === null || builder.getTypeLength( requestType ) === builder.getTypeLength( overloadingType ) ) {\n\n\t\t\t\tconvertTo = overloadingType;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn convertTo;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.convertTo = this.convertTo;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.convertTo = data.convertTo;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst node = this.node;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst snippet = node.build( builder, type );\n\n\t\treturn builder.format( snippet, type, output );\n\n\t}\n\n}\n\nexport default ConvertNode;\n\naddNodeClass( 'ConvertNode', ConvertNode );\n","import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\n\nclass JoinNode extends TempNode {\n\n\tconstructor( nodes = [], nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.nodes = nodes;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tif ( this.nodeType !== null ) {\n\n\t\t\treturn builder.getVectorType( this.nodeType );\n\n\t\t}\n\n\t\treturn builder.getTypeFromLength( this.nodes.reduce( ( count, cur ) => count + builder.getTypeLength( cur.getNodeType( builder ) ), 0 ) );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst nodes = this.nodes;\n\n\t\tconst primitiveType = builder.getComponentType( type );\n\n\t\tconst snippetValues = [];\n\n\t\tfor ( const input of nodes ) {\n\n\t\t\tlet inputSnippet = input.build( builder );\n\n\t\t\tconst inputPrimitiveType = builder.getComponentType( input.getNodeType( builder ) );\n\n\t\t\tif ( inputPrimitiveType !== primitiveType ) {\n\n\t\t\t\tinputSnippet = builder.format( inputSnippet, inputPrimitiveType, primitiveType );\n\n\t\t\t}\n\n\t\t\tsnippetValues.push( inputSnippet );\n\n\t\t}\n\n\t\tconst snippet = `${ builder.getType( type ) }( ${ snippetValues.join( ', ' ) } )`;\n\n\t\treturn builder.format( snippet, type, output );\n\n\t}\n\n}\n\nexport default JoinNode;\n\naddNodeClass( 'JoinNode', JoinNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { vectorComponents } from '../core/constants.js';\n\nconst stringVectorComponents = vectorComponents.join( '' );\n\nclass SplitNode extends Node {\n\n\tconstructor( node, components = 'x' ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.components = components;\n\n\t\tthis.isSplitNode = true;\n\n\t}\n\n\tgetVectorLength() {\n\n\t\tlet vectorLength = this.components.length;\n\n\t\tfor ( const c of this.components ) {\n\n\t\t\tvectorLength = Math.max( vectorComponents.indexOf( c ) + 1, vectorLength );\n\n\t\t}\n\n\t\treturn vectorLength;\n\n\t}\n\n\tgetComponentType( builder ) {\n\n\t\treturn builder.getComponentType( this.node.getNodeType( builder ) );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn builder.getTypeFromLength( this.components.length, this.getComponentType( builder ) );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst node = this.node;\n\t\tconst nodeTypeLength = builder.getTypeLength( node.getNodeType( builder ) );\n\n\t\tlet snippet = null;\n\n\t\tif ( nodeTypeLength > 1 ) {\n\n\t\t\tlet type = null;\n\n\t\t\tconst componentsLength = this.getVectorLength();\n\n\t\t\tif ( componentsLength >= nodeTypeLength ) {\n\n\t\t\t\t// needed expand the input node\n\n\t\t\t\ttype = builder.getTypeFromLength( this.getVectorLength(), this.getComponentType( builder ) );\n\n\t\t\t}\n\n\t\t\tconst nodeSnippet = node.build( builder, type );\n\n\t\t\tif ( this.components.length === nodeTypeLength && this.components === stringVectorComponents.slice( 0, this.components.length ) ) {\n\n\t\t\t\t// unnecessary swizzle\n\n\t\t\t\tsnippet = builder.format( nodeSnippet, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tsnippet = builder.format( `${nodeSnippet}.${this.components}`, this.getNodeType( builder ), output );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// ignore .components if .node returns float/integer\n\n\t\t\tsnippet = node.build( builder, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.components = this.components;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.components = data.components;\n\n\t}\n\n}\n\nexport default SplitNode;\n\naddNodeClass( 'SplitNode', SplitNode );\n","import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { vectorComponents } from '../core/constants.js';\n\nclass SetNode extends TempNode {\n\n\tconstructor( sourceNode, components, targetNode ) {\n\n\t\tsuper();\n\n\t\tthis.sourceNode = sourceNode;\n\t\tthis.components = components;\n\t\tthis.targetNode = targetNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.sourceNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { sourceNode, components, targetNode } = this;\n\n\t\tconst sourceType = this.getNodeType( builder );\n\t\tconst targetType = builder.getTypeFromLength( components.length );\n\n\t\tconst targetSnippet = targetNode.build( builder, targetType );\n\t\tconst sourceSnippet = sourceNode.build( builder, sourceType );\n\n\t\tconst length = builder.getTypeLength( sourceType );\n\t\tconst snippetValues = [];\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst component = vectorComponents[ i ];\n\n\t\t\tif ( component === components[ 0 ] ) {\n\n\t\t\t\tsnippetValues.push( targetSnippet );\n\n\t\t\t\ti += components.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tsnippetValues.push( sourceSnippet + '.' + component );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn `${ builder.getType( sourceType ) }( ${ snippetValues.join( ', ' ) } )`;\n\n\t}\n\n}\n\nexport default SetNode;\n\naddNodeClass( 'SetNode', SetNode );\n","import InputNode from './InputNode.js';\nimport { addNodeClass } from './Node.js';\n\nclass ConstNode extends InputNode {\n\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( value, nodeType );\n\n\t\tthis.isConstNode = true;\n\n\t}\n\n\tgenerateConst( builder ) {\n\n\t\treturn builder.generateConst( this.getNodeType( builder ), this.value );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\treturn builder.format( this.generateConst( builder ), type, output );\n\n\t}\n\n}\n\nexport default ConstNode;\n\naddNodeClass( 'ConstNode', ConstNode );\n","import Node, { addNodeClass } from './Node.js';\nimport { getValueType, getValueFromType, arrayBufferToBase64 } from './NodeUtils.js';\n\nclass InputNode extends Node {\n\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.isInputNode = true;\n\n\t\tthis.value = value;\n\t\tthis.precision = null;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\tif ( this.nodeType === null ) {\n\n\t\t\treturn getValueType( this.value );\n\n\t\t}\n\n\t\treturn this.nodeType;\n\n\t}\n\n\tgetInputType( builder ) {\n\n\t\treturn this.getNodeType( builder );\n\n\t}\n\n\tsetPrecision( precision ) {\n\n\t\tthis.precision = precision;\n\n\t\treturn this;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.value = this.value;\n\n\t\tif ( this.value && this.value.toArray ) data.value = this.value.toArray();\n\n\t\tdata.valueType = getValueType( this.value );\n\t\tdata.nodeType = this.nodeType;\n\n\t\tif ( data.valueType === 'ArrayBuffer' ) data.value = arrayBufferToBase64( data.value );\n\n\t\tdata.precision = this.precision;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.nodeType = data.nodeType;\n\t\tthis.value = Array.isArray( data.value ) ? getValueFromType( data.valueType, ...data.value ) : data.value;\n\n\t\tthis.precision = data.precision || null;\n\n\t\tif ( this.value && this.value.fromArray ) this.value = this.value.fromArray( data.value );\n\n\t}\n\n\tgenerate( /*builder, output*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nexport default InputNode;\n\naddNodeClass( 'InputNode', InputNode );\n","import Node, { addNodeClass } from './Node.js';\nimport { varying } from './VaryingNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass AttributeNode extends Node {\n\n\tconstructor( attributeName, nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis._attributeName = attributeName;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.getAttributeName( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tlet nodeType = super.getNodeType( builder );\n\n\t\tif ( nodeType === null ) {\n\n\t\t\tconst attributeName = this.getAttributeName( builder );\n\n\t\t\tif ( builder.hasGeometryAttribute( attributeName ) ) {\n\n\t\t\t\tconst attribute = builder.geometry.getAttribute( attributeName );\n\n\t\t\t\tnodeType = builder.getTypeFromAttribute( attribute );\n\n\t\t\t} else {\n\n\t\t\t\tnodeType = 'float';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn nodeType;\n\n\t}\n\n\tsetAttributeName( attributeName ) {\n\n\t\tthis._attributeName = attributeName;\n\n\t\treturn this;\n\n\t}\n\n\tgetAttributeName( /*builder*/ ) {\n\n\t\treturn this._attributeName;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst attributeName = this.getAttributeName( builder );\n\t\tconst nodeType = this.getNodeType( builder );\n\t\tconst geometryAttribute = builder.hasGeometryAttribute( attributeName );\n\n\t\tif ( geometryAttribute === true ) {\n\n\t\t\tconst attribute = builder.geometry.getAttribute( attributeName );\n\t\t\tconst attributeType = builder.getTypeFromAttribute( attribute );\n\n\t\t\tconst nodeAttribute = builder.getAttribute( attributeName, attributeType );\n\n\t\t\tif ( builder.shaderStage === 'vertex' ) {\n\n\t\t\t\treturn builder.format( nodeAttribute.name, attributeType, nodeType );\n\n\t\t\t} else {\n\n\t\t\t\tconst nodeVarying = varying( this );\n\n\t\t\t\treturn nodeVarying.build( builder, nodeType );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( `AttributeNode: Vertex attribute \"${ attributeName }\" not found on geometry.` );\n\n\t\t\treturn builder.generateConst( nodeType );\n\n\t\t}\n\n\t}\n\n}\n\nexport default AttributeNode;\n\nexport const attribute = ( name, nodeType ) => nodeObject( new AttributeNode( name, nodeType ) );\n\naddNodeClass( 'AttributeNode', AttributeNode );\n","import Node, { addNodeClass } from './Node.js';\nimport { NodeShaderStage } from './constants.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass VaryingNode extends Node {\n\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.name = name;\n\n\t\tthis.isVaryingNode = true;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\t// VaryingNode is auto type\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { name, node } = this;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst nodeVarying = builder.getVaryingFromNode( this, name, type );\n\n\t\t// this property can be used to check if the varying can be optimized for a var\n\t\tnodeVarying.needsInterpolation || ( nodeVarying.needsInterpolation = ( builder.shaderStage === 'fragment' ) );\n\n\t\tconst propertyName = builder.getPropertyName( nodeVarying, NodeShaderStage.VERTEX );\n\n\t\t// force node run in vertex stage\n\t\tbuilder.flowNodeFromShaderStage( NodeShaderStage.VERTEX, node, type, propertyName );\n\n\t\treturn builder.getPropertyName( nodeVarying );\n\n\t}\n\n}\n\nexport default VaryingNode;\n\nexport const varying = nodeProxy( VaryingNode );\n\naddNodeElement( 'varying', varying );\n\naddNodeClass( 'VaryingNode', VaryingNode );\n","import Node, { addNodeClass } from './Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass BypassNode extends Node {\n\n\tconstructor( returnNode, callNode ) {\n\n\t\tsuper();\n\n\t\tthis.isBypassNode = true;\n\n\t\tthis.outputNode = returnNode;\n\t\tthis.callNode = callNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.outputNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst snippet = this.callNode.build( builder, 'void' );\n\n\t\tif ( snippet !== '' ) {\n\n\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t}\n\n\t\treturn this.outputNode.build( builder );\n\n\t}\n\n}\n\nexport default BypassNode;\n\nexport const bypass = nodeProxy( BypassNode );\n\naddNodeElement( 'bypass', bypass );\n\naddNodeClass( 'BypassNode', BypassNode );\n","import Node, { addNodeClass } from './Node.js';\nimport NodeCache from './NodeCache.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass CacheNode extends Node {\n\n\tconstructor( node, cache = new NodeCache() ) {\n\n\t\tsuper();\n\n\t\tthis.isCacheNode = true;\n\n\t\tthis.node = node;\n\t\tthis.cache = cache;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tbuild( builder, ...params ) {\n\n\t\tconst previousCache = builder.getCache();\n\t\tconst cache = this.cache || builder.globalCache;\n\n\t\tbuilder.setCache( cache );\n\n\t\tconst data = this.node.build( builder, ...params );\n\n\t\tbuilder.setCache( previousCache );\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport default CacheNode;\n\nexport const cache = nodeProxy( CacheNode );\nexport const globalCache = ( node ) => cache( node, null );\n\naddNodeElement( 'cache', cache );\naddNodeElement( 'globalCache', globalCache );\n\naddNodeClass( 'CacheNode', CacheNode );\n","let id = 0;\n\nclass NodeCache {\n\n\tconstructor() {\n\n\t\tthis.id = id ++;\n\t\tthis.nodesData = new WeakMap();\n\n\t}\n\n\tgetNodeData( node ) {\n\n\t\treturn this.nodesData.get( node );\n\n\t}\n\n\tsetNodeData( node, data ) {\n\n\t\tthis.nodesData.set( node, data );\n\n\t}\n\n}\n\nexport default NodeCache;\n","import Node, { addNodeClass } from './Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass ContextNode extends Node {\n\n\tconstructor( node, context = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isContextNode = true;\n\n\t\tthis.node = node;\n\t\tthis.context = context;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\n\n\t\tconst node = this.node.build( builder );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn node;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.context } );\n\n\t\tconst snippet = this.node.build( builder, output );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn snippet;\n\n\t}\n\n}\n\nexport default ContextNode;\n\nexport const context = nodeProxy( ContextNode );\nexport const label = ( node, name ) => context( node, { label: name } );\n\naddNodeElement( 'context', context );\naddNodeElement( 'label', label );\n\naddNodeClass( 'ContextNode', ContextNode );\n","import Node, { addNodeClass } from './Node.js';\nimport { varying } from './VaryingNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass IndexNode extends Node {\n\n\tconstructor( scope ) {\n\n\t\tsuper( 'uint' );\n\n\t\tthis.scope = scope;\n\n\t\tthis.isInstanceIndexNode = true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeType = this.getNodeType( builder );\n\t\tconst scope = this.scope;\n\n\t\tlet propertyName;\n\n\t\tif ( scope === IndexNode.VERTEX ) {\n\n\t\t\tpropertyName = builder.getVertexIndex();\n\n\t\t} else if ( scope === IndexNode.INSTANCE ) {\n\n\t\t\tpropertyName = builder.getInstanceIndex();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.IndexNode: Unknown scope: ' + scope );\n\n\t\t}\n\n\t\tlet output;\n\n\t\tif ( builder.shaderStage === 'vertex' || builder.shaderStage === 'compute' ) {\n\n\t\t\toutput = propertyName;\n\n\t\t} else {\n\n\t\t\tconst nodeVarying = varying( this );\n\n\t\t\toutput = nodeVarying.build( builder, nodeType );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nIndexNode.VERTEX = 'vertex';\nIndexNode.INSTANCE = 'instance';\n\nexport default IndexNode;\n\nexport const vertexIndex = nodeImmutable( IndexNode, IndexNode.VERTEX );\nexport const instanceIndex = nodeImmutable( IndexNode, IndexNode.INSTANCE );\n\naddNodeClass( 'IndexNode', IndexNode );\n","class LightingModel {\n\n\tstart( /*input, stack, builder*/ ) { }\n\n\tfinish( /*input, stack, builder*/ ) { }\n\n\tdirect( /*input, stack, builder*/ ) { }\n\n\tindirectDiffuse( /*input, stack, builder*/ ) { }\n\n\tindirectSpecular( /*input, stack, builder*/ ) { }\n\n\tambientOcclusion( /*input, stack, builder*/ ) { }\n\n}\n\nexport default LightingModel;\n","import Node, { addNodeClass } from './Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass VarNode extends Node {\n\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.name = name;\n\n\t\tthis.isVarNode = true;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { node, name } = this;\n\n\t\tconst nodeVar = builder.getVarFromNode( this, name, builder.getVectorType( this.getNodeType( builder ) ) );\n\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\tconst snippet = node.build( builder, nodeVar.type );\n\n\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}` );\n\n\t\treturn propertyName;\n\n\t}\n\n}\n\nexport default VarNode;\n\nexport const temp = nodeProxy( VarNode );\n\naddNodeElement( 'temp', temp ); // @TODO: Will be removed in the future\naddNodeElement( 'toVar', ( ...params ) => temp( ...params ).append() );\n\naddNodeClass( 'VarNode', VarNode );\n","class NodeAttribute {\n\n\tconstructor( name, type, node = null ) {\n\n\t\tthis.isNodeAttribute = true;\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.node = node;\n\n\t}\n\n}\n\nexport default NodeAttribute;\n","import NodeUniform from './NodeUniform.js';\nimport NodeAttribute from './NodeAttribute.js';\nimport NodeVarying from './NodeVarying.js';\nimport NodeVar from './NodeVar.js';\nimport NodeCode from './NodeCode.js';\nimport NodeKeywords from './NodeKeywords.js';\nimport NodeCache from './NodeCache.js';\nimport ParameterNode from './ParameterNode.js';\nimport FunctionNode from '../code/FunctionNode.js';\nimport { createNodeMaterialFromType, default as NodeMaterial } from '../materials/NodeMaterial.js';\nimport { NodeUpdateType, defaultBuildStages, shaderStages } from './constants.js';\n\nimport {\n\tFloatNodeUniform, Vector2NodeUniform, Vector3NodeUniform, Vector4NodeUniform,\n\tColorNodeUniform, Matrix3NodeUniform, Matrix4NodeUniform\n} from '../../renderers/common/nodes/NodeUniform.js';\n\nimport { REVISION, RenderTarget, Color, Vector2, Vector3, Vector4, IntType, UnsignedIntType, Float16BufferAttribute } from 'three';\n\nimport { stack } from './StackNode.js';\nimport { getCurrentStack, setCurrentStack } from '../shadernode/ShaderNode.js';\n\nimport CubeRenderTarget from '../../renderers/common/CubeRenderTarget.js';\nimport ChainMap from '../../renderers/common/ChainMap.js';\n\nimport PMREMGenerator from '../../renderers/common/extras/PMREMGenerator.js';\n\nconst uniformsGroupCache = new ChainMap();\n\nconst typeFromLength = new Map( [\n\t[ 2, 'vec2' ],\n\t[ 3, 'vec3' ],\n\t[ 4, 'vec4' ],\n\t[ 9, 'mat3' ],\n\t[ 16, 'mat4' ]\n] );\n\nconst typeFromArray = new Map( [\n\t[ Int8Array, 'int' ],\n\t[ Int16Array, 'int' ],\n\t[ Int32Array, 'int' ],\n\t[ Uint8Array, 'uint' ],\n\t[ Uint16Array, 'uint' ],\n\t[ Uint32Array, 'uint' ],\n\t[ Float32Array, 'float' ]\n] );\n\nconst toFloat = ( value ) => {\n\n\tvalue = Number( value );\n\n\treturn value + ( value % 1 ? '' : '.0' );\n\n};\n\nclass NodeBuilder {\n\n\tconstructor( object, renderer, parser, scene = null, material = null ) {\n\n\t\tthis.object = object;\n\t\tthis.material = material || ( object && object.material ) || null;\n\t\tthis.geometry = ( object && object.geometry ) || null;\n\t\tthis.renderer = renderer;\n\t\tthis.parser = parser;\n\t\tthis.scene = scene;\n\n\t\tthis.nodes = [];\n\t\tthis.updateNodes = [];\n\t\tthis.updateBeforeNodes = [];\n\t\tthis.hashNodes = {};\n\n\t\tthis.lightsNode = null;\n\t\tthis.environmentNode = null;\n\t\tthis.fogNode = null;\n\t\tthis.toneMappingNode = null;\n\n\t\tthis.clippingContext = null;\n\n\t\tthis.vertexShader = null;\n\t\tthis.fragmentShader = null;\n\t\tthis.computeShader = null;\n\n\t\tthis.flowNodes = { vertex: [], fragment: [], compute: [] };\n\t\tthis.flowCode = { vertex: '', fragment: '', compute: [] };\n\t\tthis.uniforms = { vertex: [], fragment: [], compute: [], index: 0 };\n\t\tthis.structs = { vertex: [], fragment: [], compute: [], index: 0 };\n\t\tthis.bindings = { vertex: [], fragment: [], compute: [] };\n\t\tthis.bindingsOffset = { vertex: 0, fragment: 0, compute: 0 };\n\t\tthis.bindingsArray = null;\n\t\tthis.attributes = [];\n\t\tthis.bufferAttributes = [];\n\t\tthis.varyings = [];\n\t\tthis.codes = {};\n\t\tthis.vars = {};\n\t\tthis.flow = { code: '' };\n\t\tthis.chaining = [];\n\t\tthis.stack = stack();\n\t\tthis.stacks = [];\n\t\tthis.tab = '\\t';\n\n\t\tthis.currentFunctionNode = null;\n\n\t\tthis.context = {\n\t\t\tkeywords: new NodeKeywords(),\n\t\t\tmaterial: this.material\n\t\t};\n\n\t\tthis.cache = new NodeCache();\n\t\tthis.globalCache = this.cache;\n\n\t\tthis.flowsData = new WeakMap();\n\n\t\tthis.shaderStage = null;\n\t\tthis.buildStage = null;\n\n\t}\n\n\tcreateRenderTarget( width, height, options ) {\n\n\t\treturn new RenderTarget( width, height, options );\n\n\t}\n\n\tcreateCubeRenderTarget( size, options ) {\n\n\t\treturn new CubeRenderTarget( size, options );\n\n\t}\n\n\tcreatePMREMGenerator() {\n\n\t\t// TODO: Move Materials.js to outside of the Nodes.js in order to remove this function and improve tree-shaking support\n\n\t\treturn new PMREMGenerator( this.renderer );\n\n\t}\n\n\tincludes( node ) {\n\n\t\treturn this.nodes.includes( node );\n\n\t}\n\n\t_getSharedBindings( bindings ) {\n\n\t\tconst shared = [];\n\n\t\tfor ( const binding of bindings ) {\n\n\t\t\tif ( binding.shared === true ) {\n\n\t\t\t\t// nodes is the chainmap key\n\t\t\t\tconst nodes = binding.getNodes();\n\n\t\t\t\tlet sharedBinding = uniformsGroupCache.get( nodes );\n\n\t\t\t\tif ( sharedBinding === undefined ) {\n\n\t\t\t\t\tuniformsGroupCache.set( nodes, binding );\n\n\t\t\t\t\tsharedBinding = binding;\n\n\t\t\t\t}\n\n\t\t\t\tshared.push( sharedBinding );\n\n\t\t\t} else {\n\n\t\t\t\tshared.push( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shared;\n\n\t}\n\n\tgetBindings() {\n\n\t\tlet bindingsArray = this.bindingsArray;\n\n\t\tif ( bindingsArray === null ) {\n\n\t\t\tconst bindings = this.bindings;\n\n\t\t\tthis.bindingsArray = bindingsArray = this._getSharedBindings( ( this.material !== null ) ? [ ...bindings.vertex, ...bindings.fragment ] : bindings.compute );\n\n\t\t}\n\n\t\treturn bindingsArray;\n\n\t}\n\n\tsetHashNode( node, hash ) {\n\n\t\tthis.hashNodes[ hash ] = node;\n\n\t}\n\n\taddNode( node ) {\n\n\t\tif ( this.nodes.includes( node ) === false ) {\n\n\t\t\tthis.nodes.push( node );\n\n\t\t\tthis.setHashNode( node, node.getHash( this ) );\n\n\t\t}\n\n\t}\n\n\tbuildUpdateNodes() {\n\n\t\tfor ( const node of this.nodes ) {\n\n\t\t\tconst updateType = node.getUpdateType();\n\t\t\tconst updateBeforeType = node.getUpdateBeforeType();\n\n\t\t\tif ( updateType !== NodeUpdateType.NONE ) {\n\n\t\t\t\tthis.updateNodes.push( node.getSelf() );\n\n\t\t\t}\n\n\t\t\tif ( updateBeforeType !== NodeUpdateType.NONE ) {\n\n\t\t\t\tthis.updateBeforeNodes.push( node );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tget currentNode() {\n\n\t\treturn this.chaining[ this.chaining.length - 1 ];\n\n\t}\n\n\taddChain( node ) {\n\n\t\t/*\n\t\tif ( this.chaining.indexOf( node ) !== - 1 ) {\n\n\t\t\tconsole.warn( 'Recursive node: ', node );\n\n\t\t}\n\t\t*/\n\n\t\tthis.chaining.push( node );\n\n\t}\n\n\tremoveChain( node ) {\n\n\t\tconst lastChain = this.chaining.pop();\n\n\t\tif ( lastChain !== node ) {\n\n\t\t\tthrow new Error( 'NodeBuilder: Invalid node chaining!' );\n\n\t\t}\n\n\t}\n\n\tgetMethod( method ) {\n\n\t\treturn method;\n\n\t}\n\n\tgetNodeFromHash( hash ) {\n\n\t\treturn this.hashNodes[ hash ];\n\n\t}\n\n\taddFlow( shaderStage, node ) {\n\n\t\tthis.flowNodes[ shaderStage ].push( node );\n\n\t\treturn node;\n\n\t}\n\n\tsetContext( context ) {\n\n\t\tthis.context = context;\n\n\t}\n\n\tgetContext() {\n\n\t\treturn this.context;\n\n\t}\n\n\tsetCache( cache ) {\n\n\t\tthis.cache = cache;\n\n\t}\n\n\tgetCache() {\n\n\t\treturn this.cache;\n\n\t}\n\n\tisAvailable( /*name*/ ) {\n\n\t\treturn false;\n\n\t}\n\n\tgetVertexIndex() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetInstanceIndex() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetFrontFacing() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetFragCoord() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tisFlipY() {\n\n\t\treturn false;\n\n\t}\n\n\tgenerateTexture( /* texture, textureProperty, uvSnippet */ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgenerateTextureLod( /* texture, textureProperty, uvSnippet, levelSnippet */ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgenerateConst( type, value = null ) {\n\n\t\tif ( value === null ) {\n\n\t\t\tif ( type === 'float' || type === 'int' || type === 'uint' ) value = 0;\n\t\t\telse if ( type === 'bool' ) value = false;\n\t\t\telse if ( type === 'color' ) value = new Color();\n\t\t\telse if ( type === 'vec2' ) value = new Vector2();\n\t\t\telse if ( type === 'vec3' ) value = new Vector3();\n\t\t\telse if ( type === 'vec4' ) value = new Vector4();\n\n\t\t}\n\n\t\tif ( type === 'float' ) return toFloat( value );\n\t\tif ( type === 'int' ) return `${ Math.round( value ) }`;\n\t\tif ( type === 'uint' ) return value >= 0 ? `${ Math.round( value ) }u` : '0u';\n\t\tif ( type === 'bool' ) return value ? 'true' : 'false';\n\t\tif ( type === 'color' ) return `${ this.getType( 'vec3' ) }( ${ toFloat( value.r ) }, ${ toFloat( value.g ) }, ${ toFloat( value.b ) } )`;\n\n\t\tconst typeLength = this.getTypeLength( type );\n\n\t\tconst componentType = this.getComponentType( type );\n\n\t\tconst generateConst = value => this.generateConst( componentType, value );\n\n\t\tif ( typeLength === 2 ) {\n\n\t\t\treturn `${ this.getType( type ) }( ${ generateConst( value.x ) }, ${ generateConst( value.y ) } )`;\n\n\t\t} else if ( typeLength === 3 ) {\n\n\t\t\treturn `${ this.getType( type ) }( ${ generateConst( value.x ) }, ${ generateConst( value.y ) }, ${ generateConst( value.z ) } )`;\n\n\t\t} else if ( typeLength === 4 ) {\n\n\t\t\treturn `${ this.getType( type ) }( ${ generateConst( value.x ) }, ${ generateConst( value.y ) }, ${ generateConst( value.z ) }, ${ generateConst( value.w ) } )`;\n\n\t\t} else if ( typeLength > 4 && value && ( value.isMatrix3 || value.isMatrix4 ) ) {\n\n\t\t\treturn `${ this.getType( type ) }( ${ value.elements.map( generateConst ).join( ', ' ) } )`;\n\n\t\t} else if ( typeLength > 4 ) {\n\n\t\t\treturn `${ this.getType( type ) }()`;\n\n\t\t}\n\n\t\tthrow new Error( `NodeBuilder: Type '${type}' not found in generate constant attempt.` );\n\n\t}\n\n\tgetType( type ) {\n\n\t\tif ( type === 'color' ) return 'vec3';\n\n\t\treturn type;\n\n\t}\n\n\tgenerateMethod( method ) {\n\n\t\treturn method;\n\n\t}\n\n\thasGeometryAttribute( name ) {\n\n\t\treturn this.geometry && this.geometry.getAttribute( name ) !== undefined;\n\n\t}\n\n\tgetAttribute( name, type ) {\n\n\t\tconst attributes = this.attributes;\n\n\t\t// find attribute\n\n\t\tfor ( const attribute of attributes ) {\n\n\t\t\tif ( attribute.name === name ) {\n\n\t\t\t\treturn attribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create a new if no exist\n\n\t\tconst attribute = new NodeAttribute( name, type );\n\n\t\tattributes.push( attribute );\n\n\t\treturn attribute;\n\n\t}\n\n\tgetPropertyName( node/*, shaderStage*/ ) {\n\n\t\treturn node.name;\n\n\t}\n\n\tisVector( type ) {\n\n\t\treturn /vec\\d/.test( type );\n\n\t}\n\n\tisMatrix( type ) {\n\n\t\treturn /mat\\d/.test( type );\n\n\t}\n\n\tisReference( type ) {\n\n\t\treturn type === 'void' || type === 'property' || type === 'sampler' || type === 'texture' || type === 'cubeTexture' || type === 'storageTexture';\n\n\t}\n\n\tneedsColorSpaceToLinear( /*texture*/ ) {\n\n\t\treturn false;\n\n\t}\n\n\tgetComponentTypeFromTexture( texture ) {\n\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isDataTexture ) {\n\n\t\t\tif ( type === IntType ) return 'int';\n\t\t\tif ( type === UnsignedIntType ) return 'uint';\n\n\t\t}\n\n\t\treturn 'float';\n\n\t}\n\n\tgetComponentType( type ) {\n\n\t\ttype = this.getVectorType( type );\n\n\t\tif ( type === 'float' || type === 'bool' || type === 'int' || type === 'uint' ) return type;\n\n\t\tconst componentType = /(b|i|u|)(vec|mat)([2-4])/.exec( type );\n\n\t\tif ( componentType === null ) return null;\n\n\t\tif ( componentType[ 1 ] === 'b' ) return 'bool';\n\t\tif ( componentType[ 1 ] === 'i' ) return 'int';\n\t\tif ( componentType[ 1 ] === 'u' ) return 'uint';\n\n\t\treturn 'float';\n\n\t}\n\n\tgetVectorType( type ) {\n\n\t\tif ( type === 'color' ) return 'vec3';\n\t\tif ( type === 'texture' || type === 'cubeTexture' || type === 'storageTexture' ) return 'vec4';\n\n\t\treturn type;\n\n\t}\n\n\tgetTypeFromLength( length, componentType = 'float' ) {\n\n\t\tif ( length === 1 ) return componentType;\n\n\t\tconst baseType = typeFromLength.get( length );\n\t\tconst prefix = componentType === 'float' ? '' : componentType[ 0 ];\n\n\t\treturn prefix + baseType;\n\n\t}\n\n\tgetTypeFromArray( array ) {\n\n\t\treturn typeFromArray.get( array.constructor );\n\n\t}\n\n\tgetTypeFromAttribute( attribute ) {\n\n\t\tlet dataAttribute = attribute;\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) dataAttribute = attribute.data;\n\n\t\tconst array = dataAttribute.array;\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst normalized = attribute.normalized;\n\n\t\tlet arrayType;\n\n\t\tif ( ! ( attribute instanceof Float16BufferAttribute ) && normalized !== true ) {\n\n\t\t\tarrayType = this.getTypeFromArray( array );\n\n\t\t}\n\n\t\treturn this.getTypeFromLength( itemSize, arrayType );\n\n\t}\n\n\tgetTypeLength( type ) {\n\n\t\tconst vecType = this.getVectorType( type );\n\t\tconst vecNum = /vec([2-4])/.exec( vecType );\n\n\t\tif ( vecNum !== null ) return Number( vecNum[ 1 ] );\n\t\tif ( vecType === 'float' || vecType === 'bool' || vecType === 'int' || vecType === 'uint' ) return 1;\n\t\tif ( /mat2/.test( type ) === true ) return 4;\n\t\tif ( /mat3/.test( type ) === true ) return 9;\n\t\tif ( /mat4/.test( type ) === true ) return 16;\n\n\t\treturn 0;\n\n\t}\n\n\tgetVectorFromMatrix( type ) {\n\n\t\treturn type.replace( 'mat', 'vec' );\n\n\t}\n\n\tchangeComponentType( type, newComponentType ) {\n\n\t\treturn this.getTypeFromLength( this.getTypeLength( type ), newComponentType );\n\n\t}\n\n\tgetIntegerType( type ) {\n\n\t\tconst componentType = this.getComponentType( type );\n\n\t\tif ( componentType === 'int' || componentType === 'uint' ) return type;\n\n\t\treturn this.changeComponentType( type, 'int' );\n\n\t}\n\n\taddStack() {\n\n\t\tthis.stack = stack( this.stack );\n\n\t\tthis.stacks.push( getCurrentStack() || this.stack );\n\t\tsetCurrentStack( this.stack );\n\n\t\treturn this.stack;\n\n\t}\n\n\tremoveStack() {\n\n\t\tconst lastStack = this.stack;\n\t\tthis.stack = lastStack.parent;\n\n\t\tsetCurrentStack( this.stacks.pop() );\n\n\t\treturn lastStack;\n\n\t}\n\n\tgetDataFromNode( node, shaderStage = this.shaderStage, cache = null ) {\n\n\t\tcache = cache === null ? ( node.isGlobal( this ) ? this.globalCache : this.cache ) : cache;\n\n\t\tlet nodeData = cache.getNodeData( node );\n\n\t\tif ( nodeData === undefined ) {\n\n\t\t\tnodeData = {};\n\n\t\t\tcache.setNodeData( node, nodeData );\n\n\t\t}\n\n\t\tif ( nodeData[ shaderStage ] === undefined ) nodeData[ shaderStage ] = {};\n\n\t\treturn nodeData[ shaderStage ];\n\n\t}\n\n\tgetNodeProperties( node, shaderStage = 'any' ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\n\n\t\treturn nodeData.properties || ( nodeData.properties = { outputNode: null } );\n\n\t}\n\n\tgetBufferAttributeFromNode( node, type ) {\n\n\t\tconst nodeData = this.getDataFromNode( node );\n\n\t\tlet bufferAttribute = nodeData.bufferAttribute;\n\n\t\tif ( bufferAttribute === undefined ) {\n\n\t\t\tconst index = this.uniforms.index ++;\n\n\t\t\tbufferAttribute = new NodeAttribute( 'nodeAttribute' + index, type, node );\n\n\t\t\tthis.bufferAttributes.push( bufferAttribute );\n\n\t\t\tnodeData.bufferAttribute = bufferAttribute;\n\n\t\t}\n\n\t\treturn bufferAttribute;\n\n\t}\n\n\tgetStructTypeFromNode( node, shaderStage = this.shaderStage ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\n\n\t\tif ( nodeData.structType === undefined ) {\n\n\t\t\tconst index = this.structs.index ++;\n\n\t\t\tnode.name = `StructType${ index }`;\n\t\t\tthis.structs[ shaderStage ].push( node );\n\n\t\t\tnodeData.structType = node;\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\tgetUniformFromNode( node, type, shaderStage = this.shaderStage, name = null ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage, this.globalCache );\n\n\t\tlet nodeUniform = nodeData.uniform;\n\n\t\tif ( nodeUniform === undefined ) {\n\n\t\t\tconst index = this.uniforms.index ++;\n\n\t\t\tnodeUniform = new NodeUniform( name || ( 'nodeUniform' + index ), type, node );\n\n\t\t\tthis.uniforms[ shaderStage ].push( nodeUniform );\n\n\t\t\tnodeData.uniform = nodeUniform;\n\n\t\t}\n\n\t\treturn nodeUniform;\n\n\t}\n\n\tgetVarFromNode( node, name = null, type = node.getNodeType( this ), shaderStage = this.shaderStage ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, shaderStage );\n\n\t\tlet nodeVar = nodeData.variable;\n\n\t\tif ( nodeVar === undefined ) {\n\n\t\t\tconst vars = this.vars[ shaderStage ] || ( this.vars[ shaderStage ] = [] );\n\n\t\t\tif ( name === null ) name = 'nodeVar' + vars.length;\n\n\t\t\tnodeVar = new NodeVar( name, type );\n\n\t\t\tvars.push( nodeVar );\n\n\t\t\tnodeData.variable = nodeVar;\n\n\t\t}\n\n\t\treturn nodeVar;\n\n\t}\n\n\tgetVaryingFromNode( node, name = null, type = node.getNodeType( this ) ) {\n\n\t\tconst nodeData = this.getDataFromNode( node, 'any' );\n\n\t\tlet nodeVarying = nodeData.varying;\n\n\t\tif ( nodeVarying === undefined ) {\n\n\t\t\tconst varyings = this.varyings;\n\t\t\tconst index = varyings.length;\n\n\t\t\tif ( name === null ) name = 'nodeVarying' + index;\n\n\t\t\tnodeVarying = new NodeVarying( name, type );\n\n\t\t\tvaryings.push( nodeVarying );\n\n\t\t\tnodeData.varying = nodeVarying;\n\n\t\t}\n\n\t\treturn nodeVarying;\n\n\t}\n\n\tgetCodeFromNode( node, type, shaderStage = this.shaderStage ) {\n\n\t\tconst nodeData = this.getDataFromNode( node );\n\n\t\tlet nodeCode = nodeData.code;\n\n\t\tif ( nodeCode === undefined ) {\n\n\t\t\tconst codes = this.codes[ shaderStage ] || ( this.codes[ shaderStage ] = [] );\n\t\t\tconst index = codes.length;\n\n\t\t\tnodeCode = new NodeCode( 'nodeCode' + index, type );\n\n\t\t\tcodes.push( nodeCode );\n\n\t\t\tnodeData.code = nodeCode;\n\n\t\t}\n\n\t\treturn nodeCode;\n\n\t}\n\n\taddLineFlowCode( code ) {\n\n\t\tif ( code === '' ) return this;\n\n\t\tcode = this.tab + code;\n\n\t\tif ( ! /;\\s*$/.test( code ) ) {\n\n\t\t\tcode = code + ';\\n';\n\n\t\t}\n\n\t\tthis.flow.code += code;\n\n\t\treturn this;\n\n\t}\n\n\taddFlowCode( code ) {\n\n\t\tthis.flow.code += code;\n\n\t\treturn this;\n\n\t}\n\n\taddFlowTab() {\n\n\t\tthis.tab += '\\t';\n\n\t\treturn this;\n\n\t}\n\n\tremoveFlowTab() {\n\n\t\tthis.tab = this.tab.slice( 0, - 1 );\n\n\t\treturn this;\n\n\t}\n\n\tgetFlowData( node/*, shaderStage*/ ) {\n\n\t\treturn this.flowsData.get( node );\n\n\t}\n\n\tflowNode( node ) {\n\n\t\tconst output = node.getNodeType( this );\n\n\t\tconst flowData = this.flowChildNode( node, output );\n\n\t\tthis.flowsData.set( node, flowData );\n\n\t\treturn flowData;\n\n\t}\n\n\tbuildFunctionNode( shaderNode ) {\n\n\t\tconst fn = new FunctionNode();\n\n\t\tconst previous = this.currentFunctionNode;\n\n\t\tthis.currentFunctionNode = fn;\n\n\t\tfn.code = this.buildFunctionCode( shaderNode );\n\n\t\tthis.currentFunctionNode = previous;\n\n\t\treturn fn;\n\n\t}\n\n\tflowShaderNode( shaderNode ) {\n\n\t\tconst layout = shaderNode.layout;\n\n\t\tlet inputs;\n\n\t\tif ( shaderNode.isArrayInput ) {\n\n\t\t\tinputs = [];\n\n\t\t\tfor ( const input of layout.inputs ) {\n\n\t\t\t\tinputs.push( new ParameterNode( input.type, input.name ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinputs = {};\n\n\t\t\tfor ( const input of layout.inputs ) {\n\n\t\t\t\tinputs[ input.name ] = new ParameterNode( input.type, input.name );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tshaderNode.layout = null;\n\n\t\tconst callNode = shaderNode.call( inputs );\n\t\tconst flowData = this.flowStagesNode( callNode, layout.type );\n\n\t\tshaderNode.layout = layout;\n\n\t\treturn flowData;\n\n\t}\n\n\tflowStagesNode( node, output = null ) {\n\n\t\tconst previousFlow = this.flow;\n\t\tconst previousVars = this.vars;\n\t\tconst previousBuildStage = this.buildStage;\n\n\t\tconst flow = {\n\t\t\tcode: ''\n\t\t};\n\n\t\tthis.flow = flow;\n\t\tthis.vars = {};\n\n\t\tfor ( const buildStage of defaultBuildStages ) {\n\n\t\t\tthis.setBuildStage( buildStage );\n\n\t\t\tflow.result = node.build( this, output );\n\n\t\t}\n\n\t\tflow.vars = this.getVars( this.shaderStage );\n\n\t\tthis.flow = previousFlow;\n\t\tthis.vars = previousVars;\n\t\tthis.setBuildStage( previousBuildStage );\n\n\t\treturn flow;\n\n\t}\n\n\tgetFunctionOperator() {\n\n\t\treturn null;\n\n\t}\n\n\tflowChildNode( node, output = null ) {\n\n\t\tconst previousFlow = this.flow;\n\n\t\tconst flow = {\n\t\t\tcode: ''\n\t\t};\n\n\t\tthis.flow = flow;\n\n\t\tflow.result = node.build( this, output );\n\n\t\tthis.flow = previousFlow;\n\n\t\treturn flow;\n\n\t}\n\n\tflowNodeFromShaderStage( shaderStage, node, output = null, propertyName = null ) {\n\n\t\tconst previousShaderStage = this.shaderStage;\n\n\t\tthis.setShaderStage( shaderStage );\n\n\t\tconst flowData = this.flowChildNode( node, output );\n\n\t\tif ( propertyName !== null ) {\n\n\t\t\tflowData.code += `${ this.tab + propertyName } = ${ flowData.result };\\n`;\n\n\t\t}\n\n\t\tthis.flowCode[ shaderStage ] = this.flowCode[ shaderStage ] + flowData.code;\n\n\t\tthis.setShaderStage( previousShaderStage );\n\n\t\treturn flowData;\n\n\t}\n\n\tgetAttributesArray() {\n\n\t\treturn this.attributes.concat( this.bufferAttributes );\n\n\t}\n\n\tgetAttributes( /*shaderStage*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetVaryings( /*shaderStage*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetVar( type, name ) {\n\n\t\treturn `${ this.getType( type ) } ${ name }`;\n\n\t}\n\n\tgetVars( shaderStage ) {\n\n\t\tlet snippet = '';\n\n\t\tconst vars = this.vars[ shaderStage ];\n\n\t\tif ( vars !== undefined ) {\n\n\t\t\tfor ( const variable of vars ) {\n\n\t\t\t\tsnippet += `${ this.getVar( variable.type, variable.name ) }; `;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tgetUniforms( /*shaderStage*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tgetCodes( shaderStage ) {\n\n\t\tconst codes = this.codes[ shaderStage ];\n\n\t\tlet code = '';\n\n\t\tif ( codes !== undefined ) {\n\n\t\t\tfor ( const nodeCode of codes ) {\n\n\t\t\t\tcode += nodeCode.code + '\\n';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn code;\n\n\t}\n\n\tgetHash() {\n\n\t\treturn this.vertexShader + this.fragmentShader + this.computeShader;\n\n\t}\n\n\tsetShaderStage( shaderStage ) {\n\n\t\tthis.shaderStage = shaderStage;\n\n\t}\n\n\tgetShaderStage() {\n\n\t\treturn this.shaderStage;\n\n\t}\n\n\tsetBuildStage( buildStage ) {\n\n\t\tthis.buildStage = buildStage;\n\n\t}\n\n\tgetBuildStage() {\n\n\t\treturn this.buildStage;\n\n\t}\n\n\tbuildCode() {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\tbuild( convertMaterial = true ) {\n\n\t\tconst { object, material } = this;\n\n\t\tif ( convertMaterial ) {\n\n\t\t\tif ( material !== null ) {\n\n\t\t\t\tNodeMaterial.fromMaterial( material ).build( this );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFlow( 'compute', object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// setup() -> stage 1: create possible new nodes and returns an output reference node\n\t\t// analyze()   -> stage 2: analyze nodes to possible optimization and validation\n\t\t// generate()  -> stage 3: generate shader\n\n\t\tfor ( const buildStage of defaultBuildStages ) {\n\n\t\t\tthis.setBuildStage( buildStage );\n\n\t\t\tif ( this.context.vertex && this.context.vertex.isNode ) {\n\n\t\t\t\tthis.flowNodeFromShaderStage( 'vertex', this.context.vertex );\n\n\t\t\t}\n\n\t\t\tfor ( const shaderStage of shaderStages ) {\n\n\t\t\t\tthis.setShaderStage( shaderStage );\n\n\t\t\t\tconst flowNodes = this.flowNodes[ shaderStage ];\n\n\t\t\t\tfor ( const node of flowNodes ) {\n\n\t\t\t\t\tif ( buildStage === 'generate' ) {\n\n\t\t\t\t\t\tthis.flowNode( node );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode.build( this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setBuildStage( null );\n\t\tthis.setShaderStage( null );\n\n\t\t// stage 4: build code for a specific output\n\n\t\tthis.buildCode();\n\t\tthis.buildUpdateNodes();\n\n\t\treturn this;\n\n\t}\n\n\tgetNodeUniform( uniformNode, type ) {\n\n\t\tif ( type === 'float' ) return new FloatNodeUniform( uniformNode );\n\t\tif ( type === 'vec2' ) return new Vector2NodeUniform( uniformNode );\n\t\tif ( type === 'vec3' ) return new Vector3NodeUniform( uniformNode );\n\t\tif ( type === 'vec4' ) return new Vector4NodeUniform( uniformNode );\n\t\tif ( type === 'color' ) return new ColorNodeUniform( uniformNode );\n\t\tif ( type === 'mat3' ) return new Matrix3NodeUniform( uniformNode );\n\t\tif ( type === 'mat4' ) return new Matrix4NodeUniform( uniformNode );\n\n\t\tthrow new Error( `Uniform \"${type}\" not declared.` );\n\n\t}\n\n\tcreateNodeMaterial( type = 'NodeMaterial' ) {\n\n\t\t// TODO: Move Materials.js to outside of the Nodes.js in order to remove this function and improve tree-shaking support\n\n\t\treturn createNodeMaterialFromType( type );\n\n\t}\n\n\tformat( snippet, fromType, toType ) {\n\n\t\tfromType = this.getVectorType( fromType );\n\t\ttoType = this.getVectorType( toType );\n\n\t\tif ( fromType === toType || toType === null || this.isReference( toType ) ) {\n\n\t\t\treturn snippet;\n\n\t\t}\n\n\t\tconst fromTypeLength = this.getTypeLength( fromType );\n\t\tconst toTypeLength = this.getTypeLength( toType );\n\n\t\tif ( fromTypeLength > 4 ) { // fromType is matrix-like\n\n\t\t\t// @TODO: ignore for now\n\n\t\t\treturn snippet;\n\n\t\t}\n\n\t\tif ( toTypeLength > 4 || toTypeLength === 0 ) { // toType is matrix-like or unknown\n\n\t\t\t// @TODO: ignore for now\n\n\t\t\treturn snippet;\n\n\t\t}\n\n\t\tif ( fromTypeLength === toTypeLength ) {\n\n\t\t\treturn `${ this.getType( toType ) }( ${ snippet } )`;\n\n\t\t}\n\n\t\tif ( fromTypeLength > toTypeLength ) {\n\n\t\t\treturn this.format( `${ snippet }.${ 'xyz'.slice( 0, toTypeLength ) }`, this.getTypeFromLength( toTypeLength, this.getComponentType( fromType ) ), toType );\n\n\t\t}\n\n\t\tif ( toTypeLength === 4 && fromTypeLength > 1 ) { // toType is vec4-like\n\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec3' ) }, 1.0 )`;\n\n\t\t}\n\n\t\tif ( fromTypeLength === 2 ) { // fromType is vec2-like and toType is vec3-like\n\n\t\t\treturn `${ this.getType( toType ) }( ${ this.format( snippet, fromType, 'vec2' ) }, 0.0 )`;\n\n\t\t}\n\n\t\tif ( fromTypeLength === 1 && toTypeLength > 1 && fromType[ 0 ] !== toType[ 0 ] ) { // fromType is float-like\n\n\t\t\t// convert a number value to vector type, e.g:\n\t\t\t// vec3( 1u ) -> vec3( float( 1u ) )\n\n\t\t\tsnippet = `${ this.getType( this.getComponentType( toType ) ) }( ${ snippet } )`;\n\n\t\t}\n\n\t\treturn `${ this.getType( toType ) }( ${ snippet } )`; // fromType is float-like\n\n\t}\n\n\tgetSignature() {\n\n\t\treturn `// Three.js r${ REVISION } - NodeMaterial System\\n`;\n\n\t}\n\n}\n\nexport default NodeBuilder;\n","class NodeUniform {\n\n\tconstructor( name, type, node, needsUpdate = undefined ) {\n\n\t\tthis.isNodeUniform = true;\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.node = node.getSelf();\n\t\tthis.needsUpdate = needsUpdate;\n\n\t}\n\n\tget value() {\n\n\t\treturn this.node.value;\n\n\t}\n\n\tset value( val ) {\n\n\t\tthis.node.value = val;\n\n\t}\n\n\tget id() {\n\n\t\treturn this.node.id;\n\n\t}\n\n\tget groupNode() {\n\n\t\treturn this.node.groupNode;\n\n\t}\n\n}\n\nexport default NodeUniform;\n","import NodeVar from './NodeVar.js';\n\nclass NodeVarying extends NodeVar {\n\n\tconstructor( name, type ) {\n\n\t\tsuper( name, type );\n\n\t\tthis.needsInterpolation = false;\n\n\t\tthis.isNodeVarying = true;\n\n\t}\n\n}\n\nexport default NodeVarying;\n","class NodeVar {\n\n\tconstructor( name, type ) {\n\n\t\tthis.isNodeVar = true;\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\n\t}\n\n}\n\nexport default NodeVar;\n","class NodeCode {\n\n\tconstructor( name, type, code = '' ) {\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.code = code;\n\n\t\tObject.defineProperty( this, 'isNodeCode', { value: true } );\n\n\t}\n\n}\n\nexport default NodeCode;\n","class NodeKeywords {\n\n\tconstructor() {\n\n\t\tthis.keywords = [];\n\t\tthis.nodes = [];\n\t\tthis.keywordsCallback = {};\n\n\t}\n\n\tgetNode( name ) {\n\n\t\tlet node = this.nodes[ name ];\n\n\t\tif ( node === undefined && this.keywordsCallback[ name ] !== undefined ) {\n\n\t\t\tnode = this.keywordsCallback[ name ]( name );\n\n\t\t\tthis.nodes[ name ] = node;\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\taddKeyword( name, callback ) {\n\n\t\tthis.keywords.push( name );\n\t\tthis.keywordsCallback[ name ] = callback;\n\n\t\treturn this;\n\n\t}\n\n\tparse( code ) {\n\n\t\tconst keywordNames = this.keywords;\n\n\t\tconst regExp = new RegExp( `\\\\b${keywordNames.join( '\\\\b|\\\\b' )}\\\\b`, 'g' );\n\n\t\tconst codeKeywords = code.match( regExp );\n\n\t\tconst keywordNodes = [];\n\n\t\tif ( codeKeywords !== null ) {\n\n\t\t\tfor ( const keyword of codeKeywords ) {\n\n\t\t\t\tconst node = this.getNode( keyword );\n\n\t\t\t\tif ( node !== undefined && keywordNodes.indexOf( node ) === - 1 ) {\n\n\t\t\t\t\tkeywordNodes.push( node );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn keywordNodes;\n\n\t}\n\n\tinclude( builder, code ) {\n\n\t\tconst keywordNodes = this.parse( code );\n\n\t\tfor ( const keywordNode of keywordNodes ) {\n\n\t\t\tkeywordNode.build( builder );\n\n\t\t}\n\n\t}\n\n}\n\nexport default NodeKeywords;\n","import { addNodeClass } from './Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport PropertyNode from './PropertyNode.js';\n\nclass ParameterNode extends PropertyNode {\n\n\tconstructor( nodeType, name = null ) {\n\n\t\tsuper( nodeType, name );\n\n\t\tthis.isParameterNode = true;\n\n\t}\n\n\tgetHash() {\n\n\t\treturn this.uuid;\n\n\t}\n\n\tgenerate() {\n\n\t\treturn this.name;\n\n\t}\n\n}\n\nexport default ParameterNode;\n\nexport const parameter = ( type, name ) => nodeObject( new ParameterNode( type, name ) );\n\naddNodeClass( 'ParameterNode', ParameterNode );\n","import Node, { addNodeClass } from './Node.js';\nimport { nodeImmutable, nodeObject } from '../shadernode/ShaderNode.js';\n\nclass PropertyNode extends Node {\n\n\tconstructor( nodeType, name = null, varying = false ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.name = name;\n\t\tthis.varying = varying;\n\n\t\tthis.isPropertyNode = true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tlet nodeVar;\n\n\t\tif ( this.varying === true ) {\n\n\t\t\tnodeVar = builder.getVaryingFromNode( this, this.name );\n\t\t\tnodeVar.needsInterpolation = true;\n\n\t\t} else {\n\n\t\t\tnodeVar = builder.getVarFromNode( this, this.name );\n\n\t\t}\n\n\t\treturn builder.getPropertyName( nodeVar );\n\n\t}\n\n}\n\nexport default PropertyNode;\n\nexport const property = ( type, name ) => nodeObject( new PropertyNode( type, name ) );\nexport const varyingProperty = ( type, name ) => nodeObject( new PropertyNode( type, name, true ) );\n\nexport const diffuseColor = nodeImmutable( PropertyNode, 'vec4', 'DiffuseColor' );\nexport const roughness = nodeImmutable( PropertyNode, 'float', 'Roughness' );\nexport const metalness = nodeImmutable( PropertyNode, 'float', 'Metalness' );\nexport const clearcoat = nodeImmutable( PropertyNode, 'float', 'Clearcoat' );\nexport const clearcoatRoughness = nodeImmutable( PropertyNode, 'float', 'ClearcoatRoughness' );\nexport const sheen = nodeImmutable( PropertyNode, 'vec3', 'Sheen' );\nexport const sheenRoughness = nodeImmutable( PropertyNode, 'float', 'SheenRoughness' );\nexport const iridescence = nodeImmutable( PropertyNode, 'float', 'Iridescence' );\nexport const iridescenceIOR = nodeImmutable( PropertyNode, 'float', 'IridescenceIOR' );\nexport const iridescenceThickness = nodeImmutable( PropertyNode, 'float', 'IridescenceThickness' );\nexport const specularColor = nodeImmutable( PropertyNode, 'color', 'SpecularColor' );\nexport const shininess = nodeImmutable( PropertyNode, 'float', 'Shininess' );\nexport const output = nodeImmutable( PropertyNode, 'vec4', 'Output' );\nexport const dashSize = nodeImmutable( PropertyNode, 'float', 'dashSize' );\nexport const gapSize = nodeImmutable( PropertyNode, 'float', 'gapSize' );\nexport const pointWidth = nodeImmutable( PropertyNode, 'float', 'pointWidth' );\n\naddNodeClass( 'PropertyNode', PropertyNode );\n","import CodeNode from './CodeNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass FunctionNode extends CodeNode {\n\n\tconstructor( code = '', includes = [], language = '' ) {\n\n\t\tsuper( code, includes, language );\n\n\t\tthis.keywords = {};\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.getNodeFunction( builder ).type;\n\n\t}\n\n\tgetInputs( builder ) {\n\n\t\treturn this.getNodeFunction( builder ).inputs;\n\n\t}\n\n\tgetNodeFunction( builder ) {\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\tlet nodeFunction = nodeData.nodeFunction;\n\n\t\tif ( nodeFunction === undefined ) {\n\n\t\t\tnodeFunction = builder.parser.parseFunction( this.code );\n\n\t\t\tnodeData.nodeFunction = nodeFunction;\n\n\t\t}\n\n\t\treturn nodeFunction;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tsuper.generate( builder );\n\n\t\tconst nodeFunction = this.getNodeFunction( builder );\n\n\t\tconst name = nodeFunction.name;\n\t\tconst type = nodeFunction.type;\n\n\t\tconst nodeCode = builder.getCodeFromNode( this, type );\n\n\t\tif ( name !== '' ) {\n\n\t\t\t// use a custom property name\n\n\t\t\tnodeCode.name = name;\n\n\t\t}\n\n\t\tconst propertyName = builder.getPropertyName( nodeCode );\n\n\t\tlet code = this.getNodeFunction( builder ).getCode( propertyName );\n\n\t\tconst keywords = this.keywords;\n\t\tconst keywordsProperties = Object.keys( keywords );\n\n\t\tif ( keywordsProperties.length > 0 ) {\n\n\t\t\tfor ( const property of keywordsProperties ) {\n\n\t\t\t\tconst propertyRegExp = new RegExp( `\\\\b${property}\\\\b`, 'g' );\n\t\t\t\tconst nodeProperty = keywords[ property ].build( builder, 'property' );\n\n\t\t\t\tcode = code.replace( propertyRegExp, nodeProperty );\n\n\t\t\t}\n\n\t\t}\n\n\t\tnodeCode.code = code + '\\n';\n\n\t\tif ( output === 'property' ) {\n\n\t\t\treturn propertyName;\n\n\t\t} else {\n\n\t\t\treturn builder.format( `${ propertyName }()`, type, output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default FunctionNode;\n\nconst nativeFn = ( code, includes = [], language = '' ) => {\n\n\tfor ( let i = 0; i < includes.length; i ++ ) {\n\n\t\tconst include = includes[ i ];\n\n\t\t// TSL Function: glslFn, wgslFn\n\n\t\tif ( typeof include === 'function' ) {\n\n\t\t\tincludes[ i ] = include.functionNode;\n\n\t\t}\n\n\t}\n\n\tconst functionNode = nodeObject( new FunctionNode( code, includes, language ) );\n\n\tconst fn = ( ...params ) => functionNode.call( ...params );\n\tfn.functionNode = functionNode;\n\n\treturn fn;\n\n};\n\nexport const glslFn = ( code, includes ) => nativeFn( code, includes, 'glsl' );\nexport const wgslFn = ( code, includes ) => nativeFn( code, includes, 'wgsl' );\n\nexport const func = ( code, includes ) => { // @deprecated, r154\n\n\tconsole.warn( 'TSL: func() is deprecated. Use nativeFn(), wgslFn() or glslFn() instead.' );\n\n\treturn nodeObject( new FunctionNode( code, includes ) );\n\n};\n\naddNodeClass( 'FunctionNode', FunctionNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass CodeNode extends Node {\n\n\tconstructor( code = '', includes = [], language = '' ) {\n\n\t\tsuper( 'code' );\n\n\t\tthis.isCodeNode = true;\n\n\t\tthis.code = code;\n\t\tthis.language = language;\n\n\t\tthis.includes = includes;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tsetIncludes( includes ) {\n\n\t\tthis.includes = includes;\n\n\t\treturn this;\n\n\t}\n\n\tgetIncludes( /*builder*/ ) {\n\n\t\treturn this.includes;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst includes = this.getIncludes( builder );\n\n\t\tfor ( const include of includes ) {\n\n\t\t\tinclude.build( builder );\n\n\t\t}\n\n\t\tconst nodeCode = builder.getCodeFromNode( this, this.getNodeType( builder ) );\n\t\tnodeCode.code = this.code;\n\n\t\treturn nodeCode.code;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.code = this.code;\n\t\tdata.language = this.language;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.code = data.code;\n\t\tthis.language = data.language;\n\n\t}\n\n}\n\nexport default CodeNode;\n\nexport const code = nodeProxy( CodeNode );\n\nexport const js = ( src, includes ) => code( src, includes, 'js' );\nexport const wgsl = ( src, includes ) => code( src, includes, 'wgsl' );\nexport const glsl = ( src, includes ) => code( src, includes, 'glsl' );\n\naddNodeClass( 'CodeNode', CodeNode );\n","import { Material, ShaderMaterial, NoColorSpace, LinearSRGBColorSpace } from 'three';\nimport { getNodeChildren, getCacheKey } from '../core/NodeUtils.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { output, diffuseColor, varyingProperty } from '../core/PropertyNode.js';\nimport { materialAlphaTest, materialColor, materialOpacity, materialEmissive, materialNormal } from '../accessors/MaterialNode.js';\nimport { modelViewProjection } from '../accessors/ModelViewProjectionNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { instance } from '../accessors/InstanceNode.js';\nimport { batch } from '../accessors/BatchNode.js';\n\nimport { positionLocal, positionView } from '../accessors/PositionNode.js';\nimport { skinningReference } from '../accessors/SkinningNode.js';\nimport { morphReference } from '../accessors/MorphNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { cubeTexture } from '../accessors/CubeTextureNode.js';\nimport { lightsNode } from '../lighting/LightsNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { float, vec3, vec4 } from '../shadernode/ShaderNode.js';\nimport AONode from '../lighting/AONode.js';\nimport { lightingContext } from '../lighting/LightingContextNode.js';\nimport EnvironmentNode from '../lighting/EnvironmentNode.js';\nimport { depthPixel } from '../display/ViewportDepthNode.js';\nimport { cameraLogDepth } from '../accessors/CameraNode.js';\nimport { clipping, clippingAlpha } from '../accessors/ClippingNode.js';\nimport { faceDirection } from '../display/FrontFacingNode.js';\n\nconst NodeMaterials = new Map();\n\nclass NodeMaterial extends ShaderMaterial {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isNodeMaterial = true;\n\n\t\tthis.type = this.constructor.type;\n\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\t\tthis.normals = true;\n\n\t\tthis.colorSpaced = true;\n\n\t\tthis.lightsNode = null;\n\t\tthis.envNode = null;\n\n\t\tthis.colorNode = null;\n\t\tthis.normalNode = null;\n\t\tthis.opacityNode = null;\n\t\tthis.backdropNode = null;\n\t\tthis.backdropAlphaNode = null;\n\t\tthis.alphaTestNode = null;\n\n\t\tthis.positionNode = null;\n\n\t\tthis.depthNode = null;\n\t\tthis.shadowNode = null;\n\n\t\tthis.outputNode = null;\n\n\t\tthis.fragmentNode = null;\n\t\tthis.vertexNode = null;\n\n\t}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.type + getCacheKey( this );\n\n\t}\n\n\tbuild( builder ) {\n\n\t\tthis.setup( builder );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\t// < VERTEX STAGE >\n\n\t\tbuilder.addStack();\n\n\t\tbuilder.stack.outputNode = this.vertexNode || this.setupPosition( builder );\n\n\t\tbuilder.addFlow( 'vertex', builder.removeStack() );\n\n\t\t// < FRAGMENT STAGE >\n\n\t\tbuilder.addStack();\n\n\t\tlet resultNode;\n\n\t\tconst clippingNode = this.setupClipping( builder );\n\n\t\tif ( this.fragmentNode === null ) {\n\n\t\t\tif ( this.depthWrite === true ) this.setupDepth( builder );\n\n\t\t\tif ( this.normals === true ) this.setupNormal( builder );\n\n\t\t\tthis.setupDiffuseColor( builder );\n\t\t\tthis.setupVariants( builder );\n\n\t\t\tconst outgoingLightNode = this.setupLighting( builder );\n\n\t\t\tif ( clippingNode !== null ) builder.stack.add( clippingNode );\n\n\t\t\t// force unsigned floats - useful for RenderTargets\n\n\t\t\tconst basicOutput = vec4( outgoingLightNode, diffuseColor.a ).max( 0 );\n\n\t\t\tresultNode = this.setupOutput( builder, basicOutput );\n\n\t\t\t// OUTPUT NODE\n\n\t\t\toutput.assign( resultNode );\n\n\t\t\t//\n\n\t\t\tif ( this.outputNode !== null ) resultNode = this.outputNode;\n\n\t\t} else {\n\n\t\t\tresultNode = this.setupOutput( builder, this.fragmentNode );\n\n\t\t}\n\n\t\tbuilder.stack.outputNode = resultNode;\n\n\t\tbuilder.addFlow( 'fragment', builder.removeStack() );\n\n\t}\n\n\tsetupClipping( builder ) {\n\n\t\tconst { globalClippingCount, localClippingCount } = builder.clippingContext;\n\n\t\tlet result = null;\n\n\t\tif ( globalClippingCount || localClippingCount ) {\n\n\t\t\tif ( this.alphaToCoverage ) {\n\n\t\t\t\t// to be added to flow when the color/alpha value has been determined\n\t\t\t\tresult = clippingAlpha();\n\n\t\t\t} else {\n\n\t\t\t\tbuilder.stack.add( clipping() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tsetupDepth( builder ) {\n\n\t\tconst { renderer } = builder;\n\n\t\t// Depth\n\n\t\tlet depthNode = this.depthNode;\n\n\t\tif ( depthNode === null && renderer.logarithmicDepthBuffer === true ) {\n\n\t\t\tconst fragDepth = modelViewProjection().w.add( 1 );\n\n\t\t\tdepthNode = fragDepth.log2().mul( cameraLogDepth ).mul( 0.5 );\n\n\t\t}\n\n\t\tif ( depthNode !== null ) {\n\n\t\t\tdepthPixel.assign( depthNode ).append();\n\n\t\t}\n\n\t}\n\n\tsetupPosition( builder ) {\n\n\t\tconst { object } = builder;\n\t\tconst geometry = object.geometry;\n\n\t\tbuilder.addStack();\n\n\t\t// Vertex\n\n\t\tif ( geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color ) {\n\n\t\t\tmorphReference( object ).append();\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\tskinningReference( object ).append();\n\n\t\t}\n\n\t\tif ( object.isBatchedMesh ) {\n\n\t\t\tbatch( object ).append();\n\n\t\t}\n\n\t\tif ( ( object.instanceMatrix && object.instanceMatrix.isInstancedBufferAttribute === true ) && builder.isAvailable( 'instance' ) === true ) {\n\n\t\t\tinstance( object ).append();\n\n\t\t}\n\n\t\tif ( this.positionNode !== null ) {\n\n\t\t\tpositionLocal.assign( this.positionNode );\n\n\t\t}\n\n\t\tconst mvp = modelViewProjection();\n\n\t\tbuilder.context.vertex = builder.removeStack();\n\t\tbuilder.context.mvp = mvp;\n\n\t\treturn mvp;\n\n\t}\n\n\tsetupDiffuseColor( { object, geometry } ) {\n\n\t\tlet colorNode = this.colorNode ? vec4( this.colorNode ) : materialColor;\n\n\t\t// VERTEX COLORS\n\n\t\tif ( this.vertexColors === true && geometry.hasAttribute( 'color' ) ) {\n\n\t\t\tcolorNode = vec4( colorNode.xyz.mul( attribute( 'color', 'vec3' ) ), colorNode.a );\n\n\t\t}\n\n\t\t// Instanced colors\n\n\t\tif ( object.instanceColor ) {\n\n\t\t\tconst instanceColor = varyingProperty( 'vec3', 'vInstanceColor' );\n\n\t\t\tcolorNode = instanceColor.mul( colorNode );\n\n\t\t}\n\n\t\t// COLOR\n\n\t\tdiffuseColor.assign( colorNode );\n\n\t\t// OPACITY\n\n\t\tconst opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\n\t\tdiffuseColor.a.assign( diffuseColor.a.mul( opacityNode ) );\n\n\t\t// ALPHA TEST\n\n\t\tif ( this.alphaTestNode !== null || this.alphaTest > 0 ) {\n\n\t\t\tconst alphaTestNode = this.alphaTestNode !== null ? float( this.alphaTestNode ) : materialAlphaTest;\n\n\t\t\tdiffuseColor.a.lessThanEqual( alphaTestNode ).discard();\n\n\t\t}\n\n\t}\n\n\tsetupVariants( /*builder*/ ) {\n\n\t\t// Interface function.\n\n\t}\n\n\tsetupNormal() {\n\n\t\t// NORMAL VIEW\n\n\t\tif ( this.flatShading === true ) {\n\n\t\t\tconst normalNode = positionView.dFdx().cross( positionView.dFdy() ).normalize();\n\n\t\t\ttransformedNormalView.assign( normalNode.mul( faceDirection ) );\n\n\t\t} else {\n\n\t\t\tconst normalNode = this.normalNode ? vec3( this.normalNode ) : materialNormal;\n\n\t\t\ttransformedNormalView.assign( normalNode.mul( faceDirection ) );\n\n\t\t}\n\n\t}\n\n\tgetEnvNode( builder ) {\n\n\t\tlet node = null;\n\n\t\tif ( this.envNode ) {\n\n\t\t\tnode = this.envNode;\n\n\t\t} else if ( this.envMap ) {\n\n\t\t\tnode = this.envMap.isCubeTexture ? cubeTexture( this.envMap ) : texture( this.envMap );\n\n\t\t} else if ( builder.environmentNode ) {\n\n\t\t\tnode = builder.environmentNode;\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\tsetupLights( builder ) {\n\n\t\tconst envNode = this.getEnvNode( builder );\n\n\t\t//\n\n\t\tconst materialLightsNode = [];\n\n\t\tif ( envNode ) {\n\n\t\t\tmaterialLightsNode.push( new EnvironmentNode( envNode ) );\n\n\t\t}\n\n\t\tif ( builder.material.aoMap ) {\n\n\t\t\tmaterialLightsNode.push( new AONode( texture( builder.material.aoMap ) ) );\n\n\t\t}\n\n\t\tlet lightsN = this.lightsNode || builder.lightsNode;\n\n\t\tif ( materialLightsNode.length > 0 ) {\n\n\t\t\tlightsN = lightsNode( [ ...lightsN.lightNodes, ...materialLightsNode ] );\n\n\t\t}\n\n\t\treturn lightsN;\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\t// Interface function.\n\n\t}\n\n\tsetupLighting( builder ) {\n\n\t\tconst { material } = builder;\n\t\tconst { backdropNode, backdropAlphaNode, emissiveNode } = this;\n\n\t\t// OUTGOING LIGHT\n\n\t\tconst lights = this.lights === true || this.lightsNode !== null;\n\n\t\tconst lightsNode = lights ? this.setupLights( builder ) : null;\n\n\t\tlet outgoingLightNode = diffuseColor.rgb;\n\n\t\tif ( lightsNode && lightsNode.hasLight !== false ) {\n\n\t\t\tconst lightingModel = this.setupLightingModel( builder );\n\n\t\t\toutgoingLightNode = lightingContext( lightsNode, lightingModel, backdropNode, backdropAlphaNode );\n\n\t\t} else if ( backdropNode !== null ) {\n\n\t\t\toutgoingLightNode = vec3( backdropAlphaNode !== null ? mix( outgoingLightNode, backdropNode, backdropAlphaNode ) : backdropNode );\n\n\t\t}\n\n\t\t// EMISSIVE\n\n\t\tif ( ( emissiveNode && emissiveNode.isNode === true ) || ( material.emissive && material.emissive.isColor === true ) ) {\n\n\t\t\toutgoingLightNode = outgoingLightNode.add( vec3( emissiveNode ? emissiveNode : materialEmissive ) );\n\n\t\t}\n\n\t\treturn outgoingLightNode;\n\n\t}\n\n\tsetupOutput( builder, outputNode ) {\n\n\t\tconst renderer = builder.renderer;\n\n\t\t// FOG\n\n\t\tif ( this.fog === true ) {\n\n\t\t\tconst fogNode = builder.fogNode;\n\n\t\t\tif ( fogNode ) outputNode = vec4( fogNode.mix( outputNode.rgb, fogNode.colorNode ), outputNode.a );\n\n\t\t}\n\n\t\t// TONE MAPPING\n\n\t\tconst toneMappingNode = builder.toneMappingNode;\n\n\t\tif ( this.toneMapped === true && toneMappingNode ) {\n\n\t\t\toutputNode = vec4( toneMappingNode.context( { color: outputNode.rgb } ), outputNode.a );\n\n\t\t}\n\n\t\t// ENCODING\n\n\t\tif ( this.colorSpaced === true ) {\n\n\t\t\tconst outputColorSpace = renderer.currentColorSpace;\n\n\t\t\tif ( outputColorSpace !== LinearSRGBColorSpace && outputColorSpace !== NoColorSpace ) {\n\n\t\t\t\toutputNode = outputNode.linearToColorSpace( outputColorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n\tsetDefaultValues( material ) {\n\n\t\t// This approach is to reuse the native refreshUniforms*\n\t\t// and turn available the use of features like transmission and environment in core\n\n\t\tfor ( const property in material ) {\n\n\t\t\tconst value = material[ property ];\n\n\t\t\tif ( this[ property ] === undefined ) {\n\n\t\t\t\tthis[ property ] = value;\n\n\t\t\t\tif ( value && value.clone ) this[ property ] = value.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tObject.assign( this.defines, material.defines );\n\n\t\tconst descriptors = Object.getOwnPropertyDescriptors( material.constructor.prototype );\n\n\t\tfor ( const key in descriptors ) {\n\n\t\t\tif ( Object.getOwnPropertyDescriptor( this.constructor.prototype, key ) === undefined &&\n\t\t\t     descriptors[ key ].get !== undefined ) {\n\n\t\t\t\tObject.defineProperty( this.constructor.prototype, key, descriptors[ key ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = Material.prototype.toJSON.call( this, meta );\n\t\tconst nodeChildren = getNodeChildren( this );\n\n\t\tdata.inputNodes = {};\n\n\t\tfor ( const { property, childNode } of nodeChildren ) {\n\n\t\t\tdata.inputNodes[ property ] = childNode.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.lightsNode = source.lightsNode;\n\t\tthis.envNode = source.envNode;\n\n\t\tthis.colorNode = source.colorNode;\n\t\tthis.normalNode = source.normalNode;\n\t\tthis.opacityNode = source.opacityNode;\n\t\tthis.backdropNode = source.backdropNode;\n\t\tthis.backdropAlphaNode = source.backdropAlphaNode;\n\t\tthis.alphaTestNode = source.alphaTestNode;\n\n\t\tthis.positionNode = source.positionNode;\n\n\t\tthis.depthNode = source.depthNode;\n\t\tthis.shadowNode = source.shadowNode;\n\n\t\tthis.outputNode = source.outputNode;\n\n\t\tthis.fragmentNode = source.fragmentNode;\n\t\tthis.vertexNode = source.vertexNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n\tstatic fromMaterial( material ) {\n\n\t\tif ( material.isNodeMaterial === true ) { // is already a node material\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tconst type = material.type.replace( 'Material', 'NodeMaterial' );\n\n\t\tconst nodeMaterial = createNodeMaterialFromType( type );\n\n\t\tif ( nodeMaterial === undefined ) {\n\n\t\t\tthrow new Error( `NodeMaterial: Material \"${ material.type }\" is not compatible.` );\n\n\t\t}\n\n\t\tfor ( const key in material ) {\n\n\t\t\tnodeMaterial[ key ] = material[ key ];\n\n\t\t}\n\n\t\treturn nodeMaterial;\n\n\t}\n\n}\n\nexport default NodeMaterial;\n\nexport function addNodeMaterial( type, nodeMaterial ) {\n\n\tif ( typeof nodeMaterial !== 'function' || ! type ) throw new Error( `Node material ${ type } is not a class` );\n\tif ( NodeMaterials.has( type ) ) {\n\n\t\tconsole.warn( `Redefinition of node material ${ type }` );\n\t\treturn;\n\n\t}\n\n\tNodeMaterials.set( type, nodeMaterial );\n\tnodeMaterial.type = type;\n\n}\n\nexport function createNodeMaterialFromType( type ) {\n\n\tconst Material = NodeMaterials.get( type );\n\n\tif ( Material !== undefined ) {\n\n\t\treturn new Material();\n\n\t}\n\n}\n\naddNodeMaterial( 'NodeMaterial', NodeMaterial );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { reference } from './ReferenceNode.js';\nimport { materialReference } from './MaterialReferenceNode.js';\nimport { normalView } from './NormalNode.js';\nimport { nodeImmutable, float } from '../shadernode/ShaderNode.js';\n\nconst _propertyCache = new Map();\n\nclass MaterialNode extends Node {\n\n\tconstructor( scope ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetCache( property, type ) {\n\n\t\tlet node = _propertyCache.get( property );\n\n\t\tif ( node === undefined ) {\n\n\t\t\tnode = materialReference( property, type );\n\n\t\t\t_propertyCache.set( property, node );\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\tgetFloat( property ) {\n\n\t\treturn this.getCache( property, 'float' );\n\n\t}\n\n\tgetColor( property ) {\n\n\t\treturn this.getCache( property, 'color' );\n\n\t}\n\n\tgetTexture( property ) {\n\n\t\treturn this.getCache( property === 'map' ? 'map' : property + 'Map', 'texture' );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst material = builder.context.material;\n\t\tconst scope = this.scope;\n\n\t\tlet node = null;\n\n\t\tif ( scope === MaterialNode.COLOR ) {\n\n\t\t\tconst colorNode = this.getColor( scope );\n\n\t\t\tif ( material.map && material.map.isTexture === true ) {\n\n\t\t\t\tnode = colorNode.mul( this.getTexture( 'map' ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = colorNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.OPACITY ) {\n\n\t\t\tconst opacityNode = this.getFloat( scope );\n\n\t\t\tif ( material.alphaMap && material.alphaMap.isTexture === true ) {\n\n\t\t\t\tnode = opacityNode.mul( this.getTexture( 'alpha' ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = opacityNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.SPECULAR_STRENGTH ) {\n\n\t\t\tif ( material.specularMap && material.specularMap.isTexture === true ) {\n\n\t\t\t\tnode = this.getTexture( scope ).r;\n\n\t\t\t} else {\n\n\t\t\t\tnode = float( 1 );\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.ROUGHNESS ) { // TODO: cleanup similar branches\n\n\t\t\tconst roughnessNode = this.getFloat( scope );\n\n\t\t\tif ( material.roughnessMap && material.roughnessMap.isTexture === true ) {\n\n\t\t\t\tnode = roughnessNode.mul( this.getTexture( scope ).g );\n\n\t\t\t} else {\n\n\t\t\t\tnode = roughnessNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.METALNESS ) {\n\n\t\t\tconst metalnessNode = this.getFloat( scope );\n\n\t\t\tif ( material.metalnessMap && material.metalnessMap.isTexture === true ) {\n\n\t\t\t\tnode = metalnessNode.mul( this.getTexture( scope ).b );\n\n\t\t\t} else {\n\n\t\t\t\tnode = metalnessNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.EMISSIVE ) {\n\n\t\t\tconst emissiveNode = this.getColor( scope );\n\n\t\t\tif ( material.emissiveMap && material.emissiveMap.isTexture === true ) {\n\n\t\t\t\tnode = emissiveNode.mul( this.getTexture( scope ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = emissiveNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.NORMAL ) {\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tnode = this.getTexture( 'normal' ).normalMap( this.getCache( 'normalScale', 'vec2' ) );\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tnode = this.getTexture( 'bump' ).r.bumpMap( this.getFloat( 'bumpScale' ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = normalView;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.CLEARCOAT ) {\n\n\t\t\tconst clearcoatNode = this.getFloat( scope );\n\n\t\t\tif ( material.clearcoatMap && material.clearcoatMap.isTexture === true ) {\n\n\t\t\t\tnode = clearcoatNode.mul( this.getTexture( scope ).r );\n\n\t\t\t} else {\n\n\t\t\t\tnode = clearcoatNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.CLEARCOAT_ROUGHNESS ) {\n\n\t\t\tconst clearcoatRoughnessNode = this.getFloat( scope );\n\n\t\t\tif ( material.clearcoatRoughnessMap && material.clearcoatRoughnessMap.isTexture === true ) {\n\n\t\t\t\tnode = clearcoatRoughnessNode.mul( this.getTexture( scope ).r );\n\n\t\t\t} else {\n\n\t\t\t\tnode = clearcoatRoughnessNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.CLEARCOAT_NORMAL ) {\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tnode = this.getTexture( scope ).normalMap( this.getCache( scope + 'Scale', 'vec2' ) );\n\n\t\t\t} else {\n\n\t\t\t\tnode = normalView;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.SHEEN ) {\n\n\t\t\tconst sheenNode = this.getColor( 'sheenColor' ).mul( this.getFloat( 'sheen' ) ); // Move this mul() to CPU\n\n\t\t\tif ( material.sheenColorMap && material.sheenColorMap.isTexture === true ) {\n\n\t\t\t\tnode = sheenNode.mul( this.getTexture( 'sheenColor' ).rgb );\n\n\t\t\t} else {\n\n\t\t\t\tnode = sheenNode;\n\n\t\t\t}\n\n\t\t} else if ( scope === MaterialNode.SHEEN_ROUGHNESS ) {\n\n\t\t\tconst sheenRoughnessNode = this.getFloat( scope );\n\n\t\t\tif ( material.sheenRoughnessMap && material.sheenRoughnessMap.isTexture === true ) {\n\n\t\t\t\tnode = sheenRoughnessNode.mul( this.getTexture( scope ).a );\n\n\t\t\t} else {\n\n\t\t\t\tnode = sheenRoughnessNode;\n\n\t\t\t}\n\n\t\t\tnode = node.clamp( 0.07, 1.0 );\n\n\t\t} else if ( scope === MaterialNode.IRIDESCENCE_THICKNESS ) {\n\n\t\t\tconst iridescenceThicknessMaximum = reference( '1', 'float', material.iridescenceThicknessRange );\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tconst iridescenceThicknessMinimum = reference( '0', 'float', material.iridescenceThicknessRange );\n\n\t\t\t\tnode = iridescenceThicknessMaximum.sub( iridescenceThicknessMinimum ).mul( this.getTexture( scope ).g ).add( iridescenceThicknessMinimum );\n\n\t\t\t} else {\n\n\t\t\t\tnode = iridescenceThicknessMaximum;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst outputType = this.getNodeType( builder );\n\n\t\t\tnode = this.getCache( scope, outputType );\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n}\n\nMaterialNode.ALPHA_TEST = 'alphaTest';\nMaterialNode.COLOR = 'color';\nMaterialNode.OPACITY = 'opacity';\nMaterialNode.SHININESS = 'shininess';\nMaterialNode.SPECULAR_COLOR = 'specular';\nMaterialNode.SPECULAR_STRENGTH = 'specularStrength';\nMaterialNode.REFLECTIVITY = 'reflectivity';\nMaterialNode.ROUGHNESS = 'roughness';\nMaterialNode.METALNESS = 'metalness';\nMaterialNode.NORMAL = 'normal';\nMaterialNode.CLEARCOAT = 'clearcoat';\nMaterialNode.CLEARCOAT_ROUGHNESS = 'clearcoatRoughness';\nMaterialNode.CLEARCOAT_NORMAL = 'clearcoatNormal';\nMaterialNode.EMISSIVE = 'emissive';\nMaterialNode.ROTATION = 'rotation';\nMaterialNode.SHEEN = 'sheen';\nMaterialNode.SHEEN_ROUGHNESS = 'sheenRoughness';\nMaterialNode.IRIDESCENCE = 'iridescence';\nMaterialNode.IRIDESCENCE_IOR = 'iridescenceIOR';\nMaterialNode.IRIDESCENCE_THICKNESS = 'iridescenceThickness';\nMaterialNode.LINE_SCALE = 'scale';\nMaterialNode.LINE_DASH_SIZE = 'dashSize';\nMaterialNode.LINE_GAP_SIZE = 'gapSize';\nMaterialNode.LINE_WIDTH = 'linewidth';\nMaterialNode.LINE_DASH_OFFSET = 'dashOffset';\nMaterialNode.POINT_WIDTH = 'pointWidth';\n\nexport default MaterialNode;\n\nexport const materialAlphaTest = nodeImmutable( MaterialNode, MaterialNode.ALPHA_TEST );\nexport const materialColor = nodeImmutable( MaterialNode, MaterialNode.COLOR );\nexport const materialShininess = nodeImmutable( MaterialNode, MaterialNode.SHININESS );\nexport const materialEmissive = nodeImmutable( MaterialNode, MaterialNode.EMISSIVE );\nexport const materialOpacity = nodeImmutable( MaterialNode, MaterialNode.OPACITY );\nexport const materialSpecularColor = nodeImmutable( MaterialNode, MaterialNode.SPECULAR_COLOR );\nexport const materialSpecularStrength = nodeImmutable( MaterialNode, MaterialNode.SPECULAR_STRENGTH );\nexport const materialReflectivity = nodeImmutable( MaterialNode, MaterialNode.REFLECTIVITY );\nexport const materialRoughness = nodeImmutable( MaterialNode, MaterialNode.ROUGHNESS );\nexport const materialMetalness = nodeImmutable( MaterialNode, MaterialNode.METALNESS );\nexport const materialNormal = nodeImmutable( MaterialNode, MaterialNode.NORMAL );\nexport const materialClearcoat = nodeImmutable( MaterialNode, MaterialNode.CLEARCOAT );\nexport const materialClearcoatRoughness = nodeImmutable( MaterialNode, MaterialNode.CLEARCOAT_ROUGHNESS );\nexport const materialClearcoatNormal = nodeImmutable( MaterialNode, MaterialNode.CLEARCOAT_NORMAL );\nexport const materialRotation = nodeImmutable( MaterialNode, MaterialNode.ROTATION );\nexport const materialSheen = nodeImmutable( MaterialNode, MaterialNode.SHEEN );\nexport const materialSheenRoughness = nodeImmutable( MaterialNode, MaterialNode.SHEEN_ROUGHNESS );\nexport const materialIridescence = nodeImmutable( MaterialNode, MaterialNode.IRIDESCENCE );\nexport const materialIridescenceIOR = nodeImmutable( MaterialNode, MaterialNode.IRIDESCENCE_IOR );\nexport const materialIridescenceThickness = nodeImmutable( MaterialNode, MaterialNode.IRIDESCENCE_THICKNESS );\nexport const materialLineScale = nodeImmutable( MaterialNode, MaterialNode.LINE_SCALE );\nexport const materialLineDashSize = nodeImmutable( MaterialNode, MaterialNode.LINE_DASH_SIZE );\nexport const materialLineGapSize = nodeImmutable( MaterialNode, MaterialNode.LINE_GAP_SIZE );\nexport const materialLineWidth = nodeImmutable( MaterialNode, MaterialNode.LINE_WIDTH );\nexport const materialLineDashOffset = nodeImmutable( MaterialNode, MaterialNode.LINE_DASH_OFFSET );\nexport const materialPointWidth = nodeImmutable( MaterialNode, MaterialNode.POINT_WIDTH );\n\naddNodeClass( 'MaterialNode', MaterialNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { texture } from './TextureNode.js';\nimport { buffer } from './BufferNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { uniforms } from './UniformsNode.js';\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\n\nclass ReferenceElementNode extends ArrayElementNode {\n\n\tconstructor( referenceNode, indexNode ) {\n\n\t\tsuper( referenceNode, indexNode );\n\n\t\tthis.referenceNode = referenceNode;\n\n\t\tthis.isReferenceElementNode = true;\n\n\t}\n\n\tgetNodeType() {\n\n\t\treturn this.referenceNode.uniformType;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst snippet = super.generate( builder );\n\t\tconst arrayType = this.referenceNode.getNodeType();\n\t\tconst elementType = this.getNodeType();\n\n\t\treturn builder.format( snippet, arrayType, elementType );\n\n\t}\n\n}\n\nclass ReferenceNode extends Node {\n\n\tconstructor( property, uniformType, object = null, count = null ) {\n\n\t\tsuper();\n\n\t\tthis.property = property;\n\t\tthis.uniformType = uniformType;\n\t\tthis.object = object;\n\t\tthis.count = count;\n\n\t\tthis.properties = property.split( '.' );\n\t\tthis.reference = null;\n\t\tthis.node = null;\n\n\t\tthis.updateType = NodeUpdateType.OBJECT;\n\n\t}\n\n\telement( indexNode ) {\n\n\t\treturn nodeObject( new ReferenceElementNode( this, nodeObject( indexNode ) ) );\n\n\t}\n\n\tsetNodeType( uniformType ) {\n\n\t\tlet node = null;\n\n\t\tif ( this.count !== null ) {\n\n\t\t\tnode = buffer( null, uniformType, this.count );\n\n\t\t} else if ( Array.isArray( this.getValueFromReference() ) ) {\n\n\t\t\tnode = uniforms( null, uniformType );\n\n\t\t} else if ( uniformType === 'texture' ) {\n\n\t\t\tnode = texture( null );\n\n\t\t} else {\n\n\t\t\tnode = uniform( null, uniformType );\n\n\t\t}\n\n\t\tthis.node = node;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgetValueFromReference( object = this.reference ) {\n\n\t\tconst { properties } = this;\n\n\t\tlet value = object[ properties[ 0 ] ];\n\n\t\tfor ( let i = 1; i < properties.length; i ++ ) {\n\n\t\t\tvalue = value[ properties[ i ] ];\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\tupdateReference( state ) {\n\n\t\tthis.reference = this.object !== null ? this.object : state.object;\n\n\t\treturn this.reference;\n\n\t}\n\n\tsetup() {\n\n\t\tthis.updateValue();\n\n\t\treturn this.node;\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tthis.updateValue();\n\n\t}\n\n\tupdateValue() {\n\n\t\tif ( this.node === null ) this.setNodeType( this.uniformType );\n\n\t\tconst value = this.getValueFromReference();\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tthis.node.array = value;\n\n\t\t} else {\n\n\t\t\tthis.node.value = value;\n\n\t\t}\n\n\t}\n\n}\n\nexport default ReferenceNode;\n\nexport const reference = ( name, type, object ) => nodeObject( new ReferenceNode( name, type, object ) );\nexport const referenceBuffer = ( name, type, count, object ) => nodeObject( new ReferenceNode( name, type, object, count ) );\n\naddNodeClass( 'ReferenceNode', ReferenceNode );\n","import InputNode from './InputNode.js';\nimport { objectGroup } from './UniformGroupNode.js';\nimport { addNodeClass } from './Node.js';\nimport { nodeObject, getConstNodeType } from '../shadernode/ShaderNode.js';\n\nclass UniformNode extends InputNode {\n\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( value, nodeType );\n\n\t\tthis.isUniformNode = true;\n\n\t\tthis.groupNode = objectGroup;\n\n\t}\n\n\tsetGroup( group ) {\n\n\t\tthis.groupNode = group;\n\n\t\treturn this;\n\n\t}\n\n\tgetGroup() {\n\n\t\treturn this.groupNode;\n\n\t}\n\n\tgetUniformHash( builder ) {\n\n\t\treturn this.getHash( builder );\n\n\t}\n\n\tonUpdate( callback, updateType ) {\n\n\t\tconst self = this.getSelf();\n\n\t\tcallback = callback.bind( self );\n\n\t\treturn super.onUpdate( ( frame ) => {\n\n\t\t\tconst value = callback( frame, self );\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\tthis.value = value;\n\n\t\t\t}\n\n\t \t}, updateType );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst hash = this.getUniformHash( builder );\n\n\t\tlet sharedNode = builder.getNodeFromHash( hash );\n\n\t\tif ( sharedNode === undefined ) {\n\n\t\t\tbuilder.setHashNode( this, hash );\n\n\t\t\tsharedNode = this;\n\n\t\t}\n\n\t\tconst sharedNodeType = sharedNode.getInputType( builder );\n\n\t\tconst nodeUniform = builder.getUniformFromNode( sharedNode, sharedNodeType, builder.shaderStage, builder.context.label );\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\n\n\t\tif ( builder.context.label !== undefined ) delete builder.context.label;\n\n\t\treturn builder.format( propertyName, type, output );\n\n\t}\n\n}\n\nexport default UniformNode;\n\nexport const uniform = ( arg1, arg2 ) => {\n\n\tconst nodeType = getConstNodeType( arg2 || arg1 );\n\n\t// @TODO: get ConstNode from .traverse() in the future\n\tconst value = ( arg1 && arg1.isNode === true ) ? ( arg1.node && arg1.node.value ) || arg1.value : arg1;\n\n\treturn nodeObject( new UniformNode( value, nodeType ) );\n\n};\n\naddNodeClass( 'UniformNode', UniformNode );\n","import Node from './Node.js';\nimport { addNodeClass } from './Node.js';\n\nclass UniformGroupNode extends Node {\n\n\tconstructor( name, shared = false ) {\n\n\t\tsuper( 'string' );\n\n\t\tthis.name = name;\n\t\tthis.version = 0;\n\n\t\tthis.shared = shared;\n\n\t\tthis.isUniformGroup = true;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nexport const uniformGroup = ( name ) => new UniformGroupNode( name );\nexport const sharedUniformGroup = ( name ) => new UniformGroupNode( name, true );\n\nexport const frameGroup = sharedUniformGroup( 'frame' );\nexport const renderGroup = sharedUniformGroup( 'render' );\nexport const objectGroup = uniformGroup( 'object' );\n\nexport default UniformGroupNode;\n\naddNodeClass( 'UniformGroupNode', UniformGroupNode );\n","import UniformNode, { uniform } from '../core/UniformNode.js';\nimport { uv } from './UVNode.js';\nimport { textureSize } from './TextureSizeNode.js';\nimport { colorSpaceToLinear } from '../display/ColorSpaceNode.js';\nimport { expression } from '../code/ExpressionNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { maxMipLevel } from '../utils/MaxMipLevelNode.js';\nimport { addNodeElement, nodeProxy, vec3, nodeObject } from '../shadernode/ShaderNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass TextureNode extends UniformNode {\n\n\tconstructor( value, uvNode = null, levelNode = null ) {\n\n\t\tsuper( value );\n\n\t\tthis.isTextureNode = true;\n\n\t\tthis.uvNode = uvNode;\n\t\tthis.levelNode = levelNode;\n\t\tthis.compareNode = null;\n\t\tthis.depthNode = null;\n\n\t\tthis.sampler = true;\n\t\tthis.updateMatrix = false;\n\t\tthis.updateType = NodeUpdateType.NONE;\n\n\t\tthis.referenceNode = null;\n\n\t\tthis._value = value;\n\n\t\tthis.setUpdateMatrix( uvNode === null );\n\n\t}\n\n\tset value( value ) {\n\n\t\tif ( this.referenceNode ) {\n\n\t\t\tthis.referenceNode.value = value;\n\n\t\t} else {\n\n\t\t\tthis._value = value;\n\n\t\t}\n\n\t}\n\n\tget value() {\n\n\t\treturn this.referenceNode ? this.referenceNode.value : this._value;\n\n\t}\n\n\tgetUniformHash( /*builder*/ ) {\n\n\t\treturn this.value.uuid;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\tif ( this.value.isDepthTexture === true ) return 'float';\n\n\t\treturn 'vec4';\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'texture';\n\n\t}\n\n\tgetDefaultUV() {\n\n\t\treturn uv( this.value.channel );\n\n\t}\n\n\tupdateReference( /*state*/ ) {\n\n\t\treturn this.value;\n\n\t}\n\n\tgetTransformedUV( uvNode ) {\n\n\t\tconst texture = this.value;\n\n\t\treturn uniform( texture.matrix ).mul( vec3( uvNode, 1 ) ).xy;\n\n\t}\n\n\tsetUpdateMatrix( value ) {\n\n\t\tthis.updateMatrix = value;\n\t\tthis.updateType = value ? NodeUpdateType.FRAME : NodeUpdateType.NONE;\n\n\t\treturn this;\n\n\t}\n\n\tsetupUV( builder, uvNode ) {\n\n\t\tconst texture = this.value;\n\n\t\tif ( builder.isFlipY() && ( texture.isRenderTargetTexture === true || texture.isFramebufferTexture === true || texture.isDepthTexture === true ) ) {\n\n\t\t\tuvNode = uvNode.setY( uvNode.y.oneMinus() );\n\n\t\t}\n\n\t\treturn uvNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\t//\n\n\t\tlet uvNode = this.uvNode;\n\n\t\tif ( ( uvNode === null || builder.context.forceUVContext === true ) && builder.context.getUV ) {\n\n\t\t\tuvNode = builder.context.getUV( this );\n\n\t\t}\n\n\t\tif ( ! uvNode ) uvNode = this.getDefaultUV();\n\n\t\tif ( this.updateMatrix === true ) {\n\n\t\t\tuvNode = this.getTransformedUV( uvNode );\n\n\t\t}\n\n\t\tuvNode = this.setupUV( builder, uvNode );\n\n\t\t//\n\n\t\tlet levelNode = this.levelNode;\n\n\t\tif ( levelNode === null && builder.context.getTextureLevel ) {\n\n\t\t\tlevelNode = builder.context.getTextureLevel( this );\n\n\t\t}\n\n\t\t//\n\n\t\tproperties.uvNode = uvNode;\n\t\tproperties.levelNode = levelNode;\n\t\tproperties.compareNode = this.compareNode;\n\t\tproperties.depthNode = this.depthNode;\n\n\t}\n\n\tgenerateUV( builder, uvNode ) {\n\n\t\treturn uvNode.build( builder, this.sampler === true ? 'vec2' : 'ivec2' );\n\n\t}\n\n\tgenerateSnippet( builder, textureProperty, uvSnippet, levelSnippet, depthSnippet, compareSnippet ) {\n\n\t\tconst texture = this.value;\n\n\t\tlet snippet;\n\n\t\tif ( levelSnippet ) {\n\n\t\t\tsnippet = builder.generateTextureLevel( texture, textureProperty, uvSnippet, levelSnippet, depthSnippet );\n\n\t\t} else if ( compareSnippet ) {\n\n\t\t\tsnippet = builder.generateTextureCompare( texture, textureProperty, uvSnippet, compareSnippet, depthSnippet );\n\n\t\t} else if ( this.sampler === false ) {\n\n\t\t\tsnippet = builder.generateTextureLoad( texture, textureProperty, uvSnippet, depthSnippet );\n\n\t\t} else {\n\n\t\t\tsnippet = builder.generateTexture( texture, textureProperty, uvSnippet, depthSnippet );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst texture = this.value;\n\n\t\tif ( ! texture || texture.isTexture !== true ) {\n\n\t\t\tthrow new Error( 'TextureNode: Need a three.js texture.' );\n\n\t\t}\n\n\t\tconst textureProperty = super.generate( builder, 'property' );\n\n\t\tif ( output === 'sampler' ) {\n\n\t\t\treturn textureProperty + '_sampler';\n\n\t\t} else if ( builder.isReference( output ) ) {\n\n\t\t\treturn textureProperty;\n\n\t\t} else {\n\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tlet propertyName = nodeData.propertyName;\n\n\t\t\tif ( propertyName === undefined ) {\n\n\t\t\t\tconst { uvNode, levelNode, compareNode, depthNode } = properties;\n\n\t\t\t\tconst uvSnippet = this.generateUV( builder, uvNode );\n\t\t\t\tconst levelSnippet = levelNode ? levelNode.build( builder, 'float' ) : null;\n\t\t\t\tconst depthSnippet = depthNode ? depthNode.build( builder, 'int' ) : null;\n\t\t\t\tconst compareSnippet = compareNode ? compareNode.build( builder, 'float' ) : null;\n\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this );\n\n\t\t\t\tpropertyName = builder.getPropertyName( nodeVar );\n\n\t\t\t\tconst snippet = this.generateSnippet( builder, textureProperty, uvSnippet, levelSnippet, depthSnippet, compareSnippet );\n\n\t\t\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}` );\n\n\t\t\t\tif ( builder.context.tempWrite !== false ) {\n\n\t\t\t\t\tnodeData.snippet = snippet;\n\t\t\t\t\tnodeData.propertyName = propertyName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlet snippet = propertyName;\n\t\t\tconst nodeType = this.getNodeType( builder );\n\n\t\t\tif ( builder.needsColorSpaceToLinear( texture ) ) {\n\n\t\t\t\tsnippet = colorSpaceToLinear( expression( snippet, nodeType ), texture.colorSpace ).setup( builder ).build( builder, nodeType );\n\n\t\t\t}\n\n\t\t\treturn builder.format( snippet, nodeType, output );\n\n\t\t}\n\n\t}\n\n\tsetSampler( value ) {\n\n\t\tthis.sampler = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetSampler() {\n\n\t\treturn this.sampler;\n\n\t}\n\n\t// @TODO: Move to TSL\n\n\tuv( uvNode ) {\n\n\t\tconst textureNode = this.clone();\n\t\ttextureNode.uvNode = uvNode;\n\t\ttextureNode.referenceNode = this;\n\n\t\treturn nodeObject( textureNode );\n\n\t}\n\n\tblur( levelNode ) {\n\n\t\tconst textureNode = this.clone();\n\t\ttextureNode.levelNode = levelNode.mul( maxMipLevel( textureNode ) );\n\t\ttextureNode.referenceNode = this;\n\n\t\treturn nodeObject( textureNode );\n\n\t}\n\n\tlevel( levelNode ) {\n\n\t\tconst textureNode = this.clone();\n\t\ttextureNode.levelNode = levelNode;\n\t\ttextureNode.referenceNode = this;\n\n\t\treturn textureNode;\n\n\t}\n\n\tsize( levelNode ) {\n\n\t\treturn textureSize( this, levelNode );\n\n\t}\n\n\tcompare( compareNode ) {\n\n\t\tconst textureNode = this.clone();\n\t\ttextureNode.compareNode = nodeObject( compareNode );\n\t\ttextureNode.referenceNode = this;\n\n\t\treturn nodeObject( textureNode );\n\n\t}\n\n\tdepth( depthNode ) {\n\n\t\tconst textureNode = this.clone();\n\t\ttextureNode.depthNode = nodeObject( depthNode );\n\t\ttextureNode.referenceNode = this;\n\n\t\treturn nodeObject( textureNode );\n\n\t}\n\n\t// --\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.value = this.value.toJSON( data.meta ).uuid;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.value = data.meta.textures[ data.value ];\n\n\t}\n\n\tupdate() {\n\n\t\tconst texture = this.value;\n\n\t\tif ( texture.matrixAutoUpdate === true ) {\n\n\t\t\ttexture.updateMatrix();\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\tconst newNode = new this.constructor( this.value, this.uvNode, this.levelNode );\n\t\tnewNode.sampler = this.sampler;\n\n\t\treturn newNode;\n\n\t}\n\n}\n\nexport default TextureNode;\n\nexport const texture = nodeProxy( TextureNode );\nexport const textureLoad = ( ...params ) => texture( ...params ).setSampler( false );\n\n//export const textureLevel = ( value, uv, level ) => texture( value, uv ).level( level );\n\nexport const sampler = ( aTexture ) => ( aTexture.isNode === true ? aTexture : texture( aTexture ) ).convert( 'sampler' );\n\naddNodeElement( 'texture', texture );\n//addNodeElement( 'textureLevel', textureLevel );\n\naddNodeClass( 'TextureNode', TextureNode );\n","import { addNodeClass } from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass UVNode extends AttributeNode {\n\n\tconstructor( index = 0 ) {\n\n\t\tsuper( null, 'vec2' );\n\n\t\tthis.isUVNode = true;\n\n\t\tthis.index = index;\n\n\t}\n\n\tgetAttributeName( /*builder*/ ) {\n\n\t\tconst index = this.index;\n\n\t\treturn 'uv' + ( index > 0 ? index : '' );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.index = this.index;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.index = data.index;\n\n\t}\n\n}\n\nexport default UVNode;\n\nexport const uv = ( ...params ) => nodeObject( new UVNode( ...params ) );\n\naddNodeClass( 'UVNode', UVNode );\n","import Node from '../core/Node.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass TextureSizeNode extends Node {\n\n\tconstructor( textureNode, levelNode = null ) {\n\n\t\tsuper( 'uvec2' );\n\n\t\tthis.isTextureSizeNode = true;\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.levelNode = levelNode;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst textureProperty = this.textureNode.build( builder, 'property' );\n\t\tconst levelNode = this.levelNode.build( builder, 'int' );\n\n\t\treturn builder.format( `${builder.getMethod( 'textureDimensions' )}( ${textureProperty}, ${levelNode} )`, this.getNodeType( builder ), output );\n\n\t}\n\n}\n\nexport default TextureSizeNode;\n\nexport const textureSize = nodeProxy( TextureSizeNode );\n\naddNodeElement( 'textureSize', textureSize );\n\naddNodeClass( 'TextureSizeNode', TextureSizeNode );\n","import TempNode from '../core/TempNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeObject, nodeProxy, vec4 } from '../shadernode/ShaderNode.js';\n\nimport { LinearSRGBColorSpace, SRGBColorSpace } from 'three';\n\nconst sRGBToLinearShader = tslFn( ( inputs ) => {\n\n\tconst { value } = inputs;\n\tconst { rgb } = value;\n\n\tconst a = rgb.mul( 0.9478672986 ).add( 0.0521327014 ).pow( 2.4 );\n\tconst b = rgb.mul( 0.0773993808 );\n\tconst factor = rgb.lessThanEqual( 0.04045 );\n\n\tconst rgbResult = mix( a, b, factor );\n\n\treturn vec4( rgbResult, value.a );\n\n} );\n\nconst LinearTosRGBShader = tslFn( ( inputs ) => {\n\n\tconst { value } = inputs;\n\tconst { rgb } = value;\n\n\tconst a = rgb.pow( 0.41666 ).mul( 1.055 ).sub( 0.055 );\n\tconst b = rgb.mul( 12.92 );\n\tconst factor = rgb.lessThanEqual( 0.0031308 );\n\n\tconst rgbResult = mix( a, b, factor );\n\n\treturn vec4( rgbResult, value.a );\n\n} );\n\nconst getColorSpaceMethod = ( colorSpace ) => {\n\n\tlet method = null;\n\n\tif ( colorSpace === LinearSRGBColorSpace ) {\n\n\t\tmethod = 'Linear';\n\n\t} else if ( colorSpace === SRGBColorSpace ) {\n\n\t\tmethod = 'sRGB';\n\n\t}\n\n\treturn method;\n\n};\n\nconst getMethod = ( source, target ) => {\n\n\treturn getColorSpaceMethod( source ) + 'To' + getColorSpaceMethod( target );\n\n};\n\nclass ColorSpaceNode extends TempNode {\n\n\tconstructor( method, node ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.method = method;\n\t\tthis.node = node;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { method, node } = this;\n\n\t\tif ( method === ColorSpaceNode.LINEAR_TO_LINEAR )\n\t\t\treturn node;\n\n\t\treturn Methods[ method ]( { value: node } );\n\n\t}\n\n}\n\nColorSpaceNode.LINEAR_TO_LINEAR = 'LinearToLinear';\nColorSpaceNode.LINEAR_TO_sRGB = 'LinearTosRGB';\nColorSpaceNode.sRGB_TO_LINEAR = 'sRGBToLinear';\n\nconst Methods = {\n\t[ ColorSpaceNode.LINEAR_TO_sRGB ]: LinearTosRGBShader,\n\t[ ColorSpaceNode.sRGB_TO_LINEAR ]: sRGBToLinearShader\n};\n\nexport default ColorSpaceNode;\n\nexport const linearToColorSpace = ( node, colorSpace ) => nodeObject( new ColorSpaceNode( getMethod( LinearSRGBColorSpace, colorSpace ), nodeObject( node ) ) );\nexport const colorSpaceToLinear = ( node, colorSpace ) => nodeObject( new ColorSpaceNode( getMethod( colorSpace, LinearSRGBColorSpace ), nodeObject( node ) ) );\n\nexport const linearTosRGB = nodeProxy( ColorSpaceNode, ColorSpaceNode.LINEAR_TO_sRGB );\nexport const sRGBToLinear = nodeProxy( ColorSpaceNode, ColorSpaceNode.sRGB_TO_LINEAR );\n\naddNodeElement( 'linearTosRGB', linearTosRGB );\naddNodeElement( 'sRGBToLinear', sRGBToLinear );\naddNodeElement( 'linearToColorSpace', linearToColorSpace );\naddNodeElement( 'colorSpaceToLinear', colorSpaceToLinear );\n\naddNodeClass( 'ColorSpaceNode', ColorSpaceNode );\n","import TempNode from '../core/TempNode.js';\nimport { sub, mul, div } from './OperatorNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeObject, nodeProxy, float, vec3, vec4 } from '../shadernode/ShaderNode.js';\n\nclass MathNode extends TempNode {\n\n\tconstructor( method, aNode, bNode = null, cNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.method = method;\n\n\t\tthis.aNode = aNode;\n\t\tthis.bNode = bNode;\n\t\tthis.cNode = cNode;\n\n\t}\n\n\tgetInputType( builder ) {\n\n\t\tconst aType = this.aNode.getNodeType( builder );\n\t\tconst bType = this.bNode ? this.bNode.getNodeType( builder ) : null;\n\t\tconst cType = this.cNode ? this.cNode.getNodeType( builder ) : null;\n\n\t\tconst aLen = builder.isMatrix( aType ) ? 0 : builder.getTypeLength( aType );\n\t\tconst bLen = builder.isMatrix( bType ) ? 0 : builder.getTypeLength( bType );\n\t\tconst cLen = builder.isMatrix( cType ) ? 0 : builder.getTypeLength( cType );\n\n\t\tif ( aLen > bLen && aLen > cLen ) {\n\n\t\t\treturn aType;\n\n\t\t} else if ( bLen > cLen ) {\n\n\t\t\treturn bType;\n\n\t\t} else if ( cLen > aLen ) {\n\n\t\t\treturn cType;\n\n\t\t}\n\n\t\treturn aType;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst method = this.method;\n\n\t\tif ( method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT ) {\n\n\t\t\treturn 'float';\n\n\t\t} else if ( method === MathNode.CROSS ) {\n\n\t\t\treturn 'vec3';\n\n\t\t} else if ( method === MathNode.ALL ) {\n\n\t\t\treturn 'bool';\n\n\t\t} else if ( method === MathNode.EQUALS ) {\n\n\t\t\treturn builder.changeComponentType( this.aNode.getNodeType( builder ), 'bool' );\n\n\t\t} else if ( method === MathNode.MOD ) {\n\n\t\t\treturn this.aNode.getNodeType( builder );\n\n\t\t} else {\n\n\t\t\treturn this.getInputType( builder );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst method = this.method;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst inputType = this.getInputType( builder );\n\n\t\tconst a = this.aNode;\n\t\tconst b = this.bNode;\n\t\tconst c = this.cNode;\n\n\t\tconst isWebGL = builder.renderer.isWebGLRenderer === true;\n\n\t\tif ( method === MathNode.TRANSFORM_DIRECTION ) {\n\n\t\t\t// dir can be either a direction vector or a normal vector\n\t\t\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\t\t\tlet tA = a;\n\t\t\tlet tB = b;\n\n\t\t\tif ( builder.isMatrix( tA.getNodeType( builder ) ) ) {\n\n\t\t\t\ttB = vec4( vec3( tB ), 0.0 );\n\n\t\t\t} else {\n\n\t\t\t\ttA = vec4( vec3( tA ), 0.0 );\n\n\t\t\t}\n\n\t\t\tconst mulNode = mul( tA, tB ).xyz;\n\n\t\t\treturn normalize( mulNode ).build( builder, output );\n\n\t\t} else if ( method === MathNode.NEGATE ) {\n\n\t\t\treturn builder.format( '( - ' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else if ( method === MathNode.ONE_MINUS ) {\n\n\t\t\treturn sub( 1.0, a ).build( builder, output );\n\n\t\t} else if ( method === MathNode.RECIPROCAL ) {\n\n\t\t\treturn div( 1.0, a ).build( builder, output );\n\n\t\t} else if ( method === MathNode.DIFFERENCE ) {\n\n\t\t\treturn abs( sub( a, b ) ).build( builder, output );\n\n\t\t} else {\n\n\t\t\tconst params = [];\n\n\t\t\tif ( method === MathNode.CROSS || method === MathNode.MOD ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, type ),\n\t\t\t\t\tb.build( builder, type )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.STEP ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, builder.getTypeLength( a.getNodeType( builder ) ) === 1 ? 'float' : inputType ),\n\t\t\t\t\tb.build( builder, inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( ( isWebGL && ( method === MathNode.MIN || method === MathNode.MAX ) ) || method === MathNode.MOD ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, builder.getTypeLength( b.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.REFRACT ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, 'float' )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.MIX ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, builder.getTypeLength( c.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tparams.push( a.build( builder, inputType ) );\n\t\t\t\tif ( b !== null ) params.push( b.build( builder, inputType ) );\n\t\t\t\tif ( c !== null ) params.push( c.build( builder, inputType ) );\n\n\t\t\t}\n\n\t\t\treturn builder.format( `${ builder.getMethod( method, type ) }( ${params.join( ', ' )} )`, type, output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\n// 1 input\n\nMathNode.ALL = 'all';\nMathNode.ANY = 'any';\nMathNode.EQUALS = 'equals';\n\nMathNode.RADIANS = 'radians';\nMathNode.DEGREES = 'degrees';\nMathNode.EXP = 'exp';\nMathNode.EXP2 = 'exp2';\nMathNode.LOG = 'log';\nMathNode.LOG2 = 'log2';\nMathNode.SQRT = 'sqrt';\nMathNode.INVERSE_SQRT = 'inversesqrt';\nMathNode.FLOOR = 'floor';\nMathNode.CEIL = 'ceil';\nMathNode.NORMALIZE = 'normalize';\nMathNode.FRACT = 'fract';\nMathNode.SIN = 'sin';\nMathNode.COS = 'cos';\nMathNode.TAN = 'tan';\nMathNode.ASIN = 'asin';\nMathNode.ACOS = 'acos';\nMathNode.ATAN = 'atan';\nMathNode.ABS = 'abs';\nMathNode.SIGN = 'sign';\nMathNode.LENGTH = 'length';\nMathNode.NEGATE = 'negate';\nMathNode.ONE_MINUS = 'oneMinus';\nMathNode.DFDX = 'dFdx';\nMathNode.DFDY = 'dFdy';\nMathNode.ROUND = 'round';\nMathNode.RECIPROCAL = 'reciprocal';\nMathNode.TRUNC = 'trunc';\nMathNode.FWIDTH = 'fwidth';\nMathNode.BITCAST = 'bitcast';\n\n// 2 inputs\n\nMathNode.ATAN2 = 'atan2';\nMathNode.MIN = 'min';\nMathNode.MAX = 'max';\nMathNode.MOD = 'mod';\nMathNode.STEP = 'step';\nMathNode.REFLECT = 'reflect';\nMathNode.DISTANCE = 'distance';\nMathNode.DIFFERENCE = 'difference';\nMathNode.DOT = 'dot';\nMathNode.CROSS = 'cross';\nMathNode.POW = 'pow';\nMathNode.TRANSFORM_DIRECTION = 'transformDirection';\n\n// 3 inputs\n\nMathNode.MIX = 'mix';\nMathNode.CLAMP = 'clamp';\nMathNode.REFRACT = 'refract';\nMathNode.SMOOTHSTEP = 'smoothstep';\nMathNode.FACEFORWARD = 'faceforward';\n\nexport default MathNode;\n\nexport const EPSILON = float( 1e-6 );\nexport const INFINITY = float( 1e6 );\nexport const PI = float( Math.PI );\nexport const PI2 = float( Math.PI * 2 );\n\nexport const all = nodeProxy( MathNode, MathNode.ALL );\nexport const any = nodeProxy( MathNode, MathNode.ANY );\nexport const equals = nodeProxy( MathNode, MathNode.EQUALS );\n\nexport const radians = nodeProxy( MathNode, MathNode.RADIANS );\nexport const degrees = nodeProxy( MathNode, MathNode.DEGREES );\nexport const exp = nodeProxy( MathNode, MathNode.EXP );\nexport const exp2 = nodeProxy( MathNode, MathNode.EXP2 );\nexport const log = nodeProxy( MathNode, MathNode.LOG );\nexport const log2 = nodeProxy( MathNode, MathNode.LOG2 );\nexport const sqrt = nodeProxy( MathNode, MathNode.SQRT );\nexport const inverseSqrt = nodeProxy( MathNode, MathNode.INVERSE_SQRT );\nexport const floor = nodeProxy( MathNode, MathNode.FLOOR );\nexport const ceil = nodeProxy( MathNode, MathNode.CEIL );\nexport const normalize = nodeProxy( MathNode, MathNode.NORMALIZE );\nexport const fract = nodeProxy( MathNode, MathNode.FRACT );\nexport const sin = nodeProxy( MathNode, MathNode.SIN );\nexport const cos = nodeProxy( MathNode, MathNode.COS );\nexport const tan = nodeProxy( MathNode, MathNode.TAN );\nexport const asin = nodeProxy( MathNode, MathNode.ASIN );\nexport const acos = nodeProxy( MathNode, MathNode.ACOS );\nexport const atan = nodeProxy( MathNode, MathNode.ATAN );\nexport const abs = nodeProxy( MathNode, MathNode.ABS );\nexport const sign = nodeProxy( MathNode, MathNode.SIGN );\nexport const length = nodeProxy( MathNode, MathNode.LENGTH );\nexport const negate = nodeProxy( MathNode, MathNode.NEGATE );\nexport const oneMinus = nodeProxy( MathNode, MathNode.ONE_MINUS );\nexport const dFdx = nodeProxy( MathNode, MathNode.DFDX );\nexport const dFdy = nodeProxy( MathNode, MathNode.DFDY );\nexport const round = nodeProxy( MathNode, MathNode.ROUND );\nexport const reciprocal = nodeProxy( MathNode, MathNode.RECIPROCAL );\nexport const trunc = nodeProxy( MathNode, MathNode.TRUNC );\nexport const fwidth = nodeProxy( MathNode, MathNode.FWIDTH );\nexport const bitcast = nodeProxy( MathNode, MathNode.BITCAST );\n\nexport const atan2 = nodeProxy( MathNode, MathNode.ATAN2 );\nexport const min = nodeProxy( MathNode, MathNode.MIN );\nexport const max = nodeProxy( MathNode, MathNode.MAX );\nexport const mod = nodeProxy( MathNode, MathNode.MOD );\nexport const step = nodeProxy( MathNode, MathNode.STEP );\nexport const reflect = nodeProxy( MathNode, MathNode.REFLECT );\nexport const distance = nodeProxy( MathNode, MathNode.DISTANCE );\nexport const difference = nodeProxy( MathNode, MathNode.DIFFERENCE );\nexport const dot = nodeProxy( MathNode, MathNode.DOT );\nexport const cross = nodeProxy( MathNode, MathNode.CROSS );\nexport const pow = nodeProxy( MathNode, MathNode.POW );\nexport const pow2 = nodeProxy( MathNode, MathNode.POW, 2 );\nexport const pow3 = nodeProxy( MathNode, MathNode.POW, 3 );\nexport const pow4 = nodeProxy( MathNode, MathNode.POW, 4 );\nexport const transformDirection = nodeProxy( MathNode, MathNode.TRANSFORM_DIRECTION );\n\nexport const cbrt = ( a ) => mul( sign( a ), pow( abs( a ), 1.0 / 3.0 ) );\nexport const lengthSq = ( a ) => dot( a, a );\nexport const mix = nodeProxy( MathNode, MathNode.MIX );\nexport const clamp = ( value, low = 0, high = 1 ) => nodeObject( new MathNode( MathNode.CLAMP, nodeObject( value ), nodeObject( low ), nodeObject( high ) ) );\nexport const saturate = ( value ) => clamp( value );\nexport const refract = nodeProxy( MathNode, MathNode.REFRACT );\nexport const smoothstep = nodeProxy( MathNode, MathNode.SMOOTHSTEP );\nexport const faceForward = nodeProxy( MathNode, MathNode.FACEFORWARD );\n\nexport const mixElement = ( t, e1, e2 ) => mix( e1, e2, t );\nexport const smoothstepElement = ( x, low, high ) => smoothstep( low, high, x );\n\naddNodeElement( 'all', all );\naddNodeElement( 'any', any );\naddNodeElement( 'equals', equals );\n\naddNodeElement( 'radians', radians );\naddNodeElement( 'degrees', degrees );\naddNodeElement( 'exp', exp );\naddNodeElement( 'exp2', exp2 );\naddNodeElement( 'log', log );\naddNodeElement( 'log2', log2 );\naddNodeElement( 'sqrt', sqrt );\naddNodeElement( 'inverseSqrt', inverseSqrt );\naddNodeElement( 'floor', floor );\naddNodeElement( 'ceil', ceil );\naddNodeElement( 'normalize', normalize );\naddNodeElement( 'fract', fract );\naddNodeElement( 'sin', sin );\naddNodeElement( 'cos', cos );\naddNodeElement( 'tan', tan );\naddNodeElement( 'asin', asin );\naddNodeElement( 'acos', acos );\naddNodeElement( 'atan', atan );\naddNodeElement( 'abs', abs );\naddNodeElement( 'sign', sign );\naddNodeElement( 'length', length );\naddNodeElement( 'lengthSq', lengthSq );\naddNodeElement( 'negate', negate );\naddNodeElement( 'oneMinus', oneMinus );\naddNodeElement( 'dFdx', dFdx );\naddNodeElement( 'dFdy', dFdy );\naddNodeElement( 'round', round );\naddNodeElement( 'reciprocal', reciprocal );\naddNodeElement( 'trunc', trunc );\naddNodeElement( 'fwidth', fwidth );\naddNodeElement( 'atan2', atan2 );\naddNodeElement( 'min', min );\naddNodeElement( 'max', max );\naddNodeElement( 'mod', mod );\naddNodeElement( 'step', step );\naddNodeElement( 'reflect', reflect );\naddNodeElement( 'distance', distance );\naddNodeElement( 'dot', dot );\naddNodeElement( 'cross', cross );\naddNodeElement( 'pow', pow );\naddNodeElement( 'pow2', pow2 );\naddNodeElement( 'pow3', pow3 );\naddNodeElement( 'pow4', pow4 );\naddNodeElement( 'transformDirection', transformDirection );\naddNodeElement( 'mix', mixElement );\naddNodeElement( 'clamp', clamp );\naddNodeElement( 'refract', refract );\naddNodeElement( 'smoothstep', smoothstepElement );\naddNodeElement( 'faceForward', faceForward );\naddNodeElement( 'difference', difference );\naddNodeElement( 'saturate', saturate );\naddNodeElement( 'cbrt', cbrt );\n\naddNodeClass( 'MathNode', MathNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass OperatorNode extends TempNode {\n\n\tconstructor( op, aNode, bNode, ...params ) {\n\n\t\tsuper();\n\n\t\tthis.op = op;\n\n\t\tif ( params.length > 0 ) {\n\n\t\t\tlet finalBNode = bNode;\n\n\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\n\n\t\t\t\tfinalBNode = new OperatorNode( op, finalBNode, params[ i ] );\n\n\t\t\t}\n\n\t\t\tbNode = finalBNode;\n\n\t\t}\n\n\t\tthis.aNode = aNode;\n\t\tthis.bNode = bNode;\n\n\t}\n\n\tgetNodeType( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst typeA = aNode.getNodeType( builder );\n\t\tconst typeB = typeof bNode !== 'undefined' ? bNode.getNodeType( builder ) : null;\n\n\t\tif ( typeA === 'void' || typeB === 'void' ) {\n\n\t\t\treturn 'void';\n\n\t\t} else if ( op === '%' ) {\n\n\t\t\treturn typeA;\n\n\t\t} else if ( op === '~' || op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<' ) {\n\n\t\t\treturn builder.getIntegerType( typeA );\n\n\t\t} else if ( op === '!' || op === '==' || op === '&&' || op === '||' || op === '^^' ) {\n\n\t\t\treturn 'bool';\n\n\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\n\n\t\t\tconst typeLength = output ? builder.getTypeLength( output ) : Math.max( builder.getTypeLength( typeA ), builder.getTypeLength( typeB ) );\n\n\t\t\treturn typeLength > 1 ? `bvec${ typeLength }` : 'bool';\n\n\t\t} else {\n\n\t\t\tif ( typeA === 'float' && builder.isMatrix( typeB ) ) {\n\n\t\t\t\treturn typeB;\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else if ( builder.getTypeLength( typeB ) > builder.getTypeLength( typeA ) ) {\n\n\t\t\t\t// anytype x anytype: use the greater length vector\n\n\t\t\t\treturn typeB;\n\n\t\t\t}\n\n\t\t\treturn typeA;\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst type = this.getNodeType( builder, output );\n\n\t\tlet typeA = null;\n\t\tlet typeB = null;\n\n\t\tif ( type !== 'void' ) {\n\n\t\t\ttypeA = aNode.getNodeType( builder );\n\t\t\ttypeB = typeof bNode !== 'undefined' ? bNode.getNodeType( builder ) : null;\n\n\t\t\tif ( op === '<' || op === '>' || op === '<=' || op === '>=' || op === '==' ) {\n\n\t\t\t\tif ( builder.isVector( typeA ) ) {\n\n\t\t\t\t\ttypeB = typeA;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttypeA = typeB = 'float';\n\n\t\t\t\t}\n\n\t\t\t} else if ( op === '>>' || op === '<<' ) {\n\n\t\t\t\ttypeA = type;\n\t\t\t\ttypeB = builder.changeComponentType( typeB, 'uint' );\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\ttypeB = builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\ttypeA = builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else {\n\n\t\t\t\t// anytype x anytype\n\n\t\t\t\ttypeA = typeB = type;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttypeA = typeB = type;\n\n\t\t}\n\n\t\tconst a = aNode.build( builder, typeA );\n\t\tconst b = typeof bNode !== 'undefined' ? bNode.build( builder, typeB ) : null;\n\n\t\tconst outputLength = builder.getTypeLength( output );\n\t\tconst fnOpSnippet = builder.getFunctionOperator( op );\n\n\t\tif ( output !== 'void' ) {\n\n\t\t\tif ( op === '<' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThan' ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else if ( op === '<=' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThanEqual' ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else if ( op === '>' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThan' ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else if ( op === '>=' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThanEqual' ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else if ( op === '!' || op === '~' ) {\n\n\t\t\t\treturn builder.format( `(${op}${a})`, typeA, output );\n\n\t\t\t} else if ( fnOpSnippet ) {\n\n\t\t\t\treturn builder.format( `${ fnOpSnippet }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else {\n\n\t\t\t\treturn builder.format( `( ${ a } ${ op } ${ b } )`, type, output );\n\n\t\t\t}\n\n\t\t} else if ( typeA !== 'void' ) {\n\n\t\t\tif ( fnOpSnippet ) {\n\n\t\t\t\treturn builder.format( `${ fnOpSnippet }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else {\n\n\t\t\t\treturn builder.format( `${ a } ${ op } ${ b }`, type, output );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.op = this.op;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.op = data.op;\n\n\t}\n\n}\n\nexport default OperatorNode;\n\nexport const add = nodeProxy( OperatorNode, '+' );\nexport const sub = nodeProxy( OperatorNode, '-' );\nexport const mul = nodeProxy( OperatorNode, '*' );\nexport const div = nodeProxy( OperatorNode, '/' );\nexport const remainder = nodeProxy( OperatorNode, '%' );\nexport const equal = nodeProxy( OperatorNode, '==' );\nexport const notEqual = nodeProxy( OperatorNode, '!=' );\nexport const lessThan = nodeProxy( OperatorNode, '<' );\nexport const greaterThan = nodeProxy( OperatorNode, '>' );\nexport const lessThanEqual = nodeProxy( OperatorNode, '<=' );\nexport const greaterThanEqual = nodeProxy( OperatorNode, '>=' );\nexport const and = nodeProxy( OperatorNode, '&&' );\nexport const or = nodeProxy( OperatorNode, '||' );\nexport const not = nodeProxy( OperatorNode, '!' );\nexport const xor = nodeProxy( OperatorNode, '^^' );\nexport const bitAnd = nodeProxy( OperatorNode, '&' );\nexport const bitNot = nodeProxy( OperatorNode, '~' );\nexport const bitOr = nodeProxy( OperatorNode, '|' );\nexport const bitXor = nodeProxy( OperatorNode, '^' );\nexport const shiftLeft = nodeProxy( OperatorNode, '<<' );\nexport const shiftRight = nodeProxy( OperatorNode, '>>' );\n\naddNodeElement( 'add', add );\naddNodeElement( 'sub', sub );\naddNodeElement( 'mul', mul );\naddNodeElement( 'div', div );\naddNodeElement( 'remainder', remainder );\naddNodeElement( 'equal', equal );\naddNodeElement( 'notEqual', notEqual );\naddNodeElement( 'lessThan', lessThan );\naddNodeElement( 'greaterThan', greaterThan );\naddNodeElement( 'lessThanEqual', lessThanEqual );\naddNodeElement( 'greaterThanEqual', greaterThanEqual );\naddNodeElement( 'and', and );\naddNodeElement( 'or', or );\naddNodeElement( 'not', not );\naddNodeElement( 'xor', xor );\naddNodeElement( 'bitAnd', bitAnd );\naddNodeElement( 'bitNot', bitNot );\naddNodeElement( 'bitOr', bitOr );\naddNodeElement( 'bitXor', bitXor );\naddNodeElement( 'shiftLeft', shiftLeft );\naddNodeElement( 'shiftRight', shiftRight );\n\naddNodeClass( 'OperatorNode', OperatorNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass ExpressionNode extends Node {\n\n\tconstructor( snippet = '', nodeType = 'void' ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.snippet = snippet;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst snippet = this.snippet;\n\n\t\tif ( type === 'void' ) {\n\n\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t} else {\n\n\t\t\treturn builder.format( `( ${ snippet } )`, type, output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default ExpressionNode;\n\nexport const expression = nodeProxy( ExpressionNode );\n\naddNodeClass( 'ExpressionNode', ExpressionNode );\n","import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass MaxMipLevelNode extends UniformNode {\n\n\tconstructor( textureNode ) {\n\n\t\tsuper( 0 );\n\n\t\tthis.textureNode = textureNode;\n\n\t\tthis.updateType = NodeUpdateType.FRAME;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textureNode.value;\n\n\t}\n\n\tupdate() {\n\n\t\tconst texture = this.texture;\n\t\tconst images = texture.images;\n\t\tconst image = ( images && images.length > 0 ) ? ( ( images[ 0 ] && images[ 0 ].image ) || images[ 0 ] ) : texture.image;\n\n\t\tif ( image && image.width !== undefined ) {\n\n\t\t\tconst { width, height } = image;\n\n\t\t\tthis.value = Math.log2( Math.max( width, height ) );\n\n\t\t}\n\n\t}\n\n}\n\nexport default MaxMipLevelNode;\n\nexport const maxMipLevel = nodeProxy( MaxMipLevelNode );\n\naddNodeClass( 'MaxMipLevelNode', MaxMipLevelNode );\n","import UniformNode from '../core/UniformNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass BufferNode extends UniformNode {\n\n\tconstructor( value, bufferType, bufferCount = 0 ) {\n\n\t\tsuper( value, bufferType );\n\n\t\tthis.isBufferNode = true;\n\n\t\tthis.bufferType = bufferType;\n\t\tthis.bufferCount = bufferCount;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'buffer';\n\n\t}\n\n}\n\nexport default BufferNode;\n\nexport const buffer = ( value, type, count ) => nodeObject( new BufferNode( value, type, count ) );\n\naddNodeClass( 'BufferNode', BufferNode );\n","import { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { getValueType } from '../core/NodeUtils.js';\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\nimport BufferNode from './BufferNode.js';\n\nclass UniformsElementNode extends ArrayElementNode {\n\n\tconstructor( arrayBuffer, indexNode ) {\n\n\t\tsuper( arrayBuffer, indexNode );\n\n\t\tthis.isArrayBufferElementNode = true;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getElementType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst snippet = super.generate( builder );\n\t\tconst type = this.getNodeType();\n\n\t\treturn builder.format( snippet, 'vec4', type );\n\n\t}\n\n}\n\nclass UniformsNode extends BufferNode {\n\n\tconstructor( value, elementType = null ) {\n\n\t\tsuper( null, 'vec4' );\n\n\t\tthis.array = value;\n\t\tthis.elementType = elementType;\n\n\t\tthis._elementType = null;\n\t\tthis._elementLength = 0;\n\n\t\tthis.updateType = NodeUpdateType.RENDER;\n\n\t\tthis.isArrayBufferNode = true;\n\n\t}\n\n\tgetElementType() {\n\n\t\treturn this.elementType || this._elementType;\n\n\t}\n\n\tgetElementLength() {\n\n\t\treturn this._elementLength;\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tconst { array, value } = this;\n\n\t\tconst elementLength = this.getElementLength();\n\t\tconst elementType = this.getElementType();\n\n\t\tif ( elementLength === 1 ) {\n\n\t\t\tfor ( let i = 0; i < array.length; i ++ ) {\n\n\t\t\t\tconst index = i * 4;\n\n\t\t\t\tvalue[ index ] = array[ i ];\n\n\t\t\t}\n\n\t\t} else if ( elementType === 'color' ) {\n\n\t\t\tfor ( let i = 0; i < array.length; i ++ ) {\n\n\t\t\t\tconst index = i * 4;\n\t\t\t\tconst vector = array[ i ];\n\n\t\t\t\tvalue[ index ] = vector.r;\n\t\t\t\tvalue[ index + 1 ] = vector.g;\n\t\t\t\tvalue[ index + 2 ] = vector.b || 0;\n\t\t\t\t//value[ index + 3 ] = vector.a || 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < array.length; i ++ ) {\n\n\t\t\t\tconst index = i * 4;\n\t\t\t\tconst vector = array[ i ];\n\n\t\t\t\tvalue[ index ] = vector.x;\n\t\t\t\tvalue[ index + 1 ] = vector.y;\n\t\t\t\tvalue[ index + 2 ] = vector.z || 0;\n\t\t\t\tvalue[ index + 3 ] = vector.w || 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst length = this.array.length;\n\n\t\tthis._elementType = this.elementType === null ? getValueType( this.array[ 0 ] ) : this.elementType;\n\t\tthis._elementLength = builder.getTypeLength( this._elementType );\n\n\t\tthis.value = new Float32Array( length * 4 );\n\t\tthis.bufferCount = length;\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\telement( indexNode ) {\n\n\t\treturn nodeObject( new UniformsElementNode( this, nodeObject( indexNode ) ) );\n\n\t}\n\n}\n\nexport default UniformsNode;\n\nexport const uniforms = ( values, nodeType ) => nodeObject( new UniformsNode( values, nodeType ) );\n\naddNodeClass( 'UniformsNode', UniformsNode );\n","import ReferenceNode from './ReferenceNode.js';\n//import { renderGroup } from '../core/UniformGroupNode.js';\n//import { NodeUpdateType } from '../core/constants.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass MaterialReferenceNode extends ReferenceNode {\n\n\tconstructor( property, inputType, material = null ) {\n\n\t\tsuper( property, inputType, material );\n\n\t\tthis.material = material;\n\n\t\t//this.updateType = NodeUpdateType.RENDER;\n\n\t}\n\n\t/*setNodeType( node ) {\n\n\t\tsuper.setNodeType( node );\n\n\t\tthis.node.groupNode = renderGroup;\n\n\t}*/\n\n\tupdateReference( state ) {\n\n\t\tthis.reference = this.material !== null ? this.material : state.material;\n\n\t\treturn this.reference;\n\n\t}\n\n}\n\nexport default MaterialReferenceNode;\n\nexport const materialReference = ( name, type, material ) => nodeObject( new MaterialReferenceNode( name, type, material ) );\n\naddNodeClass( 'MaterialReferenceNode', MaterialReferenceNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { property } from '../core/PropertyNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { modelNormalMatrix } from './ModelNode.js';\nimport { nodeImmutable, vec3 } from '../shadernode/ShaderNode.js';\n\nclass NormalNode extends Node {\n\n\tconstructor( scope = NormalNode.LOCAL ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `normal-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === NormalNode.GEOMETRY ) {\n\n\t\t\tconst geometryAttribute = builder.hasGeometryAttribute( 'normal' );\n\n\t\t\tif ( geometryAttribute === false ) {\n\n\t\t\t\toutputNode = vec3( 0, 1, 0 );\n\n\t\t\t} else {\n\n\t\t\t\toutputNode = attribute( 'normal', 'vec3' );\n\n\t\t\t}\n\n\t\t} else if ( scope === NormalNode.LOCAL ) {\n\n\t\t\toutputNode = varying( normalGeometry );\n\n\t\t} else if ( scope === NormalNode.VIEW ) {\n\n\t\t\tconst vertexNode = modelNormalMatrix.mul( normalLocal );\n\t\t\toutputNode = normalize( varying( vertexNode ) );\n\n\t\t} else if ( scope === NormalNode.WORLD ) {\n\n\t\t\t// To use inverseTransformDirection only inverse the param order like this: cameraViewMatrix.transformDirection( normalView )\n\t\t\tconst vertexNode = normalView.transformDirection( cameraViewMatrix );\n\t\t\toutputNode = normalize( varying( vertexNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nNormalNode.GEOMETRY = 'geometry';\nNormalNode.LOCAL = 'local';\nNormalNode.VIEW = 'view';\nNormalNode.WORLD = 'world';\n\nexport default NormalNode;\n\nexport const normalGeometry = nodeImmutable( NormalNode, NormalNode.GEOMETRY );\nexport const normalLocal = nodeImmutable( NormalNode, NormalNode.LOCAL ).temp( 'Normal' );\nexport const normalView = nodeImmutable( NormalNode, NormalNode.VIEW );\nexport const normalWorld = nodeImmutable( NormalNode, NormalNode.WORLD );\nexport const transformedNormalView = property( 'vec3', 'TransformedNormalView' );\nexport const transformedNormalWorld = transformedNormalView.transformDirection( cameraViewMatrix ).normalize();\nexport const transformedClearcoatNormalView = property( 'vec3', 'TransformedClearcoatNormalView' );\n\naddNodeClass( 'NormalNode', NormalNode );\n","import Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\n//import { sharedUniformGroup } from '../core/UniformGroupNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\n//const cameraGroup = sharedUniformGroup( 'camera' );\n\nclass CameraNode extends Object3DNode {\n\n\tconstructor( scope = CameraNode.POSITION ) {\n\n\t\tsuper( scope );\n\n\t\tthis.updateType = NodeUpdateType.RENDER;\n\n\t\t//this._uniformNode.groupNode = cameraGroup;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\treturn 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\treturn 'float';\n\n\t\t}\n\n\t\treturn super.getNodeType( builder );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst camera = frame.camera;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\t//cameraGroup.needsUpdate = true;\n\n\t\tif ( scope === CameraNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\n\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrix;\n\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrixInverse;\n\n\t\t} else if ( scope === CameraNode.NEAR ) {\n\n\t\t\tuniformNode.value = camera.near;\n\n\t\t} else if ( scope === CameraNode.FAR ) {\n\n\t\t\tuniformNode.value = camera.far;\n\n\t\t} else if ( scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\tuniformNode.value = 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 );\n\n\t\t} else {\n\n\t\t\tthis.object3d = camera;\n\n\t\t\tsuper.update( frame );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX || scope === CameraNode.PROJECTION_MATRIX_INVERSE ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR || scope === CameraNode.LOG_DEPTH ) {\n\n\t\t\tthis._uniformNode.nodeType = 'float';\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\nCameraNode.PROJECTION_MATRIX_INVERSE = 'projectionMatrixInverse';\nCameraNode.NEAR = 'near';\nCameraNode.FAR = 'far';\nCameraNode.LOG_DEPTH = 'logDepth';\n\nexport default CameraNode;\n\nexport const cameraProjectionMatrix = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX );\nexport const cameraProjectionMatrixInverse = nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX_INVERSE );\nexport const cameraNear = nodeImmutable( CameraNode, CameraNode.NEAR );\nexport const cameraFar = nodeImmutable( CameraNode, CameraNode.FAR );\nexport const cameraLogDepth = nodeImmutable( CameraNode, CameraNode.LOG_DEPTH );\nexport const cameraViewMatrix = nodeImmutable( CameraNode, CameraNode.VIEW_MATRIX );\nexport const cameraNormalMatrix = nodeImmutable( CameraNode, CameraNode.NORMAL_MATRIX );\nexport const cameraWorldMatrix = nodeImmutable( CameraNode, CameraNode.WORLD_MATRIX );\nexport const cameraPosition = nodeImmutable( CameraNode, CameraNode.POSITION );\n\naddNodeClass( 'CameraNode', CameraNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nimport { Vector3 } from 'three';\n\nclass Object3DNode extends Node {\n\n\tconstructor( scope = Object3DNode.VIEW_MATRIX, object3d = null ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\t\tthis.object3d = object3d;\n\n\t\tthis.updateType = NodeUpdateType.OBJECT;\n\n\t\tthis._uniformNode = new UniformNode( null );\n\n\t}\n\n\tgetNodeType() {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\n\n\t\t\treturn 'mat4';\n\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\n\n\t\t\treturn 'mat3';\n\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION || scope === Object3DNode.SCALE ) {\n\n\t\t\treturn 'vec3';\n\n\t\t}\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst object = this.object3d;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === Object3DNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = object.modelViewMatrix;\n\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\n\n\t\t\tuniformNode.value = object.normalMatrix;\n\n\t\t} else if ( scope === Object3DNode.WORLD_MATRIX ) {\n\n\t\t\tuniformNode.value = object.matrixWorld;\n\n\t\t} else if ( scope === Object3DNode.POSITION ) {\n\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\n\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\n\n\t\t} else if ( scope === Object3DNode.SCALE ) {\n\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\n\n\t\t\tuniformNode.value.setFromMatrixScale( object.matrixWorld );\n\n\t\t} else if ( scope === Object3DNode.DIRECTION ) {\n\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\n\n\t\t\tobject.getWorldDirection( uniformNode.value );\n\n\t\t} else if ( scope === Object3DNode.VIEW_POSITION ) {\n\n\t\t\tconst camera = frame.camera;\n\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\n\n\t\t\tuniformNode.value.applyMatrix4( camera.matrixWorldInverse );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat3';\n\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION || scope === Object3DNode.SCALE ) {\n\n\t\t\tthis._uniformNode.nodeType = 'vec3';\n\n\t\t}\n\n\t\treturn this._uniformNode.build( builder );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nObject3DNode.VIEW_MATRIX = 'viewMatrix';\nObject3DNode.NORMAL_MATRIX = 'normalMatrix';\nObject3DNode.WORLD_MATRIX = 'worldMatrix';\nObject3DNode.POSITION = 'position';\nObject3DNode.SCALE = 'scale';\nObject3DNode.VIEW_POSITION = 'viewPosition';\nObject3DNode.DIRECTION = 'direction';\n\nexport default Object3DNode;\n\nexport const objectDirection = nodeProxy( Object3DNode, Object3DNode.DIRECTION );\nexport const objectViewMatrix = nodeProxy( Object3DNode, Object3DNode.VIEW_MATRIX );\nexport const objectNormalMatrix = nodeProxy( Object3DNode, Object3DNode.NORMAL_MATRIX );\nexport const objectWorldMatrix = nodeProxy( Object3DNode, Object3DNode.WORLD_MATRIX );\nexport const objectPosition = nodeProxy( Object3DNode, Object3DNode.POSITION );\nexport const objectScale = nodeProxy( Object3DNode, Object3DNode.SCALE );\nexport const objectViewPosition = nodeProxy( Object3DNode, Object3DNode.VIEW_POSITION );\n\naddNodeClass( 'Object3DNode', Object3DNode );\n","import Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass ModelNode extends Object3DNode {\n\n\tconstructor( scope = ModelNode.VIEW_MATRIX ) {\n\n\t\tsuper( scope );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tthis.object3d = frame.object;\n\n\t\tsuper.update( frame );\n\n\t}\n\n}\n\nexport default ModelNode;\n\nexport const modelDirection = nodeImmutable( ModelNode, ModelNode.DIRECTION );\nexport const modelViewMatrix = nodeImmutable( ModelNode, ModelNode.VIEW_MATRIX ).label( 'modelViewMatrix' ).temp( 'ModelViewMatrix' );\nexport const modelNormalMatrix = nodeImmutable( ModelNode, ModelNode.NORMAL_MATRIX );\nexport const modelWorldMatrix = nodeImmutable( ModelNode, ModelNode.WORLD_MATRIX );\nexport const modelPosition = nodeImmutable( ModelNode, ModelNode.POSITION );\nexport const modelScale = nodeImmutable( ModelNode, ModelNode.SCALE );\nexport const modelViewPosition = nodeImmutable( ModelNode, ModelNode.VIEW_POSITION );\n\naddNodeClass( 'ModelNode', ModelNode );\n","import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport { cameraProjectionMatrix } from './CameraNode.js';\nimport { modelViewMatrix } from './ModelNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { varying } from '../core/VaryingNode.js';\n\nclass ModelViewProjectionNode extends TempNode {\n\n\tconstructor( positionNode = null ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.positionNode = positionNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( builder.shaderStage === 'fragment' ) {\n\n\t\t\treturn varying( builder.context.mvp );\n\n\t\t}\n\n\t\tconst position = this.positionNode || positionLocal;\n\n\t\treturn cameraProjectionMatrix.mul( modelViewMatrix ).mul( position );\n\n\t}\n\n}\n\nexport default ModelViewProjectionNode;\n\nexport const modelViewProjection = nodeProxy( ModelViewProjectionNode );\n\naddNodeClass( 'ModelViewProjectionNode', ModelViewProjectionNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { modelWorldMatrix, modelViewMatrix } from './ModelNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass PositionNode extends Node {\n\n\tconstructor( scope = PositionNode.LOCAL ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `position-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === PositionNode.GEOMETRY ) {\n\n\t\t\toutputNode = attribute( 'position', 'vec3' );\n\n\t\t} else if ( scope === PositionNode.LOCAL ) {\n\n\t\t\toutputNode = varying( positionGeometry );\n\n\t\t} else if ( scope === PositionNode.WORLD ) {\n\n\t\t\tconst vertexPositionNode = modelWorldMatrix.mul( positionLocal );\n\t\t\toutputNode = varying( vertexPositionNode );\n\n\t\t} else if ( scope === PositionNode.VIEW ) {\n\n\t\t\tconst vertexPositionNode = modelViewMatrix.mul( positionLocal );\n\t\t\toutputNode = varying( vertexPositionNode );\n\n\t\t} else if ( scope === PositionNode.VIEW_DIRECTION ) {\n\n\t\t\tconst vertexPositionNode = positionView.negate();\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\n\n\t\t} else if ( scope === PositionNode.WORLD_DIRECTION ) {\n\n\t\t\tconst vertexPositionNode = positionLocal.transformDirection( modelWorldMatrix );\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nPositionNode.GEOMETRY = 'geometry';\nPositionNode.LOCAL = 'local';\nPositionNode.WORLD = 'world';\nPositionNode.WORLD_DIRECTION = 'worldDirection';\nPositionNode.VIEW = 'view';\nPositionNode.VIEW_DIRECTION = 'viewDirection';\n\nexport default PositionNode;\n\nexport const positionGeometry = nodeImmutable( PositionNode, PositionNode.GEOMETRY );\nexport const positionLocal = nodeImmutable( PositionNode, PositionNode.LOCAL ).temp( 'Position' );\nexport const positionWorld = nodeImmutable( PositionNode, PositionNode.WORLD );\nexport const positionWorldDirection = nodeImmutable( PositionNode, PositionNode.WORLD_DIRECTION );\nexport const positionView = nodeImmutable( PositionNode, PositionNode.VIEW );\nexport const positionViewDirection = nodeImmutable( PositionNode, PositionNode.VIEW_DIRECTION );\n\naddNodeClass( 'PositionNode', PositionNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { varyingProperty } from '../core/PropertyNode.js';\nimport { instancedBufferAttribute, instancedDynamicBufferAttribute } from './BufferAttributeNode.js';\nimport { normalLocal } from './NormalNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { nodeProxy, vec3, mat3, mat4 } from '../shadernode/ShaderNode.js';\nimport { DynamicDrawUsage, InstancedInterleavedBuffer, InstancedBufferAttribute } from 'three';\n\nclass InstanceNode extends Node {\n\n\tconstructor( instanceMesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.instanceMesh = instanceMesh;\n\n\t\tthis.instanceMatrixNode = null;\n\n\t\tthis.instanceColorNode = null;\n\n\t}\n\n\tsetup( /*builder*/ ) {\n\n\t\tlet instanceMatrixNode = this.instanceMatrixNode;\n\n\t\tconst instanceMesh = this.instanceMesh;\n\n\t\tif ( instanceMatrixNode === null ) {\n\n\t\t\tconst instanceAttribute = instanceMesh.instanceMatrix;\n\t\t\tconst buffer = new InstancedInterleavedBuffer( instanceAttribute.array, 16, 1 );\n\n\t\t\tconst bufferFn = instanceAttribute.usage === DynamicDrawUsage ? instancedDynamicBufferAttribute : instancedBufferAttribute;\n\n\t\t\tconst instanceBuffers = [\n\t\t\t\t// F.Signature -> bufferAttribute( array, type, stride, offset )\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 0 ),\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 4 ),\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 8 ),\n\t\t\t\tbufferFn( buffer, 'vec4', 16, 12 )\n\t\t\t];\n\n\t\t\tinstanceMatrixNode = mat4( ...instanceBuffers );\n\n\t\t\tthis.instanceMatrixNode = instanceMatrixNode;\n\n\t\t}\n\n\t\tconst instanceColorAttribute = instanceMesh.instanceColor;\n\n\t\tif ( instanceColorAttribute && this.instanceColorNode === null ) {\n\n\t\t\tconst buffer = new InstancedBufferAttribute( instanceColorAttribute.array, 3 );\n\t\t\tconst bufferFn = instanceColorAttribute.usage === DynamicDrawUsage ? instancedDynamicBufferAttribute : instancedBufferAttribute;\n\n\t\t\tthis.instanceColorNode = vec3( bufferFn( buffer, 'vec3', 3, 0 ) );\n\n\t\t}\n\n\t\t// POSITION\n\n\t\tconst instancePosition = instanceMatrixNode.mul( positionLocal ).xyz;\n\n\t\t// NORMAL\n\n\t\tconst m = mat3( instanceMatrixNode[ 0 ].xyz, instanceMatrixNode[ 1 ].xyz, instanceMatrixNode[ 2 ].xyz );\n\n\t\tconst transformedNormal = normalLocal.div( vec3( m[ 0 ].dot( m[ 0 ] ), m[ 1 ].dot( m[ 1 ] ), m[ 2 ].dot( m[ 2 ] ) ) );\n\n\t\tconst instanceNormal = m.mul( transformedNormal ).xyz;\n\n\t\t// ASSIGNS\n\n\t\tpositionLocal.assign( instancePosition );\n\t\tnormalLocal.assign( instanceNormal );\n\n\t\t// COLOR\n\n\t\tif ( this.instanceColorNode !== null ) {\n\n\t\t\tvaryingProperty( 'vec3', 'vInstanceColor' ).assign( this.instanceColorNode );\n\n\t\t}\n\n\t}\n\n}\n\nexport default InstanceNode;\n\nexport const instance = nodeProxy( InstanceNode );\n\naddNodeClass( 'InstanceNode', InstanceNode );\n","import InputNode from '../core/InputNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { nodeObject, addNodeElement } from '../shadernode/ShaderNode.js';\nimport { InterleavedBufferAttribute, InterleavedBuffer, StaticDrawUsage, DynamicDrawUsage } from 'three';\n\nclass BufferAttributeNode extends InputNode {\n\n\tconstructor( value, bufferType = null, bufferStride = 0, bufferOffset = 0 ) {\n\n\t\tsuper( value, bufferType );\n\n\t\tthis.isBufferNode = true;\n\n\t\tthis.bufferType = bufferType;\n\t\tthis.bufferStride = bufferStride;\n\t\tthis.bufferOffset = bufferOffset;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.instanced = false;\n\n\t\tthis.attribute = null;\n\n\t\tif ( value && value.isBufferAttribute === true ) {\n\n\t\t\tthis.attribute = value;\n\t\t\tthis.usage = value.usage;\n\t\t\tthis.instanced = value.isInstancedBufferAttribute;\n\n\t\t}\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tif ( this.bufferType === null ) {\n\n\t\t\tthis.bufferType = builder.getTypeFromAttribute( this.attribute );\n\n\t\t}\n\n\t\treturn this.bufferType;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( this.attribute !== null ) return;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst array = this.value;\n\t\tconst itemSize = builder.getTypeLength( type );\n\t\tconst stride = this.bufferStride || itemSize;\n\t\tconst offset = this.bufferOffset;\n\n\t\tconst buffer = array.isInterleavedBuffer === true ? array : new InterleavedBuffer( array, stride );\n\t\tconst bufferAttribute = new InterleavedBufferAttribute( buffer, itemSize, offset );\n\n\t\tbuffer.setUsage( this.usage );\n\n\t\tthis.attribute = bufferAttribute;\n\t\tthis.attribute.isInstancedBufferAttribute = this.instanced; // @TODO: Add a possible: InstancedInterleavedBufferAttribute\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeType = this.getNodeType( builder );\n\n\t\tconst nodeAttribute = builder.getBufferAttributeFromNode( this, nodeType );\n\t\tconst propertyName = builder.getPropertyName( nodeAttribute );\n\n\t\tlet output = null;\n\n\t\tif ( builder.shaderStage === 'vertex' || builder.shaderStage === 'compute' ) {\n\n\t\t\tthis.name = propertyName;\n\n\t\t\toutput = propertyName;\n\n\t\t} else {\n\n\t\t\tconst nodeVarying = varying( this );\n\n\t\t\toutput = nodeVarying.build( builder, nodeType );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'bufferAttribute';\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetInstanced( value ) {\n\n\t\tthis.instanced = value;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default BufferAttributeNode;\n\nexport const bufferAttribute = ( array, type, stride, offset ) => nodeObject( new BufferAttributeNode( array, type, stride, offset ) );\nexport const dynamicBufferAttribute = ( array, type, stride, offset ) => bufferAttribute( array, type, stride, offset ).setUsage( DynamicDrawUsage );\n\nexport const instancedBufferAttribute = ( array, type, stride, offset ) => bufferAttribute( array, type, stride, offset ).setInstanced( true );\nexport const instancedDynamicBufferAttribute = ( array, type, stride, offset ) => dynamicBufferAttribute( array, type, stride, offset ).setInstanced( true );\n\naddNodeElement( 'toAttribute', ( bufferNode ) => bufferAttribute( bufferNode.value ) );\n\naddNodeClass( 'BufferAttributeNode', BufferAttributeNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { normalLocal } from './NormalNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { nodeProxy, vec3, mat3, mat4, int, ivec2, float } from '../shadernode/ShaderNode.js';\nimport { textureLoad } from './TextureNode.js';\nimport { textureSize } from './TextureSizeNode.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { tangentLocal } from './TangentNode.js';\n\nclass BatchNode extends Node {\n\n\tconstructor( batchMesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.batchMesh = batchMesh;\n\n\n\t\tthis.instanceColorNode = null;\n\n\t\tthis.batchingIdNode = null;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\t// POSITION\n\n\t\tif ( this.batchingIdNode === null ) {\n\n\t\t\tthis.batchingIdNode = attribute( 'batchId' );\n\n\t\t}\n\n\t\tconst matriceTexture = this.batchMesh._matricesTexture;\n\n\t\tconst size = textureSize( textureLoad( matriceTexture ), 0 );\n\t\tconst j = float( int( this.batchingIdNode ) ).mul( 4 ).toVar();\n\n\t\tconst x = int( j.mod( size ) );\n\t\tconst y = int( j ).div( int( size ) );\n\t\tconst batchingMatrix = mat4(\n\t\t\ttextureLoad( matriceTexture, ivec2( x, y ) ),\n\t\t\ttextureLoad( matriceTexture, ivec2( x.add( 1 ), y ) ),\n\t\t\ttextureLoad( matriceTexture, ivec2( x.add( 2 ), y ) ),\n\t\t\ttextureLoad( matriceTexture, ivec2( x.add( 3 ), y ) )\n\t\t);\n\n\n\t\tconst bm = mat3(\n\t\t\tbatchingMatrix[ 0 ].xyz,\n\t\t\tbatchingMatrix[ 1 ].xyz,\n\t\t\tbatchingMatrix[ 2 ].xyz\n\t\t );\n\n\t\tpositionLocal.assign( batchingMatrix.mul( positionLocal ) );\n\n\t\tconst transformedNormal = normalLocal.div( vec3( bm[ 0 ].dot( bm[ 0 ] ), bm[ 1 ].dot( bm[ 1 ] ), bm[ 2 ].dot( bm[ 2 ] ) ) );\n\n\t\tconst batchingNormal = bm.mul( transformedNormal ).xyz;\n\n\t\tnormalLocal.assign( batchingNormal );\n\n\t\tif ( builder.hasGeometryAttribute( 'tangent' ) ) {\n\n\t\t\ttangentLocal.mulAssign( bm );\n\n\t\t}\n\n\t}\n\n}\n\nexport default BatchNode;\n\nexport const batch = nodeProxy( BatchNode );\n\naddNodeClass( 'batch', BatchNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { temp } from '../core/VarNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { modelViewMatrix } from './ModelNode.js';\nimport { nodeImmutable, vec4 } from '../shadernode/ShaderNode.js';\n\nclass TangentNode extends Node {\n\n\tconstructor( scope = TangentNode.LOCAL ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `tangent-${this.scope}`;\n\n\t}\n\n\tgetNodeType() {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === TangentNode.GEOMETRY ) {\n\n\t\t\treturn 'vec4';\n\n\t\t}\n\n\t\treturn 'vec3';\n\n\t}\n\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === TangentNode.GEOMETRY ) {\n\n\t\t\toutputNode = attribute( 'tangent', 'vec4' );\n\n\t\t\tif ( builder.geometry.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\t\tbuilder.geometry.computeTangents();\n\n\t\t\t}\n\n\t\t} else if ( scope === TangentNode.LOCAL ) {\n\n\t\t\toutputNode = varying( tangentGeometry.xyz );\n\n\t\t} else if ( scope === TangentNode.VIEW ) {\n\n\t\t\tconst vertexNode = modelViewMatrix.mul( vec4( tangentLocal, 0 ) ).xyz;\n\t\t\toutputNode = normalize( varying( vertexNode ) );\n\n\t\t} else if ( scope === TangentNode.WORLD ) {\n\n\t\t\tconst vertexNode = tangentView.transformDirection( cameraViewMatrix );\n\t\t\toutputNode = normalize( varying( vertexNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nTangentNode.GEOMETRY = 'geometry';\nTangentNode.LOCAL = 'local';\nTangentNode.VIEW = 'view';\nTangentNode.WORLD = 'world';\n\nexport default TangentNode;\n\nexport const tangentGeometry = nodeImmutable( TangentNode, TangentNode.GEOMETRY );\nexport const tangentLocal = nodeImmutable( TangentNode, TangentNode.LOCAL );\nexport const tangentView = nodeImmutable( TangentNode, TangentNode.VIEW );\nexport const tangentWorld = nodeImmutable( TangentNode, TangentNode.WORLD );\nexport const transformedTangentView = temp( tangentView, 'TransformedTangentView' );\nexport const transformedTangentWorld = normalize( transformedTangentView.transformDirection( cameraViewMatrix ) );\n\naddNodeClass( 'TangentNode', TangentNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { reference, referenceBuffer } from './ReferenceNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { normalLocal } from './NormalNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { tangentLocal } from './TangentNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { buffer } from './BufferNode.js';\n\nclass SkinningNode extends Node {\n\n\tconstructor( skinnedMesh, useReference = false ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.skinnedMesh = skinnedMesh;\n\t\tthis.useReference = useReference;\n\n\t\tthis.updateType = NodeUpdateType.OBJECT;\n\n\t\t//\n\n\t\tthis.skinIndexNode = attribute( 'skinIndex', 'uvec4' );\n\t\tthis.skinWeightNode = attribute( 'skinWeight', 'vec4' );\n\n\t\tlet bindMatrixNode, bindMatrixInverseNode, boneMatricesNode;\n\n\t\tif ( useReference ) {\n\n\t\t\tbindMatrixNode = reference( 'bindMatrix', 'mat4' );\n\t\t\tbindMatrixInverseNode = reference( 'bindMatrixInverse', 'mat4' );\n\t\t\tboneMatricesNode = referenceBuffer( 'skeleton.boneMatrices', 'mat4', skinnedMesh.skeleton.bones.length );\n\n\t\t} else {\n\n\t\t\tbindMatrixNode = uniform( skinnedMesh.bindMatrix, 'mat4' );\n\t\t\tbindMatrixInverseNode = uniform( skinnedMesh.bindMatrixInverse, 'mat4' );\n\t\t\tboneMatricesNode = buffer( skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length );\n\n\t\t}\n\n\t\tthis.bindMatrixNode = bindMatrixNode;\n\t\tthis.bindMatrixInverseNode = bindMatrixInverseNode;\n\t\tthis.boneMatricesNode = boneMatricesNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { skinIndexNode, skinWeightNode, bindMatrixNode, bindMatrixInverseNode, boneMatricesNode } = this;\n\n\t\tconst boneMatX = boneMatricesNode.element( skinIndexNode.x );\n\t\tconst boneMatY = boneMatricesNode.element( skinIndexNode.y );\n\t\tconst boneMatZ = boneMatricesNode.element( skinIndexNode.z );\n\t\tconst boneMatW = boneMatricesNode.element( skinIndexNode.w );\n\n\t\t// POSITION\n\n\t\tconst skinVertex = bindMatrixNode.mul( positionLocal );\n\n\t\tconst skinned = add(\n\t\t\tboneMatX.mul( skinWeightNode.x ).mul( skinVertex ),\n\t\t\tboneMatY.mul( skinWeightNode.y ).mul( skinVertex ),\n\t\t\tboneMatZ.mul( skinWeightNode.z ).mul( skinVertex ),\n\t\t\tboneMatW.mul( skinWeightNode.w ).mul( skinVertex )\n\t\t);\n\n\t\tconst skinPosition = bindMatrixInverseNode.mul( skinned ).xyz;\n\n\t\t// NORMAL\n\n\t\tlet skinMatrix = add(\n\t\t\tskinWeightNode.x.mul( boneMatX ),\n\t\t\tskinWeightNode.y.mul( boneMatY ),\n\t\t\tskinWeightNode.z.mul( boneMatZ ),\n\t\t\tskinWeightNode.w.mul( boneMatW )\n\t\t);\n\n\t\tskinMatrix = bindMatrixInverseNode.mul( skinMatrix ).mul( bindMatrixNode );\n\n\t\tconst skinNormal = skinMatrix.transformDirection( normalLocal ).xyz;\n\n\t\t// ASSIGNS\n\n\t\tpositionLocal.assign( skinPosition );\n\t\tnormalLocal.assign( skinNormal );\n\n\t\tif ( builder.hasGeometryAttribute( 'tangent' ) ) {\n\n\t\t\ttangentLocal.assign( skinNormal );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tif ( output !== 'void' ) {\n\n\t\t\treturn positionLocal.build( builder, output );\n\n\t\t}\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst object = this.useReference ? frame.object : this.skinnedMesh;\n\n\t\tobject.skeleton.update();\n\n\t}\n\n}\n\nexport default SkinningNode;\n\nexport const skinning = ( skinnedMesh ) => nodeObject( new SkinningNode( skinnedMesh ) );\nexport const skinningReference = ( skinnedMesh ) => nodeObject( new SkinningNode( skinnedMesh, true ) );\n\naddNodeClass( 'SkinningNode', SkinningNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { float, nodeProxy, tslFn } from '../shadernode/ShaderNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { reference } from './ReferenceNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { normalLocal } from './NormalNode.js';\nimport { textureLoad } from './TextureNode.js';\nimport { instanceIndex, vertexIndex } from '../core/IndexNode.js';\nimport { ivec2, int } from '../shadernode/ShaderNode.js';\nimport { DataArrayTexture, Vector2, Vector4, FloatType } from 'three';\nimport { loop } from '../utils/LoopNode.js';\n\nconst morphTextures = new WeakMap();\nconst morphVec4 = new Vector4();\n\nconst getMorph = tslFn( ( { bufferMap, influence, stride, width, depth, offset } ) => {\n\n\tconst texelIndex = int( vertexIndex ).mul( stride ).add( offset );\n\n\tconst y = texelIndex.div( width );\n\tconst x = texelIndex.sub( y.mul( width ) );\n\n\tconst bufferAttrib = textureLoad( bufferMap, ivec2( x, y ) ).depth( depth );\n\n\treturn bufferAttrib.mul( influence );\n\n} );\n\nfunction getEntry( geometry ) {\n\n\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t// into an array of data textures. Each layer represents a single morph target.\n\n\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\tlet entry = morphTextures.get( geometry );\n\n\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\tlet vertexDataCount = 0;\n\n\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\tlet height = 1;\n\n\t\tconst maxTextureSize = 4096; // @TODO: Use 'capabilities.maxTextureSize'\n\n\t\tif ( width > maxTextureSize ) {\n\n\t\t\theight = Math.ceil( width / maxTextureSize );\n\t\t\twidth = maxTextureSize;\n\n\t\t}\n\n\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\tconst bufferTexture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\tbufferTexture.type = FloatType;\n\t\tbufferTexture.needsUpdate = true;\n\n\t\t// fill buffer\n\n\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\tmorphVec4.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\tbuffer[ offset + stride + 0 ] = morphVec4.x;\n\t\t\t\t\tbuffer[ offset + stride + 1 ] = morphVec4.y;\n\t\t\t\t\tbuffer[ offset + stride + 2 ] = morphVec4.z;\n\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\tmorphVec4.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\tbuffer[ offset + stride + 4 ] = morphVec4.x;\n\t\t\t\t\tbuffer[ offset + stride + 5 ] = morphVec4.y;\n\t\t\t\t\tbuffer[ offset + stride + 6 ] = morphVec4.z;\n\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\tmorphVec4.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\tbuffer[ offset + stride + 8 ] = morphVec4.x;\n\t\t\t\t\tbuffer[ offset + stride + 9 ] = morphVec4.y;\n\t\t\t\t\tbuffer[ offset + stride + 10 ] = morphVec4.z;\n\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morphVec4.w : 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tentry = {\n\t\t\tcount: morphTargetsCount,\n\t\t\ttexture: bufferTexture,\n\t\t\tstride: vertexDataCount,\n\t\t\tsize: new Vector2( width, height )\n\t\t};\n\n\t\tmorphTextures.set( geometry, entry );\n\n\t\tfunction disposeTexture() {\n\n\t\t\tbufferTexture.dispose();\n\n\t\t\tmorphTextures.delete( geometry );\n\n\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t}\n\n\treturn entry;\n\n}\n\n\nclass MorphNode extends Node {\n\n\tconstructor( mesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.mesh = mesh;\n\t\tthis.morphBaseInfluence = uniform( 1 );\n\n\t\tthis.updateType = NodeUpdateType.OBJECT;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { geometry } = builder;\n\n\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t// nodes\n\n\t\tconst { texture: bufferMap, stride, size } = getEntry( geometry );\n\n\t\tif ( hasMorphPosition === true ) positionLocal.mulAssign( this.morphBaseInfluence );\n\t\tif ( hasMorphNormals === true ) normalLocal.mulAssign( this.morphBaseInfluence );\n\n\t\tconst width = int( size.width );\n\n\t\tloop( morphTargetsCount, ( { i } ) => {\n\n\t\t\tconst influence = float( 0 ).toVar();\n\n\t\t\tif ( this.mesh.isInstancedMesh === true && ( this.mesh.morphTexture !== null && this.mesh.morphTexture !== undefined ) ) {\n\n\t\t\t\tinfluence.assign( textureLoad( this.mesh.morphTexture, ivec2( int( i ).add( 1 ), int( instanceIndex ) ) ).r );\n\n\t\t\t} else {\n\n\t\t\t\tinfluence.assign( reference( 'morphTargetInfluences', 'float' ).element( i ).toVar() );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\tpositionLocal.addAssign( getMorph( {\n\t\t\t\t\tbufferMap,\n\t\t\t\t\tinfluence,\n\t\t\t\t\tstride,\n\t\t\t\t\twidth,\n\t\t\t\t\tdepth: i,\n\t\t\t\t\toffset: int( 0 )\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\tnormalLocal.addAssign( getMorph( {\n\t\t\t\t\tbufferMap,\n\t\t\t\t\tinfluence,\n\t\t\t\t\tstride,\n\t\t\t\t\twidth,\n\t\t\t\t\tdepth: i,\n\t\t\t\t\toffset: int( 1 )\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tupdate() {\n\n\t\tconst morphBaseInfluence = this.morphBaseInfluence;\n\n\t\tif ( this.mesh.geometry.morphTargetsRelative ) {\n\n\t\t\tmorphBaseInfluence.value = 1;\n\n\t\t} else {\n\n\t\t\tmorphBaseInfluence.value = 1 - this.mesh.morphTargetInfluences.reduce( ( a, b ) => a + b, 0 );\n\n\t\t}\n\n\t}\n\n}\n\nexport default MorphNode;\n\nexport const morphReference = nodeProxy( MorphNode );\n\naddNodeClass( 'MorphNode', MorphNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { expression } from '../code/ExpressionNode.js';\nimport { bypass } from '../core/BypassNode.js';\nimport { context } from '../core/ContextNode.js';\nimport { addNodeElement, nodeObject, nodeArray } from '../shadernode/ShaderNode.js';\n\nclass LoopNode extends Node {\n\n\tconstructor( params = [] ) {\n\n\t\tsuper();\n\n\t\tthis.params = params;\n\n\t}\n\n\tgetVarName( index ) {\n\n\t\treturn String.fromCharCode( 'i'.charCodeAt() + index );\n\n\t}\n\n\tgetProperties( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tif ( properties.stackNode !== undefined ) return properties;\n\n\t\t//\n\n\t\tconst inputs = {};\n\n\t\tfor ( let i = 0, l = this.params.length - 1; i < l; i ++ ) {\n\n\t\t\tconst param = this.params[ i ];\n\n\t\t\tconst name = ( param.isNode !== true && param.name ) || this.getVarName( i );\n\t\t\tconst type = ( param.isNode !== true && param.type ) || 'int';\n\n\t\t\tinputs[ name ] = expression( name, type );\n\n\t\t}\n\n\t\tproperties.returnsNode = this.params[ this.params.length - 1 ]( inputs, builder.addStack(), builder );\n\t\tproperties.stackNode = builder.removeStack();\n\n\t\treturn properties;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst { returnsNode } = this.getProperties( builder );\n\n\t\treturn returnsNode ? returnsNode.getNodeType( builder ) : 'void';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\t// setup properties\n\n\t\tthis.getProperties( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst properties = this.getProperties( builder );\n\n\t\tconst contextData = { tempWrite: false };\n\n\t\tconst params = this.params;\n\t\tconst stackNode = properties.stackNode;\n\n\t\tfor ( let i = 0, l = params.length - 1; i < l; i ++ ) {\n\n\t\t\tconst param = params[ i ];\n\n\t\t\tlet start = null, end = null, name = null, type = null, condition = null, update = null;\n\n\t\t\tif ( param.isNode ) {\n\n\t\t\t\ttype = 'int';\n\t\t\t\tname = this.getVarName( i );\n\t\t\t\tstart = '0';\n\t\t\t\tend = param.build( builder, type );\n\t\t\t\tcondition = '<';\n\n\t\t\t} else {\n\n\t\t\t\ttype = param.type || 'int';\n\t\t\t\tname = param.name || this.getVarName( i );\n\t\t\t\tstart = param.start;\n\t\t\t\tend = param.end;\n\t\t\t\tcondition = param.condition;\n\t\t\t\tupdate = param.update;\n\n\t\t\t\tif ( typeof start === 'number' ) start = start.toString();\n\t\t\t\telse if ( start && start.isNode ) start = start.build( builder, type );\n\n\t\t\t\tif ( typeof end === 'number' ) end = end.toString();\n\t\t\t\telse if ( end && end.isNode ) end = end.build( builder, type );\n\n\t\t\t\tif ( start !== undefined && end === undefined ) {\n\n\t\t\t\t\tstart = start + ' - 1';\n\t\t\t\t\tend = '0';\n\t\t\t\t\tcondition = '>=';\n\n\t\t\t\t} else if ( end !== undefined && start === undefined ) {\n\n\t\t\t\t\tstart = '0';\n\t\t\t\t\tcondition = '<';\n\n\t\t\t\t}\n\n\t\t\t\tif ( condition === undefined ) {\n\n\t\t\t\t\tif ( Number( start ) > Number( end ) ) {\n\n\t\t\t\t\t\tcondition = '>=';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcondition = '<';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst internalParam = { start, end, condition };\n\n\t\t\t//\n\n\t\t\tconst startSnippet = internalParam.start;\n\t\t\tconst endSnippet = internalParam.end;\n\n\t\t\tlet declarationSnippet = '';\n\t\t\tlet conditionalSnippet = '';\n\t\t\tlet updateSnippet = '';\n\n\t\t\tif ( ! update ) {\n\n\t\t\t\tif ( type === 'int' || type === 'uint' ) {\n\n\t\t\t\t\tif ( condition.includes( '<' ) ) update = '++';\n\t\t\t\t\telse update = '--';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( condition.includes( '<' ) ) update = '+= 1.';\n\t\t\t\t\telse update = '-= 1.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdeclarationSnippet += builder.getVar( type, name ) + ' = ' + startSnippet;\n\n\t\t\tconditionalSnippet += name + ' ' + condition + ' ' + endSnippet;\n\t\t\tupdateSnippet += name + ' ' + update;\n\n\t\t\tconst forSnippet = `for ( ${ declarationSnippet }; ${ conditionalSnippet }; ${ updateSnippet } )`;\n\n\t\t\tbuilder.addFlowCode( ( i === 0 ? '\\n' : '' ) + builder.tab + forSnippet + ' {\\n\\n' ).addFlowTab();\n\n\t\t}\n\n\t\tconst stackSnippet = context( stackNode, contextData ).build( builder, 'void' );\n\n\t\tconst returnsSnippet = properties.returnsNode ? properties.returnsNode.build( builder ) : '';\n\n\t\tbuilder.removeFlowTab().addFlowCode( '\\n' + builder.tab + stackSnippet );\n\n\t\tfor ( let i = 0, l = this.params.length - 1; i < l; i ++ ) {\n\n\t\t\tbuilder.addFlowCode( ( i === 0 ? '' : builder.tab ) + '}\\n\\n' ).removeFlowTab();\n\n\t\t}\n\n\t\tbuilder.addFlowTab();\n\n\t\treturn returnsSnippet;\n\n\t}\n\n}\n\nexport default LoopNode;\n\nexport const loop = ( ...params ) => nodeObject( new LoopNode( nodeArray( params, 'int' ) ) ).append();\nexport const Continue = () => expression( 'continue' ).append();\nexport const Break = () => expression( 'break' ).append();\n\naddNodeElement( 'loop', ( returns, ...params ) => bypass( returns, loop( ...params ) ) );\n\naddNodeClass( 'LoopNode', LoopNode );\n","import TextureNode from './TextureNode.js';\nimport { reflectVector } from './ReflectVectorNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\nimport { WebGPUCoordinateSystem } from 'three';\n\nclass CubeTextureNode extends TextureNode {\n\n\tconstructor( value, uvNode = null, levelNode = null ) {\n\n\t\tsuper( value, uvNode, levelNode );\n\n\t\tthis.isCubeTextureNode = true;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'cubeTexture';\n\n\t}\n\n\tgetDefaultUV() {\n\n\t\treturn reflectVector;\n\n\t}\n\n\tsetUpdateMatrix( /*updateMatrix*/ ) { } // Ignore .updateMatrix for CubeTextureNode\n\n\tsetupUV( builder, uvNode ) {\n\n\t\tconst texture = this.value;\n\n\t\tif ( builder.renderer.coordinateSystem === WebGPUCoordinateSystem || ! texture.isRenderTargetTexture ) {\n\n\t\t\treturn vec3( uvNode.x.negate(), uvNode.yz );\n\n\t\t} else {\n\n\t\t\treturn uvNode;\n\n\t\t}\n\n\t}\n\n\tgenerateUV( builder, cubeUV ) {\n\n\t\treturn cubeUV.build( builder, 'vec3' );\n\n\t}\n\n}\n\nexport default CubeTextureNode;\n\nexport const cubeTexture = nodeProxy( CubeTextureNode );\n\naddNodeElement( 'cubeTexture', cubeTexture );\n\naddNodeClass( 'CubeTextureNode', CubeTextureNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { transformedNormalView } from './NormalNode.js';\nimport { positionViewDirection } from './PositionNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass ReflectVectorNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'vec3' );\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn 'reflectVector';\n\n\t}\n\n\tsetup() {\n\n\t\tconst reflectView = positionViewDirection.negate().reflect( transformedNormalView );\n\n\t\treturn reflectView.transformDirection( cameraViewMatrix );\n\n\t}\n\n}\n\nexport default ReflectVectorNode;\n\nexport const reflectVector = nodeImmutable( ReflectVectorNode );\n\naddNodeClass( 'ReflectVectorNode', ReflectVectorNode );\n","import Node from '../core/Node.js';\nimport AnalyticLightNode from './AnalyticLightNode.js';\nimport { nodeObject, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\n\nconst LightNodes = new WeakMap();\n\nconst sortLights = ( lights ) => {\n\n\treturn lights.sort( ( a, b ) => a.id - b.id );\n\n};\n\nclass LightsNode extends Node {\n\n\tconstructor( lightNodes = [] ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.totalDiffuseNode = vec3().temp( 'totalDiffuse' );\n\t\tthis.totalSpecularNode = vec3().temp( 'totalSpecular' );\n\n\t\tthis.outgoingLightNode = vec3().temp( 'outgoingLight' );\n\n\t\tthis.lightNodes = lightNodes;\n\n\t\tthis._hash = null;\n\n\t}\n\n\tget hasLight() {\n\n\t\treturn this.lightNodes.length > 0;\n\n\t}\n\n\tgetHash() {\n\n\t\tif ( this._hash === null ) {\n\n\t\t\tconst hash = [];\n\n\t\t\tfor ( const lightNode of this.lightNodes ) {\n\n\t\t\t\thash.push( lightNode.getHash() );\n\n\t\t\t}\n\n\t\t\tthis._hash = 'lights-' + hash.join( ',' );\n\n\t\t}\n\n\t\treturn this._hash;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst context = builder.context;\n\t\tconst lightingModel = context.lightingModel;\n\n\t\tlet outgoingLightNode = this.outgoingLightNode;\n\n\t\tif ( lightingModel ) {\n\n\t\t\tconst { lightNodes, totalDiffuseNode, totalSpecularNode } = this;\n\n\t\t\tcontext.outgoingLight = outgoingLightNode;\n\n\t\t\tconst stack = builder.addStack();\n\n\t\t\t//\n\n\t\t\tlightingModel.start( context, stack, builder );\n\n\t\t\t// lights\n\n\t\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\t\tlightNode.build( builder );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlightingModel.indirectDiffuse( context, stack, builder );\n\t\t\tlightingModel.indirectSpecular( context, stack, builder );\n\t\t\tlightingModel.ambientOcclusion( context, stack, builder );\n\n\t\t\t//\n\n\t\t\tconst { backdrop, backdropAlpha } = context;\n\t\t\tconst { directDiffuse, directSpecular, indirectDiffuse, indirectSpecular } = context.reflectedLight;\n\n\t\t\tlet totalDiffuse = directDiffuse.add( indirectDiffuse );\n\n\t\t\tif ( backdrop !== null ) {\n\n\t\t\t\ttotalDiffuse = vec3( backdropAlpha !== null ? backdropAlpha.mix( totalDiffuse, backdrop ) : backdrop );\n\n\t\t\t}\n\n\t\t\ttotalDiffuseNode.assign( totalDiffuse );\n\t\t\ttotalSpecularNode.assign( directSpecular.add( indirectSpecular ) );\n\n\t\t\toutgoingLightNode.assign( totalDiffuseNode.add( totalSpecularNode ) );\n\n\t\t\t//\n\n\t\t\tlightingModel.finish( context, stack, builder );\n\n\t\t\t//\n\n\t\t\toutgoingLightNode = outgoingLightNode.bypass( builder.removeStack() );\n\n\t\t}\n\n\t\treturn outgoingLightNode;\n\n\t}\n\n\t_getLightNodeById( id ) {\n\n\t\tfor ( const lightNode of this.lightNodes ) {\n\n\t\t\tif ( lightNode.isAnalyticLightNode && lightNode.light.id === id ) {\n\n\t\t\t\treturn lightNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfromLights( lights = [] ) {\n\n\t\tconst lightNodes = [];\n\n\t\tlights = sortLights( lights );\n\n\t\tfor ( const light of lights ) {\n\n\t\t\tlet lightNode = this._getLightNodeById( light.id );\n\n\t\t\tif ( lightNode === null ) {\n\n\t\t\t\tconst lightClass = light.constructor;\n\t\t\t\tconst lightNodeClass = LightNodes.has( lightClass ) ? LightNodes.get( lightClass ) : AnalyticLightNode;\n\n\t\t\t\tlightNode = nodeObject( new lightNodeClass( light ) );\n\n\t\t\t}\n\n\t\t\tlightNodes.push( lightNode );\n\n\t\t}\n\n\t\tthis.lightNodes = lightNodes;\n\t\tthis._hash = null;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default LightsNode;\n\nexport const lights = ( lights ) => nodeObject( new LightsNode().fromLights( lights ) );\nexport const lightsNode = nodeProxy( LightsNode );\n\nexport function addLightNode( lightClass, lightNodeClass ) {\n\n\tif ( LightNodes.has( lightClass ) ) {\n\n\t\tconsole.warn( `Redefinition of light node ${ lightNodeClass.type }` );\n\t\treturn;\n\n\t}\n\n\tif ( typeof lightClass !== 'function' ) throw new Error( `Light ${ lightClass.name } is not a class` );\n\tif ( typeof lightNodeClass !== 'function' || ! lightNodeClass.type ) throw new Error( `Light node ${ lightNodeClass.type } is not a class` );\n\n\tLightNodes.set( lightClass, lightNodeClass );\n\n}\n","import LightingNode from './LightingNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { /*vec2,*/ vec3, vec4 } from '../shadernode/ShaderNode.js';\nimport { reference } from '../accessors/ReferenceNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { positionWorld } from '../accessors/PositionNode.js';\nimport { normalWorld } from '../accessors/NormalNode.js';\nimport { WebGPUCoordinateSystem } from 'three';\n//import { add } from '../math/OperatorNode.js';\n\nimport { Color, DepthTexture, NearestFilter, LessCompare } from 'three';\n\nlet overrideMaterial = null;\n\nclass AnalyticLightNode extends LightingNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper();\n\n\t\tthis.updateType = NodeUpdateType.FRAME;\n\n\t\tthis.light = light;\n\n\t\tthis.rtt = null;\n\t\tthis.shadowNode = null;\n\n\t\tthis.color = new Color();\n\t\tthis._defaultColorNode = uniform( this.color );\n\n\t\tthis.colorNode = this._defaultColorNode;\n\n\t\tthis.isAnalyticLightNode = true;\n\n\t}\n\n\tgetCacheKey() {\n\n\t\treturn super.getCacheKey() + '-' + ( this.light.id + '-' + ( this.light.castShadow ? '1' : '0' ) );\n\n\t}\n\n\tgetHash() {\n\n\t\treturn this.light.uuid;\n\n\t}\n\n\tsetupShadow( builder ) {\n\n\t\tlet shadowNode = this.shadowNode;\n\n\t\tif ( shadowNode === null ) {\n\n\t\t\tif ( overrideMaterial === null ) {\n\n\t\t\t\toverrideMaterial = builder.createNodeMaterial();\n\t\t\t\toverrideMaterial.fragmentNode = vec4( 0, 0, 0, 1 );\n\t\t\t\toverrideMaterial.isShadowNodeMaterial = true; // Use to avoid other overrideMaterial override material.fragmentNode unintentionally when using material.shadowNode\n\n\t\t\t}\n\n\t\t\tconst shadow = this.light.shadow;\n\t\t\tconst rtt = builder.createRenderTarget( shadow.mapSize.width, shadow.mapSize.height );\n\n\t\t\tconst depthTexture = new DepthTexture();\n\t\t\tdepthTexture.minFilter = NearestFilter;\n\t\t\tdepthTexture.magFilter = NearestFilter;\n\t\t\tdepthTexture.image.width = shadow.mapSize.width;\n\t\t\tdepthTexture.image.height = shadow.mapSize.height;\n\t\t\tdepthTexture.compareFunction = LessCompare;\n\n\t\t\trtt.depthTexture = depthTexture;\n\n\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t//\n\n\t\t\tconst bias = reference( 'bias', 'float', shadow );\n\t\t\tconst normalBias = reference( 'normalBias', 'float', shadow );\n\n\t\t\tlet shadowCoord = uniform( shadow.matrix ).mul( positionWorld.add( normalWorld.mul( normalBias ) ) );\n\t\t\tshadowCoord = shadowCoord.xyz.div( shadowCoord.w );\n\n\t\t\tconst frustumTest = shadowCoord.x.greaterThanEqual( 0 )\n\t\t\t\t.and( shadowCoord.x.lessThanEqual( 1 ) )\n\t\t\t\t.and( shadowCoord.y.greaterThanEqual( 0 ) )\n\t\t\t\t.and( shadowCoord.y.lessThanEqual( 1 ) )\n\t\t\t\t.and( shadowCoord.z.lessThanEqual( 1 ) );\n\n\t\t\tlet coordZ = shadowCoord.z.add( bias );\n\n\t\t\tif ( builder.renderer.coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\t\tcoordZ = coordZ.mul( 2 ).sub( 1 ); // WebGPU: Convertion [ 0, 1 ] to [ - 1, 1 ]\n\n\t\t\t}\n\n\t\t\tshadowCoord = vec3(\n\t\t\t\tshadowCoord.x,\n\t\t\t\tshadowCoord.y.oneMinus(), // follow webgpu standards\n\t\t\t\tcoordZ\n\t\t\t);\n\n\t\t\tconst textureCompare = ( depthTexture, shadowCoord, compare ) => texture( depthTexture, shadowCoord ).compare( compare );\n\t\t\t//const textureCompare = ( depthTexture, shadowCoord, compare ) => compare.step( texture( depthTexture, shadowCoord ) );\n\n\t\t\t// BasicShadowMap\n\n\t\t\tshadowNode = textureCompare( depthTexture, shadowCoord.xy, shadowCoord.z );\n\n\t\t\t// PCFShadowMap\n\t\t\t/*\n\t\t\tconst mapSize = reference( 'mapSize', 'vec2', shadow );\n\t\t\tconst radius = reference( 'radius', 'float', shadow );\n\n\t\t\tconst texelSize = vec2( 1 ).div( mapSize );\n\t\t\tconst dx0 = texelSize.x.negate().mul( radius );\n\t\t\tconst dy0 = texelSize.y.negate().mul( radius );\n\t\t\tconst dx1 = texelSize.x.mul( radius );\n\t\t\tconst dy1 = texelSize.y.mul( radius );\n\t\t\tconst dx2 = dx0.mul( 2 );\n\t\t\tconst dy2 = dy0.mul( 2 );\n\t\t\tconst dx3 = dx1.mul( 2 );\n\t\t\tconst dy3 = dy1.mul( 2 );\n\n\t\t\tshadowNode = add(\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, dy0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, dy0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, dy2 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy2 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, dy2 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy, shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, 0 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx2, dy3 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy3 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx3, dy3 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx0, dy1 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( 0, dy1 ) ), shadowCoord.z ),\n\t\t\t\ttextureCompare( depthTexture, shadowCoord.xy.add( vec2( dx1, dy1 ) ), shadowCoord.z )\n\t\t\t).mul( 1 / 17 );\n\t\t\t*/\n\t\t\t//\n\n\t\t\tconst shadowColor = texture( rtt.texture, shadowCoord );\n\n\t\t\tthis.rtt = rtt;\n\t\t\tthis.colorNode = this.colorNode.mul( frustumTest.mix( 1, shadowNode.mix( shadowColor.a.mix( 1, shadowColor ), 1 ) ) );\n\n\t\t\tthis.shadowNode = shadowNode;\n\n\t\t\t//\n\n\t\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\n\n\t\t}\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( this.light.castShadow ) this.setupShadow( builder );\n\t\telse if ( this.shadowNode !== null ) this.disposeShadow();\n\n\t}\n\n\tupdateShadow( frame ) {\n\n\t\tconst { rtt, light } = this;\n\t\tconst { renderer, scene } = frame;\n\n\t\tconst currentOverrideMaterial = scene.overrideMaterial;\n\n\t\tscene.overrideMaterial = overrideMaterial;\n\n\t\trtt.setSize( light.shadow.mapSize.width, light.shadow.mapSize.height );\n\n\t\tlight.shadow.updateMatrices( light );\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentRenderObjectFunction = renderer.getRenderObjectFunction();\n\n\t\trenderer.setRenderObjectFunction( ( object, ...params ) => {\n\n\t\t\tif ( object.castShadow === true ) {\n\n\t\t\t\trenderer.renderObject( object, ...params );\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderer.setRenderTarget( rtt );\n\n\t\trenderer.render( scene, light.shadow.camera );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\trenderer.setRenderObjectFunction( currentRenderObjectFunction );\n\n\t\tscene.overrideMaterial = currentOverrideMaterial;\n\n\t}\n\n\tdisposeShadow() {\n\n\t\tthis.rtt.dispose();\n\n\t\tthis.shadowNode = null;\n\t\tthis.rtt = null;\n\n\t\tthis.colorNode = this._defaultColorNode;\n\n\t}\n\n\tupdateBefore( frame ) {\n\n\t\tconst { light } = this;\n\n\t\tif ( light.castShadow ) this.updateShadow( frame );\n\n\t}\n\n\tupdate( /*frame*/ ) {\n\n\t\tconst { light } = this;\n\n\t\tthis.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t}\n\n}\n\nexport default AnalyticLightNode;\n\naddNodeClass( 'AnalyticLightNode', AnalyticLightNode );\n","import Node, { addNodeClass } from '../core/Node.js';\n\nclass LightingNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'vec3' );\n\n\t}\n\n\tgenerate( /*builder*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nexport default LightingNode;\n\naddNodeClass( 'LightingNode', LightingNode );\n","import LightingNode from './LightingNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass AONode extends LightingNode {\n\n\tconstructor( aoNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.aoNode = aoNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst aoIntensity = 1;\n\t\tconst aoNode = this.aoNode.x.sub( 1.0 ).mul( aoIntensity ).add( 1.0 );\n\n\t\tbuilder.context.ambientOcclusion.mulAssign( aoNode );\n\n\t}\n\n}\n\nexport default AONode;\n\naddNodeClass( 'AONode', AONode );\n","import ContextNode from '../core/ContextNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass LightingContextNode extends ContextNode {\n\n\tconstructor( node, lightingModel = null, backdropNode = null, backdropAlphaNode = null ) {\n\n\t\tsuper( node );\n\n\t\tthis.lightingModel = lightingModel;\n\t\tthis.backdropNode = backdropNode;\n\t\tthis.backdropAlphaNode = backdropAlphaNode;\n\n\t\tthis._context = null;\n\n\t}\n\n\tgetContext() {\n\n\t\tconst { backdropNode, backdropAlphaNode } = this;\n\n\t\tconst directDiffuse = vec3().temp( 'directDiffuse' ),\n\t\t\tdirectSpecular = vec3().temp( 'directSpecular' ),\n\t\t\tindirectDiffuse = vec3().temp( 'indirectDiffuse' ),\n\t\t\tindirectSpecular = vec3().temp( 'indirectSpecular' );\n\n\t\tconst reflectedLight = {\n\t\t\tdirectDiffuse,\n\t\t\tdirectSpecular,\n\t\t\tindirectDiffuse,\n\t\t\tindirectSpecular\n\t\t};\n\n\t\tconst context = {\n\t\t\tradiance: vec3().temp( 'radiance' ),\n\t\t\tirradiance: vec3().temp( 'irradiance' ),\n\t\t\tiblIrradiance: vec3().temp( 'iblIrradiance' ),\n\t\t\tambientOcclusion: float( 1 ).temp( 'ambientOcclusion' ),\n\t\t\treflectedLight,\n\t\t\tbackdrop: backdropNode,\n\t\t\tbackdropAlpha: backdropAlphaNode\n\t\t};\n\n\t\treturn context;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tthis.context = this._context || ( this._context = this.getContext() );\n\t\tthis.context.lightingModel = this.lightingModel || builder.context.lightingModel;\n\n\t\treturn super.setup( builder );\n\n\t}\n\n}\n\nexport default LightingContextNode;\n\nexport const lightingContext = nodeProxy( LightingContextNode );\n\naddNodeElement( 'lightingContext', lightingContext );\n\naddNodeClass( 'LightingContextNode', LightingContextNode );\n","import LightingNode from './LightingNode.js';\nimport { cache } from '../core/CacheNode.js';\nimport { context } from '../core/ContextNode.js';\nimport { roughness, clearcoatRoughness } from '../core/PropertyNode.js';\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\nimport { transformedClearcoatNormalView, transformedNormalView, transformedNormalWorld } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { float } from '../shadernode/ShaderNode.js';\nimport { reference } from '../accessors/ReferenceNode.js';\nimport { pmremTexture } from '../pmrem/PMREMNode.js';\n\nconst envNodeCache = new WeakMap();\n\nclass EnvironmentNode extends LightingNode {\n\n\tconstructor( envNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.envNode = envNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tlet envNode = this.envNode;\n\n\t\tif ( envNode.isTextureNode ) {\n\n\t\t\tlet cacheEnvNode = envNodeCache.get( envNode.value );\n\n\t\t\tif ( cacheEnvNode === undefined ) {\n\n\t\t\t\tcacheEnvNode = pmremTexture( envNode.value );\n\n\t\t\t\tenvNodeCache.set( envNode.value, cacheEnvNode );\n\n\t\t\t}\n\n\t\t\tenvNode\t= cacheEnvNode;\n\n\t\t}\n\n\t\t//\n\n\t\tconst envMap = builder.material.envMap;\n\t\tconst intensity = envMap ? reference( 'envMapIntensity', 'float', builder.material ) : reference( 'environmentIntensity', 'float', builder.scene ); // @TODO: Add materialEnvIntensity in MaterialNode\n\n\t\tconst radiance = context( envNode, createRadianceContext( roughness, transformedNormalView ) ).mul( intensity );\n\t\tconst irradiance = context( envNode, createIrradianceContext( transformedNormalWorld ) ).mul( Math.PI ).mul( intensity );\n\n\t\tconst isolateRadiance = cache( radiance );\n\n\t\t//\n\n\t\tbuilder.context.radiance.addAssign( isolateRadiance );\n\n\t\tbuilder.context.iblIrradiance.addAssign( irradiance );\n\n\t\t//\n\n\t\tconst clearcoatRadiance = builder.context.lightingModel.clearcoatRadiance;\n\n\t\tif ( clearcoatRadiance ) {\n\n\t\t\tconst clearcoatRadianceContext = context( envNode, createRadianceContext( clearcoatRoughness, transformedClearcoatNormalView ) ).mul( intensity );\n\t\t\tconst isolateClearcoatRadiance = cache( clearcoatRadianceContext );\n\n\t\t\tclearcoatRadiance.addAssign( isolateClearcoatRadiance );\n\n\t\t}\n\n\t}\n\n}\n\nconst createRadianceContext = ( roughnessNode, normalViewNode ) => {\n\n\tlet reflectVec = null;\n\n\treturn {\n\t\tgetUV: () => {\n\n\t\t\tif ( reflectVec === null ) {\n\n\t\t\t\treflectVec = positionViewDirection.negate().reflect( normalViewNode );\n\t\t\t\treflectVec = roughnessNode.mul( roughnessNode ).mix( reflectVec, normalViewNode ).normalize();\n\t\t\t\treflectVec = reflectVec.transformDirection( cameraViewMatrix );\n\n\t\t\t}\n\n\t\t\treturn reflectVec;\n\n\t\t},\n\t\tgetTextureLevel: () => {\n\n\t\t\treturn roughnessNode;\n\n\t\t}\n\t};\n\n};\n\nconst createIrradianceContext = ( normalWorldNode ) => {\n\n\treturn {\n\t\tgetUV: () => {\n\n\t\t\treturn normalWorldNode;\n\n\t\t},\n\t\tgetTextureLevel: () => {\n\n\t\t\treturn float( 1.0 );\n\n\t\t}\n\t};\n\n};\n\nexport default EnvironmentNode;\n\naddNodeClass( 'EnvironmentNode', EnvironmentNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { textureCubeUV } from './PMREMUtils.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\nimport { WebGLCoordinateSystem } from 'three';\n\nlet _generator = null;\n\nconst _cache = new WeakMap();\n\nfunction _generateCubeUVSize( imageHeight ) {\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction _getPMREMFromTexture( texture ) {\n\n\tlet cacheTexture = _cache.get( texture );\n\n\tconst pmremVersion = cacheTexture !== undefined ? cacheTexture.pmremVersion : - 1;\n\n\tif ( pmremVersion !== texture.pmremVersion ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\tif ( texture.source.data.some( ( texture ) => texture === undefined ) ) {\n\n\t\t\t\tthrow new Error( 'PMREMNode: Undefined texture in CubeTexture. Use onLoad callback or async loader' );\n\n\t\t\t}\n\n\t\t\tcacheTexture = _generator.fromCubemap( texture, cacheTexture );\n\n\t\t} else {\n\n\t\t\tif ( texture.image === undefined ) {\n\n\t\t\t\tthrow new Error( 'PMREMNode: Undefined image in Texture. Use onLoad callback or async loader' );\n\n\t\t\t}\n\n\t\t\tcacheTexture = _generator.fromEquirectangular( texture, cacheTexture );\n\n\t\t}\n\n\t\tcacheTexture.pmremVersion = texture.pmremVersion;\n\n\t\t_cache.set( texture, cacheTexture );\n\n\t}\n\n\treturn cacheTexture.texture;\n\n}\n\nclass PMREMNode extends TempNode {\n\n\tconstructor( value, uvNode = null, levelNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis._value = value;\n\t\tthis._pmrem = null;\n\n\t\tthis.uvNode = uvNode;\n\t\tthis.levelNode = levelNode;\n\n\t\tthis._generator = null;\n\t\tthis._texture = texture( null );\n\t\tthis._width = uniform( 0 );\n\t\tthis._height = uniform( 0 );\n\t\tthis._maxMip = uniform( 0 );\n\n\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\n\n\t}\n\n\tset value( value ) {\n\n\t\tthis._value = value;\n\t\tthis._pmrem = null;\n\n\t}\n\n\tget value() {\n\n\t\treturn this._value;\n\n\t}\n\n\tupdateFromTexture( texture ) {\n\n\t\tconst cubeUVSize = _generateCubeUVSize( texture.image.height );\n\n\t\tthis._texture.value = texture;\n\t\tthis._width.value = cubeUVSize.texelWidth;\n\t\tthis._height.value = cubeUVSize.texelHeight;\n\t\tthis._maxMip.value = cubeUVSize.maxMip;\n\n\t}\n\n\tupdateBefore() {\n\n\t\tlet pmrem = this._pmrem;\n\n\t\tconst pmremVersion = pmrem ? pmrem.pmremVersion : - 1;\n\t\tconst texture = this._value;\n\n\t\tif ( pmremVersion !== texture.pmremVersion ) {\n\n\t\t\tif ( texture.isPMREMTexture === true ) {\n\n\t\t\t\tpmrem = texture;\n\n\t\t\t} else {\n\n\t\t\t\tpmrem = _getPMREMFromTexture( texture );\n\n\t\t\t}\n\n\t\t\tthis._pmrem = pmrem;\n\n\t\t\tthis.updateFromTexture( pmrem );\n\n\t\t}\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( _generator === null ) {\n\n\t\t\t_generator = builder.createPMREMGenerator();\n\n\t\t}\n\n\t\t//\n\n\t\tthis.updateBefore( builder );\n\n\t\t//\n\n\t\tlet uvNode = this.uvNode;\n\n\t\tif ( uvNode === null && builder.context.getUV ) {\n\n\t\t\tuvNode = builder.context.getUV( this );\n\n\t\t}\n\n\t\t//\n\n\t\tconst texture = this.value;\n\n\t\tif ( builder.renderer.coordinateSystem === WebGLCoordinateSystem && texture.isPMREMTexture !== true && texture.isRenderTargetTexture === true ) {\n\n\t\t\tuvNode = vec3( uvNode.x.negate(), uvNode.yz );\n\n\t\t}\n\n\t\t//\n\n\t\tlet levelNode = this.levelNode;\n\n\t\tif ( levelNode === null && builder.context.getTextureLevel ) {\n\n\t\t\tlevelNode = builder.context.getTextureLevel( this );\n\n\t\t}\n\n\t\t//\n\n\t\treturn textureCubeUV( this._texture, uvNode, levelNode, this._width, this._height, this._maxMip );\n\n\t}\n\n}\n\nexport const pmremTexture = nodeProxy( PMREMNode );\n\naddNodeClass( 'PMREMNode', PMREMNode );\n\nexport default PMREMNode;\n","import { tslFn, int, float, vec2, vec3, vec4, If } from '../shadernode/ShaderNode.js';\nimport { cos, sin, abs, max, exp2, log2, clamp, fract, mix, floor, normalize, cross, all } from '../math/MathNode.js';\nimport { mul } from '../math/OperatorNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { loop, Break } from '../utils/LoopNode.js';\n\n// These defines must match with PMREMGenerator\n\nconst cubeUV_r0 = float( 1.0 );\nconst cubeUV_m0 = float( - 2.0 );\nconst cubeUV_r1 = float( 0.8 );\nconst cubeUV_m1 = float( - 1.0 );\nconst cubeUV_r4 = float( 0.4 );\nconst cubeUV_m4 = float( 2.0 );\nconst cubeUV_r5 = float( 0.305 );\nconst cubeUV_m5 = float( 3.0 );\nconst cubeUV_r6 = float( 0.21 );\nconst cubeUV_m6 = float( 4.0 );\n\nconst cubeUV_minMipLevel = float( 4.0 );\nconst cubeUV_minTileSize = float( 16.0 );\n\n// These shader functions convert between the UV coordinates of a single face of\n// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n// sampling a textureCube (not generally normalized ).\n\nconst getFace = tslFn( ( [ direction ] ) => {\n\n\tconst absDirection = vec3( abs( direction ) ).toVar();\n\tconst face = float( - 1.0 ).toVar();\n\n\tIf( absDirection.x.greaterThan( absDirection.z ), () => {\n\n\t\tIf( absDirection.x.greaterThan( absDirection.y ), () => {\n\n\t\t\tface.assign( cond( direction.x.greaterThan( 0.0 ), 0.0, 3.0 ) );\n\n\t\t} ).else( () => {\n\n\t\t\tface.assign( cond( direction.y.greaterThan( 0.0 ), 1.0, 4.0 ) );\n\n\t\t} );\n\n\t} ).else( () => {\n\n\t\tIf( absDirection.z.greaterThan( absDirection.y ), () => {\n\n\t\t\tface.assign( cond( direction.z.greaterThan( 0.0 ), 2.0, 5.0 ) );\n\n\t\t} ).else( () => {\n\n\t\t\tface.assign( cond( direction.y.greaterThan( 0.0 ), 1.0, 4.0 ) );\n\n\t\t} );\n\n\t} );\n\n\treturn face;\n\n} ).setLayout( {\n\tname: 'getFace',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'direction', type: 'vec3' }\n\t]\n} );\n\n// RH coordinate system; PMREM face-indexing convention\nconst getUV = tslFn( ( [ direction, face ] ) => {\n\n\tconst uv = vec2().toVar();\n\n\tIf( face.equal( 0.0 ), () => {\n\n\t\tuv.assign( vec2( direction.z, direction.y ).div( abs( direction.x ) ) ); // pos x\n\n\t} ).elseif( face.equal( 1.0 ), () => {\n\n\t\tuv.assign( vec2( direction.x.negate(), direction.z.negate() ).div( abs( direction.y ) ) ); // pos y\n\n\t} ).elseif( face.equal( 2.0 ), () => {\n\n\t\tuv.assign( vec2( direction.x.negate(), direction.y ).div( abs( direction.z ) ) ); // pos z\n\n\t} ).elseif( face.equal( 3.0 ), () => {\n\n\t\tuv.assign( vec2( direction.z.negate(), direction.y ).div( abs( direction.x ) ) ); // neg x\n\n\t} ).elseif( face.equal( 4.0 ), () => {\n\n\t\tuv.assign( vec2( direction.x.negate(), direction.z ).div( abs( direction.y ) ) ); // neg y\n\n\t} ).else( () => {\n\n\t\tuv.assign( vec2( direction.x, direction.y ).div( abs( direction.z ) ) ); // neg z\n\n\t} );\n\n\treturn mul( 0.5, uv.add( 1.0 ) );\n\n} ).setLayout( {\n\tname: 'getUV',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'direction', type: 'vec3' },\n\t\t{ name: 'face', type: 'float' }\n\t]\n} );\n\nconst roughnessToMip = tslFn( ( [ roughness ] ) => {\n\n\tconst mip = float( 0.0 ).toVar();\n\n\tIf( roughness.greaterThanEqual( cubeUV_r1 ), () => {\n\n\t\tmip.assign( cubeUV_r0.sub( roughness ).mul( cubeUV_m1.sub( cubeUV_m0 ) ).div( cubeUV_r0.sub( cubeUV_r1 ) ).add( cubeUV_m0 ) );\n\n\t} ).elseif( roughness.greaterThanEqual( cubeUV_r4 ), () => {\n\n\t\tmip.assign( cubeUV_r1.sub( roughness ).mul( cubeUV_m4.sub( cubeUV_m1 ) ).div( cubeUV_r1.sub( cubeUV_r4 ) ).add( cubeUV_m1 ) );\n\n\t} ).elseif( roughness.greaterThanEqual( cubeUV_r5 ), () => {\n\n\t\tmip.assign( cubeUV_r4.sub( roughness ).mul( cubeUV_m5.sub( cubeUV_m4 ) ).div( cubeUV_r4.sub( cubeUV_r5 ) ).add( cubeUV_m4 ) );\n\n\t} ).elseif( roughness.greaterThanEqual( cubeUV_r6 ), () => {\n\n\t\tmip.assign( cubeUV_r5.sub( roughness ).mul( cubeUV_m6.sub( cubeUV_m5 ) ).div( cubeUV_r5.sub( cubeUV_r6 ) ).add( cubeUV_m5 ) );\n\n\t} ).else( () => {\n\n\t\tmip.assign( float( - 2.0 ).mul( log2( mul( 1.16, roughness ) ) ) ); // 1.16 = 1.79^0.25\n\n\t} );\n\n\treturn mip;\n\n} ).setLayout( {\n\tname: 'roughnessToMip',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'roughness', type: 'float' }\n\t]\n} );\n\n// RH coordinate system; PMREM face-indexing convention\nexport const getDirection = tslFn( ( [ uv_immutable, face ] ) => {\n\n\tconst uv = uv_immutable.toVar();\n\tuv.assign( mul( 2.0, uv ).sub( 1.0 ) );\n\tconst direction = vec3( uv, 1.0 ).toVar();\n\n\tIf( face.equal( 0.0 ), () => {\n\n\t\tdirection.assign( direction.zyx ); // ( 1, v, u ) pos x\n\n\t} ).elseif( face.equal( 1.0 ), () => {\n\n\t\tdirection.assign( direction.xzy );\n\t\tdirection.xz.mulAssign( - 1.0 ); // ( -u, 1, -v ) pos y\n\n\t} ).elseif( face.equal( 2.0 ), () => {\n\n\t\tdirection.x.mulAssign( - 1.0 ); // ( -u, v, 1 ) pos z\n\n\t} ).elseif( face.equal( 3.0 ), () => {\n\n\t\tdirection.assign( direction.zyx );\n\t\tdirection.xz.mulAssign( - 1.0 ); // ( -1, v, -u ) neg x\n\n\t} ).elseif( face.equal( 4.0 ), () => {\n\n\t\tdirection.assign( direction.xzy );\n\t\tdirection.xy.mulAssign( - 1.0 ); // ( -u, -1, v ) neg y\n\n\t} ).elseif( face.equal( 5.0 ), () => {\n\n\t\tdirection.z.mulAssign( - 1.0 ); // ( u, v, -1 ) neg zS\n\n\t} );\n\n\treturn direction;\n\n} ).setLayout( {\n\tname: 'getDirection',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'uv', type: 'vec2' },\n\t\t{ name: 'face', type: 'float' }\n\t]\n} );\n\n//\n\nexport const textureCubeUV = tslFn( ( [ envMap, sampleDir_immutable, roughness_immutable, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP ] ) => {\n\n\tconst roughness = float( roughness_immutable );\n\tconst sampleDir = vec3( sampleDir_immutable );\n\n\tconst mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\tconst mipF = fract( mip );\n\tconst mipInt = floor( mip );\n\tconst color0 = vec3( bilinearCubeUV( envMap, sampleDir, mipInt, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP ) ).toVar();\n\n\tIf( mipF.notEqual( 0.0 ), () => {\n\n\t\tconst color1 = vec3( bilinearCubeUV( envMap, sampleDir, mipInt.add( 1.0 ), CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP ) ).toVar();\n\n\t\tcolor0.assign( mix( color0, color1, mipF ) );\n\n\t} );\n\n\treturn color0;\n\n} );\n\nconst bilinearCubeUV = tslFn( ( [ envMap, direction_immutable, mipInt_immutable, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP ] ) => {\n\n\tconst mipInt = float( mipInt_immutable ).toVar();\n\tconst direction = vec3( direction_immutable );\n\tconst face = float( getFace( direction ) ).toVar();\n\tconst filterInt = float( max( cubeUV_minMipLevel.sub( mipInt ), 0.0 ) ).toVar();\n\tmipInt.assign( max( mipInt, cubeUV_minMipLevel ) );\n\tconst faceSize = float( exp2( mipInt ) ).toVar();\n\tconst uv = vec2( getUV( direction, face ).mul( faceSize.sub( 2.0 ) ).add( 1.0 ) ).toVar();\n\n\tIf( face.greaterThan( 2.0 ), () => {\n\n\t\tuv.y.addAssign( faceSize );\n\t\tface.subAssign( 3.0 );\n\n\t} );\n\n\tuv.x.addAssign( face.mul( faceSize ) );\n\tuv.x.addAssign( filterInt.mul( mul( 3.0, cubeUV_minTileSize ) ) );\n\tuv.y.addAssign( mul( 4.0, exp2( CUBEUV_MAX_MIP ).sub( faceSize ) ) );\n\tuv.x.mulAssign( CUBEUV_TEXEL_WIDTH );\n\tuv.y.mulAssign( CUBEUV_TEXEL_HEIGHT );\n\n\treturn envMap.uv( uv );\n\n} );\n\nconst getSample = tslFn( ( { envMap, mipInt, outputDirection, theta, axis, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP } ) => {\n\n\tconst cosTheta = cos( theta );\n\n\t// Rodrigues' axis-angle rotation\n\tconst sampleDirection = outputDirection.mul( cosTheta )\n\t\t.add( axis.cross( outputDirection ).mul( sin( theta ) ) )\n\t\t.add( axis.mul( axis.dot( outputDirection ).mul( cosTheta.oneMinus() ) ) );\n\n\treturn bilinearCubeUV( envMap, sampleDirection, mipInt, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP );\n\n} );\n\nexport const blur = tslFn( ( { n, latitudinal, poleAxis, outputDirection, weights, samples, dTheta, mipInt, envMap, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP } ) => {\n\n\tconst axis = vec3( cond( latitudinal, poleAxis, cross( poleAxis, outputDirection ) ) ).toVar();\n\n\tIf( all( axis.equals( vec3( 0.0 ) ) ), () => {\n\n\t\taxis.assign( vec3( outputDirection.z, 0.0, outputDirection.x.negate() ) );\n\n\t} );\n\n\taxis.assign( normalize( axis ) );\n\n\tconst gl_FragColor = vec3().toVar();\n\tgl_FragColor.addAssign( weights.element( int( 0 ) ).mul( getSample( { theta: 0.0, axis, outputDirection, mipInt, envMap, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP } ) ) );\n\n\tloop( { start: int( 1 ), end: n }, ( { i } ) => {\n\n\t\tIf( i.greaterThanEqual( samples ), () => {\n\n\t\t\tBreak();\n\n\t\t} );\n\n\t\tconst theta = float( dTheta.mul( float( i ) ) ).toVar();\n\t\tgl_FragColor.addAssign( weights.element( i ).mul( getSample( { theta: theta.mul( - 1.0 ), axis, outputDirection, mipInt, envMap, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP } ) ) );\n\t\tgl_FragColor.addAssign( weights.element( i ).mul( getSample( { theta, axis, outputDirection, mipInt, envMap, CUBEUV_TEXEL_WIDTH, CUBEUV_TEXEL_HEIGHT, CUBEUV_MAX_MIP } ) ) );\n\n\t} );\n\n\treturn vec4( gl_FragColor, 1 );\n\n} );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { property } from '../core/PropertyNode.js';\nimport { context as contextNode } from '../core/ContextNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass CondNode extends Node {\n\n\tconstructor( condNode, ifNode, elseNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.condNode = condNode;\n\n\t\tthis.ifNode = ifNode;\n\t\tthis.elseNode = elseNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst ifType = this.ifNode.getNodeType( builder );\n\n\t\tif ( this.elseNode !== null ) {\n\n\t\t\tconst elseType = this.elseNode.getNodeType( builder );\n\n\t\t\tif ( builder.getTypeLength( elseType ) > builder.getTypeLength( ifType ) ) {\n\n\t\t\t\treturn elseType;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ifType;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst context = { tempWrite: false };\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\tif ( nodeData.nodeProperty !== undefined ) {\n\n\t\t\treturn nodeData.nodeProperty;\n\n\t\t}\n\n\t\tconst { ifNode, elseNode } = this;\n\n\t\tconst needsOutput = output !== 'void';\n\t\tconst nodeProperty = needsOutput ? property( type ).build( builder ) : '';\n\n\t\tnodeData.nodeProperty = nodeProperty;\n\n\t\tconst nodeSnippet = contextNode( this.condNode/*, context*/ ).build( builder, 'bool' );\n\n\t\tbuilder.addFlowCode( `\\n${ builder.tab }if ( ${ nodeSnippet } ) {\\n\\n` ).addFlowTab();\n\n\t\tlet ifSnippet = contextNode( ifNode, context ).build( builder, type );\n\n\t\tif ( ifSnippet ) {\n\n\t\t\tif ( needsOutput ) {\n\n\t\t\t\tifSnippet = nodeProperty + ' = ' + ifSnippet + ';';\n\n\t\t\t} else {\n\n\t\t\t\tifSnippet = 'return ' + ifSnippet + ';';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + ifSnippet + '\\n\\n' + builder.tab + '}' );\n\n\t\tif ( elseNode !== null ) {\n\n\t\t\tbuilder.addFlowCode( ' else {\\n\\n' ).addFlowTab();\n\n\t\t\tlet elseSnippet = contextNode( elseNode, context ).build( builder, type );\n\n\t\t\tif ( elseSnippet ) {\n\n\t\t\t\tif ( needsOutput ) {\n\n\t\t\t\t\telseSnippet = nodeProperty + ' = ' + elseSnippet + ';';\n\n\t\t\t\t} else {\n\n\t\t\t\t\telseSnippet = 'return ' + elseSnippet + ';';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + elseSnippet + '\\n\\n' + builder.tab + '}\\n\\n' );\n\n\t\t} else {\n\n\t\t\tbuilder.addFlowCode( '\\n\\n' );\n\n\t\t}\n\n\t\treturn builder.format( nodeProperty, type, output );\n\n\t}\n\n}\n\nexport default CondNode;\n\nexport const cond = nodeProxy( CondNode );\n\naddNodeElement( 'cond', cond );\n\naddNodeClass( 'CondNode', CondNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable, nodeProxy } from '../shadernode/ShaderNode.js';\nimport { cameraNear, cameraFar } from '../accessors/CameraNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { viewportDepthTexture } from './ViewportDepthTextureNode.js';\n\nclass ViewportDepthNode extends Node {\n\n\tconstructor( scope, valueNode = null ) {\n\n\t\tsuper( 'float' );\n\n\t\tthis.scope = scope;\n\t\tthis.valueNode = valueNode;\n\n\t\tthis.isViewportDepthNode = true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { scope } = this;\n\n\t\tif ( scope === ViewportDepthNode.DEPTH_PIXEL ) {\n\n\t\t\treturn builder.getFragDepth();\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n\tsetup( /*builder*/ ) {\n\n\t\tconst { scope } = this;\n\n\t\tlet node = null;\n\n\t\tif ( scope === ViewportDepthNode.DEPTH ) {\n\n\t\t\tnode = viewZToOrthographicDepth( positionView.z, cameraNear, cameraFar );\n\n\t\t} else if ( scope === ViewportDepthNode.DEPTH_TEXTURE ) {\n\n\t\t\tconst texture = this.valueNode || viewportDepthTexture();\n\n\t\t\tconst viewZ = perspectiveDepthToViewZ( texture, cameraNear, cameraFar );\n\t\t\tnode = viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n\n\t\t} else if ( scope === ViewportDepthNode.DEPTH_PIXEL ) {\n\n\t\t\tif ( this.valueNode !== null ) {\n\n \t\t\t\tnode = depthPixelBase().assign( this.valueNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n}\n\n// NOTE: viewZ, the z-coordinate in camera space, is negative for points in front of the camera\n\n// -near maps to 0; -far maps to 1\nexport const viewZToOrthographicDepth = ( viewZ, near, far ) => viewZ.add( near ).div( near.sub( far ) );\n\n// maps orthographic depth in [ 0, 1 ] to viewZ\nexport const orthographicDepthToViewZ = ( depth, near, far ) => near.sub( far ).mul( depth ).sub( near );\n\n// NOTE: https://twitter.com/gonnavis/status/1377183786949959682\n\n// -near maps to 0; -far maps to 1\nexport const viewZToPerspectiveDepth = ( viewZ, near, far ) => near.add( viewZ ).mul( far ).div( near.sub( far ).mul( viewZ ) );\n\n// maps perspective depth in [ 0, 1 ] to viewZ\nexport const perspectiveDepthToViewZ = ( depth, near, far ) => near.mul( far ).div( far.sub( near ).mul( depth ).sub( far ) );\n\nViewportDepthNode.DEPTH = 'depth';\nViewportDepthNode.DEPTH_TEXTURE = 'depthTexture';\nViewportDepthNode.DEPTH_PIXEL = 'depthPixel';\n\nexport default ViewportDepthNode;\n\nconst depthPixelBase = nodeProxy( ViewportDepthNode, ViewportDepthNode.DEPTH_PIXEL );\n\nexport const depth = nodeImmutable( ViewportDepthNode, ViewportDepthNode.DEPTH );\nexport const depthTexture = nodeProxy( ViewportDepthNode, ViewportDepthNode.DEPTH_TEXTURE );\nexport const depthPixel = nodeImmutable( ViewportDepthNode, ViewportDepthNode.DEPTH_PIXEL );\n\ndepthPixel.assign = ( value ) => depthPixelBase( value );\n\naddNodeClass( 'ViewportDepthNode', ViewportDepthNode );\n","import ViewportTextureNode from './ViewportTextureNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nimport { viewportTopLeft } from './ViewportNode.js';\nimport { DepthTexture } from 'three';\n\nlet sharedDepthbuffer = null;\n\nclass ViewportDepthTextureNode extends ViewportTextureNode {\n\n\tconstructor( uvNode = viewportTopLeft, levelNode = null ) {\n\n\t\tif ( sharedDepthbuffer === null ) {\n\n\t\t\tsharedDepthbuffer = new DepthTexture();\n\n\t\t}\n\n\t\tsuper( uvNode, levelNode, sharedDepthbuffer );\n\n\t}\n\n}\n\nexport default ViewportDepthTextureNode;\n\nexport const viewportDepthTexture = nodeProxy( ViewportDepthTextureNode );\n\naddNodeElement( 'viewportDepthTexture', viewportDepthTexture );\n\naddNodeClass( 'ViewportDepthTextureNode', ViewportDepthTextureNode );\n","import TextureNode from '../accessors/TextureNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nimport { viewportTopLeft } from './ViewportNode.js';\nimport { Vector2, FramebufferTexture, LinearMipmapLinearFilter } from 'three';\n\nconst _size = new Vector2();\n\nclass ViewportTextureNode extends TextureNode {\n\n\tconstructor( uvNode = viewportTopLeft, levelNode = null, framebufferTexture = null ) {\n\n\t\tif ( framebufferTexture === null ) {\n\n\t\t\tframebufferTexture = new FramebufferTexture();\n\t\t\tframebufferTexture.minFilter = LinearMipmapLinearFilter;\n\n\t\t}\n\n\t\tsuper( framebufferTexture, uvNode, levelNode );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.isOutputTextureNode = true;\n\n\t\tthis.updateBeforeType = NodeUpdateType.FRAME;\n\n\t}\n\n\tupdateBefore( frame ) {\n\n\t\tconst renderer = frame.renderer;\n\t\trenderer.getDrawingBufferSize( _size );\n\n\t\t//\n\n\t\tconst framebufferTexture = this.value;\n\n\t\tif ( framebufferTexture.image.width !== _size.width || framebufferTexture.image.height !== _size.height ) {\n\n\t\t\tframebufferTexture.image.width = _size.width;\n\t\t\tframebufferTexture.image.height = _size.height;\n\t\t\tframebufferTexture.needsUpdate = true;\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentGenerateMipmaps = framebufferTexture.generateMipmaps;\n\t\tframebufferTexture.generateMipmaps = this.generateMipmaps;\n\n\t\trenderer.copyFramebufferToTexture( framebufferTexture );\n\n\t\tframebufferTexture.generateMipmaps = currentGenerateMipmaps;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.uvNode, this.levelNode, this.value );\n\n\t}\n\n}\n\nexport default ViewportTextureNode;\n\nexport const viewportTexture = nodeProxy( ViewportTextureNode );\nexport const viewportMipTexture = nodeProxy( ViewportTextureNode, null, null, { generateMipmaps: true } );\n\naddNodeElement( 'viewportTexture', viewportTexture );\naddNodeElement( 'viewportMipTexture', viewportMipTexture );\n\naddNodeClass( 'ViewportTextureNode', ViewportTextureNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { nodeImmutable, vec2 } from '../shadernode/ShaderNode.js';\n\nimport { Vector2, Vector4 } from 'three';\n\nlet resolution, viewportResult;\n\nclass ViewportNode extends Node {\n\n\tconstructor( scope ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t\tthis.isViewportNode = true;\n\n\t}\n\n\tgetNodeType() {\n\n\t\treturn this.scope === ViewportNode.VIEWPORT ? 'vec4' : 'vec2';\n\n\t}\n\n\tgetUpdateType() {\n\n\t\tlet updateType = NodeUpdateType.NONE;\n\n\t\tif ( this.scope === ViewportNode.RESOLUTION || this.scope === ViewportNode.VIEWPORT ) {\n\n\t\t\tupdateType = NodeUpdateType.FRAME;\n\n\t\t}\n\n\t\tthis.updateType = updateType;\n\n\t\treturn updateType;\n\n\t}\n\n\tupdate( { renderer } ) {\n\n\t\tif ( this.scope === ViewportNode.VIEWPORT ) {\n\n\t\t\trenderer.getViewport( viewportResult );\n\n\t\t} else {\n\n\t\t\trenderer.getDrawingBufferSize( resolution );\n\n\t\t}\n\n\t}\n\n\tsetup( /*builder*/ ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet output = null;\n\n\t\tif ( scope === ViewportNode.RESOLUTION ) {\n\n\t\t\toutput = uniform( resolution || ( resolution = new Vector2() ) );\n\n\t\t} else if ( scope === ViewportNode.VIEWPORT ) {\n\n\t\t\toutput = uniform( viewportResult || ( viewportResult = new Vector4() ) );\n\n\t\t} else {\n\n\t\t\toutput = viewportCoordinate.div( viewportResolution );\n\n\t\t\tlet outX = output.x;\n\t\t\tlet outY = output.y;\n\n\t\t\tif ( /bottom/i.test( scope ) ) outY = outY.oneMinus();\n\t\t\tif ( /right/i.test( scope ) ) outX = outX.oneMinus();\n\n\t\t\toutput = vec2( outX, outY );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tif ( this.scope === ViewportNode.COORDINATE ) {\n\n\t\t\tlet coord = builder.getFragCoord();\n\n\t\t\tif ( builder.isFlipY() ) {\n\n\t\t\t\t// follow webgpu standards\n\n\t\t\t\tconst resolution = builder.getNodeProperties( viewportResolution ).outputNode.build( builder );\n\n\t\t\t\tcoord = `${ builder.getType( 'vec2' ) }( ${ coord }.x, ${ resolution }.y - ${ coord }.y )`;\n\n\t\t\t}\n\n\t\t\treturn coord;\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nViewportNode.COORDINATE = 'coordinate';\nViewportNode.RESOLUTION = 'resolution';\nViewportNode.VIEWPORT = 'viewport';\nViewportNode.TOP_LEFT = 'topLeft';\nViewportNode.BOTTOM_LEFT = 'bottomLeft';\nViewportNode.TOP_RIGHT = 'topRight';\nViewportNode.BOTTOM_RIGHT = 'bottomRight';\n\nexport default ViewportNode;\n\nexport const viewportCoordinate = nodeImmutable( ViewportNode, ViewportNode.COORDINATE );\nexport const viewportResolution = nodeImmutable( ViewportNode, ViewportNode.RESOLUTION );\nexport const viewport = nodeImmutable( ViewportNode, ViewportNode.VIEWPORT );\nexport const viewportTopLeft = nodeImmutable( ViewportNode, ViewportNode.TOP_LEFT );\nexport const viewportBottomLeft = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_LEFT );\nexport const viewportTopRight = nodeImmutable( ViewportNode, ViewportNode.TOP_RIGHT );\nexport const viewportBottomRight = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_RIGHT );\n\naddNodeClass( 'ViewportNode', ViewportNode );\n","\nimport Node from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { positionView } from './PositionNode.js';\nimport { diffuseColor, property } from '../core/PropertyNode.js';\nimport { tslFn } from '../shadernode/ShaderNode.js';\nimport { loop } from '../utils/LoopNode.js';\nimport { smoothstep  } from '../math/MathNode.js';\nimport { uniforms } from './UniformsNode.js';\n\nclass ClippingNode extends Node {\n\n\tconstructor( scope = ClippingNode.DEFAULT ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst clippingContext = builder.clippingContext;\n\t\tconst { localClipIntersection, localClippingCount, globalClippingCount } = clippingContext;\n\n\t\tconst numClippingPlanes = globalClippingCount + localClippingCount;\n\t\tconst numUnionClippingPlanes = localClipIntersection ? numClippingPlanes - localClippingCount : numClippingPlanes;\n\n\t\tif ( this.scope === ClippingNode.ALPHA_TO_COVERAGE ) {\n\n\t\t\treturn this.setupAlphaToCoverage( clippingContext.planes, numClippingPlanes, numUnionClippingPlanes );\n\n\t\t} else {\n\n\t\t\treturn this.setupDefault( clippingContext.planes, numClippingPlanes, numUnionClippingPlanes );\n\n\t\t}\n\n\t}\n\n\tsetupAlphaToCoverage( planes, numClippingPlanes, numUnionClippingPlanes ) {\n\n\t\treturn tslFn( () => {\n\n\t\t\tconst clippingPlanes = uniforms( planes );\n\n\t\t\tconst distanceToPlane = property( 'float', 'distanceToPlane' );\n\t\t\tconst distanceGradient = property( 'float', 'distanceToGradient' );\n\n\t\t\tconst clipOpacity = property( 'float', 'clipOpacity' );\n\n\t\t\tclipOpacity.assign( 1 );\n\n\t\t\tlet plane;\n\n\t\t\tloop( numUnionClippingPlanes, ( { i } ) => {\n\n\t\t\t\tplane = clippingPlanes.element( i );\n\n\t\t\t\tdistanceToPlane.assign( positionView.dot( plane.xyz ).negate().add( plane.w ) );\n\t\t\t\tdistanceGradient.assign( distanceToPlane.fwidth().div( 2.0 ) );\n\n\t\t\t\tclipOpacity.mulAssign( smoothstep( distanceGradient.negate(), distanceGradient, distanceToPlane ) );\n\n\t\t\t\tclipOpacity.equal( 0.0 ).discard();\n\n\t\t\t} );\n\n\t\t\tif ( numUnionClippingPlanes < numClippingPlanes ) {\n\n\t\t\t\tconst unionClipOpacity = property( 'float', 'unionclipOpacity' );\n\n\t\t\t\tunionClipOpacity.assign( 1 );\n\n\t\t\t\tloop( { start: numUnionClippingPlanes, end: numClippingPlanes }, ( { i } ) => {\n\n\t\t\t\t\tplane = clippingPlanes.element( i );\n\n\t\t\t\t\tdistanceToPlane.assign( positionView.dot(  plane.xyz ).negate().add( plane.w ) );\n\t\t\t\t\tdistanceGradient.assign( distanceToPlane.fwidth().div( 2.0 ) );\n\n\t\t\t\t\tunionClipOpacity.mulAssign( smoothstep( distanceGradient.negate(), distanceGradient, distanceToPlane ).oneMinus() );\n\n\t\t\t\t} );\n\n\t\t\t\tclipOpacity.mulAssign( unionClipOpacity.oneMinus() );\n\n\t\t\t}\n\n\t\t\tdiffuseColor.a.mulAssign( clipOpacity );\n\n\t\t\tdiffuseColor.a.equal( 0.0 ).discard();\n\n\t\t} )();\n\n\t}\n\n\tsetupDefault( planes, numClippingPlanes, numUnionClippingPlanes ) {\n\n\t\treturn tslFn( () => {\n\n\t\t\tconst clippingPlanes = uniforms( planes );\n\n\t\t\tlet plane;\n\n\t\t\tloop( numUnionClippingPlanes, ( { i } ) => {\n\n\t\t\t\tplane = clippingPlanes.element( i );\n\t\t\t\tpositionView.dot( plane.xyz ).greaterThan( plane.w ).discard();\n\n\t\t\t} );\n\n\t\t\tif ( numUnionClippingPlanes < numClippingPlanes ) {\n\n\t\t\t\tconst clipped = property( 'bool', 'clipped' );\n\n\t\t\t\tclipped.assign( true );\n\n\t\t\t\tloop( { start: numUnionClippingPlanes, end: numClippingPlanes }, ( { i } ) => {\n\n\t\t\t\t\tplane = clippingPlanes.element( i );\n\t\t\t\t\tclipped.assign( positionView.dot( plane.xyz ).greaterThan( plane.w ).and( clipped ) );\n\n\t\t\t\t} );\n\n\t\t\t\tclipped.discard();\n\t\t\t}\n\n\t\t} )();\n\n\t}\n\n}\n\nClippingNode.ALPHA_TO_COVERAGE = 'alphaToCoverage';\nClippingNode.DEFAULT = 'default';\n\nexport default ClippingNode;\n\nexport const clipping = () => nodeObject( new ClippingNode() );\n\nexport const clippingAlpha = () => nodeObject( new ClippingNode( ClippingNode.ALPHA_TO_COVERAGE ) );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable, float } from '../shadernode/ShaderNode.js';\n\nclass FrontFacingNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'bool' );\n\n\t\tthis.isFrontFacingNode = true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn builder.getFrontFacing();\n\n\t}\n\n}\n\nexport default FrontFacingNode;\n\nexport const frontFacing = nodeImmutable( FrontFacingNode );\nexport const faceDirection = float( frontFacing ).mul( 2.0 ).sub( 1.0 );\n\naddNodeClass( 'FrontFacingNode', FrontFacingNode );\n","import {\n\tFloatUniform, Vector2Uniform, Vector3Uniform, Vector4Uniform,\n\tColorUniform, Matrix3Uniform, Matrix4Uniform\n} from '../Uniform.js';\n\nclass FloatNodeUniform extends FloatUniform {\n\n\tconstructor( nodeUniform ) {\n\n\t\tsuper( nodeUniform.name, nodeUniform.value );\n\n\t\tthis.nodeUniform = nodeUniform;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.nodeUniform.value;\n\n\t}\n\n}\n\nclass Vector2NodeUniform extends Vector2Uniform {\n\n\tconstructor( nodeUniform ) {\n\n\t\tsuper( nodeUniform.name, nodeUniform.value );\n\n\t\tthis.nodeUniform = nodeUniform;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.nodeUniform.value;\n\n\t}\n\n}\n\nclass Vector3NodeUniform extends Vector3Uniform {\n\n\tconstructor( nodeUniform ) {\n\n\t\tsuper( nodeUniform.name, nodeUniform.value );\n\n\t\tthis.nodeUniform = nodeUniform;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.nodeUniform.value;\n\n\t}\n\n}\n\nclass Vector4NodeUniform extends Vector4Uniform {\n\n\tconstructor( nodeUniform ) {\n\n\t\tsuper( nodeUniform.name, nodeUniform.value );\n\n\t\tthis.nodeUniform = nodeUniform;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.nodeUniform.value;\n\n\t}\n\n}\n\nclass ColorNodeUniform extends ColorUniform {\n\n\tconstructor( nodeUniform ) {\n\n\t\tsuper( nodeUniform.name, nodeUniform.value );\n\n\t\tthis.nodeUniform = nodeUniform;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.nodeUniform.value;\n\n\t}\n\n}\n\nclass Matrix3NodeUniform extends Matrix3Uniform {\n\n\tconstructor( nodeUniform ) {\n\n\t\tsuper( nodeUniform.name, nodeUniform.value );\n\n\t\tthis.nodeUniform = nodeUniform;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.nodeUniform.value;\n\n\t}\n\n}\n\nclass Matrix4NodeUniform extends Matrix4Uniform {\n\n\tconstructor( nodeUniform ) {\n\n\t\tsuper( nodeUniform.name, nodeUniform.value );\n\n\t\tthis.nodeUniform = nodeUniform;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.nodeUniform.value;\n\n\t}\n\n}\n\nexport {\n\tFloatNodeUniform, Vector2NodeUniform, Vector3NodeUniform, Vector4NodeUniform,\n\tColorNodeUniform, Matrix3NodeUniform, Matrix4NodeUniform\n};\n","import { Color, Matrix3, Matrix4, Vector2, Vector3, Vector4 } from 'three';\n\nclass Uniform {\n\n\tconstructor( name, value = null ) {\n\n\t\tthis.name = name;\n\t\tthis.value = value;\n\n\t\tthis.boundary = 0; // used to build the uniform buffer according to the STD140 layout\n\t\tthis.itemSize = 0;\n\n\t\tthis.offset = 0; // this property is set by WebGPUUniformsGroup and marks the start position in the uniform buffer\n\n\t}\n\n\tsetValue( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.value;\n\n\t}\n\n}\n\nclass FloatUniform extends Uniform {\n\n\tconstructor( name, value = 0 ) {\n\n\t\tsuper( name, value );\n\n\t\tthis.isFloatUniform = true;\n\n\t\tthis.boundary = 4;\n\t\tthis.itemSize = 1;\n\n\t}\n\n}\n\nclass Vector2Uniform extends Uniform {\n\n\tconstructor( name, value = new Vector2() ) {\n\n\t\tsuper( name, value );\n\n\t\tthis.isVector2Uniform = true;\n\n\t\tthis.boundary = 8;\n\t\tthis.itemSize = 2;\n\n\t}\n\n}\n\nclass Vector3Uniform extends Uniform {\n\n\tconstructor( name, value = new Vector3() ) {\n\n\t\tsuper( name, value );\n\n\t\tthis.isVector3Uniform = true;\n\n\t\tthis.boundary = 16;\n\t\tthis.itemSize = 3;\n\n\t}\n\n}\n\nclass Vector4Uniform extends Uniform {\n\n\tconstructor( name, value = new Vector4() ) {\n\n\t\tsuper( name, value );\n\n\t\tthis.isVector4Uniform = true;\n\n\t\tthis.boundary = 16;\n\t\tthis.itemSize = 4;\n\n\t}\n\n}\n\nclass ColorUniform extends Uniform {\n\n\tconstructor( name, value = new Color() ) {\n\n\t\tsuper( name, value );\n\n\t\tthis.isColorUniform = true;\n\n\t\tthis.boundary = 16;\n\t\tthis.itemSize = 3;\n\n\t}\n\n}\n\nclass Matrix3Uniform extends Uniform {\n\n\tconstructor( name, value = new Matrix3() ) {\n\n\t\tsuper( name, value );\n\n\t\tthis.isMatrix3Uniform = true;\n\n\t\tthis.boundary = 48;\n\t\tthis.itemSize = 12;\n\n\t}\n\n}\n\nclass Matrix4Uniform extends Uniform {\n\n\tconstructor( name, value = new Matrix4() ) {\n\n\t\tsuper( name, value );\n\n\t\tthis.isMatrix4Uniform = true;\n\n\t\tthis.boundary = 64;\n\t\tthis.itemSize = 16;\n\n\t}\n\n}\n\nexport {\n\tFloatUniform,\n\tVector2Uniform, Vector3Uniform, Vector4Uniform, ColorUniform,\n\tMatrix3Uniform, Matrix4Uniform\n};\n","import Node, { addNodeClass } from './Node.js';\nimport { cond } from '../math/CondNode.js';\nimport { ShaderNode, nodeProxy, getCurrentStack, setCurrentStack } from '../shadernode/ShaderNode.js';\n\nclass StackNode extends Node {\n\n\tconstructor( parent = null ) {\n\n\t\tsuper();\n\n\t\tthis.nodes = [];\n\t\tthis.outputNode = null;\n\n\t\tthis.parent = parent;\n\n\t\tthis._currentCond = null;\n\n\t\tthis.isStackNode = true;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.outputNode ? this.outputNode.getNodeType( builder ) : 'void';\n\n\t}\n\n\tadd( node ) {\n\n\t\tthis.nodes.push( node );\n\n\t\treturn this;\n\n\t}\n\n\tif( boolNode, method ) {\n\n\t\tconst methodNode = new ShaderNode( method );\n\t\tthis._currentCond = cond( boolNode, methodNode );\n\n\t\treturn this.add( this._currentCond );\n\n\t}\n\n\telseif( boolNode, method ) {\n\n\t\tconst methodNode = new ShaderNode( method );\n\t\tconst ifNode = cond( boolNode, methodNode );\n\n\t\tthis._currentCond.elseNode = ifNode;\n\t\tthis._currentCond = ifNode;\n\n\t\treturn this;\n\n\t}\n\n\telse( method ) {\n\n\t\tthis._currentCond.elseNode = new ShaderNode( method );\n\n\t\treturn this;\n\n\t}\n\n\tbuild( builder, ...params ) {\n\n\t\tconst previousStack = getCurrentStack();\n\n\t\tsetCurrentStack( this );\n\n\t\tfor ( const node of this.nodes ) {\n\n\t\t\tnode.build( builder, 'void' );\n\n\t\t}\n\n\t\tsetCurrentStack( previousStack );\n\n\t\treturn this.outputNode ? this.outputNode.build( builder, ...params ) : super.build( builder, ...params );\n\n\t}\n\n}\n\nexport default StackNode;\n\nexport const stack = nodeProxy( StackNode );\n\naddNodeClass( 'StackNode', StackNode );\n","import { WebGLCubeRenderTarget, Scene, CubeCamera, BoxGeometry, Mesh, BackSide, NoBlending, LinearFilter, LinearMipmapLinearFilter } from 'three';\nimport { equirectUV } from '../../nodes/utils/EquirectUVNode.js';\nimport { texture as TSL_Texture } from '../../nodes/accessors/TextureNode.js';\nimport { positionWorldDirection } from '../../nodes/accessors/PositionNode.js';\nimport { createNodeMaterialFromType } from '../../nodes/materials/NodeMaterial.js';\n\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\n\nclass CubeRenderTarget extends WebGLCubeRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, options );\n\n\t\tthis.isCubeRenderTarget = true;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tconst currentMinFilter = texture.minFilter;\n\t\tconst currentGenerateMipmaps = texture.generateMipmaps;\n\n\t\ttexture.generateMipmaps = true;\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst uvNode = equirectUV( positionWorldDirection );\n\n\t\tconst material = createNodeMaterialFromType( 'MeshBasicNodeMaterial' );\n\t\tmaterial.colorNode = TSL_Texture( texture, uvNode, 0 );\n\t\tmaterial.side = BackSide;\n\t\tmaterial.blending = NoBlending;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst scene = new Scene();\n\t\tscene.add( mesh );\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, scene );\n\n\t\ttexture.minFilter = currentMinFilter;\n\t\ttexture.currentGenerateMipmaps = currentGenerateMipmaps;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default CubeRenderTarget;\n","import TempNode from '../core/TempNode.js';\nimport { positionWorldDirection } from '../accessors/PositionNode.js';\nimport { nodeProxy, vec2 } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass EquirectUVNode extends TempNode {\n\n\tconstructor( dirNode = positionWorldDirection ) {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.dirNode = dirNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst dir = this.dirNode;\n\n\t\tconst u = dir.z.atan2( dir.x ).mul( 1 / ( Math.PI * 2 ) ).add( 0.5 );\n\t\tconst v = dir.y.clamp( - 1.0, 1.0 ).asin().mul( 1 / Math.PI ).add( 0.5 );\n\n\t\treturn vec2( u, v );\n\n\t}\n\n}\n\nexport default EquirectUVNode;\n\nexport const equirectUV = nodeProxy( EquirectUVNode );\n\naddNodeClass( 'EquirectUVNode', EquirectUVNode );\n","export default class ChainMap {\n\n\tconstructor() {\n\n\t\tthis.weakMap = new WeakMap();\n\n\t}\n\n\tget( keys ) {\n\n\t\tif ( Array.isArray( keys ) ) {\n\n\t\t\tlet map = this.weakMap;\n\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\n\n\t\t\t\tmap = map.get( keys[ i ] );\n\n\t\t\t\tif ( map === undefined ) return undefined;\n\n\t\t\t}\n\n\t\t\treturn map.get( keys[ keys.length - 1 ] );\n\n\t\t} else {\n\n\t\t\treturn super.get( keys );\n\n\t\t}\n\n\t}\n\n\tset( keys, value ) {\n\n\t\tif ( Array.isArray( keys ) ) {\n\n\t\t\tlet map = this.weakMap;\n\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\n\n\t\t\t\tconst key = keys[ i ];\n\n\t\t\t\tif ( map.has( key ) === false ) map.set( key, new WeakMap() );\n\n\t\t\t\tmap = map.get( key );\n\n\t\t\t}\n\n\t\t\treturn map.set( keys[ keys.length - 1 ], value );\n\n\t\t} else {\n\n\t\t\treturn super.set( keys, value );\n\n\t\t}\n\n\t}\n\n\tdelete( keys ) {\n\n\t\tif ( Array.isArray( keys ) ) {\n\n\t\t\tlet map = this.weakMap;\n\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\n\n\t\t\t\tmap = map.get( keys[ i ] );\n\n\t\t\t\tif ( map === undefined ) return false;\n\n\t\t\t}\n\n\t\t\treturn map.delete( keys[ keys.length - 1 ] );\n\n\t\t} else {\n\n\t\t\treturn super.delete( keys );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.weakMap.clear();\n\n\t}\n\n}\n","import NodeMaterial from '../../../nodes/materials/NodeMaterial.js';\nimport { getDirection, blur } from '../../../nodes/pmrem/PMREMUtils.js';\nimport { equirectUV } from '../../../nodes/utils/EquirectUVNode.js';\nimport { uniform } from '../../../nodes/core/UniformNode.js';\nimport { uniforms } from '../../../nodes/accessors/UniformsNode.js';\nimport { texture } from '../../../nodes/accessors/TextureNode.js';\nimport { cubeTexture } from '../../../nodes/accessors/CubeTextureNode.js';\nimport { float, vec3 } from '../../../nodes/shadernode/ShaderNode.js';\nimport { uv } from '../../../nodes/accessors/UVNode.js';\nimport { attribute } from '../../../nodes/core/AttributeNode.js';\nimport {\n\tOrthographicCamera,\n\tColor,\n\tVector3,\n\tBufferGeometry,\n\tBufferAttribute,\n\tRenderTarget,\n\tMesh,\n\tCubeReflectionMapping,\n\tCubeRefractionMapping,\n\tCubeUVReflectionMapping,\n\tLinearFilter,\n\tNoToneMapping,\n\tNoBlending,\n\tRGBAFormat,\n\tHalfFloatType,\n\tBackSide,\n\tLinearSRGBColorSpace,\n\tPerspectiveCamera,\n\tMeshBasicMaterial,\n\tBoxGeometry\n} from 'three';\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\nconst _cubeCamera = /*@__PURE__*/ new PerspectiveCamera( 90, 1 );\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 )\n];\n\n//\n\n// WebGPU Face indices\nconst _faceLib = [\n\t3, 1, 5,\n\t0, 4, 2\n];\n\nconst direction = getDirection( uv(), attribute( 'faceIndex' ) ).normalize();\nconst outputDirection = vec3( direction.x, direction.y.negate(), direction.z );\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\t\tthis._lodMeshes = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\t\tthis._backgroundBox = null;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\t\tif ( this._backgroundBox !== null ) {\n\n\t\t\tthis._backgroundBox.geometry.dispose();\n\t\t\tthis._backgroundBox.material.dispose();\n\n\t\t}\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\t//depthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas, lodMeshes: this._lodMeshes } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = this._lodMeshes[ 0 ];\n\t\ttmpMesh.material = material;\n\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst cubeCamera = _cubeCamera;\n\t\tcubeCamera.near = near;\n\t\tcubeCamera.far = far;\n\n\t\t// px, py, pz, nx, ny, nz\n\t\tconst upSign = [ - 1, 1, - 1, - 1, - 1, - 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tlet backgroundBox = this._backgroundBox;\n\n\t\tif ( backgroundBox === null ) {\n\n\t\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\t\tname: 'PMREM.Background',\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tdepthTest: false\n\t\t\t} );\n\n\t\t\tbackgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\t}\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundBox.material.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundBox.material.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\trenderer.clear();\n\n\t\tif ( useSolidColor ) {\n\n\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial( texture );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial( texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tmaterial.fragmentNode.value = texture;\n\n\t\tconst mesh = this._lodMeshes[ 0 ];\n\t\tmesh.material = material;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error( 'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = this._lodMeshes[ lodOut ];\n\t\tblurMesh.material = blurMaterial;\n\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\ttargetIn.texture.frame = ( targetIn.texture.frame || 0 ) + 1;\n\n\t\tblurUniforms.envMap.value = targetIn.texture;\n\t\tblurUniforms.samples.value = samples;\n\t\tblurUniforms.weights.array = weights;\n\t\tblurUniforms.latitudinal.value = direction === 'latitudinal' ? 1 : 0;\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms.poleAxis.value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms.dTheta.value = radiansPerPixel;\n\t\tblurUniforms.mipInt.value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\tconst lodMeshes = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\n\t\t\tconst faceIdx = _faceLib[ face ];\n\t\t\tposition.set( coordinates, positionSize * vertices * faceIdx );\n\t\t\tuv.set( uv1, uvSize * vertices * faceIdx );\n\t\t\tconst fill = [ faceIdx, faceIdx, faceIdx, faceIdx, faceIdx, faceIdx ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * faceIdx );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\t\tlodMeshes.push( new Mesh( planes, null ) );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas, lodMeshes };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new RenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.texture.isPMREMTexture = true;\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\tconst viewY = target.height - height - y;\n\n\ttarget.viewport.set( x, viewY, width, height );\n\ttarget.scissor.set( x, viewY, width, height );\n\n}\n\nfunction _getMaterial() {\n\n\tconst material = new NodeMaterial();\n\tmaterial.colorSpaced = false;\n\tmaterial.toneMapped = false;\n\tmaterial.depthTest = false;\n\tmaterial.depthWrite = false;\n\tmaterial.blending = NoBlending;\n\n\treturn material;\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = uniforms( new Array( MAX_SAMPLES ).fill( 0 ) );\n\tconst poleAxis = uniform( new Vector3( 0, 1, 0 ) );\n\tconst dTheta = uniform( 0 );\n\tconst n = float( MAX_SAMPLES );\n\tconst latitudinal = uniform( 0 ); // false, bool\n\tconst samples = uniform( 1 ); // int\n\tconst envMap = texture( null );\n\tconst mipInt = uniform( 0 ); // int\n\tconst CUBEUV_TEXEL_WIDTH = float( 1 / width );\n\tconst CUBEUV_TEXEL_HEIGHT = float( 1 / height );\n\tconst CUBEUV_MAX_MIP = float( lodMax );\n\n\tconst materialUniforms = {\n\t\tn,\n\t\tlatitudinal,\n\t\tweights,\n\t\tpoleAxis,\n\t\toutputDirection,\n\t\tdTheta,\n\t\tsamples,\n\t\tenvMap,\n\t\tmipInt,\n\t\tCUBEUV_TEXEL_WIDTH,\n\t\tCUBEUV_TEXEL_HEIGHT,\n\t\tCUBEUV_MAX_MIP\n\t};\n\n\tconst material = _getMaterial();\n\tmaterial.uniforms = materialUniforms; // TODO: Move to outside of the material\n\tmaterial.fragmentNode = blur( { ...materialUniforms, latitudinal: latitudinal.equal( 1 ) } );\n\n\treturn material;\n\n}\n\nfunction _getCubemapMaterial( envTexture ) {\n\n\tconst material = _getMaterial();\n\tmaterial.fragmentNode = cubeTexture( envTexture, outputDirection );\n\n\treturn material;\n\n}\n\nfunction _getEquirectMaterial( envTexture ) {\n\n\tconst material = _getMaterial();\n\tmaterial.fragmentNode = texture( envTexture, equirectUV( outputDirection ), 0 );\n\n\treturn material;\n\n}\n\nexport default PMREMGenerator;\n","import { NodeUpdateType } from './constants.js';\n\nclass NodeFrame {\n\n\tconstructor() {\n\n\t\tthis.time = 0;\n\t\tthis.deltaTime = 0;\n\n\t\tthis.frameId = 0;\n\t\tthis.renderId = 0;\n\n\t\tthis.startTime = null;\n\n\t\tthis.updateMap = new WeakMap();\n\t\tthis.updateBeforeMap = new WeakMap();\n\n\t\tthis.renderer = null;\n\t\tthis.material = null;\n\t\tthis.camera = null;\n\t\tthis.object = null;\n\t\tthis.scene = null;\n\n\t}\n\n\t_getMaps( referenceMap, nodeRef ) {\n\n\t\tlet maps = referenceMap.get( nodeRef );\n\n\t\tif ( maps === undefined ) {\n\n\t\t\tmaps = {\n\t\t\t\trenderMap: new WeakMap(),\n\t\t\t\tframeMap: new WeakMap()\n\t\t\t};\n\n\t\t\treferenceMap.set( nodeRef, maps );\n\n\t\t}\n\n\t\treturn maps;\n\n\t}\n\n\tupdateBeforeNode( node ) {\n\n\t\tconst updateType = node.getUpdateBeforeType();\n\t\tconst reference = node.updateReference( this );\n\n\t\tif ( updateType === NodeUpdateType.FRAME ) {\n\n\t\t\tconst { frameMap } = this._getMaps( this.updateBeforeMap, reference );\n\n\t\t\tif ( frameMap.get( reference ) !== this.frameId ) {\n\n\t\t\t\tif ( node.updateBefore( this ) !== false ) {\n\n\t\t\t\t\tframeMap.set( reference, this.frameId );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( updateType === NodeUpdateType.RENDER ) {\n\n\t\t\tconst { renderMap } = this._getMaps( this.updateBeforeMap, reference );\n\n\t\t\tif ( renderMap.get( reference ) !== this.renderId ) {\n\n\t\t\t\tif ( node.updateBefore( this ) !== false ) {\n\n\t\t\t\t\trenderMap.set( reference, this.renderId );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( updateType === NodeUpdateType.OBJECT ) {\n\n\t\t\tnode.updateBefore( this );\n\n\t\t}\n\n\t}\n\n\tupdateNode( node ) {\n\n\t\tconst updateType = node.getUpdateType();\n\t\tconst reference = node.updateReference( this );\n\n\t\tif ( updateType === NodeUpdateType.FRAME ) {\n\n\t\t\tconst { frameMap } = this._getMaps( this.updateMap, reference );\n\n\t\t\tif ( frameMap.get( reference ) !== this.frameId ) {\n\n\t\t\t\tif ( node.update( this ) !== false ) {\n\n\t\t\t\t\tframeMap.set( reference, this.frameId );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( updateType === NodeUpdateType.RENDER ) {\n\n\t\t\tconst { renderMap } = this._getMaps( this.updateMap, reference );\n\n\t\t\tif ( renderMap.get( reference ) !== this.renderId ) {\n\n\t\t\t\tif ( node.update( this ) !== false ) {\n\n\t\t\t\t\trenderMap.set( reference, this.renderId );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( updateType === NodeUpdateType.OBJECT ) {\n\n\t\t\tnode.update( this );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tthis.frameId ++;\n\n\t\tif ( this.lastTime === undefined ) this.lastTime = performance.now();\n\n\t\tthis.deltaTime = ( performance.now() - this.lastTime ) / 1000;\n\n\t\tthis.lastTime = performance.now();\n\n\t\tthis.time += this.deltaTime;\n\n\t}\n\n}\n\nexport default NodeFrame;\n","class NodeFunctionInput {\n\n\tconstructor( type, name, count = null, qualifier = '', isConst = false ) {\n\n\t\tthis.type = type;\n\t\tthis.name = name;\n\t\tthis.count = count;\n\t\tthis.qualifier = qualifier;\n\t\tthis.isConst = isConst;\n\n\t}\n\n}\n\nNodeFunctionInput.isNodeFunctionInput = true;\n\nexport default NodeFunctionInput;\n","import Node, { addNodeClass } from './Node.js';\nimport StructTypeNode from './StructTypeNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass OutputStructNode extends Node {\n\n\tconstructor( ...members ) {\n\n\t\tsuper();\n\n\t\tthis.isOutputStructNode = true;\n\t\tthis.members = members;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst members = this.members;\n\t\tconst types = [];\n\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\n\n\t\t\ttypes.push( members[ i ].getNodeType( builder ) );\n\n\t\t}\n\n\t\tthis.nodeType = builder.getStructTypeFromNode( new StructTypeNode( types ) ).name;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst nodeVar = builder.getVarFromNode( this );\n\t\tnodeVar.isOutputStructVar = true;\n\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\tconst members = this.members;\n\n\t\tconst structPrefix = propertyName !== '' ? propertyName + '.' : '';\n\n\t\tfor ( let i = 0; i < members.length; i ++ ) {\n\n\t\t\tconst snippet = members[ i ].build( builder, output );\n\n\t\t\tbuilder.addLineFlowCode( `${ structPrefix }m${ i } = ${ snippet }` );\n\n\t\t}\n\n\t\treturn propertyName;\n\n\t}\n\n}\n\nexport default OutputStructNode;\n\nexport const outputStruct = nodeProxy( OutputStructNode );\n\naddNodeClass( 'OutputStructNode', OutputStructNode );\n","import Node, { addNodeClass } from './Node.js';\n\nclass StructTypeNode extends Node {\n\n\tconstructor( types ) {\n\n\t\tsuper();\n\n\t\tthis.types = types;\n\t\tthis.isStructTypeNode = true;\n\n\t}\n\n\tgetMemberTypes() {\n\n\t\treturn this.types;\n\n\t}\n\n}\n\nexport default StructTypeNode;\n\naddNodeClass( 'StructTypeNode', StructTypeNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass HashNode extends Node {\n\n\tconstructor( seedNode ) {\n\n\t\tsuper();\n\n\t\tthis.seedNode = seedNode;\n\n\t}\n\n\tsetup( /*builder*/ ) {\n\n\t\t// Taken from https://www.shadertoy.com/view/XlGcRh, originally from pcg-random.org\n\n\t\tconst state = this.seedNode.uint().mul( 747796405 ).add( 2891336453 );\n\t\tconst word = state.shiftRight( state.shiftRight( 28 ).add( 4 ) ).bitXor( state ).mul( 277803737 );\n\t\tconst result = word.shiftRight( 22 ).bitXor( word );\n\n\t\treturn result.float().mul( 1 / 2 ** 32 ); // Convert to range [0, 1)\n\n\t}\n\n}\n\nexport default HashNode;\n\nexport const hash = nodeProxy( HashNode );\n\naddNodeElement( 'hash', hash );\n\naddNodeClass( 'HashNode', HashNode );\n","import { sub, mul, div, add } from './OperatorNode.js';\nimport { addNodeElement } from '../shadernode/ShaderNode.js';\nimport { PI, pow, sin } from './MathNode.js';\n\n// remapping functions https://iquilezles.org/articles/functions/\nexport const parabola = ( x, k ) => pow( mul( 4.0, x.mul( sub( 1.0, x ) ) ), k );\nexport const gain = ( x, k ) => x.lessThan( 0.5 ) ? parabola( x.mul( 2.0 ), k ).div( 2.0 ) : sub( 1.0, parabola( mul( sub( 1.0, x ), 2.0 ), k ).div( 2.0 ) );\nexport const pcurve = ( x, a, b ) => pow( div( pow( x, a ), add( pow( x, a ), pow( sub( 1.0, x ), b ) ) ), 1.0 / a );\nexport const sinc = ( x, k ) => sin( PI.mul( k.mul( x ).sub( 1.0 ) ) ).div( PI.mul( k.mul( x ).sub( 1.0 ) ) );\n\n\naddNodeElement( 'parabola', parabola );\naddNodeElement( 'gain', gain );\naddNodeElement( 'pcurve', pcurve );\naddNodeElement( 'sinc', sinc );\n","// https://github.com/cabbibo/glsl-tri-noise-3d\n\nimport { loop } from '../utils/LoopNode.js';\nimport { float, vec3, tslFn } from '../shadernode/ShaderNode.js';\n\nconst tri = tslFn( ( [ x ] ) => {\n\n\treturn x.fract().sub( .5 ).abs();\n\n} );\n\nconst tri3 = tslFn( ( [ p ] ) => {\n\n\treturn vec3( tri( p.z.add( tri( p.y.mul( 1. ) ) ) ), tri( p.z.add( tri( p.x.mul( 1. ) ) ) ), tri( p.y.add( tri( p.x.mul( 1. ) ) ) ) );\n\n} );\n\nconst triNoise3D = tslFn( ( [ p_immutable, spd, time ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst z = float( 1.4 ).toVar();\n\tconst rz = float( 0.0 ).toVar();\n\tconst bp = vec3( p ).toVar();\n\n\tloop( { start: float( 0.0 ), end: float( 3.0 ), type: 'float', condition: '<=' }, () => {\n\n\t\tconst dg = vec3( tri3( bp.mul( 2.0 ) ) ).toVar();\n\t\tp.addAssign( dg.add( time.mul( float( 0.1 ).mul( spd ) ) ) );\n\t\tbp.mulAssign( 1.8 );\n\t\tz.mulAssign( 1.5 );\n\t\tp.mulAssign( 1.2 );\n\n\t\tconst t = float( tri( p.z.add( tri( p.x.add( tri( p.y ) ) ) ) ) ).toVar();\n\t\trz.addAssign( t.div( z ) );\n\t\tbp.addAssign( 0.14 );\n\n\t} );\n\n\treturn rz;\n\n} );\n\n// layouts\n\ntri.setLayout( {\n\tname: 'tri',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'x', type: 'float' }\n\t]\n} );\n\ntri3.setLayout( {\n\tname: 'tri3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\ntriNoise3D.setLayout( {\n\tname: 'triNoise3D',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'spd', type: 'float' },\n\t\t{ name: 'time', type: 'float' }\n\t]\n} );\n\nexport { tri, tri3, triNoise3D };\n","import CondNode from '../math/CondNode.js';\nimport { expression } from '../code/ExpressionNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nlet discardExpression;\n\nclass DiscardNode extends CondNode {\n\n\tconstructor( condNode ) {\n\n\t\tdiscardExpression = discardExpression || expression( 'discard' );\n\n\t\tsuper( condNode, discardExpression );\n\n\t}\n\n}\n\nexport default DiscardNode;\n\nexport const inlineDiscard = nodeProxy( DiscardNode );\nexport const discard = ( condNode ) => inlineDiscard( condNode ).append();\n\naddNodeElement( 'discard', discard ); // @TODO: Check... this cause a little confusing using in chaining\n\naddNodeClass( 'DiscardNode', DiscardNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass FunctionOverloadingNode extends Node {\n\n\tconstructor( functionNodes = [], ...parametersNodes ) {\n\n\t\tsuper();\n\n\t\tthis.functionNodes = functionNodes;\n\t\tthis.parametersNodes = parametersNodes;\n\n\t\tthis._candidateFnCall = null;\n\n\t}\n\n\tgetNodeType() {\n\n\t\treturn this.functionNodes[ 0 ].shaderNode.layout.type;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst params = this.parametersNodes;\n\n\t\tlet candidateFnCall = this._candidateFnCall;\n\n\t\tif ( candidateFnCall === null ) {\n\n\t\t\tlet candidateFn = null;\n\t\t\tlet candidateScore = - 1;\n\n\t\t\tfor ( const functionNode of this.functionNodes ) {\n\n\t\t\t\tconst shaderNode = functionNode.shaderNode;\n\t\t\t\tconst layout = shaderNode.layout;\n\n\t\t\t\tif ( layout === null ) {\n\n\t\t\t\t\tthrow new Error( 'FunctionOverloadingNode: FunctionNode must be a layout.' );\n\n\t\t\t\t}\n\n\t\t\t\tconst inputs = layout.inputs;\n\n\t\t\t\tif ( params.length === inputs.length ) {\n\n\t\t\t\t\tlet score = 0;\n\n\t\t\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\n\n\t\t\t\t\t\tconst param = params[ i ];\n\t\t\t\t\t\tconst input = inputs[ i ];\n\n\t\t\t\t\t\tif ( param.getNodeType( builder ) === input.type ) {\n\n\t\t\t\t\t\t\tscore ++;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscore = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( score > candidateScore ) {\n\n\t\t\t\t\t\tcandidateFn = functionNode;\n\t\t\t\t\t\tcandidateScore = score;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._candidateFnCall = candidateFnCall = candidateFn( ...params );\n\n\t\t}\n\n\t\treturn candidateFnCall;\n\n\t}\n\n}\n\nexport default FunctionOverloadingNode;\n\nconst overloadingBaseFn = nodeProxy( FunctionOverloadingNode );\n\nexport const overloadingFn = ( functionNodes ) => ( ...params ) => overloadingBaseFn( functionNodes, ...params );\n\naddNodeClass( 'FunctionOverloadingNode', FunctionOverloadingNode );\n","import TempNode from '../core/TempNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { nodeImmutable, vec2, vec3 } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass MatcapUVNode extends TempNode {\n\n\tconstructor() {\n\n\t\tsuper( 'vec2' );\n\n\t}\n\n\tsetup() {\n\n\t\tconst x = vec3( positionViewDirection.z, 0, positionViewDirection.x.negate() ).normalize();\n\t\tconst y = positionViewDirection.cross( x );\n\n\t\treturn vec2( x.dot( transformedNormalView ), y.dot( transformedNormalView ) ).mul( 0.495 ).add( 0.5 );\n\n\t}\n\n}\n\nexport default MatcapUVNode;\n\nexport const matcapUV = nodeImmutable( MatcapUVNode );\n\naddNodeClass( 'MatcapUVNode', MatcapUVNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { timerLocal } from './TimerNode.js';\nimport { nodeObject, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass OscNode extends Node {\n\n\tconstructor( method = OscNode.SINE, timeNode = timerLocal() ) {\n\n\t\tsuper();\n\n\t\tthis.method = method;\n\t\tthis.timeNode = timeNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.timeNode.getNodeType( builder );\n\n\t}\n\n\tsetup() {\n\n\t\tconst method = this.method;\n\t\tconst timeNode = nodeObject( this.timeNode );\n\n\t\tlet outputNode = null;\n\n\t\tif ( method === OscNode.SINE ) {\n\n\t\t\toutputNode = timeNode.add( 0.75 ).mul( Math.PI * 2 ).sin().mul( 0.5 ).add( 0.5 );\n\n\t\t} else if ( method === OscNode.SQUARE ) {\n\n\t\t\toutputNode = timeNode.fract().round();\n\n\t\t} else if ( method === OscNode.TRIANGLE ) {\n\n\t\t\toutputNode = timeNode.add( 0.5 ).fract().mul( 2 ).sub( 1 ).abs();\n\n\t\t} else if ( method === OscNode.SAWTOOTH ) {\n\n\t\t\toutputNode = timeNode.fract();\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\nOscNode.SINE = 'sine';\nOscNode.SQUARE = 'square';\nOscNode.TRIANGLE = 'triangle';\nOscNode.SAWTOOTH = 'sawtooth';\n\nexport default OscNode;\n\nexport const oscSine = nodeProxy( OscNode, OscNode.SINE );\nexport const oscSquare = nodeProxy( OscNode, OscNode.SQUARE );\nexport const oscTriangle = nodeProxy( OscNode, OscNode.TRIANGLE );\nexport const oscSawtooth = nodeProxy( OscNode, OscNode.SAWTOOTH );\n\naddNodeClass( 'OscNode', OscNode );\n","import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeObject, nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass TimerNode extends UniformNode {\n\n\tconstructor( scope = TimerNode.LOCAL, scale = 1, value = 0 ) {\n\n\t\tsuper( value );\n\n\t\tthis.scope = scope;\n\t\tthis.scale = scale;\n\n\t\tthis.updateType = NodeUpdateType.FRAME;\n\n\t}\n\t/*\n\t@TODO:\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === TimerNode.FRAME ) {\n\n\t\t\treturn 'uint';\n\n\t\t}\n\n\t\treturn 'float';\n\n\t}\n*/\n\tupdate( frame ) {\n\n\t\tconst scope = this.scope;\n\t\tconst scale = this.scale;\n\n\t\tif ( scope === TimerNode.LOCAL ) {\n\n\t\t\tthis.value += frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.DELTA ) {\n\n\t\t\tthis.value = frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.FRAME ) {\n\n\t\t\tthis.value = frame.frameId;\n\n\t\t} else {\n\n\t\t\t// global\n\n\t\t\tthis.value = frame.time * scale;\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\t\tdata.scale = this.scale;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\t\tthis.scale = data.scale;\n\n\t}\n\n}\n\nTimerNode.LOCAL = 'local';\nTimerNode.GLOBAL = 'global';\nTimerNode.DELTA = 'delta';\nTimerNode.FRAME = 'frame';\n\nexport default TimerNode;\n\n// @TODO: add support to use node in timeScale\nexport const timerLocal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.LOCAL, timeScale, value ) );\nexport const timerGlobal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.GLOBAL, timeScale, value ) );\nexport const timerDelta = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.DELTA, timeScale, value ) );\nexport const frameId = nodeImmutable( TimerNode, TimerNode.FRAME ).uint();\n\naddNodeClass( 'TimerNode', TimerNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass PackingNode extends TempNode {\n\n\tconstructor( scope, node ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\t\tthis.node = node;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tsetup() {\n\n\t\tconst { scope, node } = this;\n\n\t\tlet result = null;\n\n\t\tif ( scope === PackingNode.DIRECTION_TO_COLOR ) {\n\n\t\t\tresult = node.mul( 0.5 ).add( 0.5 );\n\n\t\t} else if ( scope === PackingNode.COLOR_TO_DIRECTION ) {\n\n\t\t\tresult = node.mul( 2.0 ).sub( 1 );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nPackingNode.DIRECTION_TO_COLOR = 'directionToColor';\nPackingNode.COLOR_TO_DIRECTION = 'colorToDirection';\n\nexport default PackingNode;\n\nexport const directionToColor = nodeProxy( PackingNode, PackingNode.DIRECTION_TO_COLOR );\nexport const colorToDirection = nodeProxy( PackingNode, PackingNode.COLOR_TO_DIRECTION );\n\naddNodeElement( 'directionToColor', directionToColor );\naddNodeElement( 'colorToDirection', colorToDirection );\n\naddNodeClass( 'PackingNode', PackingNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { float, addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass RemapNode extends Node {\n\n\tconstructor( node, inLowNode, inHighNode, outLowNode = float( 0 ), outHighNode = float( 1 ) ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.inLowNode = inLowNode;\n\t\tthis.inHighNode = inHighNode;\n\t\tthis.outLowNode = outLowNode;\n\t\tthis.outHighNode = outHighNode;\n\n\t\tthis.doClamp = true;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { node, inLowNode, inHighNode, outLowNode, outHighNode, doClamp } = this;\n\n\t\tlet t = node.sub( inLowNode ).div( inHighNode.sub( inLowNode ) );\n\n\t\tif ( doClamp === true ) t = t.clamp();\n\n\t\treturn t.mul( outHighNode.sub( outLowNode ) ).add( outLowNode );\n\n\t}\n\n}\n\nexport default RemapNode;\n\nexport const remap = nodeProxy( RemapNode, null, null, { doClamp: false } );\nexport const remapClamp = nodeProxy( RemapNode );\n\naddNodeElement( 'remap', remap );\naddNodeElement( 'remapClamp', remapClamp );\n\naddNodeClass( 'RemapNode', RemapNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, vec2 } from '../shadernode/ShaderNode.js';\n\nclass RotateUVNode extends TempNode {\n\n\tconstructor( uvNode, rotationNode, centerNode = vec2( 0.5 ) ) {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.uvNode = uvNode;\n\t\tthis.rotationNode = rotationNode;\n\t\tthis.centerNode = centerNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { uvNode, rotationNode, centerNode } = this;\n\n\t\tconst vector = uvNode.sub( centerNode );\n\n\t\treturn vector.rotate( rotationNode ).add( centerNode );\n\n\t}\n\n}\n\nexport default RotateUVNode;\n\nexport const rotateUV = nodeProxy( RotateUVNode );\n\naddNodeElement( 'rotateUV', rotateUV );\n\naddNodeClass( 'RotateUVNode', RotateUVNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport {\n\taddNodeElement,\n\tnodeProxy,\n\tvec4,\n\tmat2,\n\tmat4,\n} from '../shadernode/ShaderNode.js';\nimport { cos, sin } from '../math/MathNode.js';\n\nclass RotateNode extends TempNode {\n\n\tconstructor( positionNode, rotationNode ) {\n\n\t\tsuper();\n\n\t\tthis.positionNode = positionNode;\n\t\tthis.rotationNode = rotationNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.positionNode.getNodeType( builder );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { rotationNode, positionNode } = this;\n\n\t\tconst nodeType = this.getNodeType( builder );\n\n\t\tif ( nodeType === 'vec2' ) {\n\n\t\t\tconst cosAngle = rotationNode.cos();\n\t\t\tconst sinAngle = rotationNode.sin();\n\n\t\t\tconst rotationMatrix = mat2(\n\t\t\t\tcosAngle, sinAngle,\n\t\t\t\tsinAngle.negate(), cosAngle\n\t\t\t);\n\n\t\t\treturn rotationMatrix.mul( positionNode );\n\n\t\t} else {\n\n\t\t\tconst rotation = rotationNode;\n\t\t\tconst rotationXMatrix = mat4( vec4( 1.0, 0.0, 0.0, 0.0 ), vec4( 0.0, cos( rotation.x ), sin( rotation.x ).negate(), 0.0 ), vec4( 0.0, sin( rotation.x ), cos( rotation.x ), 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\n\t\t\tconst rotationYMatrix = mat4( vec4( cos( rotation.y ), 0.0, sin( rotation.y ), 0.0 ), vec4( 0.0, 1.0, 0.0, 0.0 ), vec4( sin( rotation.y ).negate(), 0.0, cos( rotation.y ), 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\n\t\t\tconst rotationZMatrix = mat4( vec4( cos( rotation.z ), sin( rotation.z ).negate(), 0.0, 0.0 ), vec4( sin( rotation.z ), cos( rotation.z ), 0.0, 0.0 ), vec4( 0.0, 0.0, 1.0, 0.0 ), vec4( 0.0, 0.0, 0.0, 1.0 ) );\n\n\t\t\treturn rotationXMatrix.mul( rotationYMatrix ).mul( rotationZMatrix ).mul( vec4( positionNode, 1.0 ) ).xyz;\n\n\t\t}\n\n\t}\n\n}\n\nexport default RotateNode;\n\nexport const rotate = nodeProxy( RotateNode );\n\naddNodeElement( 'rotate', rotate );\n\naddNodeClass( 'RotateNode', RotateNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { nodeProxy, float, vec2 } from '../shadernode/ShaderNode.js';\n\nclass SpriteSheetUVNode extends Node {\n\n\tconstructor( countNode, uvNode = uv(), frameNode = float( 0 ) ) {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.countNode = countNode;\n\t\tthis.uvNode = uvNode;\n\t\tthis.frameNode = frameNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { frameNode, uvNode, countNode } = this;\n\n\t\tconst { width, height } = countNode;\n\n\t\tconst frameNum = frameNode.mod( width.mul( height ) ).floor();\n\n\t\tconst column = frameNum.mod( width );\n\t\tconst row = height.sub( frameNum.add( 1 ).div( width ).ceil() );\n\n\t\tconst scale = countNode.reciprocal();\n\t\tconst uvFrameOffset = vec2( column, row );\n\n\t\treturn uvNode.add( uvFrameOffset ).mul( scale );\n\n\t}\n\n}\n\nexport default SpriteSheetUVNode;\n\nexport const spritesheetUV = nodeProxy( SpriteSheetUVNode );\n\naddNodeClass( 'SpriteSheetUVNode', SpriteSheetUVNode );\n","import { addNodeClass } from '../core/Node.js';\nimport { nodeProxy, addNodeElement } from '../shadernode/ShaderNode.js';\nimport ArrayElementNode from './ArrayElementNode.js';\n\nclass StorageArrayElementNode extends ArrayElementNode {\n\n\tconstructor( storageBufferNode, indexNode ) {\n\n\t\tsuper( storageBufferNode, indexNode );\n\n\t\tthis.isStorageArrayElementNode = true;\n\n\t}\n\n\tset storageBufferNode( value ) {\n\n\t\tthis.node = value;\n\n\t}\n\n\tget storageBufferNode() {\n\n\t\treturn this.node;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\n\n\t\t\tif ( ! this.node.instanceIndex && this.node.bufferObject === true ) {\n\n\t\t\t\tbuilder.setupPBO( this.node );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tlet snippet;\n\n\t\tconst isAssignContext = builder.context.assign;\n\n\t\t//\n\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\n\n\t\t\tconst { node } = this;\n\n\t\t\tif ( ! node.instanceIndex && this.node.bufferObject === true && isAssignContext !== true ) {\n\n\t\t\t\tsnippet = builder.generatePBO( this );\n\n\t\t\t} else {\n\n\t\t\t\tsnippet = node.build( builder );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tsnippet = super.generate( builder );\n\n\t\t}\n\n\t\tif ( isAssignContext !== true ) {\n\n\t\t\tconst type = this.getNodeType( builder );\n\n\t\t\tsnippet = builder.format( snippet, type, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n}\n\nexport default StorageArrayElementNode;\n\nexport const storageElement = nodeProxy( StorageArrayElementNode );\n\naddNodeElement( 'storageElement', storageElement );\n\naddNodeClass( 'StorageArrayElementNode', StorageArrayElementNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { add } from '../math/OperatorNode.js';\nimport { normalLocal } from '../accessors/NormalNode.js';\nimport { positionLocal } from '../accessors/PositionNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass TriplanarTexturesNode extends Node {\n\n\tconstructor( textureXNode, textureYNode = null, textureZNode = null, scaleNode = float( 1 ), positionNode = positionLocal, normalNode = normalLocal ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.textureXNode = textureXNode;\n\t\tthis.textureYNode = textureYNode;\n\t\tthis.textureZNode = textureZNode;\n\n\t\tthis.scaleNode = scaleNode;\n\n\t\tthis.positionNode = positionNode;\n\t\tthis.normalNode = normalNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { textureXNode, textureYNode, textureZNode, scaleNode, positionNode, normalNode } = this;\n\n\t\t// Ref: https://github.com/keijiro/StandardTriplanar\n\n\t\t// Blending factor of triplanar mapping\n\t\tlet bf = normalNode.abs().normalize();\n\t\tbf = bf.div( bf.dot( vec3( 1.0 ) ) );\n\n\t\t// Triplanar mapping\n\t\tconst tx = positionNode.yz.mul( scaleNode );\n\t\tconst ty = positionNode.zx.mul( scaleNode );\n\t\tconst tz = positionNode.xy.mul( scaleNode );\n\n\t\t// Base color\n\t\tconst textureX = textureXNode.value;\n\t\tconst textureY = textureYNode !== null ? textureYNode.value : textureX;\n\t\tconst textureZ = textureZNode !== null ? textureZNode.value : textureX;\n\n\t\tconst cx = texture( textureX, tx ).mul( bf.x );\n\t\tconst cy = texture( textureY, ty ).mul( bf.y );\n\t\tconst cz = texture( textureZ, tz ).mul( bf.z );\n\n\t\treturn add( cx, cy, cz );\n\n\t}\n\n}\n\nexport default TriplanarTexturesNode;\n\nexport const triplanarTextures = nodeProxy( TriplanarTexturesNode );\nexport const triplanarTexture = ( ...params ) => triplanarTextures( ...params );\n\naddNodeElement( 'triplanarTexture', triplanarTexture );\n\naddNodeClass( 'TriplanarTexturesNode', TriplanarTexturesNode );\n","import TextureNode from '../accessors/TextureNode.js';\nimport { nodeObject, vec2 } from '../shadernode/ShaderNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { viewportTopLeft } from '../display/ViewportNode.js';\nimport { Matrix4, Vector2, Vector3, Vector4, Object3D, Plane, RenderTarget, HalfFloatType, LinearMipMapLinearFilter } from 'three';\n\nconst _reflectorPlane = new Plane();\nconst _normal = new Vector3();\nconst _reflectorWorldPosition = new Vector3();\nconst _cameraWorldPosition = new Vector3();\nconst _rotationMatrix = new Matrix4();\nconst _lookAtPosition = new Vector3( 0, 0, - 1 );\nconst clipPlane = new Vector4();\n\nconst _view = new Vector3();\nconst _target = new Vector3();\nconst _q = new Vector4();\n\nconst _size = new Vector2();\n\nconst _defaultRT = new RenderTarget();\nconst _defaultUV = vec2( viewportTopLeft.x.oneMinus(), viewportTopLeft.y );\n\nlet _inReflector = false;\n\nclass ReflectorNode extends TextureNode {\n\n\tconstructor( parameters = {} ) {\n\n\t\tsuper( _defaultRT.texture, _defaultUV );\n\n\t\tconst {\n\t\t\ttarget = new Object3D(),\n\t\t\tresolution = 1,\n\t\t\tgenerateMipmaps = false,\n\t\t\tbounces = true\n\t\t} = parameters;\n\n\t\t//\n\n\t\tthis.target = target;\n\t\tthis.resolution = resolution;\n\t\tthis.generateMipmaps = generateMipmaps;\n\t\tthis.bounces = bounces;\n\n\t\tthis.updateBeforeType = bounces ? NodeUpdateType.RENDER : NodeUpdateType.FRAME;\n\n\t\tthis.virtualCameras = new WeakMap();\n\t\tthis.renderTargets = new WeakMap();\n\n\n\t}\n\n\t_updateResolution( renderTarget, renderer ) {\n\n\t\tconst resolution = this.resolution;\n\n\t\trenderer.getDrawingBufferSize( _size );\n\n\t\trenderTarget.setSize( Math.round( _size.width * resolution ), Math.round( _size.height * resolution ) );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tthis._updateResolution( _defaultRT, builder.renderer );\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\tgetTextureNode() {\n\n\t\treturn this.textureNode;\n\n\t}\n\n\tgetVirtualCamera( camera ) {\n\n\t\tlet virtualCamera = this.virtualCameras.get( camera );\n\n\t\tif ( virtualCamera === undefined ) {\n\n\t\t\tvirtualCamera = camera.clone();\n\n\t\t\tthis.virtualCameras.set( camera, virtualCamera );\n\n\t\t}\n\n\t\treturn virtualCamera;\n\n\t}\n\n\tgetRenderTarget( camera ) {\n\n\t\tlet renderTarget = this.renderTargets.get( camera );\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = new RenderTarget( 0, 0, { type: HalfFloatType } );\n\n\t\t\tif ( this.generateMipmaps === true ) {\n\n\t\t\t    renderTarget.texture.minFilter = LinearMipMapLinearFilter;\n\t\t\t    renderTarget.texture.generateMipmaps = true;\n\n\t\t\t}\n\n\t\t\tthis.renderTargets.set( camera, renderTarget );\n\n\t\t}\n\n\t\treturn renderTarget;\n\n\t}\n\n\tupdateBefore( frame ) {\n\n\t\tif ( this.bounces === false && _inReflector ) return false;\n\n\t\t_inReflector = true;\n\n\t\tconst { scene, camera, renderer, material } = frame;\n\t\tconst { target } = this;\n\n\t\tconst virtualCamera = this.getVirtualCamera( camera );\n\t\tconst renderTarget = this.getRenderTarget( virtualCamera );\n\n\t\trenderer.getDrawingBufferSize( _size );\n\n\t\tthis._updateResolution( renderTarget, renderer );\n\n\t\t//\n\n\t\t_reflectorWorldPosition.setFromMatrixPosition( target.matrixWorld );\n\t\t_cameraWorldPosition.setFromMatrixPosition( camera.matrixWorld );\n\n\t\t_rotationMatrix.extractRotation( target.matrixWorld );\n\n\t\t_normal.set( 0, 0, 1 );\n\t\t_normal.applyMatrix4( _rotationMatrix );\n\n\t\t_view.subVectors( _reflectorWorldPosition, _cameraWorldPosition );\n\n\t\t// Avoid rendering when reflector is facing away\n\n\t\tif ( _view.dot( _normal ) > 0 ) return;\n\n\t\t_view.reflect( _normal ).negate();\n\t\t_view.add( _reflectorWorldPosition );\n\n\t\t_rotationMatrix.extractRotation( camera.matrixWorld );\n\n\t\t_lookAtPosition.set( 0, 0, - 1 );\n\t\t_lookAtPosition.applyMatrix4( _rotationMatrix );\n\t\t_lookAtPosition.add( _cameraWorldPosition );\n\n\t\t_target.subVectors( _reflectorWorldPosition, _lookAtPosition );\n\t\t_target.reflect( _normal ).negate();\n\t\t_target.add( _reflectorWorldPosition );\n\n\t\t//\n\n\t\tvirtualCamera.coordinateSystem = camera.coordinateSystem;\n\t\tvirtualCamera.position.copy( _view );\n\t\tvirtualCamera.up.set( 0, 1, 0 );\n\t\tvirtualCamera.up.applyMatrix4( _rotationMatrix );\n\t\tvirtualCamera.up.reflect( _normal );\n\t\tvirtualCamera.lookAt( _target );\n\n\t\tvirtualCamera.near = camera.near;\n\t\tvirtualCamera.far = camera.far;\n\n\t\tvirtualCamera.updateMatrixWorld();\n\t\tvirtualCamera.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n\t\t// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\t\t_reflectorPlane.setFromNormalAndCoplanarPoint( _normal, _reflectorWorldPosition );\n\t\t_reflectorPlane.applyMatrix4( virtualCamera.matrixWorldInverse );\n\n\t\tclipPlane.set( _reflectorPlane.normal.x, _reflectorPlane.normal.y, _reflectorPlane.normal.z, _reflectorPlane.constant );\n\n\t\tconst projectionMatrix = virtualCamera.projectionMatrix;\n\n\t\t_q.x = ( Math.sign( clipPlane.x ) + projectionMatrix.elements[ 8 ] ) / projectionMatrix.elements[ 0 ];\n\t\t_q.y = ( Math.sign( clipPlane.y ) + projectionMatrix.elements[ 9 ] ) / projectionMatrix.elements[ 5 ];\n\t\t_q.z = - 1.0;\n\t\t_q.w = ( 1.0 + projectionMatrix.elements[ 10 ] ) / projectionMatrix.elements[ 14 ];\n\n\t\t// Calculate the scaled plane vector\n\t\tclipPlane.multiplyScalar( 1.0 / clipPlane.dot( _q ) );\n\n\t\tconst clipBias = 0;\n\n\t\t// Replacing the third row of the projection matrix\n\t\tprojectionMatrix.elements[ 2 ] = clipPlane.x;\n\t\tprojectionMatrix.elements[ 6 ] = clipPlane.y;\n\t\tprojectionMatrix.elements[ 10 ] = clipPlane.z - clipBias;\n\t\tprojectionMatrix.elements[ 14 ] = clipPlane.w;\n\n\t\t//\n\n\t\tthis.value = renderTarget.texture;\n\n\t\tmaterial.visible = false;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.setRenderTarget( renderTarget );\n\n\t\trenderer.render( scene, virtualCamera );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\tmaterial.visible = true;\n\n\t\t_inReflector = false;\n\n\t}\n\n}\n\nexport const reflector = ( parameters ) => nodeObject( new ReflectorNode( parameters ) );\n\nexport default ReflectorNode;\n\n","import { bitangentView } from './BitangentNode.js';\nimport { normalView } from './NormalNode.js';\nimport { tangentView } from './TangentNode.js';\nimport { mat3 } from '../shadernode/ShaderNode.js';\nimport { positionViewDirection } from './PositionNode.js';\n\nexport const TBNViewMatrix = mat3( tangentView, bitangentView, normalView );\n\nexport const parallaxDirection = positionViewDirection.mul( TBNViewMatrix )/*.normalize()*/;\nexport const parallaxUV = ( uv, scale ) => uv.sub( parallaxDirection.mul( scale ) );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { normalGeometry, normalLocal, normalView, normalWorld, transformedNormalView } from './NormalNode.js';\nimport { tangentGeometry, tangentLocal, tangentView, tangentWorld, transformedTangentView } from './TangentNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass BitangentNode extends Node {\n\n\tconstructor( scope = BitangentNode.LOCAL ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `bitangent-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet crossNormalTangent;\n\n\t\tif ( scope === BitangentNode.GEOMETRY ) {\n\n\t\t\tcrossNormalTangent = normalGeometry.cross( tangentGeometry );\n\n\t\t} else if ( scope === BitangentNode.LOCAL ) {\n\n\t\t\tcrossNormalTangent = normalLocal.cross( tangentLocal );\n\n\t\t} else if ( scope === BitangentNode.VIEW ) {\n\n\t\t\tcrossNormalTangent = normalView.cross( tangentView );\n\n\t\t} else if ( scope === BitangentNode.WORLD ) {\n\n\t\t\tcrossNormalTangent = normalWorld.cross( tangentWorld );\n\n\t\t}\n\n\t\tconst vertexNode = crossNormalTangent.mul( tangentGeometry.w ).xyz;\n\n\t\tconst outputNode = normalize( varying( vertexNode ) );\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nBitangentNode.GEOMETRY = 'geometry';\nBitangentNode.LOCAL = 'local';\nBitangentNode.VIEW = 'view';\nBitangentNode.WORLD = 'world';\n\nexport default BitangentNode;\n\nexport const bitangentGeometry = nodeImmutable( BitangentNode, BitangentNode.GEOMETRY );\nexport const bitangentLocal = nodeImmutable( BitangentNode, BitangentNode.LOCAL );\nexport const bitangentView = nodeImmutable( BitangentNode, BitangentNode.VIEW );\nexport const bitangentWorld = nodeImmutable( BitangentNode, BitangentNode.WORLD );\nexport const transformedBitangentView = normalize( transformedNormalView.cross( transformedTangentView ).mul( tangentGeometry.w ) );\nexport const transformedBitangentWorld = normalize( transformedBitangentView.transformDirection( cameraViewMatrix ) );\n\naddNodeClass( 'BitangentNode', BitangentNode );\n","import { addNodeClass } from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { Vector4 } from 'three';\n\nclass VertexColorNode extends AttributeNode {\n\n\tconstructor( index = 0 ) {\n\n\t\tsuper( null, 'vec4' );\n\n\t\tthis.isVertexColorNode = true;\n\n\t\tthis.index = index;\n\n\t}\n\n\tgetAttributeName( /*builder*/ ) {\n\n\t\tconst index = this.index;\n\n\t\treturn 'color' + ( index > 0 ? index : '' );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst attributeName = this.getAttributeName( builder );\n\t\tconst geometryAttribute = builder.hasGeometryAttribute( attributeName );\n\n\t\tlet result;\n\n\t\tif ( geometryAttribute === true ) {\n\n\t\t\tresult = super.generate( builder );\n\n\t\t} else {\n\n\t\t\t// Vertex color fallback should be white\n\t\t\tresult = builder.generateConst( this.nodeType, new Vector4( 1, 1, 1, 1 ) );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.index = this.index;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.index = data.index;\n\n\t}\n\n}\n\nexport default VertexColorNode;\n\nexport const vertexColor = ( ...params ) => nodeObject( new VertexColorNode( ...params ) );\n\naddNodeClass( 'VertexColorNode', VertexColorNode );\n","import ReferenceNode from './ReferenceNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass RendererReferenceNode extends ReferenceNode {\n\n\tconstructor( property, inputType, renderer = null ) {\n\n\t\tsuper( property, inputType, renderer );\n\n\t\tthis.renderer = renderer;\n\n\t}\n\n\tupdateReference( state ) {\n\n\t\tthis.reference = this.renderer !== null ? this.renderer : state.renderer;\n\n\t\treturn this.reference;\n\n\t}\n\n}\n\nexport default RendererReferenceNode;\n\nexport const rendererReference = ( name, type, renderer ) => nodeObject( new RendererReferenceNode( name, type, renderer ) );\n\naddNodeClass( 'RendererReferenceNode', RendererReferenceNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { add, mul, div } from '../math/OperatorNode.js';\nimport { floor, ceil, fract, pow } from '../math/MathNode.js';\nimport { nodeProxy, addNodeElement, float, vec2, vec4, int } from '../shadernode/ShaderNode.js';\n\n// Mipped Bicubic Texture Filtering by N8\n// https://www.shadertoy.com/view/Dl2SDW\n\nconst bC = 1.0 / 6.0;\n\nconst w0 = ( a ) => mul( bC, mul( a, mul( a, a.negate().add( 3.0 ) ).sub( 3.0 ) ).add( 1.0 ) );\n\nconst w1 = ( a ) => mul( bC, mul( a, mul( a, mul( 3.0, a ).sub( 6.0 ) ) ).add( 4.0 ) );\n\nconst w2 = ( a ) => mul( bC, mul( a, mul( a, mul( - 3.0, a ).add( 3.0 ) ).add( 3.0 ) ).add( 1.0 ) );\n\nconst w3 = ( a ) => mul( bC, pow( a, 3 ) );\n\nconst g0 = ( a ) => w0( a ).add( w1( a ) );\n\nconst g1 = ( a ) => w2( a ).add( w3( a ) );\n\n// h0 and h1 are the two offset functions\nconst h0 = ( a ) => add( - 1.0, w1( a ).div( w0( a ).add( w1( a ) ) ) );\n\nconst h1 = ( a ) => add( 1.0, w3( a ).div( w2( a ).add( w3( a ) ) ) );\n\nconst bicubic = ( textureNode, texelSize, lod ) => {\n\n\tconst uv = textureNode.uvNode;\n\tconst uvScaled = mul( uv, texelSize.zw ).add( 0.5 );\n\n\tconst iuv = floor( uvScaled );\n\tconst fuv = fract( uvScaled );\n\n\tconst g0x = g0( fuv.x );\n\tconst g1x = g1( fuv.x );\n\tconst h0x = h0( fuv.x );\n\tconst h1x = h1( fuv.x );\n\tconst h0y = h0( fuv.y );\n\tconst h1y = h1( fuv.y );\n\n\tconst p0 = vec2( iuv.x.add( h0x ), iuv.y.add( h0y ) ).sub( 0.5 ).mul( texelSize.xy );\n\tconst p1 = vec2( iuv.x.add( h1x ), iuv.y.add( h0y ) ).sub( 0.5 ).mul( texelSize.xy );\n\tconst p2 = vec2( iuv.x.add( h0x ), iuv.y.add( h1y ) ).sub( 0.5 ).mul( texelSize.xy );\n\tconst p3 = vec2( iuv.x.add( h1x ), iuv.y.add( h1y ) ).sub( 0.5 ).mul( texelSize.xy );\n\n\tconst a = g0( fuv.y ).mul( add( g0x.mul( textureNode.uv( p0 ).level( lod ) ), g1x.mul( textureNode.uv( p1 ).level( lod ) ) ) );\n\tconst b = g1( fuv.y ).mul( add( g0x.mul( textureNode.uv( p2 ).level( lod ) ), g1x.mul( textureNode.uv( p3 ).level( lod ) ) ) );\n\n\treturn a.add( b );\n\n};\n\nconst textureBicubicMethod = ( textureNode, lodNode ) => {\n\n\tconst fLodSize = vec2( textureNode.size( int( lodNode ) ) );\n\tconst cLodSize = vec2( textureNode.size( int( lodNode.add( 1.0 ) ) ) );\n\tconst fLodSizeInv = div( 1.0, fLodSize );\n\tconst cLodSizeInv = div( 1.0, cLodSize );\n\tconst fSample = bicubic( textureNode, vec4( fLodSizeInv, fLodSize ), floor( lodNode ) );\n\tconst cSample = bicubic( textureNode, vec4( cLodSizeInv, cLodSize ), ceil( lodNode ) );\n\n\treturn fract( lodNode ).mix( fSample, cSample );\n\n};\n\nclass TextureBicubicNode extends TempNode {\n\n\tconstructor( textureNode, blurNode = float( 3 ) ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.blurNode = blurNode;\n\n\t}\n\n\tsetup() {\n\n\t\treturn textureBicubicMethod( this.textureNode, this.blurNode );\n\n\t}\n\n}\n\nexport default TextureBicubicNode;\n\nexport const textureBicubic = nodeProxy( TextureBicubicNode );\n\naddNodeElement( 'bicubic', textureBicubic );\n\naddNodeClass( 'TextureBicubicNode', TextureBicubicNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass PointUVNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.isPointUVNode = true;\n\n\t}\n\n\tgenerate( /*builder*/ ) {\n\n\t\treturn 'vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )';\n\n\t}\n\n}\n\nexport default PointUVNode;\n\nexport const pointUV = nodeImmutable( PointUVNode );\n\naddNodeClass( 'PointUVNode', PointUVNode );\n","import Node from '../core/Node.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { reference } from './ReferenceNode.js';\n\nclass SceneNode extends Node {\n\n\tconstructor( scope = SceneNode.BACKGROUND_BLURRINESS, scene = null ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\t\tthis.scene = scene;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst scope = this.scope;\n\t\tconst scene = this.scene !== null ? this.scene : builder.scene;\n\n\t\tlet output;\n\n\t\tif ( scope === SceneNode.BACKGROUND_BLURRINESS ) {\n\n\t\t\toutput = reference( 'backgroundBlurriness', 'float', scene );\n\n\t\t} else if ( scope === SceneNode.BACKGROUND_INTENSITY ) {\n\n\t\t\toutput = reference( 'backgroundIntensity', 'float', scene );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.SceneNode: Unknown scope:', scope );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nSceneNode.BACKGROUND_BLURRINESS = 'backgroundBlurriness';\nSceneNode.BACKGROUND_INTENSITY = 'backgroundIntensity';\n\nexport default SceneNode;\n\nexport const backgroundBlurriness = nodeImmutable( SceneNode, SceneNode.BACKGROUND_BLURRINESS );\nexport const backgroundIntensity = nodeImmutable( SceneNode, SceneNode.BACKGROUND_INTENSITY );\n\naddNodeClass( 'SceneNode', SceneNode );\n","import BufferNode from './BufferNode.js';\nimport { bufferAttribute } from './BufferAttributeNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { storageElement } from '../utils/StorageArrayElementNode.js';\n\nclass StorageBufferNode extends BufferNode {\n\n\tconstructor( value, bufferType, bufferCount = 0 ) {\n\n\t\tsuper( value, bufferType, bufferCount );\n\n\t\tthis.isStorageBufferNode = true;\n\n\t\tthis.bufferObject = false;\n\n\t\tthis._attribute = null;\n\t\tthis._varying = null;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'storageBuffer';\n\n\t}\n\n\telement( indexNode ) {\n\n\t\treturn storageElement( this, indexNode );\n\n\t}\n\n\tsetBufferObject( value ) {\n\n\t\tthis.bufferObject = value;\n\n\t\treturn this;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tif ( builder.isAvailable( 'storageBuffer' ) ) return super.generate( builder );\n\n\t\tconst nodeType = this.getNodeType( builder );\n\n\t\tif ( this._attribute === null ) {\n\n\t\t\tthis._attribute = bufferAttribute( this.value );\n\t\t\tthis._varying = varying( this._attribute );\n\n\t\t}\n\n\n\t\tconst output = this._varying.build( builder, nodeType );\n\n\t\tbuilder.registerTransform( output, this._attribute );\n\n\t\treturn output;\n\n\t}\n\n}\n\nexport default StorageBufferNode;\n\nexport const storage = ( value, type, count ) => nodeObject( new StorageBufferNode( value, type, count ) );\nexport const storageObject = ( value, type, count ) => nodeObject( new StorageBufferNode( value, type, count ).setBufferObject( true ) );\n\naddNodeClass( 'StorageBufferNode', StorageBufferNode );\n","import { addNodeClass } from '../core/Node.js';\nimport TextureNode from './TextureNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass TextureStoreNode extends TextureNode {\n\n\tconstructor( value, uvNode, storeNode = null ) {\n\n\t\tsuper( value, uvNode );\n\n\t\tthis.storeNode = storeNode;\n\n\t\tthis.isStoreTextureNode = true;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'storageTexture';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tproperties.storeNode = this.storeNode;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tlet snippet;\n\n\t\tif ( this.storeNode !== null ) {\n\n\t\t\tsnippet = this.generateStore( builder );\n\n\t\t} else {\n\n\t\t\tsnippet = super.generate( builder, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tgenerateStore( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst { uvNode, storeNode } = properties;\n\n\t\tconst textureProperty = super.generate( builder, 'property' );\n\t\tconst uvSnippet = uvNode.build( builder, 'uvec2' );\n\t\tconst storeSnippet = storeNode.build( builder, 'vec4' );\n\n\t\tconst snippet = builder.generateTextureStore( builder, textureProperty, uvSnippet, storeSnippet );\n\n\t\tbuilder.addLineFlowCode( snippet );\n\n\t}\n\n}\n\nexport default TextureStoreNode;\n\nconst textureStoreBase = nodeProxy( TextureStoreNode );\n\nexport const textureStore = ( value, uvNode, storeNode ) => {\n\n\tconst node = textureStoreBase( value, uvNode, storeNode );\n\n\tif ( storeNode !== null ) node.append();\n\n\treturn node;\n\n};\n\naddNodeClass( 'TextureStoreNode', TextureStoreNode );\n","import ReferenceNode from './ReferenceNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass UserDataNode extends ReferenceNode {\n\n\tconstructor( property, inputType, userData = null ) {\n\n\t\tsuper( property, inputType, userData );\n\n\t\tthis.userData = userData;\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tthis.reference = this.userData !== null ? this.userData : frame.object.userData;\n\n\t\tsuper.update( frame );\n\n\t}\n\n}\n\nexport default UserDataNode;\n\nexport const userData = ( name, inputType, userData ) => nodeObject( new UserDataNode( name, inputType, userData ) );\n\naddNodeClass( 'UserDataNode', UserDataNode );\n","import TempNode from '../core/TempNode.js';\nimport { /*mix, step,*/ EPSILON } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\n\nexport const BurnNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => blend[ c ].lessThan( EPSILON ).cond( blend[ c ], base[ c ].oneMinus().div( blend[ c ] ).oneMinus().max( 0 ) );\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} ).setLayout( {\n\tname: 'burnColor',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'base', type: 'vec3' },\n\t\t{ name: 'blend', type: 'vec3' }\n\t]\n} );\n\nexport const DodgeNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => blend[ c ].equal( 1.0 ).cond( blend[ c ], base[ c ].div( blend[ c ].oneMinus() ).max( 0 ) );\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} ).setLayout( {\n\tname: 'dodgeColor',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'base', type: 'vec3' },\n\t\t{ name: 'blend', type: 'vec3' }\n\t]\n} );\n\nexport const ScreenNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus();\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} ).setLayout( {\n\tname: 'screenColor',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'base', type: 'vec3' },\n\t\t{ name: 'blend', type: 'vec3' }\n\t]\n} );\n\nexport const OverlayNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => base[ c ].lessThan( 0.5 ).cond( base[ c ].mul( blend[ c ], 2.0 ), base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus() );\n\t//const fn = ( c ) => mix( base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus(), base[ c ].mul( blend[ c ], 2.0 ), step( base[ c ], 0.5 ) );\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} ).setLayout( {\n\tname: 'overlayColor',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'base', type: 'vec3' },\n\t\t{ name: 'blend', type: 'vec3' }\n\t]\n} );\n\nclass BlendModeNode extends TempNode {\n\n\tconstructor( blendMode, baseNode, blendNode ) {\n\n\t\tsuper();\n\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.baseNode = baseNode;\n\t\tthis.blendNode = blendNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { blendMode, baseNode, blendNode } = this;\n\t\tconst params = { base: baseNode, blend: blendNode };\n\n\t\tlet outputNode = null;\n\n\t\tif ( blendMode === BlendModeNode.BURN ) {\n\n\t\t\toutputNode = BurnNode( params );\n\n\t\t} else if ( blendMode === BlendModeNode.DODGE ) {\n\n\t\t\toutputNode = DodgeNode( params );\n\n\t\t} else if ( blendMode === BlendModeNode.SCREEN ) {\n\n\t\t\toutputNode = ScreenNode( params );\n\n\t\t} else if ( blendMode === BlendModeNode.OVERLAY ) {\n\n\t\t\toutputNode = OverlayNode( params );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nBlendModeNode.BURN = 'burn';\nBlendModeNode.DODGE = 'dodge';\nBlendModeNode.SCREEN = 'screen';\nBlendModeNode.OVERLAY = 'overlay';\n\nexport default BlendModeNode;\n\nexport const burn = nodeProxy( BlendModeNode, BlendModeNode.BURN );\nexport const dodge = nodeProxy( BlendModeNode, BlendModeNode.DODGE );\nexport const overlay = nodeProxy( BlendModeNode, BlendModeNode.OVERLAY );\nexport const screen = nodeProxy( BlendModeNode, BlendModeNode.SCREEN );\n\naddNodeElement( 'burn', burn );\naddNodeElement( 'dodge', dodge );\naddNodeElement( 'overlay', overlay );\naddNodeElement( 'screen', screen );\n\naddNodeClass( 'BlendModeNode', BlendModeNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { normalView } from '../accessors/NormalNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { faceDirection } from './FrontFacingNode.js';\nimport { addNodeElement, tslFn, nodeProxy, float, vec2 } from '../shadernode/ShaderNode.js';\n\n// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\n\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\nconst dHdxy_fwd = tslFn( ( { textureNode, bumpScale } ) => {\n\n\tlet texNode = textureNode;\n\n\tif ( texNode.isTextureNode !== true ) {\n\n\t\ttexNode.traverse( ( node ) => {\n\n\t\t\tif ( node.isTextureNode === true ) texNode = node;\n\n\t\t} );\n\n\t}\n\n\tif ( texNode.isTextureNode !== true ) {\n\n\t\tthrow new Error( 'THREE.TSL: dHdxy_fwd() requires a TextureNode.' );\n\n\t}\n\n\tconst Hll = float( textureNode );\n\tconst uvNode = texNode.uvNode || uv();\n\n\t// It's used to preserve the same TextureNode instance\n\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\n\n\treturn vec2(\n\t\tfloat( sampleTexture( uvNode.add( uvNode.dFdx() ) ) ).sub( Hll ),\n\t\tfloat( sampleTexture( uvNode.add( uvNode.dFdy() ) ) ).sub( Hll )\n\t).mul( bumpScale );\n\n} );\n\nconst perturbNormalArb = tslFn( ( inputs ) => {\n\n\tconst { surf_pos, surf_norm, dHdxy } = inputs;\n\n\t// normalize is done to ensure that the bump map looks the same regardless of the texture's scale\n\tconst vSigmaX = surf_pos.dFdx().normalize();\n\tconst vSigmaY = surf_pos.dFdy().normalize();\n\tconst vN = surf_norm; // normalized\n\n\tconst R1 = vSigmaY.cross( vN );\n\tconst R2 = vN.cross( vSigmaX );\n\n\tconst fDet = vSigmaX.dot( R1 ).mul( faceDirection );\n\n\tconst vGrad = fDet.sign().mul( dHdxy.x.mul( R1 ).add( dHdxy.y.mul( R2 ) ) );\n\n\treturn fDet.abs().mul( surf_norm ).sub( vGrad ).normalize();\n\n} );\n\nclass BumpMapNode extends TempNode {\n\n\tconstructor( textureNode, scaleNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.scaleNode = scaleNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst bumpScale = this.scaleNode !== null ? this.scaleNode : 1;\n\t\tconst dHdxy = dHdxy_fwd( { textureNode: this.textureNode, bumpScale } );\n\n\t\treturn perturbNormalArb( {\n\t\t\tsurf_pos: positionView,\n\t\t\tsurf_norm: normalView,\n\t\t\tdHdxy\n\t\t} );\n\n\t}\n\n}\n\nexport default BumpMapNode;\n\nexport const bumpMap = nodeProxy( BumpMapNode );\n\naddNodeElement( 'bumpMap', bumpMap );\n\naddNodeClass( 'BumpMapNode', BumpMapNode );\n","import TempNode from '../core/TempNode.js';\nimport { dot, mix } from '../math/MathNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\n\nconst saturationNode = tslFn( ( { color, adjustment } ) => {\n\n\treturn adjustment.mix( luminance( color.rgb ), color.rgb );\n\n} );\n\nconst vibranceNode = tslFn( ( { color, adjustment } ) => {\n\n\tconst average = add( color.r, color.g, color.b ).div( 3.0 );\n\n\tconst mx = color.r.max( color.g.max( color.b ) );\n\tconst amt = mx.sub( average ).mul( adjustment ).mul( - 3.0 );\n\n\treturn mix( color.rgb, mx, amt );\n\n} );\n\nconst hueNode = tslFn( ( { color, adjustment } ) => {\n\n\tconst k = vec3( 0.57735, 0.57735, 0.57735 );\n\n\tconst cosAngle = adjustment.cos();\n\n\treturn vec3( color.rgb.mul( cosAngle ).add( k.cross( color.rgb ).mul( adjustment.sin() ).add( k.mul( dot( k, color.rgb ).mul( cosAngle.oneMinus() ) ) ) ) );\n\n} );\n\nclass ColorAdjustmentNode extends TempNode {\n\n\tconstructor( method, colorNode, adjustmentNode = float( 1 ) ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.method = method;\n\n\t\tthis.colorNode = colorNode;\n\t\tthis.adjustmentNode = adjustmentNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { method, colorNode, adjustmentNode } = this;\n\n\t\tconst callParams = { color: colorNode, adjustment: adjustmentNode };\n\n\t\tlet outputNode = null;\n\n\t\tif ( method === ColorAdjustmentNode.SATURATION ) {\n\n\t\t\toutputNode = saturationNode( callParams );\n\n\t\t} else if ( method === ColorAdjustmentNode.VIBRANCE ) {\n\n\t\t\toutputNode = vibranceNode( callParams );\n\n\t\t} else if ( method === ColorAdjustmentNode.HUE ) {\n\n\t\t\toutputNode = hueNode( callParams );\n\n\t\t} else {\n\n\t\t\tconsole.error( `${ this.type }: Method \"${ this.method }\" not supported!` );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nColorAdjustmentNode.SATURATION = 'saturation';\nColorAdjustmentNode.VIBRANCE = 'vibrance';\nColorAdjustmentNode.HUE = 'hue';\n\nexport default ColorAdjustmentNode;\n\nexport const saturation = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.SATURATION );\nexport const vibrance = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.VIBRANCE );\nexport const hue = nodeProxy( ColorAdjustmentNode, ColorAdjustmentNode.HUE );\n\nexport const lumaCoeffs = vec3( 0.2125, 0.7154, 0.0721 );\nexport const luminance = ( color, luma = lumaCoeffs ) => dot( color, luma );\n\nexport const threshold = ( color, threshold ) => mix( vec3( 0.0 ), color, luminance( color ).sub( threshold ).max( 0 ) );\n\naddNodeElement( 'saturation', saturation );\naddNodeElement( 'vibrance', vibrance );\naddNodeElement( 'hue', hue );\naddNodeElement( 'threshold', threshold );\n\naddNodeClass( 'ColorAdjustmentNode', ColorAdjustmentNode );\n","import TempNode from '../core/TempNode.js';\nimport { add } from '../math/OperatorNode.js';\n\nimport { modelNormalMatrix } from '../accessors/ModelNode.js';\nimport { normalView } from '../accessors/NormalNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { TBNViewMatrix } from '../accessors/AccessorsUtils.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { faceDirection } from './FrontFacingNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\n\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// Normal Mapping Without Precomputed Tangents\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2Arb = tslFn( ( inputs ) => {\n\n\tconst { eye_pos, surf_norm, mapN, uv } = inputs;\n\n\tconst q0 = eye_pos.dFdx();\n\tconst q1 = eye_pos.dFdy();\n\tconst st0 = uv.dFdx();\n\tconst st1 = uv.dFdy();\n\n\tconst N = surf_norm; // normalized\n\n\tconst q1perp = q1.cross( N );\n\tconst q0perp = N.cross( q0 );\n\n\tconst T = q1perp.mul( st0.x ).add( q0perp.mul( st1.x ) );\n\tconst B = q1perp.mul( st0.y ).add( q0perp.mul( st1.y ) );\n\n\tconst det = T.dot( T ).max( B.dot( B ) );\n\tconst scale = faceDirection.mul( det.inverseSqrt() );\n\n\treturn add( T.mul( mapN.x, scale ), B.mul( mapN.y, scale ), N.mul( mapN.z ) ).normalize();\n\n} );\n\nclass NormalMapNode extends TempNode {\n\n\tconstructor( node, scaleNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.node = node;\n\t\tthis.scaleNode = scaleNode;\n\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { normalMapType, scaleNode } = this;\n\n\t\tlet normalMap = this.node.mul( 2.0 ).sub( 1.0 );\n\n\t\tif ( scaleNode !== null ) {\n\n\t\t\tnormalMap = vec3( normalMap.xy.mul( scaleNode ), normalMap.z );\n\n\t\t}\n\n\t\tlet outputNode = null;\n\n\t\tif ( normalMapType === ObjectSpaceNormalMap ) {\n\n\t\t\toutputNode = modelNormalMatrix.mul( normalMap ).normalize();\n\n\t\t} else if ( normalMapType === TangentSpaceNormalMap ) {\n\n\t\t\tconst tangent = builder.hasGeometryAttribute( 'tangent' );\n\n\t\t\tif ( tangent === true ) {\n\n\t\t\t\toutputNode = TBNViewMatrix.mul( normalMap ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\toutputNode = perturbNormal2Arb( {\n\t\t\t\t\teye_pos: positionView,\n\t\t\t\t\tsurf_norm: normalView,\n\t\t\t\t\tmapN: normalMap,\n\t\t\t\t\tuv: uv()\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default NormalMapNode;\n\nexport const normalMap = nodeProxy( NormalMapNode );\n\naddNodeElement( 'normalMap', normalMap );\n\naddNodeClass( 'NormalMapNode', NormalMapNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass PosterizeNode extends TempNode {\n\n\tconstructor( sourceNode, stepsNode ) {\n\n\t\tsuper();\n\n\t\tthis.sourceNode = sourceNode;\n\t\tthis.stepsNode = stepsNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { sourceNode, stepsNode } = this;\n\n\t\treturn sourceNode.mul( stepsNode ).floor().div( stepsNode );\n\n\t}\n\n}\n\nexport default PosterizeNode;\n\nexport const posterize = nodeProxy( PosterizeNode );\n\naddNodeElement( 'posterize', posterize );\n\naddNodeClass( 'PosterizeNode', PosterizeNode );\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeObject, float, mat3, vec3 } from '../shadernode/ShaderNode.js';\nimport { rendererReference } from '../accessors/RendererReferenceNode.js';\nimport { clamp, log2, max, pow } from '../math/MathNode.js';\nimport { mul } from '../math/OperatorNode.js';\n\nimport { NoToneMapping, LinearToneMapping, ReinhardToneMapping, CineonToneMapping, ACESFilmicToneMapping, AgXToneMapping } from 'three';\n\n// exposure only\nconst LinearToneMappingNode = tslFn( ( { color, exposure } ) => {\n\n\treturn color.mul( exposure ).clamp();\n\n} );\n\n// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf\nconst ReinhardToneMappingNode = tslFn( ( { color, exposure } ) => {\n\n\tcolor = color.mul( exposure );\n\n\treturn color.div( color.add( 1.0 ) ).clamp();\n\n} );\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nconst OptimizedCineonToneMappingNode = tslFn( ( { color, exposure } ) => {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor = color.mul( exposure );\n\tcolor = color.sub( 0.004 ).max( 0.0 );\n\n\tconst a = color.mul( color.mul( 6.2 ).add( 0.5 ) );\n\tconst b = color.mul( color.mul( 6.2 ).add( 1.7 ) ).add( 0.06 );\n\n\treturn a.div( b ).pow( 2.2 );\n\n} );\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nconst RRTAndODTFit = tslFn( ( { color } ) => {\n\n\tconst a = color.mul( color.add( 0.0245786 ) ).sub( 0.000090537 );\n\tconst b = color.mul( color.add( 0.4329510 ).mul( 0.983729 ) ).add( 0.238081 );\n\n\treturn a.div( b );\n\n} );\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nconst ACESFilmicToneMappingNode = tslFn( ( { color, exposure } ) => {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst ACESInputMat = mat3(\n\t\t0.59719, 0.35458, 0.04823,\n\t\t0.07600, 0.90834, 0.01566,\n\t\t0.02840, 0.13383, 0.83777\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst ACESOutputMat = mat3(\n\t\t1.60475, - 0.53108, - 0.07367,\n\t\t- 0.10208, 1.10813, - 0.00605,\n\t\t- 0.00327, - 0.07276, 1.07602\n\t);\n\n\tcolor = color.mul( exposure ).div( 0.6 );\n\n\tcolor = ACESInputMat.mul( color );\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( { color } );\n\n\tcolor = ACESOutputMat.mul( color );\n\n\t// Clamp to [0, 1]\n\treturn color.clamp();\n\n} );\n\n\n\nconst LINEAR_REC2020_TO_LINEAR_SRGB = mat3( vec3( 1.6605, - 0.1246, - 0.0182 ), vec3( - 0.5876, 1.1329, - 0.1006 ), vec3( - 0.0728, - 0.0083, 1.1187 ) );\nconst LINEAR_SRGB_TO_LINEAR_REC2020 = mat3( vec3( 0.6274, 0.0691, 0.0164 ), vec3( 0.3293, 0.9195, 0.0880 ), vec3( 0.0433, 0.0113, 0.8956 ) );\n\nconst agxDefaultContrastApprox = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = vec3( x_immutable ).toVar();\n\tconst x2 = vec3( x.mul( x ) ).toVar();\n\tconst x4 = vec3( x2.mul( x2 ) ).toVar();\n\n\treturn float( 15.5 ).mul( x4.mul( x2 ) ).sub( mul( 40.14, x4.mul( x ) ) ).add( mul( 31.96, x4 ).sub( mul( 6.868, x2.mul( x ) ) ).add( mul( 0.4298, x2 ).add( mul( 0.1191, x ).sub( 0.00232 ) ) ) );\n\n} );\n\nconst AGXToneMappingNode = tslFn( ( { color, exposure } ) => {\n\n\tconst colortone = vec3( color ).toVar();\n\tconst AgXInsetMatrix = mat3( vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ), vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ), vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 ) );\n\tconst AgXOutsetMatrix = mat3( vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ), vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ), vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 ) );\n\tconst AgxMinEv = float( - 12.47393 );\n\tconst AgxMaxEv = float( 4.026069 );\n\tcolortone.mulAssign( exposure );\n\tcolortone.assign( LINEAR_SRGB_TO_LINEAR_REC2020.mul( colortone ) );\n\tcolortone.assign( AgXInsetMatrix.mul( colortone ) );\n\tcolortone.assign( max( colortone, 1e-10 ) );\n\tcolortone.assign( log2( colortone ) );\n\tcolortone.assign( colortone.sub( AgxMinEv ).div( AgxMaxEv.sub( AgxMinEv ) ) );\n\tcolortone.assign( clamp( colortone, 0.0, 1.0 ) );\n\tcolortone.assign( agxDefaultContrastApprox( colortone ) );\n\tcolortone.assign( AgXOutsetMatrix.mul( colortone ) );\n\tcolortone.assign( pow( max( vec3( 0.0 ), colortone ), vec3( 2.2 ) ) );\n\tcolortone.assign( LINEAR_REC2020_TO_LINEAR_SRGB.mul( colortone ) );\n\tcolortone.assign( clamp( colortone, 0.0, 1.0 ) );\n\n\treturn colortone;\n\n} );\n\n\nconst toneMappingLib = {\n\t[ LinearToneMapping ]: LinearToneMappingNode,\n\t[ ReinhardToneMapping ]: ReinhardToneMappingNode,\n\t[ CineonToneMapping ]: OptimizedCineonToneMappingNode,\n\t[ ACESFilmicToneMapping ]: ACESFilmicToneMappingNode,\n\t[ AgXToneMapping ]: AGXToneMappingNode\n};\n\nclass ToneMappingNode extends TempNode {\n\n\tconstructor( toneMapping = NoToneMapping, exposureNode = toneMappingExposure, colorNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.toneMapping = toneMapping;\n\n\t\tthis.exposureNode = exposureNode;\n\t\tthis.colorNode = colorNode;\n\n\t}\n\n\tgetCacheKey() {\n\n\t\tlet cacheKey = super.getCacheKey();\n\t\tcacheKey = '{toneMapping:' + this.toneMapping + ',nodes:' + cacheKey + '}';\n\n\t\treturn cacheKey;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst colorNode = this.colorNode || builder.context.color;\n\t\tconst toneMapping = this.toneMapping;\n\n\t\tif ( toneMapping === NoToneMapping ) return colorNode;\n\n\t\tconst toneMappingParams = { exposure: this.exposureNode, color: colorNode };\n\t\tconst toneMappingNode = toneMappingLib[ toneMapping ];\n\n\t\tlet outputNode = null;\n\n\t\tif ( toneMappingNode ) {\n\n\t\t\toutputNode = toneMappingNode( toneMappingParams );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'ToneMappingNode: Unsupported Tone Mapping configuration.', toneMapping );\n\n\t\t\toutputNode = colorNode;\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default ToneMappingNode;\n\nexport const toneMapping = ( mapping, exposure, color ) => nodeObject( new ToneMappingNode( mapping, nodeObject( exposure ), nodeObject( color ) ) );\nexport const toneMappingExposure = rendererReference( 'toneMappingExposure', 'float' );\n\naddNodeElement( 'toneMapping', ( color, mapping, exposure ) => toneMapping( mapping, exposure, color ) );\n\naddNodeClass( 'ToneMappingNode', ToneMappingNode );\n","import ViewportTextureNode from './ViewportTextureNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nimport { viewportTopLeft } from './ViewportNode.js';\nimport { FramebufferTexture } from 'three';\n\nlet _sharedFramebuffer = null;\n\nclass ViewportSharedTextureNode extends ViewportTextureNode {\n\n\tconstructor( uvNode = viewportTopLeft, levelNode = null ) {\n\n\t\tif ( _sharedFramebuffer === null ) {\n\n\t\t\t_sharedFramebuffer = new FramebufferTexture();\n\n\t\t}\n\n\t\tsuper( uvNode, levelNode, _sharedFramebuffer );\n\n\t}\n\n\tupdateReference() {\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default ViewportSharedTextureNode;\n\nexport const viewportSharedTexture = nodeProxy( ViewportSharedTextureNode );\n\naddNodeElement( 'viewportSharedTexture', viewportSharedTexture );\n\naddNodeClass( 'ViewportSharedTextureNode', ViewportSharedTextureNode );\n","import TempNode from '../core/TempNode.js';\nimport { nodeObject, addNodeElement, tslFn, float, vec2, vec4 } from '../shadernode/ShaderNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { mul } from '../math/OperatorNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { texturePass } from './PassNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { Vector2, RenderTarget } from 'three';\nimport QuadMesh from '../../objects/QuadMesh.js';\n\n// WebGPU: The use of a single QuadMesh for both gaussian blur passes results in a single RenderObject with a SampledTexture binding that\n// alternates between source textures and triggers creation of new BindGroups and BindGroupLayouts every frame.\n\nconst quadMesh1 = new QuadMesh();\nconst quadMesh2 = new QuadMesh();\n\nclass GaussianBlurNode extends TempNode {\n\n\tconstructor( textureNode, sigma = 2 ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.sigma = sigma;\n\n\t\tthis.directionNode = vec2( 1 );\n\n\t\tthis._invSize = uniform( new Vector2() );\n\t\tthis._passDirection = uniform( new Vector2() );\n\n\t\tthis._horizontalRT = new RenderTarget();\n\t\tthis._horizontalRT.texture.name = 'GaussianBlurNode.horizontal';\n\t\tthis._verticalRT = new RenderTarget();\n\t\tthis._verticalRT.texture.name = 'GaussianBlurNode.vertical';\n\n\t\tthis._textureNode = texturePass( this, this._verticalRT.texture );\n\n\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\n\n\t\tthis.resolution = new Vector2( 1, 1 );\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\twidth = Math.max( Math.round( width * this.resolution.x ), 1 );\n\t\theight = Math.max( Math.round( height * this.resolution.y ), 1 );\n\n\t\tthis._invSize.value.set( 1 / width, 1 / height );\n\t\tthis._horizontalRT.setSize( width, height );\n\t\tthis._verticalRT.setSize( width, height );\n\n\t}\n\n\tupdateBefore( frame ) {\n\n\t\tconst { renderer } = frame;\n\n\t\tconst textureNode = this.textureNode;\n\t\tconst map = textureNode.value;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentTexture = textureNode.value;\n\n\t\tquadMesh1.material = this._material;\n\t\tquadMesh2.material = this._material;\n\n\t\tthis.setSize( map.image.width, map.image.height );\n\n\t\tconst textureType = map.type;\n\n\t\tthis._horizontalRT.texture.type = textureType;\n\t\tthis._verticalRT.texture.type = textureType;\n\n\t\t// horizontal\n\n\t\trenderer.setRenderTarget( this._horizontalRT );\n\n\t\tthis._passDirection.value.set( 1, 0 );\n\n\t\tquadMesh1.render( renderer );\n\n\t\t// vertical\n\n\t\ttextureNode.value = this._horizontalRT.texture;\n\t\trenderer.setRenderTarget( this._verticalRT );\n\n\t\tthis._passDirection.value.set( 0, 1 );\n\n\t\tquadMesh2.render( renderer );\n\n\t\t// restore\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\ttextureNode.value = currentTexture;\n\n\t}\n\n\tgetTextureNode() {\n\n\t\treturn this._textureNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst textureNode = this.textureNode;\n\n\t\tif ( textureNode.isTextureNode !== true ) {\n\n\t\t\tconsole.error( 'GaussianBlurNode requires a TextureNode.' );\n\n\t\t\treturn vec4();\n\n\t\t}\n\n\t\t//\n\n\t\tconst uvNode = textureNode.uvNode || uv();\n\n\t\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\n\n\t\tconst blur = tslFn( () => {\n\n\t\t\tconst kernelSize = 3 + ( 2 * this.sigma );\n\t\t\tconst gaussianCoefficients = this._getCoefficients( kernelSize );\n\n\t\t\tconst invSize = this._invSize;\n\t\t\tconst direction = vec2( this.directionNode ).mul( this._passDirection );\n\n\t\t\tconst weightSum = float( gaussianCoefficients[ 0 ] ).toVar();\n\t\t\tconst diffuseSum = vec4( sampleTexture( uvNode ).mul( weightSum ) ).toVar();\n\n\t\t\tfor ( let i = 1; i < kernelSize; i ++ ) {\n\n\t\t\t\tconst x = float( i );\n\t\t\t\tconst w = float( gaussianCoefficients[ i ] );\n\n\t\t\t\tconst uvOffset = vec2( direction.mul( invSize.mul( x ) ) ).toVar();\n\n\t\t\t\tconst sample1 = vec4( sampleTexture( uvNode.add( uvOffset ) ) );\n\t\t\t\tconst sample2 = vec4( sampleTexture( uvNode.sub( uvOffset ) ) );\n\n\t\t\t\tdiffuseSum.addAssign( sample1.add( sample2 ).mul( w ) );\n\t\t\t\tweightSum.addAssign( mul( 2.0, w ) );\n\n\t\t\t}\n\n\t\t\treturn diffuseSum.div( weightSum );\n\n\t\t} );\n\n\t\t//\n\n\t\tconst material = this._material || ( this._material = builder.createNodeMaterial() );\n\t\tmaterial.fragmentNode = blur();\n\n\t\t//\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tproperties.textureNode = textureNode;\n\n\t\t//\n\n\t\treturn this._textureNode;\n\n\t}\n\n\t_getCoefficients( kernelRadius ) {\n\n\t\tconst coefficients = [];\n\n\t\tfor ( let i = 0; i < kernelRadius; i ++ ) {\n\n\t\t\tcoefficients.push( 0.39894 * Math.exp( - 0.5 * i * i / ( kernelRadius * kernelRadius ) ) / kernelRadius );\n\n\t\t}\n\n\t\treturn coefficients;\n\n\t}\n\n}\n\nexport const gaussianBlur = ( node, sigma ) => nodeObject( new GaussianBlurNode( nodeObject( node ), sigma ) );\n\naddNodeElement( 'gaussianBlur', gaussianBlur );\n\nexport default GaussianBlurNode;\n\n","import { addNodeClass } from '../core/Node.js';\nimport TempNode from '../core/TempNode.js';\nimport TextureNode from '../accessors/TextureNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { viewZToOrthographicDepth, perspectiveDepthToViewZ } from './ViewportDepthNode.js';\nimport { RenderTarget, Vector2, HalfFloatType, DepthTexture, NoToneMapping/*, FloatType*/ } from 'three';\n\nclass PassTextureNode extends TextureNode {\n\n\tconstructor( passNode, texture ) {\n\n\t\tsuper( texture );\n\n\t\tthis.passNode = passNode;\n\n\t\tthis.setUpdateMatrix( false );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tthis.passNode.build( builder );\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.passNode, this.value );\n\n\t}\n\n}\n\nclass PassNode extends TempNode {\n\n\tconstructor( scope, scene, camera ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.scope = scope;\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = 1;\n\t\tthis._height = 1;\n\n\t\tconst depthTexture = new DepthTexture();\n\t\tdepthTexture.isRenderTargetTexture = true;\n\t\t//depthTexture.type = FloatType;\n\t\tdepthTexture.name = 'PostProcessingDepth';\n\n\t\tconst renderTarget = new RenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, { type: HalfFloatType } );\n\t\trenderTarget.texture.name = 'PostProcessing';\n\t\trenderTarget.depthTexture = depthTexture;\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tthis.updateBeforeType = NodeUpdateType.FRAME;\n\n\t\tthis._textureNode = nodeObject( new PassTextureNode( this, renderTarget.texture ) );\n\t\tthis._depthTextureNode = nodeObject( new PassTextureNode( this, depthTexture ) );\n\n\t\tthis._depthNode = null;\n\t\tthis._viewZNode = null;\n\t\tthis._cameraNear = uniform( 0 );\n\t\tthis._cameraFar = uniform( 0 );\n\n\t\tthis.isPassNode = true;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetTextureNode() {\n\n\t\treturn this._textureNode;\n\n\t}\n\n\tgetTextureDepthNode() {\n\n\t\treturn this._depthTextureNode;\n\n\t}\n\n\tgetViewZNode() {\n\n\t\tif ( this._viewZNode === null ) {\n\n\t\t\tconst cameraNear = this._cameraNear;\n\t\t\tconst cameraFar = this._cameraFar;\n\n\t\t\tthis._viewZNode = perspectiveDepthToViewZ( this._depthTextureNode, cameraNear, cameraFar );\n\n\t\t}\n\n\t\treturn this._viewZNode;\n\n\t}\n\n\tgetDepthNode() {\n\n\t\tif ( this._depthNode === null ) {\n\n\t\t\tconst cameraNear = this._cameraNear;\n\t\t\tconst cameraFar = this._cameraFar;\n\n\t\t\tthis._depthNode = viewZToOrthographicDepth( this.getViewZNode(), cameraNear, cameraFar );\n\n\t\t}\n\n\t\treturn this._depthNode;\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.scope === PassNode.COLOR ? this.getTextureNode() : this.getDepthNode();\n\n\t}\n\n\tupdateBefore( frame ) {\n\n\t\tconst { renderer } = frame;\n\t\tconst { scene, camera } = this;\n\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\n\t\tconst size = renderer.getSize( new Vector2() );\n\n\t\tthis.setSize( size.width, size.height );\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentToneMappingNode = renderer.toneMappingNode;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tthis._cameraNear.value = camera.near;\n\t\tthis._cameraFar.value = camera.far;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.toneMappingNode = null;\n\t\trenderer.setRenderTarget( this.renderTarget );\n\n\t\trenderer.render( scene, camera );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.toneMappingNode = currentToneMappingNode;\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget.setSize( effectiveWidth, effectiveHeight );\n\n\t}\n\n\tsetPixelRatio( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.renderTarget.dispose();\n\n\t}\n\n\n}\n\nPassNode.COLOR = 'color';\nPassNode.DEPTH = 'depth';\n\nexport default PassNode;\n\nexport const pass = ( scene, camera ) => nodeObject( new PassNode( PassNode.COLOR, scene, camera ) );\nexport const texturePass = ( pass, texture ) => nodeObject( new PassTextureNode( pass, texture ) );\nexport const depthPass = ( scene, camera ) => nodeObject( new PassNode( PassNode.DEPTH, scene, camera ) );\n\naddNodeClass( 'PassNode', PassNode );\n","import { BufferGeometry, Float32BufferAttribute, Mesh, OrthographicCamera } from 'three';\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass QuadGeometry extends BufferGeometry {\n\n\tconstructor( flipY = false ) {\n\n\t\tsuper();\n\n\t\tconst uv = flipY === false ? [ 0, - 1, 0, 1, 2, 1 ] : [ 0, 2, 0, 0, 2, 0 ];\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uv, 2 ) );\n\n\t}\n\n}\n\nconst _geometry = new QuadGeometry();\n\nclass QuadMesh extends Mesh {\n\n\tconstructor( material = null ) {\n\n\t\tsuper( _geometry, material );\n\n\t\tthis.camera = _camera;\n\n\t}\n\n\trenderAsync( renderer ) {\n\n\t\treturn renderer.renderAsync( this, _camera );\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this, _camera );\n\n\t}\n\n}\n\nexport default QuadMesh;\n","import TempNode from '../core/TempNode.js';\nimport { nodeObject, addNodeElement, tslFn, float, vec4 } from '../shadernode/ShaderNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { texturePass } from './PassNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { RenderTarget } from 'three';\nimport { sign, max } from '../math/MathNode.js';\nimport QuadMesh from '../../objects/QuadMesh.js';\n\nconst quadMeshComp = new QuadMesh();\n\nclass AfterImageNode extends TempNode {\n\n\tconstructor( textureNode, damp = 0.96 ) {\n\n\t\tsuper( textureNode );\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.textureNodeOld = texture();\n\t\tthis.damp = uniform( damp );\n\n\t\tthis._compRT = new RenderTarget();\n\t\tthis._compRT.texture.name = 'AfterImageNode.comp';\n\n\t\tthis._oldRT = new RenderTarget();\n\t\tthis._oldRT.texture.name = 'AfterImageNode.old';\n\n\t\tthis._textureNode = texturePass( this, this._compRT.texture );\n\n\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\n\n\t}\n\n\tgetTextureNode() {\n\n\t\treturn this._textureNode;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._compRT.setSize( width, height );\n\t\tthis._oldRT.setSize( width, height );\n\n\t}\n\n\tupdateBefore( frame ) {\n\n\t\tconst { renderer } = frame;\n\n\t\tconst textureNode = this.textureNode;\n\t\tconst map = textureNode.value;\n\n\t\tconst textureType = map.type;\n\n\t\tthis._compRT.texture.type = textureType;\n\t\tthis._oldRT.texture.type = textureType;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentTexture = textureNode.value;\n\n\t\tthis.textureNodeOld.value = this._oldRT.texture;\n\n\t\t// comp\n\t\trenderer.setRenderTarget( this._compRT );\n\t\tquadMeshComp.render( renderer );\n\n\t\t// Swap the textures\n\t\tconst temp = this._oldRT;\n\t\tthis._oldRT = this._compRT;\n\t\tthis._compRT = temp;\n\n\t\t// set size before swapping fails\n\t\tthis.setSize( map.image.width, map.image.height );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\ttextureNode.value = currentTexture;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst textureNode = this.textureNode;\n\t\tconst textureNodeOld = this.textureNodeOld;\n\n\t\tif ( textureNode.isTextureNode !== true ) {\n\n\t\t\tconsole.error( 'AfterImageNode requires a TextureNode.' );\n\n\t\t\treturn vec4();\n\n\t\t}\n\n\t\t//\n\n\t\tconst uvNode = textureNode.uvNode || uv();\n\n\t\ttextureNodeOld.uvNode = uvNode;\n\n\t\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\n\n\t\tconst when_gt = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\t\t\tconst y = float( y_immutable ).toVar();\n\t\t\tconst x = vec4( x_immutable ).toVar();\n\n\t\t\treturn max( sign( x.sub( y ) ), 0.0 );\n\n\t\t} );\n\n\t\tconst afterImg = tslFn( () => {\n\n\t\t\tconst texelOld = vec4( textureNodeOld );\n\t\t\tconst texelNew = vec4( sampleTexture( uvNode ) );\n\n\t\t\ttexelOld.mulAssign( this.damp.mul( when_gt( texelOld, 0.1 ) ) );\n\t\t\treturn max( texelNew, texelOld );\n\n\t\t} );\n\n\t\t//\n\n\t\tconst materialComposed = this._materialComposed || ( this._materialComposed = builder.createNodeMaterial() );\n\t\tmaterialComposed.fragmentNode = afterImg();\n\n\t\tquadMeshComp.material = materialComposed;\n\n\t\t//\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tproperties.textureNode = textureNode;\n\n\t\t//\n\n\t\treturn this._textureNode;\n\n\t}\n\n}\n\nexport const afterImage = ( node, damp ) => nodeObject( new AfterImageNode( nodeObject( node ), damp ) );\n\naddNodeElement( 'afterImage', afterImage );\n\nexport default AfterImageNode;\n\n","import TempNode from '../core/TempNode.js';\nimport { nodeObject, addNodeElement, tslFn, float, vec2, vec3, vec4 } from '../shadernode/ShaderNode.js';\nimport { loop } from '../utils/LoopNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { threshold } from './ColorAdjustmentNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { texturePass } from './PassNode.js';\nimport { Vector2, RenderTarget } from 'three';\nimport QuadMesh from '../../objects/QuadMesh.js';\n\nconst quadMesh = new QuadMesh();\n\nclass AnamorphicNode extends TempNode {\n\n\tconstructor( textureNode, tresholdNode, scaleNode, samples ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.textureNode = textureNode;\n\t\tthis.tresholdNode = tresholdNode;\n\t\tthis.scaleNode = scaleNode;\n\t\tthis.colorNode = vec3( 0.1, 0.0, 1.0 );\n\t\tthis.samples = samples;\n\t\tthis.resolution = new Vector2( 1, 1 );\n\n\t\tthis._renderTarget = new RenderTarget();\n\t\tthis._renderTarget.texture.name = 'anamorphic';\n\n\t\tthis._invSize = uniform( new Vector2() );\n\n\t\tthis._textureNode = texturePass( this, this._renderTarget.texture );\n\n\t\tthis.updateBeforeType = NodeUpdateType.RENDER;\n\n\t}\n\n\tgetTextureNode() {\n\n\t\treturn this._textureNode;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._invSize.value.set( 1 / width, 1 / height );\n\n\t\twidth = Math.max( Math.round( width * this.resolution.x ), 1 );\n\t\theight = Math.max( Math.round( height * this.resolution.y ), 1 );\n\n\t\tthis._renderTarget.setSize( width, height );\n\n\t}\n\n\tupdateBefore( frame ) {\n\n\t\tconst { renderer } = frame;\n\n\t\tconst textureNode = this.textureNode;\n\t\tconst map = textureNode.value;\n\n\t\tthis._renderTarget.texture.type = map.type;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentTexture = textureNode.value;\n\n\t\tquadMesh.material = this._material;\n\n\t\tthis.setSize( map.image.width, map.image.height );\n\n\t\t// render\n\n\t\trenderer.setRenderTarget( this._renderTarget );\n\n\t\tquadMesh.render( renderer );\n\n\t\t// restore\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\ttextureNode.value = currentTexture;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst textureNode = this.textureNode;\n\n\t\tif ( textureNode.isTextureNode !== true ) {\n\n\t\t\tconsole.error( 'AnamorphNode requires a TextureNode.' );\n\n\t\t\treturn vec4();\n\n\t\t}\n\n\t\t//\n\n\t\tconst uvNode = textureNode.uvNode || uv();\n\n\t\tconst sampleTexture = ( uv ) => textureNode.cache().context( { getUV: () => uv, forceUVContext: true } );\n\n\t\tconst anamorph = tslFn( () => {\n\n\t\t\tconst samples = this.samples;\n\t\t\tconst halfSamples = Math.floor( samples / 2 );\n\n\t\t\tconst total = vec3( 0 ).toVar();\n\n\t\t\tloop( { start: - halfSamples, end: halfSamples }, ( { i } ) => {\n\n\t\t\t\tconst softness = float( i ).abs().div( halfSamples ).oneMinus();\n\n\t\t\t\tconst uv = vec2( uvNode.x.add( this._invSize.x.mul( i ).mul( this.scaleNode ) ), uvNode.y );\n\t\t\t\tconst color = sampleTexture( uv );\n\t\t\t\tconst pass = threshold( color, this.tresholdNode ).mul( softness );\n\n\t\t\t\ttotal.addAssign( pass );\n\n\t\t\t} );\n\n\t\t\treturn total.mul( this.colorNode );\n\n\t\t} );\n\n\t\t//\n\n\t\tconst material = this._material || ( this._material = builder.createNodeMaterial() );\n\t\tmaterial.fragmentNode = anamorph();\n\n\t\t//\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tproperties.textureNode = textureNode;\n\n\t\t//\n\n\t\treturn this._textureNode;\n\n\t}\n\n}\n\nexport const anamorphic = ( node, threshold = .9, scale = 3, samples = 32 ) => nodeObject( new AnamorphicNode( nodeObject( node ), nodeObject( threshold ), nodeObject( scale ), samples ) );\n\naddNodeElement( 'anamorphic', anamorphic );\n\nexport default AnamorphicNode;\n\n","import TempNode from '../core/TempNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeArray, nodeObject, nodeObjects } from '../shadernode/ShaderNode.js';\n\nclass FunctionCallNode extends TempNode {\n\n\tconstructor( functionNode = null, parameters = {} ) {\n\n\t\tsuper();\n\n\t\tthis.functionNode = functionNode;\n\t\tthis.parameters = parameters;\n\n\t}\n\n\tsetParameters( parameters ) {\n\n\t\tthis.parameters = parameters;\n\n\t\treturn this;\n\n\t}\n\n\tgetParameters() {\n\n\t\treturn this.parameters;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.functionNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst params = [];\n\n\t\tconst functionNode = this.functionNode;\n\n\t\tconst inputs = functionNode.getInputs( builder );\n\t\tconst parameters = this.parameters;\n\n\t\tif ( Array.isArray( parameters ) ) {\n\n\t\t\tfor ( let i = 0; i < parameters.length; i ++ ) {\n\n\t\t\t\tconst inputNode = inputs[ i ];\n\t\t\t\tconst node = parameters[ i ];\n\n\t\t\t\tparams.push( node.build( builder, inputNode.type ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( const inputNode of inputs ) {\n\n\t\t\t\tconst node = parameters[ inputNode.name ];\n\n\t\t\t\tif ( node !== undefined ) {\n\n\t\t\t\t\tparams.push( node.build( builder, inputNode.type ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( `FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.` );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst functionName = functionNode.build( builder, 'property' );\n\n\t\treturn `${functionName}( ${params.join( ', ' )} )`;\n\n\t}\n\n}\n\nexport default FunctionCallNode;\n\nexport const call = ( func, ...params ) => {\n\n\tparams = params.length > 1 || ( params[ 0 ] && params[ 0 ].isNode === true ) ? nodeArray( params ) : nodeObjects( params[ 0 ] );\n\n\treturn nodeObject( new FunctionCallNode( nodeObject( func ), params ) );\n\n};\n\naddNodeElement( 'call', call );\n\naddNodeClass( 'FunctionCallNode', FunctionCallNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { scriptableValue } from './ScriptableValueNode.js';\nimport { addNodeElement, nodeProxy, float } from '../shadernode/ShaderNode.js';\n\nclass Resources extends Map {\n\n\tget( key, callback = null, ...params ) {\n\n\t\tif ( this.has( key ) ) return super.get( key );\n\n\t\tif ( callback !== null ) {\n\n\t\t\tconst value = callback( ...params );\n\t\t\tthis.set( key, value );\n\t\t\treturn value;\n\n\t\t}\n\n\t}\n\n}\n\nclass Parameters {\n\n\tconstructor( scriptableNode ) {\n\n\t\tthis.scriptableNode = scriptableNode;\n\n\t}\n\n\tget parameters() {\n\n\t\treturn this.scriptableNode.parameters;\n\n\t}\n\n\tget layout() {\n\n\t\treturn this.scriptableNode.getLayout();\n\n\t}\n\n\tgetInputLayout( id ) {\n\n\t\treturn this.scriptableNode.getInputLayout( id );\n\n\t}\n\n\tget( name ) {\n\n\t\tconst param = this.parameters[ name ];\n\t\tconst value = param ? param.getValue() : null;\n\n\t\treturn value;\n\n\t}\n\n}\n\nexport const global = new Resources();\n\nclass ScriptableNode extends Node {\n\n\tconstructor( codeNode = null, parameters = {} ) {\n\n\t\tsuper();\n\n\t\tthis.codeNode = codeNode;\n\t\tthis.parameters = parameters;\n\n\t\tthis._local = new Resources();\n\t\tthis._output = scriptableValue();\n\t\tthis._outputs = {};\n\t\tthis._source = this.source;\n\t\tthis._method = null;\n\t\tthis._object = null;\n\t\tthis._value = null;\n\t\tthis._needsOutputUpdate = true;\n\n\t\tthis.onRefresh = this.onRefresh.bind( this );\n\n\t\tthis.isScriptableNode = true;\n\n\t}\n\n\tget source() {\n\n\t\treturn this.codeNode ? this.codeNode.code : '';\n\n\t}\n\n\tsetLocal( name, value ) {\n\n\t\treturn this._local.set( name, value );\n\n\t}\n\n\tgetLocal( name ) {\n\n\t\treturn this._local.get( name );\n\n\t}\n\n\tonRefresh() {\n\n\t\tthis._refresh();\n\n\t}\n\n\tgetInputLayout( id ) {\n\n\t\tfor ( const element of this.getLayout() ) {\n\n\t\t\tif ( element.inputType && ( element.id === id || element.name === id ) ) {\n\n\t\t\t\treturn element;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetOutputLayout( id ) {\n\n\t\tfor ( const element of this.getLayout() ) {\n\n\t\t\tif ( element.outputType && ( element.id === id || element.name === id ) ) {\n\n\t\t\t\treturn element;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetOutput( name, value ) {\n\n\t\tconst outputs = this._outputs;\n\n\t\tif ( outputs[ name ] === undefined ) {\n\n\t\t\toutputs[ name ] = scriptableValue( value );\n\n\t\t} else {\n\n\t\t\toutputs[ name ].value = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetOutput( name ) {\n\n\t\treturn this._outputs[ name ];\n\n\t}\n\n\tgetParameter( name ) {\n\n\t\treturn this.parameters[ name ];\n\n\t}\n\n\tsetParameter( name, value ) {\n\n\t\tconst parameters = this.parameters;\n\n\t\tif ( value && value.isScriptableNode ) {\n\n\t\t\tthis.deleteParameter( name );\n\n\t\t\tparameters[ name ] = value;\n\t\t\tparameters[ name ].getDefaultOutput().events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t} else if ( value && value.isScriptableValueNode ) {\n\n\t\t\tthis.deleteParameter( name );\n\n\t\t\tparameters[ name ] = value;\n\t\t\tparameters[ name ].events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t} else if ( parameters[ name ] === undefined ) {\n\n\t\t\tparameters[ name ] = scriptableValue( value );\n\t\t\tparameters[ name ].events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t} else {\n\n\t\t\tparameters[ name ].value = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.getDefaultOutput().getValue();\n\n\t}\n\n\tdeleteParameter( name ) {\n\n\t\tlet valueNode = this.parameters[ name ];\n\n\t\tif ( valueNode ) {\n\n\t\t\tif ( valueNode.isScriptableNode ) valueNode = valueNode.getDefaultOutput();\n\n\t\t\tvalueNode.events.removeEventListener( 'refresh', this.onRefresh );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclearParameters() {\n\n\t\tfor ( const name of Object.keys( this.parameters ) ) {\n\n\t\t\tthis.deleteParameter( name );\n\n\t\t}\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tcall( name, ...params ) {\n\n\t\tconst object = this.getObject();\n\t\tconst method = object[ name ];\n\n\t\tif ( typeof method === 'function' ) {\n\n\t\t\treturn method( ...params );\n\n\t\t}\n\n\t}\n\n\tasync callAsync( name, ...params ) {\n\n\t\tconst object = this.getObject();\n\t\tconst method = object[ name ];\n\n\t\tif ( typeof method === 'function' ) {\n\n\t\t\treturn method.constructor.name === 'AsyncFunction' ? await method( ...params ) : method( ...params );\n\n\t\t}\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.getDefaultOutputNode().getNodeType( builder );\n\n\t}\n\n\trefresh( output = null ) {\n\n\t\tif ( output !== null ) {\n\n\t\t\tthis.getOutput( output ).refresh();\n\n\t\t} else {\n\n\t\t\tthis._refresh();\n\n\t\t}\n\n\t}\n\n\tgetObject() {\n\n\t\tif ( this.needsUpdate ) this.dispose();\n\t\tif ( this._object !== null ) return this._object;\n\n\t\t//\n\n\t\tconst refresh = () => this.refresh();\n\t\tconst setOutput = ( id, value ) => this.setOutput( id, value );\n\n\t\tconst parameters = new Parameters( this );\n\n\t\tconst THREE = global.get( 'THREE' );\n\t\tconst TSL = global.get( 'TSL' );\n\n\t\tconst method = this.getMethod( this.codeNode );\n\t\tconst params = [ parameters, this._local, global, refresh, setOutput, THREE, TSL ];\n\n\t\tthis._object = method( ...params );\n\n\t\tconst layout = this._object.layout;\n\n\t\tif ( layout ) {\n\n\t\t\tif ( layout.cache === false ) {\n\n\t\t\t\tthis._local.clear();\n\n\t\t\t}\n\n\t\t\t// default output\n\t\t\tthis._output.outputType = layout.outputType || null;\n\n\t\t\tif ( Array.isArray( layout.elements ) ) {\n\n\t\t\t\tfor ( const element of layout.elements ) {\n\n\t\t\t\t\tconst id = element.id || element.name;\n\n\t\t\t\t\tif ( element.inputType ) {\n\n\t\t\t\t\t\tif ( this.getParameter( id ) === undefined ) this.setParameter( id, null );\n\n\t\t\t\t\t\tthis.getParameter( id ).inputType = element.inputType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( element.outputType ) {\n\n\t\t\t\t\t\tif ( this.getOutput( id ) === undefined ) this.setOutput( id, null );\n\n\t\t\t\t\t\tthis.getOutput( id ).outputType = element.outputType;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._object;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tfor ( const name in this.parameters ) {\n\n\t\t\tlet valueNode = this.parameters[ name ];\n\n\t\t\tif ( valueNode.isScriptableNode ) valueNode = valueNode.getDefaultOutput();\n\n\t\t\tvalueNode.events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t}\n\n\t}\n\n\tgetLayout() {\n\n\t\treturn this.getObject().layout;\n\n\t}\n\n\tgetDefaultOutputNode() {\n\n\t\tconst output = this.getDefaultOutput().value;\n\n\t\tif ( output && output.isNode ) {\n\n\t\t\treturn output;\n\n\t\t}\n\n\t\treturn float();\n\n\t}\n\n\tgetDefaultOutput()\t{\n\n\t\treturn this._exec()._output;\n\n\t}\n\n\tgetMethod() {\n\n\t\tif ( this.needsUpdate ) this.dispose();\n\t\tif ( this._method !== null ) return this._method;\n\n\t\t//\n\n\t\tconst parametersProps = [ 'parameters', 'local', 'global', 'refresh', 'setOutput', 'THREE', 'TSL' ];\n\t\tconst interfaceProps = [ 'layout', 'init', 'main', 'dispose' ];\n\n\t\tconst properties = interfaceProps.join( ', ' );\n\t\tconst declarations = 'var ' + properties + '; var output = {};\\n';\n\t\tconst returns = '\\nreturn { ...output, ' + properties + ' };';\n\n\t\tconst code = declarations + this.codeNode.code + returns;\n\n\t\t//\n\n\t\tthis._method = new Function( ...parametersProps, code );\n\n\t\treturn this._method;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this._method === null ) return;\n\n\t\tif ( this._object && typeof this._object.dispose === 'function' ) {\n\n\t\t\tthis._object.dispose();\n\n\t\t}\n\n\t\tthis._method = null;\n\t\tthis._object = null;\n\t\tthis._source = null;\n\t\tthis._value = null;\n\t\tthis._needsOutputUpdate = true;\n\t\tthis._output.value = null;\n\t\tthis._outputs = {};\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.getDefaultOutputNode();\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.dispose();\n\n\t}\n\n\tget needsUpdate() {\n\n\t\treturn this.source !== this._source;\n\n\t}\n\n\t_exec()\t{\n\n\t\tif ( this.codeNode === null ) return this;\n\n\t\tif ( this._needsOutputUpdate === true ) {\n\n\t\t\tthis._value = this.call( 'main' );\n\n\t\t\tthis._needsOutputUpdate = false;\n\n\t\t}\n\n\t\tthis._output.value = this._value;\n\n\t\treturn this;\n\n\t}\n\n\t_refresh() {\n\n\t\tthis.needsUpdate = true;\n\n\t\tthis._exec();\n\n\t\tthis._output.refresh();\n\n\t}\n\n}\n\nexport default ScriptableNode;\n\nexport const scriptable = nodeProxy( ScriptableNode );\n\naddNodeElement( 'scriptable', scriptable );\n\naddNodeClass( 'ScriptableNode', ScriptableNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { arrayBufferToBase64, base64ToArrayBuffer } from '../core/NodeUtils.js';\nimport { addNodeElement, nodeProxy, float } from '../shadernode/ShaderNode.js';\nimport { EventDispatcher } from 'three';\n\nclass ScriptableValueNode extends Node {\n\n\tconstructor( value = null ) {\n\n\t\tsuper();\n\n\t\tthis._value = value;\n\t\tthis._cache = null;\n\n\t\tthis.inputType = null;\n\t\tthis.outpuType = null;\n\n\t\tthis.events = new EventDispatcher();\n\n\t\tthis.isScriptableValueNode = true;\n\n\t}\n\n\tget isScriptableOutputNode() {\n\n\t\treturn this.outputType !== null;\n\n\t}\n\n\tset value( val ) {\n\n\t\tif ( this._value === val ) return;\n\n\t\tif ( this._cache && this.inputType === 'URL' && this.value.value instanceof ArrayBuffer ) {\n\n\t\t\tURL.revokeObjectURL( this._cache );\n\n\t\t\tthis._cache = null;\n\n\t\t}\n\n\t\tthis._value = val;\n\n\t\tthis.events.dispatchEvent( { type: 'change' } );\n\n\t\tthis.refresh();\n\n\t}\n\n\tget value() {\n\n\t\treturn this._value;\n\n\t}\n\n\trefresh() {\n\n\t\tthis.events.dispatchEvent( { type: 'refresh' } );\n\n\t}\n\n\tgetValue() {\n\n\t\tconst value = this.value;\n\n\t\tif ( value && this._cache === null && this.inputType === 'URL' && value.value instanceof ArrayBuffer ) {\n\n\t\t\tthis._cache = URL.createObjectURL( new Blob( [ value.value ] ) );\n\n\t\t} else if ( value && value.value !== null && value.value !== undefined && (\n\t\t\t( ( this.inputType === 'URL' || this.inputType === 'String' ) && typeof value.value === 'string' ) ||\n\t\t\t( this.inputType === 'Number' && typeof value.value === 'number' ) ||\n\t\t\t( this.inputType === 'Vector2' && value.value.isVector2 ) ||\n\t\t\t( this.inputType === 'Vector3' && value.value.isVector3 ) ||\n\t\t\t( this.inputType === 'Vector4' && value.value.isVector4 ) ||\n\t\t\t( this.inputType === 'Color' && value.value.isColor ) ||\n\t\t\t( this.inputType === 'Matrix3' && value.value.isMatrix3 ) ||\n\t\t\t( this.inputType === 'Matrix4' && value.value.isMatrix4 )\n\t\t) ) {\n\n\t\t\treturn value.value;\n\n\t\t}\n\n\t\treturn this._cache || value;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.value && this.value.isNode ? this.value.getNodeType( builder ) : 'float';\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.value && this.value.isNode ? this.value : float();\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tif ( this.value !== null ) {\n\n\t\t\tif ( this.inputType === 'ArrayBuffer' ) {\n\n\t\t\t\tdata.value = arrayBufferToBase64( this.value );\n\n\t\t\t} else {\n\n\t\t\t\tdata.value = this.value ? this.value.toJSON( data.meta ).uuid : null;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.value = null;\n\n\t\t}\n\n\t\tdata.inputType = this.inputType;\n\t\tdata.outputType = this.outputType;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tlet value = null;\n\n\t\tif ( data.value !== null ) {\n\n\t\t\tif ( data.inputType === 'ArrayBuffer' ) {\n\n\t\t\t\tvalue = base64ToArrayBuffer( data.value );\n\n\t\t\t} else if ( data.inputType === 'Texture' ) {\n\n\t\t\t\tvalue = data.meta.textures[ data.value ];\n\n\t\t\t} else {\n\n\t\t\t\tvalue = data.meta.nodes[ data.value ] || null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t\tthis.inputType = data.inputType;\n\t\tthis.outputType = data.outputType;\n\n\t}\n\n}\n\nexport default ScriptableValueNode;\n\nexport const scriptableValue = nodeProxy( ScriptableValueNode );\n\naddNodeElement( 'scriptableValue', scriptableValue );\n\naddNodeClass( 'ScriptableValueNode', ScriptableValueNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass FogNode extends Node {\n\n\tconstructor( colorNode, factorNode ) {\n\n\t\tsuper( 'float' );\n\n\t\tthis.isFogNode = true;\n\n\t\tthis.colorNode = colorNode;\n\t\tthis.factorNode = factorNode;\n\n\t}\n\n\tgetViewZNode( builder ) {\n\n\t\tlet viewZ;\n\n\t\tconst getViewZ = builder.context.getViewZ;\n\n\t\tif ( getViewZ !== undefined ) {\n\n\t\t\tviewZ = getViewZ( this );\n\n\t\t}\n\n\t\treturn ( viewZ || positionView.z ).negate();\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.factorNode;\n\n\t}\n\n}\n\nexport default FogNode;\n\nexport const fog = nodeProxy( FogNode );\n\naddNodeElement( 'fog', fog );\n\naddNodeClass( 'FogNode', FogNode );\n","import FogNode from './FogNode.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass FogRangeNode extends FogNode {\n\n\tconstructor( colorNode, nearNode, farNode ) {\n\n\t\tsuper( colorNode );\n\n\t\tthis.isFogRangeNode = true;\n\n\t\tthis.nearNode = nearNode;\n\t\tthis.farNode = farNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst viewZ = this.getViewZNode( builder );\n\n\t\treturn smoothstep( this.nearNode, this.farNode, viewZ );\n\n\t}\n\n}\n\nexport default FogRangeNode;\n\nexport const rangeFog = nodeProxy( FogRangeNode );\n\naddNodeElement( 'rangeFog', rangeFog );\n\naddNodeClass( 'FogRangeNode', FogRangeNode );\n","import FogNode from './FogNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass FogExp2Node extends FogNode {\n\n\tconstructor( colorNode, densityNode ) {\n\n\t\tsuper( colorNode );\n\n\t\tthis.isFogExp2Node = true;\n\n\t\tthis.densityNode = densityNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst viewZ = this.getViewZNode( builder );\n\t\tconst density = this.densityNode;\n\n\t\treturn density.mul( density, viewZ, viewZ ).negate().exp().oneMinus();\n\n\t}\n\n}\n\nexport default FogExp2Node;\n\nexport const densityFog = nodeProxy( FogExp2Node );\n\naddNodeElement( 'densityFog', densityFog );\n\naddNodeClass( 'FogExp2Node', FogExp2Node );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { getValueType } from '../core/NodeUtils.js';\nimport { buffer } from '../accessors/BufferNode.js';\n//import { bufferAttribute } from '../accessors/BufferAttributeNode.js';\nimport { instanceIndex } from '../core/IndexNode.js';\nimport { nodeProxy, float } from '../shadernode/ShaderNode.js';\n\nimport { Vector4, MathUtils } from 'three';\n\nlet min = null;\nlet max = null;\n\nclass RangeNode extends Node {\n\n\tconstructor( minNode = float(), maxNode = float() ) {\n\n\t\tsuper();\n\n\t\tthis.minNode = minNode;\n\t\tthis.maxNode = maxNode;\n\n\t}\n\n\tgetVectorLength( builder ) {\n\n\t\tconst minLength = builder.getTypeLength( getValueType( this.minNode.value ) );\n\t\tconst maxLength = builder.getTypeLength( getValueType( this.maxNode.value ) );\n\n\t\treturn minLength > maxLength ? minLength : maxLength;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn builder.object.isInstancedMesh === true ? builder.getTypeFromLength( this.getVectorLength( builder ) ) : 'float';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst object = builder.object;\n\n\t\tlet output = null;\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tconst minValue = this.minNode.value;\n\t\t\tconst maxValue = this.maxNode.value;\n\n\t\t\tconst minLength = builder.getTypeLength( getValueType( minValue ) );\n\t\t\tconst maxLength = builder.getTypeLength( getValueType( maxValue ) );\n\n\t\t\tmin = min || new Vector4();\n\t\t\tmax = max || new Vector4();\n\n\t\t\tmin.setScalar( 0 );\n\t\t\tmax.setScalar( 0 );\n\n\t\t\tif ( minLength === 1 ) min.setScalar( minValue );\n\t\t\telse if ( minValue.isColor ) min.set( minValue.r, minValue.g, minValue.b );\n\t\t\telse min.set( minValue.x, minValue.y, minValue.z || 0, minValue.w || 0 );\n\n\t\t\tif ( maxLength === 1 ) max.setScalar( maxValue );\n\t\t\telse if ( maxValue.isColor ) max.set( maxValue.r, maxValue.g, maxValue.b );\n\t\t\telse max.set( maxValue.x, maxValue.y, maxValue.z || 0, maxValue.w || 0 );\n\n\t\t\tconst stride = 4;\n\n\t\t\tconst length = stride * object.count;\n\t\t\tconst array = new Float32Array( length );\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst index = i % stride;\n\n\t\t\t\tconst minElementValue = min.getComponent( index );\n\t\t\t\tconst maxElementValue = max.getComponent( index );\n\n\t\t\t\tarray[ i ] = MathUtils.lerp( minElementValue, maxElementValue, Math.random() );\n\n\t\t\t}\n\n\t\t\tconst nodeType = this.getNodeType( builder );\n\n\t\t\toutput = buffer( array, 'vec4', object.count ).element( instanceIndex ).convert( nodeType );\n\t\t\t//output = bufferAttribute( array, 'vec4', 4, 0 ).convert( nodeType );\n\n\t\t} else {\n\n\t\t\toutput = float( 0 );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nexport default RangeNode;\n\nexport const range = nodeProxy( RangeNode );\n\naddNodeClass( 'RangeNode', RangeNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { addNodeElement, nodeObject } from '../shadernode/ShaderNode.js';\n\nclass ComputeNode extends Node {\n\n\tconstructor( computeNode, count, workgroupSize = [ 64 ] ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.isComputeNode = true;\n\n\t\tthis.computeNode = computeNode;\n\n\t\tthis.count = count;\n\t\tthis.workgroupSize = workgroupSize;\n\t\tthis.dispatchCount = 0;\n\n\t\tthis.version = 1;\n\t\tthis.updateBeforeType = NodeUpdateType.OBJECT;\n\n\t\tthis.updateDispatchCount();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tupdateDispatchCount() {\n\n\t\tconst { count, workgroupSize } = this;\n\n\t\tlet size = workgroupSize[ 0 ];\n\n\t\tfor ( let i = 1; i < workgroupSize.length; i ++ )\n\t\t\tsize *= workgroupSize[ i ];\n\n\t\tthis.dispatchCount = Math.ceil( count / size );\n\n\t}\n\n\tonInit() { }\n\n\tupdateBefore( { renderer } ) {\n\n\t\trenderer.compute( this );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { shaderStage } = builder;\n\n\t\tif ( shaderStage === 'compute' ) {\n\n\t\t\tconst snippet = this.computeNode.build( builder, 'void' );\n\n\t\t\tif ( snippet !== '' ) {\n\n\t\t\t\tbuilder.addLineFlowCode( snippet );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport default ComputeNode;\n\nexport const compute = ( node, count, workgroupSize ) => nodeObject( new ComputeNode( nodeObject( node ), count, workgroupSize ) );\n\naddNodeElement( 'compute', compute );\n\naddNodeClass( 'ComputeNode', ComputeNode );\n","import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { objectPosition } from '../accessors/Object3DNode.js';\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\n\nclass LightNode extends Node {\n\n\tconstructor( scope = LightNode.TARGET_DIRECTION, light = null ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\t\tthis.light = light;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { scope, light } = this;\n\n\t\tlet output = null;\n\n\t\tif ( scope === LightNode.TARGET_DIRECTION ) {\n\n\t\t\toutput = cameraViewMatrix.transformDirection( objectPosition( light ).sub( objectPosition( light.target ) ) );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nLightNode.TARGET_DIRECTION = 'targetDirection';\n\nexport default LightNode;\n\nexport const lightTargetDirection = nodeProxy( LightNode, LightNode.TARGET_DIRECTION );\n\naddNodeClass( 'LightNode', LightNode );\n","import AnalyticLightNode from './AnalyticLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { getDistanceAttenuation } from './LightUtils.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { objectViewPosition } from '../accessors/Object3DNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { PointLight } from 'three';\n\nclass PointLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\tthis.cutoffDistanceNode = uniform( 0 );\n\t\tthis.decayExponentNode = uniform( 0 );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst { light } = this;\n\n\t\tsuper.update( frame );\n\n\t\tthis.cutoffDistanceNode.value = light.distance;\n\t\tthis.decayExponentNode.value = light.decay;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode, light } = this;\n\n\t\tconst lightingModel = builder.context.lightingModel;\n\n\t\tconst lVector = objectViewPosition( light ).sub( positionView ); // @TODO: Add it into LightNode\n\n\t\tconst lightDirection = lVector.normalize();\n\t\tconst lightDistance = lVector.length();\n\n\t\tconst lightAttenuation = getDistanceAttenuation( {\n\t\t\tlightDistance,\n\t\t\tcutoffDistance: cutoffDistanceNode,\n\t\t\tdecayExponent: decayExponentNode\n\t\t} );\n\n\t\tconst lightColor = colorNode.mul( lightAttenuation );\n\n\t\tconst reflectedLight = builder.context.reflectedLight;\n\n\t\tlightingModel.direct( {\n\t\t\tlightDirection,\n\t\t\tlightColor,\n\t\t\treflectedLight\n\t\t}, builder.stack, builder );\n\n\t}\n\n}\n\nexport default PointLightNode;\n\naddNodeClass( 'PointLightNode', PointLightNode );\n\naddLightNode( PointLight, PointLightNode );\n","import { tslFn } from '../shadernode/ShaderNode.js';\n\nexport const getDistanceAttenuation = tslFn( ( inputs ) => {\n\n\tconst { lightDistance, cutoffDistance, decayExponent } = inputs;\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\tconst distanceFalloff = lightDistance.pow( decayExponent ).max( 0.01 ).reciprocal();\n\n\treturn cutoffDistance.greaterThan( 0 ).cond(\n\t\tdistanceFalloff.mul( lightDistance.div( cutoffDistance ).pow4().oneMinus().clamp().pow2() ),\n\t\tdistanceFalloff\n\t);\n\n} ); // validated\n","import AnalyticLightNode from './AnalyticLightNode.js';\nimport { lightTargetDirection } from './LightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { DirectionalLight } from 'three';\n\nclass DirectionalLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst lightingModel = builder.context.lightingModel;\n\n\t\tconst lightColor = this.colorNode;\n\t\tconst lightDirection = lightTargetDirection( this.light );\n\t\tconst reflectedLight = builder.context.reflectedLight;\n\n\t\tlightingModel.direct( {\n\t\t\tlightDirection,\n\t\t\tlightColor,\n\t\t\treflectedLight\n\t\t}, builder.stack, builder );\n\n\t}\n\n}\n\nexport default DirectionalLightNode;\n\naddNodeClass( 'DirectionalLightNode', DirectionalLightNode );\n\naddLightNode( DirectionalLight, DirectionalLightNode );\n","import AnalyticLightNode from './AnalyticLightNode.js';\nimport { lightTargetDirection } from './LightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { getDistanceAttenuation } from './LightUtils.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { objectViewPosition } from '../accessors/Object3DNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { SpotLight } from 'three';\n\nclass SpotLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\tthis.coneCosNode = uniform( 0 );\n\t\tthis.penumbraCosNode = uniform( 0 );\n\n\t\tthis.cutoffDistanceNode = uniform( 0 );\n\t\tthis.decayExponentNode = uniform( 0 );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tsuper.update( frame );\n\n\t\tconst { light } = this;\n\n\t\tthis.coneCosNode.value = Math.cos( light.angle );\n\t\tthis.penumbraCosNode.value = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\n\t\tthis.cutoffDistanceNode.value = light.distance;\n\t\tthis.decayExponentNode.value = light.decay;\n\n\t}\n\n\tgetSpotAttenuation( angleCosine ) {\n\n\t\tconst { coneCosNode, penumbraCosNode } = this;\n\n\t\treturn smoothstep( coneCosNode, penumbraCosNode, angleCosine );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tsuper.setup( builder );\n\n\t\tconst lightingModel = builder.context.lightingModel;\n\n\t\tconst { colorNode, cutoffDistanceNode, decayExponentNode, light } = this;\n\n\t\tconst lVector = objectViewPosition( light ).sub( positionView ); // @TODO: Add it into LightNode\n\n\t\tconst lightDirection = lVector.normalize();\n\t\tconst angleCos = lightDirection.dot( lightTargetDirection( light ) );\n\t\tconst spotAttenuation = this.getSpotAttenuation( angleCos );\n\n\t\tconst lightDistance = lVector.length();\n\n\t\tconst lightAttenuation = getDistanceAttenuation( {\n\t\t\tlightDistance,\n\t\t\tcutoffDistance: cutoffDistanceNode,\n\t\t\tdecayExponent: decayExponentNode\n\t\t} );\n\n\t\tconst lightColor = colorNode.mul( spotAttenuation ).mul( lightAttenuation );\n\n\t\tconst reflectedLight = builder.context.reflectedLight;\n\n\t\tlightingModel.direct( {\n\t\t\tlightDirection,\n\t\t\tlightColor,\n\t\t\treflectedLight\n\t\t}, builder.stack, builder );\n\n\t}\n\n}\n\nexport default SpotLightNode;\n\naddNodeClass( 'SpotLightNode', SpotLightNode );\n\naddLightNode( SpotLight, SpotLightNode );\n","import SpotLightNode from './SpotLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { vec2 } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport IESSpotLight from '../../lights/IESSpotLight.js';\n\nclass IESSpotLightNode extends SpotLightNode {\n\n\tgetSpotAttenuation( angleCosine ) {\n\n\t\tconst iesMap = this.light.iesMap;\n\n\t\tlet spotAttenuation = null;\n\n\t\tif ( iesMap && iesMap.isTexture === true ) {\n\n\t\t\tconst angle = angleCosine.acos().mul( 1.0 / Math.PI );\n\n\t\t\tspotAttenuation = texture( iesMap, vec2( angle, 0 ), 0 ).r;\n\n\t\t} else {\n\n\t\t\tspotAttenuation = super.getSpotAttenuation( angleCosine );\n\n\t\t}\n\n\t\treturn spotAttenuation;\n\n\t}\n\n}\n\nexport default IESSpotLightNode;\n\naddNodeClass( 'IESSpotLightNode', IESSpotLightNode );\n\naddLightNode( IESSpotLight, IESSpotLightNode );\n","import { SpotLight } from 'three';\n\nclass IESSpotLight extends SpotLight {\n\n\tconstructor( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tsuper( color, intensity, distance, angle, penumbra, decay );\n\n\t\tthis.iesMap = null;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.iesMap = source.iesMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default IESSpotLight;\n","import AnalyticLightNode from './AnalyticLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { AmbientLight } from 'three';\n\nclass AmbientLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t}\n\n\tsetup( { context } ) {\n\n\t\tcontext.irradiance.addAssign( this.colorNode );\n\n\t}\n\n}\n\nexport default AmbientLightNode;\n\naddNodeClass( 'AmbientLightNode', AmbientLightNode );\n\naddLightNode( AmbientLight, AmbientLightNode );\n","import AnalyticLightNode from './AnalyticLightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { normalView } from '../accessors/NormalNode.js';\nimport { objectPosition } from '../accessors/Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nimport { Color, HemisphereLight } from 'three';\n\nclass HemisphereLightNode extends AnalyticLightNode {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\tthis.lightPositionNode = objectPosition( light );\n\t\tthis.lightDirectionNode = this.lightPositionNode.normalize();\n\n\t\tthis.groundColorNode = uniform( new Color() );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst { light } = this;\n\n\t\tsuper.update( frame );\n\n\t\tthis.lightPositionNode.object3d = light;\n\n\t\tthis.groundColorNode.value.copy( light.groundColor ).multiplyScalar( light.intensity );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { colorNode, groundColorNode, lightDirectionNode } = this;\n\n\t\tconst dotNL = normalView.dot( lightDirectionNode );\n\t\tconst hemiDiffuseWeight = dotNL.mul( 0.5 ).add( 0.5 );\n\n\t\tconst irradiance = mix( groundColorNode, colorNode, hemiDiffuseWeight );\n\n\t\tbuilder.context.irradiance.addAssign( irradiance );\n\n\t}\n\n}\n\nexport default HemisphereLightNode;\n\naddNodeClass( 'HemisphereLightNode', HemisphereLightNode );\n\naddLightNode( HemisphereLight, HemisphereLightNode );\n","import TempNode from '../core/TempNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy } from '../shadernode/ShaderNode.js';\n\nconst checkerShaderNode = tslFn( ( inputs ) => {\n\n\tconst uv = inputs.uv.mul( 2.0 );\n\n\tconst cx = uv.x.floor();\n\tconst cy = uv.y.floor();\n\tconst result = cx.add( cy ).mod( 2.0 );\n\n\treturn result.sign();\n\n} );\n\nclass CheckerNode extends TempNode {\n\n\tconstructor( uvNode = uv() ) {\n\n\t\tsuper( 'float' );\n\n\t\tthis.uvNode = uvNode;\n\n\t}\n\n\tsetup() {\n\n\t\treturn checkerShaderNode( { uv: this.uvNode } );\n\n\t}\n\n}\n\nexport default CheckerNode;\n\nexport const checker = nodeProxy( CheckerNode );\n\naddNodeElement( 'checker', checker );\n\naddNodeClass( 'CheckerNode', CheckerNode );\n","import { createNodeFromType } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nimport { FileLoader, Loader } from 'three';\n\nclass NodeLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, ( text ) => {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( this.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparseNodes( json ) {\n\n\t\tconst nodes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( const nodeJSON of json ) {\n\n\t\t\t\tconst { uuid, type } = nodeJSON;\n\n\t\t\t\tnodes[ uuid ] = nodeObject( createNodeFromType( type ) ); // @TODO: Maybe nodeObjectify the node in createNodeFromType?\n\t\t\t\tnodes[ uuid ].uuid = uuid;\n\n\t\t\t}\n\n\t\t\tconst meta = { nodes, textures: this.textures };\n\n\t\t\tfor ( const nodeJSON of json ) {\n\n\t\t\t\tnodeJSON.meta = meta;\n\n\t\t\t\tconst node = nodes[ nodeJSON.uuid ];\n\t\t\t\tnode.deserialize( nodeJSON );\n\n\t\t\t\tdelete nodeJSON.meta;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn nodes;\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst node = nodeObject( createNodeFromType( json.type ) );\n\t\tnode.uuid = json.uuid;\n\n\t\tconst nodes = this.parseNodes( json.nodes );\n\t\tconst meta = { nodes, textures: this.textures };\n\n\t\tjson.meta = meta;\n\n\t\tnode.deserialize( json );\n\n\t\tdelete json.meta;\n\n\t\treturn node;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nexport default NodeLoader;\n","import NodeLoader from './NodeLoader.js';\nimport NodeMaterialLoader from './NodeMaterialLoader.js';\nimport { ObjectLoader } from 'three';\n\nclass NodeObjectLoader extends ObjectLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis._nodesJSON = null;\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tthis._nodesJSON = json.nodes;\n\n\t\tconst data = super.parse( json, onLoad );\n\n\t\tthis._nodesJSON = null; // dispose\n\n\t\treturn data;\n\n\t}\n\n\tparseNodes( json, textures ) {\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new NodeLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\treturn loader.parseNodes( json );\n\n\t\t}\n\n\t\treturn {};\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst nodes = this.parseNodes( this._nodesJSON, textures );\n\n\t\t\tconst loader = new NodeMaterialLoader();\n\t\t\tloader.setTextures( textures );\n\t\t\tloader.setNodes( nodes );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n}\n\nexport default NodeObjectLoader;\n","import { MaterialLoader } from 'three';\nimport { createNodeMaterialFromType } from '../materials/Materials.js';\n\nconst superFromTypeFunction = MaterialLoader.createMaterialFromType;\n\nMaterialLoader.createMaterialFromType = function ( type ) {\n\n\tconst material = createNodeMaterialFromType( type );\n\n\tif ( material !== undefined ) {\n\n\t\treturn material;\n\n\t}\n\n\treturn superFromTypeFunction.call( this, type );\n\n};\n\nclass NodeMaterialLoader extends MaterialLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.nodes = {};\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst material = super.parse( json );\n\n\t\tconst nodes = this.nodes;\n\t\tconst inputNodes = json.inputNodes;\n\n\t\tfor ( const property in inputNodes ) {\n\n\t\t\tconst uuid = inputNodes[ property ];\n\n\t\t\tmaterial[ property ] = nodes[ uuid ];\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tsetNodes( value ) {\n\n\t\tthis.nodes = value;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default NodeMaterialLoader;\n","// @TODO: We can simplify \"export { default as SomeNode, other, exports } from '...'\" to just \"export * from '...'\" if we will use only named exports\n\nexport { default as NodeMaterial, addNodeMaterial, createNodeMaterialFromType } from './NodeMaterial.js';\nexport { default as InstancedPointsNodeMaterial } from './InstancedPointsNodeMaterial.js';\nexport { default as LineBasicNodeMaterial } from './LineBasicNodeMaterial.js';\nexport { default as LineDashedNodeMaterial } from './LineDashedNodeMaterial.js';\nexport { default as Line2NodeMaterial } from './Line2NodeMaterial.js';\nexport { default as MeshNormalNodeMaterial } from './MeshNormalNodeMaterial.js';\nexport { default as MeshBasicNodeMaterial } from './MeshBasicNodeMaterial.js';\nexport { default as MeshLambertNodeMaterial } from './MeshLambertNodeMaterial.js';\nexport { default as MeshPhongNodeMaterial } from './MeshPhongNodeMaterial.js';\nexport { default as MeshStandardNodeMaterial } from './MeshStandardNodeMaterial.js';\nexport { default as MeshPhysicalNodeMaterial } from './MeshPhysicalNodeMaterial.js';\nexport { default as MeshSSSNodeMaterial } from './MeshSSSNodeMaterial.js';\nexport { default as PointsNodeMaterial } from './PointsNodeMaterial.js';\nexport { default as SpriteNodeMaterial } from './SpriteNodeMaterial.js';\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { property } from '../core/PropertyNode.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { cameraProjectionMatrix } from '../accessors/CameraNode.js';\nimport { materialColor, materialPointWidth } from '../accessors/MaterialNode.js'; // or should this be a property, instead?\nimport { modelViewMatrix } from '../accessors/ModelNode.js';\nimport { positionGeometry } from '../accessors/PositionNode.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { tslFn, vec2, vec4 } from '../shadernode/ShaderNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { viewport } from '../display/ViewportNode.js';\n\nimport { PointsMaterial } from 'three';\n\nconst defaultValues = new PointsMaterial();\n\nclass InstancedPointsNodeMaterial extends NodeMaterial {\n\n\tconstructor( params = {} ) {\n\n\t\tsuper();\n\n\t\tthis.normals = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.useAlphaToCoverage = true;\n\n\t\tthis.useColor = params.vertexColors;\n\n\t\tthis.pointWidth = 1;\n\n\t\tthis.pointColorNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setupShaders();\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tsetupShaders() {\n\n\t\tconst useAlphaToCoverage = this.alphaToCoverage;\n\t\tconst useColor = this.useColor;\n\n\t\tthis.vertexNode = tslFn( () => {\n\n\t\t\t//vUv = uv;\n\t\t\tvarying( vec2(), 'vUv' ).assign( uv() ); // @TODO: Analyze other way to do this\n\n\t\t\tconst instancePosition = attribute( 'instancePosition' );\n\n\t\t\t// camera space\n\t\t\tconst mvPos = property( 'vec4', 'mvPos' );\n\t\t\tmvPos.assign( modelViewMatrix.mul( vec4( instancePosition, 1.0 ) ) );\n\n\t\t\tconst aspect = viewport.z.div( viewport.w );\n\n\t\t\t// clip space\n\t\t\tconst clipPos = cameraProjectionMatrix.mul( mvPos );\n\n\t\t\t// offset in ndc space\n\t\t\tconst offset = property( 'vec2', 'offset' );\n\t\t\toffset.assign( positionGeometry.xy );\n\t\t\toffset.assign( offset.mul( materialPointWidth ) );\n\t\t\toffset.assign( offset.div( viewport.z ) );\n\t\t\toffset.y.assign( offset.y.mul( aspect ) );\n\n\t\t\t// back to clip space\n\t\t\toffset.assign( offset.mul( clipPos.w ) );\n\n\t\t\t//clipPos.xy += offset;\n\t\t\tclipPos.assign( clipPos.add( vec4( offset, 0, 0 ) ) );\n\n\t\t\treturn clipPos;\n\n\t\t\t//vec4 mvPosition = mvPos; // this was used for somethihng...\n\n\t\t} )();\n\n\t\tthis.fragmentNode = tslFn( () => {\n\n\t\t\tconst vUv = varying( vec2(), 'vUv' );\n\n\t\t\t// force assignment into correct place in flow\n\t\t\tconst alpha = property( 'float', 'alpha' );\n\t\t\talpha.assign( 1 );\n\n\t\t\tconst a = vUv.x;\n\t\t\tconst b = vUv.y;\n\n\t\t\tconst len2 = a.mul( a ).add( b.mul( b ) );\n\n\t\t\tif ( useAlphaToCoverage ) {\n\n\t\t\t\t// force assignment out of following 'if' statement - to avoid uniform control flow errors\n\t\t\t\tconst dlen = property( 'float', 'dlen' );\n\t\t\t\tdlen.assign( len2.fwidth() );\n\n\t\t\t\talpha.assign( smoothstep( dlen.oneMinus(), dlen.add( 1 ), len2 ).oneMinus() );\n\n\t\t\t} else {\n\n\t\t\t\tlen2.greaterThan( 1.0 ).discard();\n\n\t\t\t}\n\n\t\t\tlet pointColorNode;\n\n\t\t\tif ( this.pointColorNode ) {\n\n\t\t\t\tpointColorNode = this.pointColorNode;\n\n\t\t\t} else {\n\n\t\t\t\tif ( useColor ) {\n\n\t\t\t\t\tconst instanceColor = attribute( 'instanceColor' );\n\n\t\t\t\t\tpointColorNode = instanceColor.mul( materialColor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpointColorNode = materialColor;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn vec4( pointColorNode, alpha );\n\n\t\t} )();\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tget alphaToCoverage() {\n\n\t\treturn this.useAlphaToCoverage;\n\n\t}\n\n\tset alphaToCoverage( value ) {\n\n\t\tif ( this.useAlphaToCoverage !== value ) {\n\n\t\t\tthis.useAlphaToCoverage = value;\n\t\t\tthis.setupShaders();\n\n\t\t}\n\n\t}\n\n}\n\nexport default InstancedPointsNodeMaterial;\n\naddNodeMaterial( 'InstancedPointsNodeMaterial', InstancedPointsNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\n\nimport { LineBasicMaterial } from 'three';\n\nconst defaultValues = new LineBasicMaterial();\n\nclass LineBasicNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicNodeMaterial = true;\n\n\t\tthis.lights = false;\n\t\tthis.normals = false;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nexport default LineBasicNodeMaterial;\n\naddNodeMaterial( 'LineBasicNodeMaterial', LineBasicNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { materialLineDashSize, materialLineGapSize, materialLineScale } from '../accessors/MaterialNode.js';\nimport { dashSize, gapSize } from '../core/PropertyNode.js';\nimport { float } from '../shadernode/ShaderNode.js';\nimport { LineDashedMaterial } from 'three';\n\nconst defaultValues = new LineDashedMaterial();\n\nclass LineDashedNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedNodeMaterial = true;\n\n\t\tthis.lights = false;\n\t\tthis.normals = false;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.offsetNode = null;\n\t\tthis.dashScaleNode = null;\n\t\tthis.dashSizeNode = null;\n\t\tthis.gapSizeNode = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupVariants() {\n\n\t\tconst offsetNode = this.offsetNode;\n\t\tconst dashScaleNode = this.dashScaleNode ? float( this.dashScaleNode ) : materialLineScale;\n\t\tconst dashSizeNode = this.dashSizeNode ? float( this.dashSizeNode ) : materialLineDashSize;\n\t\tconst gapSizeNode = this.dashSizeNode ? float( this.dashGapNode ) : materialLineGapSize;\n\n\t\tdashSize.assign( dashSizeNode );\n\t\tgapSize.assign( gapSizeNode );\n\n\t\tconst vLineDistance = varying( attribute( 'lineDistance' ).mul( dashScaleNode ) );\n\t\tconst vLineDistanceOffset = offsetNode ? vLineDistance.add( offsetNode ) : vLineDistance;\n\n\t\tvLineDistanceOffset.mod( dashSize.add( gapSize ) ).greaterThan( dashSize ).discard();\n\n\t}\n\n}\n\nexport default LineDashedNodeMaterial;\n\naddNodeMaterial( 'LineDashedNodeMaterial', LineDashedNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { temp } from '../core/VarNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { property, varyingProperty } from '../core/PropertyNode.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { cameraProjectionMatrix } from '../accessors/CameraNode.js';\nimport { materialColor, materialLineScale, materialLineDashSize, materialLineGapSize, materialLineDashOffset, materialLineWidth } from '../accessors/MaterialNode.js';\nimport { modelViewMatrix } from '../accessors/ModelNode.js';\nimport { positionGeometry } from '../accessors/PositionNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\nimport { tslFn, float, vec2, vec3, vec4, If } from '../shadernode/ShaderNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { viewport } from '../display/ViewportNode.js';\nimport { dashSize, gapSize } from '../core/PropertyNode.js';\n\nimport { LineDashedMaterial } from 'three';\n\nconst defaultValues = new LineDashedMaterial();\n\nclass Line2NodeMaterial extends NodeMaterial {\n\n\tconstructor( params = {} ) {\n\n\t\tsuper();\n\n\t\tthis.normals = false;\n\t\tthis.lights = false;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.useAlphaToCoverage = true;\n\t\tthis.useColor = params.vertexColors;\n\t\tthis.useDash = params.dashed;\n\t\tthis.useWorldUnits = false;\n\n\t\tthis.dashOffset = 0;\n\t\tthis.lineWidth = 1;\n\n\t\tthis.lineColorNode = null;\n\n\t\tthis.offsetNode = null;\n\t\tthis.dashScaleNode = null;\n\t\tthis.dashSizeNode = null;\n\t\tthis.gapSizeNode = null;\n\n\t\tthis.setupShaders();\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tsetupShaders() {\n\n\t\tconst useAlphaToCoverage = this.alphaToCoverage;\n\t\tconst useColor = this.useColor;\n\t\tconst useDash = this.dashed;\n\t\tconst useWorldUnits = this.worldUnits;\n\n\t\tconst trimSegment = tslFn( ( { start, end } ) => {\n\n\t\t\tconst a = cameraProjectionMatrix.element( 2 ).element( 2 ); // 3nd entry in 3th column\n\t\t\tconst b = cameraProjectionMatrix.element( 3 ).element( 2 ); // 3nd entry in 4th column\n\t\t\tconst nearEstimate = b.mul( - 0.5 ).div( a );\n\n\t\t\tconst alpha = nearEstimate.sub( start.z ).div( end.z.sub( start.z ) );\n\n\t\t\treturn vec4( mix( start.xyz, end.xyz, alpha ), end.w );\n\n\t\t} );\n\n\t\tthis.vertexNode = tslFn( () => {\n\n\t\t\tvaryingProperty( 'vec2', 'vUv' ).assign( uv() );\n\n\t\t\tconst instanceStart = attribute( 'instanceStart' );\n\t\t\tconst instanceEnd = attribute( 'instanceEnd' );\n\n\t\t\t// camera space\n\n\t\t\tconst start = property( 'vec4', 'start' );\n\t\t\tconst end = property( 'vec4', 'end' );\n\n\t\t\tstart.assign( modelViewMatrix.mul( vec4( instanceStart, 1.0 ) ) ); // force assignment into correct place in flow\n\t\t\tend.assign( modelViewMatrix.mul( vec4( instanceEnd, 1.0 ) ) );\n\n\t\t\tif ( useWorldUnits ) {\n\n\t\t\t\tvaryingProperty( 'vec3', 'worldStart' ).assign( start.xyz );\n\t\t\t\tvaryingProperty( 'vec3', 'worldEnd' ).assign( end.xyz );\n\n\t\t\t}\n\n\t\t\tconst aspect = viewport.z.div( viewport.w );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tconst perspective = cameraProjectionMatrix.element( 2 ).element( 3 ).equal( - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tIf( perspective, () => {\n\n\t\t\t\tIf( start.z.lessThan( 0.0 ).and( end.z.greaterThan( 0.0 ) ), () => {\n\n\t\t\t\t\tend.assign( trimSegment( { start: start, end: end } ) );\n\n\t\t\t\t} ).elseif( end.z.lessThan( 0.0 ).and( start.z.greaterThanEqual( 0.0 ) ), () => {\n\n\t\t\t\t\tstart.assign( trimSegment( { start: end, end: start } ) );\n\n\t\t\t \t} );\n\n\t\t\t} );\n\n\t\t\t// clip space\n\t\t\tconst clipStart = cameraProjectionMatrix.mul( start );\n\t\t\tconst clipEnd = cameraProjectionMatrix.mul( end );\n\n\t\t\t// ndc space\n\t\t\tconst ndcStart = clipStart.xyz.div( clipStart.w );\n\t\t\tconst ndcEnd = clipEnd.xyz.div( clipEnd.w );\n\n\t\t\t// direction\n\t\t\tconst dir = ndcEnd.xy.sub( ndcStart.xy ).temp();\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x.assign( dir.x.mul( aspect ) );\n\t\t\tdir.assign( dir.normalize() );\n\n\t\t\tconst clip = temp( vec4() );\n\n\t\t\tif ( useWorldUnits ) {\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\n\t\t\t\tconst worldDir = end.xyz.sub( start.xyz ).normalize();\n\t\t\t\tconst tmpFwd = mix( start.xyz, end.xyz, 0.5 ).normalize();\n\t\t\t\tconst worldUp = worldDir.cross( tmpFwd ).normalize();\n\t\t\t\tconst worldFwd = worldDir.cross( worldUp );\n\n\t\t\t\tconst worldPos = varyingProperty( 'vec4', 'worldPos' );\n\n\t\t\t\tworldPos.assign( positionGeometry.y.lessThan( 0.5 ).cond( start, end) );\n\n\t\t\t\t// height offset\n\t\t\t\tconst hw = materialLineWidth.mul( 0.5 );\n\t\t\t\tworldPos.addAssign( vec4( positionGeometry.x.lessThan( 0.0 ).cond( worldUp.mul( hw ), worldUp.mul( hw ).negate() ), 0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\tif ( ! useDash ) {\n\n\t\t\t\t\t// cap extension\n\t\t\t\t\tworldPos.addAssign( vec4( positionGeometry.y.lessThan( 0.5 ).cond( worldDir.mul( hw ).negate(), worldDir.mul( hw ) ), 0 ) );\n\n\t\t\t\t\t// add width to the box\n\t\t\t\t\tworldPos.addAssign( vec4( worldFwd.mul( hw ), 0 ) );\n\n\t\t\t\t\t// endcaps\n\t\t\t\t\tIf( positionGeometry.y.greaterThan( 1.0 ).or( positionGeometry.y.lessThan( 0.0 ) ), () => {\n\n\t\t\t\t\t\tworldPos.subAssign( vec4( worldFwd.mul( 2.0 ).mul( hw ), 0 ) );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\t// project the worldpos\n\t\t\t\tclip.assign( cameraProjectionMatrix.mul( worldPos ) );\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tconst clipPose = temp( vec3() );\n\n\t\t\t\tclipPose.assign( positionGeometry.y.lessThan( 0.5 ).cond( ndcStart, ndcEnd ) );\n\t\t\t\tclip.z.assign( clipPose.z.mul( clip.w ) );\n\n\t\t\t} else {\n\n\t\t\t\tconst offset = property( 'vec2', 'offset' );\n\n\t\t\t\toffset.assign( vec2( dir.y, dir.x.negate() ) );\n\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x.assign( dir.x.div( aspect ) );\n\t\t\t\toffset.x.assign( offset.x.div( aspect ) );\n\n\t\t\t\t// sign flip\n\t\t\t\toffset.assign( positionGeometry.x.lessThan( 0.0 ).cond( offset.negate(), offset ) );\n\n\t\t\t\t// endcaps\n\t\t\t\tIf( positionGeometry.y.lessThan( 0.0 ), () => {\n\n\t\t\t\t\toffset.assign( offset.sub( dir ) );\n\n\t\t\t\t} ).elseif( positionGeometry.y.greaterThan( 1.0 ), () => {\n\n\t\t\t\t\toffset.assign( offset.add( dir ) );\n\n\t\t\t\t} );\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset.assign( offset.mul( materialLineWidth ) );\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset.assign( offset.div( viewport.w ) );\n\n\t\t\t\t// select end\n\t\t\t\tclip.assign( positionGeometry.y.lessThan( 0.5 ).cond( clipStart, clipEnd ) );\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset.assign( offset.mul( clip.w ) );\n\n\t\t\t\tclip.assign( clip.add( vec4( offset, 0, 0 ) ) );\n\n\t\t\t}\n\n\t\t\treturn clip;\n\n\t\t} )();\n\n\t\tconst closestLineToLine = tslFn( ( { p1, p2, p3, p4 } ) => {\n\n\t\t\tconst p13 = p1.sub( p3 );\n\t\t\tconst p43 = p4.sub( p3 );\n\n\t\t\tconst p21 = p2.sub( p1 );\n\n\t\t\tconst d1343 = p13.dot( p43 );\n\t\t\tconst d4321 = p43.dot( p21 );\n\t\t\tconst d1321 = p13.dot( p21 );\n\t\t\tconst d4343 = p43.dot( p43 );\n\t\t\tconst d2121 = p21.dot( p21 );\n\n\t\t\tconst denom = d2121.mul( d4343 ).sub( d4321.mul( d4321 ) );\n\t\t\tconst numer = d1343.mul( d4321 ).sub( d1321.mul( d4343 ) );\n\n\t\t\tconst mua = numer.div( denom ).clamp();\n\t\t\tconst mub = d1343.add( d4321.mul( mua ) ).div( d4343 ).clamp();\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t} );\n\n\t\tthis.fragmentNode = tslFn( () => {\n\n\t\t\tconst vUv = varyingProperty( 'vec2', 'vUv' );\n\n\t\t\tif ( useDash ) {\n\n\t\t\t\tconst offsetNode = this.offsetNode ? float( this.offsetNodeNode ) : materialLineDashOffset;\n\t\t\t\tconst dashScaleNode = this.dashScaleNode ? float( this.dashScaleNode ) : materialLineScale;\n\t\t\t\tconst dashSizeNode = this.dashSizeNode ? float( this.dashSizeNode ) : materialLineDashSize;\n\t\t\t\tconst gapSizeNode = this.dashSizeNode ? float( this.dashGapNode ) : materialLineGapSize;\n\n\t\t\t\tdashSize.assign( dashSizeNode );\n\t\t\t\tgapSize.assign( gapSizeNode );\n\n\t\t\t\tconst instanceDistanceStart = attribute( 'instanceDistanceStart' );\n\t\t\t\tconst instanceDistanceEnd = attribute( 'instanceDistanceEnd' );\n\n\t\t\t\tconst lineDistance = positionGeometry.y.lessThan( 0.5 ).cond( dashScaleNode.mul( instanceDistanceStart ), materialLineScale.mul( instanceDistanceEnd ) );\n\n\t\t\t\tconst vLineDistance = varying( lineDistance.add( materialLineDashOffset ) );\n\t\t\t\tconst vLineDistanceOffset = offsetNode ? vLineDistance.add( offsetNode ) : vLineDistance;\n\n\t\t\t\tvUv.y.lessThan( - 1.0 ).or( vUv.y.greaterThan( 1.0 ) ).discard(); // discard endcaps\n\t\t\t\tvLineDistanceOffset.mod( dashSize.add( gapSize ) ).greaterThan( dashSize ).discard(); // todo - FIX\n\n\t\t\t}\n\n\t\t\t // force assignment into correct place in flow\n\t\t\tconst alpha = property( 'float', 'alpha' );\n\t\t\talpha.assign( 1 );\n\n\t\t\tif ( useWorldUnits ) {\n\n\t\t\t\tconst worldStart = varyingProperty( 'vec3', 'worldStart' );\n\t\t\t\tconst worldEnd = varyingProperty( 'vec3', 'worldEnd' );\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tconst rayEnd = varyingProperty( 'vec4', 'worldPos' ).xyz.normalize().mul( 1e5 );\n\t\t\t\tconst lineDir = worldEnd.sub( worldStart );\n\t\t\t\tconst params = closestLineToLine( { p1: worldStart, p2: worldEnd, p3: vec3( 0.0, 0.0, 0.0 ), p4: rayEnd } );\n\n\t\t\t\tconst p1 = worldStart.add( lineDir.mul( params.x ) );\n\t\t\t\tconst p2 = rayEnd.mul( params.y );\n\t\t\t\tconst delta = p1.sub( p2 );\n\t\t\t\tconst len = delta.length();\n\t\t\t\tconst norm = len.div( materialLineWidth );\n\n\t\t\t\tif ( ! useDash ) {\n\n\t\t\t\t\tif ( useAlphaToCoverage ) {\n\n\t\t\t\t\t\tconst dnorm = norm.fwidth();\n\t\t\t\t\t\talpha.assign( smoothstep( dnorm.negate().add( 0.5 ), dnorm.add( 0.5 ), norm ).oneMinus() );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnorm.greaterThan( 0.5 ).discard();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// round endcaps\n\n\t\t\t\tif ( useAlphaToCoverage ) {\n\n\t\t\t\t\tconst a = vUv.x;\n\t\t\t\t\tconst b = vUv.y.greaterThan( 0.0 ).cond( vUv.y.sub( 1.0 ), vUv.y.add( 1.0 ) );\n\n\t\t\t\t\tconst len2 = a.mul( a ).add( b.mul( b ) );\n\n\t\t\t\t\t// force assignment out of following 'if' statement - to avoid uniform control flow errors\n\t\t\t\t\tconst dlen = property( 'float', 'dlen' );\n\t\t\t\t\tdlen.assign( len2.fwidth() );\n\n\t\t\t\t\tIf( vUv.y.abs().greaterThan( 1.0 ), () => {\n\n\t\t\t\t\t\talpha.assign( smoothstep( dlen.oneMinus(), dlen.add( 1 ), len2 ).oneMinus() );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tIf( vUv.y.abs().greaterThan( 1.0 ), () => {\n\n\t\t\t\t\t\tconst a = vUv.x;\n\t\t\t\t\t\tconst b = vUv.y.greaterThan( 0.0 ).cond( vUv.y.sub( 1.0 ), vUv.y.add( 1.0 ) );\n\t\t\t\t\t\tconst len2 = a.mul( a ).add( b.mul( b ) );\n\n\t\t\t\t\t\tlen2.greaterThan( 1.0 ).discard();\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlet lineColorNode;\n\n\t\t\tif ( this.lineColorNode ) {\n\n\t\t\t\tlineColorNode = this.lineColorNode;\n\n\t\t\t} else {\n\n\t\t\t\tif ( useColor ) {\n\n\t\t\t\t\tconst instanceColorStart = attribute( 'instanceColorStart' );\n\t\t\t\t\tconst instanceColorEnd = attribute( 'instanceColorEnd' );\n\n\t\t\t\t\tconst instanceColor = positionGeometry.y.lessThan( 0.5 ).cond( instanceColorStart, instanceColorEnd );\n\n\t\t\t\t\tlineColorNode = instanceColor.mul( materialColor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlineColorNode = materialColor;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn vec4( lineColorNode, alpha );\n\n\t\t} )();\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\n\tget worldUnits() {\n\n\t\treturn this.useWorldUnits;\n\n\t}\n\n\tset worldUnits( value ) {\n\n\t\tif ( this.useWorldUnits !== value ) {\n\n\t\t\tthis.useWorldUnits = value;\n\t\t\tthis.setupShaders();\n\n\t\t}\n\n\t}\n\n\n\tget dashed() {\n\n\t\treturn this.useDash;\n\n\t}\n\n\tset dashed( value ) {\n\n\t\tif ( this.useDash !== value ) {\n\n\t\t\tthis.useDash = value;\n\t\t\tthis.setupShaders();\n\n\t\t}\n\n\t}\n\n\n\tget alphaToCoverage() {\n\n\t\treturn this.useAlphaToCoverage;\n\n\t}\n\n\tset alphaToCoverage( value ) {\n\n\t\tif ( this.useAlphaToCoverage !== value ) {\n\n\t\t\tthis.useAlphaToCoverage = value;\n\t\t\tthis.setupShaders();\n\n\t\t}\n\n\t}\n\n}\n\nexport default Line2NodeMaterial;\n\naddNodeMaterial( 'Line2NodeMaterial', Line2NodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor } from '../core/PropertyNode.js';\nimport { directionToColor } from '../utils/PackingNode.js';\nimport { materialOpacity } from '../accessors/MaterialNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { float, vec4 } from '../shadernode/ShaderNode.js';\n\nimport { MeshNormalMaterial } from 'three';\n\nconst defaultValues = new MeshNormalMaterial();\n\nclass MeshNormalNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalNodeMaterial = true;\n\n\t\tthis.colorSpaced = false;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupDiffuseColor() {\n\n\t\tconst opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\n\n\t\tdiffuseColor.assign( vec4( directionToColor( transformedNormalView ), opacityNode ) );\n\n\t}\n\n}\n\nexport default MeshNormalNodeMaterial;\n\naddNodeMaterial( 'MeshNormalNodeMaterial', MeshNormalNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\n\nimport { MeshBasicMaterial } from 'three';\n\nconst defaultValues = new MeshBasicMaterial();\n\nclass MeshBasicNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicNodeMaterial = true;\n\n\t\tthis.lights = false;\n\t\t//this.normals = false; @TODO: normals usage by context\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nexport default MeshBasicNodeMaterial;\n\naddNodeMaterial( 'MeshBasicNodeMaterial', MeshBasicNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport PhongLightingModel from '../functions/PhongLightingModel.js';\n\nimport { MeshLambertMaterial } from 'three';\n\nconst defaultValues = new MeshLambertMaterial();\n\nclass MeshLambertNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertNodeMaterial = true;\n\n\t\tthis.lights = true;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new PhongLightingModel( false ); // ( specular ) -> force lambert\n\n\t}\n\n}\n\nexport default MeshLambertNodeMaterial;\n\naddNodeMaterial( 'MeshLambertNodeMaterial', MeshLambertNodeMaterial );\n","import LightingModel from '../core/LightingModel.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport { diffuseColor } from '../core/PropertyNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { materialSpecularStrength } from '../accessors/MaterialNode.js';\nimport { shininess, specularColor } from '../core/PropertyNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { tslFn, float } from '../shadernode/ShaderNode.js';\n\nconst G_BlinnPhong_Implicit = () => float( 0.25 );\n\nconst D_BlinnPhong = tslFn( ( { dotNH } ) => {\n\n\treturn shininess.mul( 0.5 / Math.PI ).add( 1.0 ).mul( dotNH.pow( shininess ) );\n\n} );\n\nconst BRDF_BlinnPhong = tslFn( ( { lightDirection } ) => {\n\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\n\n\tconst dotNH = transformedNormalView.dot( halfDir ).clamp();\n\tconst dotVH = positionViewDirection.dot( halfDir ).clamp();\n\n\tconst F = F_Schlick( { f0: specularColor, f90: 1.0, dotVH } );\n\tconst G = G_BlinnPhong_Implicit();\n\tconst D = D_BlinnPhong( { dotNH } );\n\n\treturn F.mul( G ).mul( D );\n\n} );\n\nclass PhongLightingModel extends LightingModel {\n\n\tconstructor( specular = true ) {\n\n\t\tsuper();\n\n\t\tthis.specular = specular;\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\n\n\t\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\n\t\tconst irradiance = dotNL.mul( lightColor );\n\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\n\n\t\tif ( this.specular === true ) {\n\n\t\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_BlinnPhong( { lightDirection } ) ).mul( materialSpecularStrength ) );\n\n\t\t}\n\n\t}\n\n\tindirectDiffuse( { irradiance, reflectedLight } ) {\n\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\n\n\t}\n\n}\n\nexport default PhongLightingModel;\n","import { tslFn } from '../../shadernode/ShaderNode.js';\n\nconst F_Schlick = tslFn( ( { f0, f90, dotVH } ) => {\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tconst fresnel = dotVH.mul( - 5.55473 ).sub( 6.98316 ).mul( dotVH ).exp2();\n\n\treturn f0.mul( fresnel.oneMinus() ).add( f90.mul( fresnel ) );\n\n} ); // validated\n\nexport default F_Schlick;\n","import { tslFn } from '../../shadernode/ShaderNode.js';\n\nconst BRDF_Lambert = tslFn( ( inputs ) => {\n\n\treturn inputs.diffuseColor.mul( 1 / Math.PI ); // punctual light\n\n} ); // validated\n\nexport default BRDF_Lambert;\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { shininess, specularColor } from '../core/PropertyNode.js';\nimport { materialShininess, materialSpecularColor } from '../accessors/MaterialNode.js';\nimport { float } from '../shadernode/ShaderNode.js';\nimport PhongLightingModel from '../functions/PhongLightingModel.js';\n\nimport { MeshPhongMaterial } from 'three';\n\nconst defaultValues = new MeshPhongMaterial();\n\nclass MeshPhongNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongNodeMaterial = true;\n\n\t\tthis.lights = true;\n\n\t\tthis.shininessNode = null;\n\t\tthis.specularNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new PhongLightingModel();\n\n\t}\n\n\tsetupVariants() {\n\n\t\t// SHININESS\n\n\t\tconst shininessNode = ( this.shininessNode ? float( this.shininessNode ) : materialShininess ).max( 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tshininess.assign( shininessNode );\n\n\t\t// SPECULAR COLOR\n\n\t\tconst specularNode = this.specularNode || materialSpecularColor;\n\n\t\tspecularColor.assign( specularNode );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.shininessNode = source.shininessNode;\n\t\tthis.specularNode = source.specularNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshPhongNodeMaterial;\n\naddNodeMaterial( 'MeshPhongNodeMaterial', MeshPhongNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor, metalness, roughness, specularColor } from '../core/PropertyNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { materialRoughness, materialMetalness } from '../accessors/MaterialNode.js';\nimport getRoughness from '../functions/material/getRoughness.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport { float, vec3, vec4 } from '../shadernode/ShaderNode.js';\n\nimport { MeshStandardMaterial } from 'three';\n\nconst defaultValues = new MeshStandardMaterial();\n\nclass MeshStandardNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardNodeMaterial = true;\n\n\t\tthis.emissiveNode = null;\n\n\t\tthis.metalnessNode = null;\n\t\tthis.roughnessNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new PhysicalLightingModel();\n\n\t}\n\n\tsetupVariants() {\n\n\t\t// METALNESS\n\n\t\tconst metalnessNode = this.metalnessNode ? float( this.metalnessNode ) : materialMetalness;\n\n\t\tmetalness.assign( metalnessNode );\n\n\t\t// ROUGHNESS\n\n\t\tlet roughnessNode = this.roughnessNode ? float( this.roughnessNode ) : materialRoughness;\n\t\troughnessNode = getRoughness( { roughness: roughnessNode } );\n\n\t\troughness.assign( roughnessNode );\n\n\t\t// SPECULAR COLOR\n\n\t\tconst specularColorNode = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessNode );\n\n\t\tspecularColor.assign( specularColorNode );\n\n\t\t// DIFFUSE COLOR\n\n\t\tdiffuseColor.assign( vec4( diffuseColor.rgb.mul( metalnessNode.oneMinus() ), diffuseColor.a ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.emissiveNode = source.emissiveNode;\n\n\t\tthis.metalnessNode = source.metalnessNode;\n\t\tthis.roughnessNode = source.roughnessNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshStandardNodeMaterial;\n\naddNodeMaterial( 'MeshStandardNodeMaterial', MeshStandardNodeMaterial );\n","import getGeometryRoughness from './getGeometryRoughness.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\nconst getRoughness = tslFn( ( inputs ) => {\n\n\tconst { roughness } = inputs;\n\n\tconst geometryRoughness = getGeometryRoughness();\n\n\tlet roughnessFactor = roughness.max( 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.\n\troughnessFactor = roughnessFactor.add( geometryRoughness );\n\troughnessFactor = roughnessFactor.min( 1.0 );\n\n\treturn roughnessFactor;\n\n} );\n\nexport default getRoughness;\n","import { normalGeometry } from '../../accessors/NormalNode.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\nconst getGeometryRoughness = tslFn( () => {\n\n\tconst dxy = normalGeometry.dFdx().abs().max( normalGeometry.dFdy().abs() );\n\tconst geometryRoughness = dxy.x.max( dxy.y ).max( dxy.z );\n\n\treturn geometryRoughness;\n\n} );\n\nexport default getGeometryRoughness;\n","import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\nimport LightingModel from '../core/LightingModel.js';\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { tslFn, float, vec3, mat3 } from '../shadernode/ShaderNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\n\n//\n// Iridescence\n//\n\n// XYZ to linear-sRGB color space\nconst XYZ_TO_REC709 = mat3(\n\t3.2404542, - 0.9692660, 0.0556434,\n\t- 1.5371385, 1.8760108, - 0.2040259,\n\t- 0.4985314, 0.0415560, 1.0572252\n);\n\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nconst Fresnel0ToIor = ( fresnel0 ) => {\n\n\tconst sqrtF0 = fresnel0.sqrt();\n\treturn vec3( 1.0 ).add( sqrtF0 ).div( vec3( 1.0 ).sub( sqrtF0 ) );\n\n};\n\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nconst IorToFresnel0 = ( transmittedIor, incidentIor ) => {\n\n\treturn transmittedIor.sub( incidentIor ).div( transmittedIor.add( incidentIor ) ).pow2();\n\n};\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nconst evalSensitivity = ( OPD, shift ) => {\n\n\tconst phase = OPD.mul( 2.0 * Math.PI * 1.0e-9 );\n\tconst val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\tconst pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\tconst VAR = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\n\tconst x = float( 9.7470e-14 * Math.sqrt( 2.0 * Math.PI * 4.5282e+09 ) ).mul( phase.mul( 2.2399e+06 ).add( shift.x ).cos() ).mul( phase.pow2().mul( - 4.5282e+09 ).exp() );\n\n\tlet xyz = val.mul( VAR.mul( 2.0 * Math.PI ).sqrt() ).mul( pos.mul( phase ).add( shift ).cos() ).mul( phase.pow2().negate().mul( VAR ).exp() );\n\txyz = vec3( xyz.x.add( x ), xyz.y, xyz.z ).div( 1.0685e-7 );\n\n\tconst rgb = XYZ_TO_REC709.mul( xyz );\n\n\treturn rgb;\n\n};\n\nconst evalIridescence = tslFn( ( { outsideIOR, eta2, cosTheta1, thinFilmThickness, baseF0 } ) => {\n\n\t// Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n\tconst iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t// Evaluate the cosTheta on the base layer (Snell law)\n\tconst sinTheta2Sq = outsideIOR.div( iridescenceIOR ).pow2().mul( float( 1 ).sub( cosTheta1.pow2() ) );\n\n\t// Handle TIR:\n\tconst cosTheta2Sq = float( 1 ).sub( sinTheta2Sq );\n\t/*if ( cosTheta2Sq < 0.0 ) {\n\n\t\t\treturn vec3( 1.0 );\n\n\t}*/\n\n\tconst cosTheta2 = cosTheta2Sq.sqrt();\n\n\t// First interface\n\tconst R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\tconst R12 = F_Schlick( { f0: R0, f90: 1.0, dotVH: cosTheta1 } );\n\t//const R21 = R12;\n\tconst T121 = R12.oneMinus();\n\tconst phi12 = iridescenceIOR.lessThan( outsideIOR ).cond( Math.PI, 0.0 );\n\tconst phi21 = float( Math.PI ).sub( phi12 );\n\n\t// Second interface\n\tconst baseIOR = Fresnel0ToIor( baseF0.clamp( 0.0, 0.9999 ) ); // guard against 1.0\n\tconst R1 = IorToFresnel0( baseIOR, iridescenceIOR.vec3() );\n\tconst R23 = F_Schlick( { f0: R1, f90: 1.0, dotVH: cosTheta2 } );\n\tconst phi23 = vec3(\n\t\tbaseIOR.x.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.y.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.z.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 )\n\t);\n\n\t// Phase shift\n\tconst OPD = iridescenceIOR.mul( thinFilmThickness, cosTheta2, 2.0 );\n\tconst phi = vec3( phi21 ).add( phi23 );\n\n\t// Compound terms\n\tconst R123 = R12.mul( R23 ).clamp( 1e-5, 0.9999 );\n\tconst r123 = R123.sqrt();\n\tconst Rs = T121.pow2().mul( R23 ).div( vec3( 1.0 ).sub( R123 ) );\n\n\t// Reflectance term for m = 0 (DC term amplitude)\n\tconst C0 = R12.add( Rs );\n\tlet I = C0;\n\n\t// Reflectance term for m > 0 (pairs of diracs)\n\tlet Cm = Rs.sub( T121 );\n\tfor ( let m = 1; m <= 2; ++ m ) {\n\n\t\tCm = Cm.mul( r123 );\n\t\tconst Sm = evalSensitivity( float( m ).mul( OPD ), float( m ).mul( phi ) ).mul( 2.0 );\n\t\tI = I.add( Cm.mul( Sm ) );\n\n\t}\n\n\t// Since out of gamut colors might be produced, negative color values are clamped to 0.\n\treturn I.max( vec3( 0.0 ) );\n\n} ).setLayout( {\n\tname: 'evalIridescence',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'outsideIOR', type: 'float' },\n\t\t{ name: 'eta2', type: 'float' },\n\t\t{ name: 'cosTheta1', type: 'float' },\n\t\t{ name: 'thinFilmThickness', type: 'float' },\n\t\t{ name: 'baseF0', type: 'vec3' }\n\t]\n} );\n\n//\n//\tSheen\n//\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nconst IBLSheenBRDF = tslFn( ( { normal, viewDir, roughness } ) => {\n\n\tconst dotNV = normal.dot( viewDir ).saturate();\n\n\tconst r2 = roughness.pow2();\n\n\tconst a = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( - 339.2 ).mul( r2 ).add( float( 161.4 ).mul( roughness ) ).sub( 25.9 ),\n\t\tfloat( - 8.48 ).mul( r2 ).add( float( 14.3 ).mul( roughness ) ).sub( 9.95 )\n\t);\n\n\tconst b = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( 44.0 ).mul( r2 ).sub( float( 23.7 ).mul( roughness ) ).add( 3.26 ),\n\t\tfloat( 1.97 ).mul( r2 ).sub( float( 3.27 ).mul( roughness ) ).add( 0.72 )\n\t);\n\n\tconst DG = cond( roughness.lessThan( 0.25 ), 0.0, float( 0.1 ).mul( roughness ).sub( 0.025 ) ).add( a.mul( dotNV ).add( b ).exp() );\n\n\treturn DG.mul( 1.0 / Math.PI ).saturate();\n\n} );\n\nconst clearcoatF0 = vec3( 0.04 );\nconst clearcoatF90 = vec3( 1 );\n\n//\n\nclass PhysicalLightingModel extends LightingModel {\n\n\tconstructor( clearcoat = false, sheen = false, iridescence = false ) {\n\n\t\tsuper();\n\n\t\tthis.clearcoat = clearcoat;\n\t\tthis.sheen = sheen;\n\t\tthis.iridescence = iridescence;\n\n\t\tthis.clearcoatRadiance = null;\n\t\tthis.clearcoatSpecularDirect = null;\n\t\tthis.clearcoatSpecularIndirect = null;\n\t\tthis.sheenSpecularDirect = null;\n\t\tthis.sheenSpecularIndirect = null;\n\t\tthis.iridescenceFresnel = null;\n\t\tthis.iridescenceF0 = null;\n\n\t}\n\n\tstart( /*context*/ ) {\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tthis.clearcoatRadiance = vec3().temp( 'clearcoatRadiance' );\n\t\t\tthis.clearcoatSpecularDirect = vec3().temp( 'clearcoatSpecularDirect' );\n\t\t\tthis.clearcoatSpecularIndirect = vec3().temp( 'clearcoatSpecularIndirect' );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularDirect = vec3().temp( 'sheenSpecularDirect' );\n\t\t\tthis.sheenSpecularIndirect = vec3().temp( 'sheenSpecularIndirect' );\n\n\t\t}\n\n\t\tif ( this.iridescence === true ) {\n\n\t\t\tconst dotNVi = transformedNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tthis.iridescenceFresnel = evalIridescence( {\n\t\t\t\toutsideIOR: float( 1.0 ),\n\t\t\t\teta2: iridescenceIOR,\n\t\t\t\tcosTheta1: dotNVi,\n\t\t\t\tthinFilmThickness: iridescenceThickness,\n\t\t\t\tbaseF0: specularColor\n\t\t\t} );\n\n\t\t\tthis.iridescenceF0 = Schlick_to_F0( { f: this.iridescenceFresnel, f90: 1.0, dotVH: dotNVi } );\n\n\t\t}\n\n\t}\n\n\t// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n\t// Approximates multiscattering in order to preserve energy.\n\t// http://www.jcgt.org/published/0008/01/03/\n\n\tcomputeMultiscattering( singleScatter, multiScatter, specularF90 = float( 1 ) ) {\n\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\n\t\tconst fab = DFGApprox( { roughness, dotNV } );\n\n\t\tconst Fr = this.iridescenceF0 ? iridescence.mix( specularColor, this.iridescenceF0 ) : specularColor;\n\n\t\tconst FssEss = Fr.mul( fab.x ).add( specularF90.mul( fab.y ) );\n\n\t\tconst Ess = fab.x.add( fab.y );\n\t\tconst Ems = Ess.oneMinus();\n\n\t\tconst Favg = specularColor.add( specularColor.oneMinus().mul( 0.047619 ) ); // 1/21\n\t\tconst Fms = FssEss.mul( Favg ).div( Ems.mul( Favg ).oneMinus() );\n\n\t\tsingleScatter.addAssign( FssEss );\n\t\tmultiScatter.addAssign( Fms.mul( Ems ) );\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\n\n\t\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\n\t\tconst irradiance = dotNL.mul( lightColor );\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularDirect.addAssign( irradiance.mul( BRDF_Sheen( { lightDirection } ) ) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNLcc = transformedClearcoatNormalView.dot( lightDirection ).clamp();\n\t\t\tconst ccIrradiance = dotNLcc.mul( lightColor );\n\n\t\t\tthis.clearcoatSpecularDirect.addAssign( ccIrradiance.mul( BRDF_GGX( { lightDirection, f0: clearcoatF0, f90: clearcoatF90, roughness: clearcoatRoughness, normalView: transformedClearcoatNormalView } ) ) );\n\n\t\t}\n\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\n\n\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_GGX( { lightDirection, f0: specularColor, f90: 1, roughness, iridescence: this.iridescence, iridescenceFresnel: this.iridescenceFresnel } ) ) );\n\n\t}\n\n\tindirectDiffuse( { irradiance, reflectedLight } ) {\n\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\n\n\t}\n\n\tindirectSpecular( { radiance, iblIrradiance, reflectedLight } ) {\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularIndirect.addAssign( iblIrradiance.mul(\n\t\t\t\tsheen,\n\t\t\t\tIBLSheenBRDF( {\n\t\t\t\t\tnormal: transformedNormalView,\n\t\t\t\t\tviewDir: positionViewDirection,\n\t\t\t\t\troughness: sheenRoughness\n\t\t\t\t} )\n\t\t\t) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst clearcoatEnv = EnvironmentBRDF( {\n\t\t\t\tdotNV: dotNVcc,\n\t\t\t\tspecularColor: clearcoatF0,\n\t\t\t\tspecularF90: clearcoatF90,\n\t\t\t\troughness: clearcoatRoughness\n\t\t\t} );\n\n\t\t\tthis.clearcoatSpecularIndirect.addAssign( this.clearcoatRadiance.mul( clearcoatEnv ) );\n\n\t\t}\n\n\t\t// Both indirect specular and indirect diffuse light accumulate here\n\n\t\tconst singleScattering = vec3().temp( 'singleScattering' );\n\t\tconst multiScattering = vec3().temp( 'multiScattering' );\n\t\tconst cosineWeightedIrradiance = iblIrradiance.mul( 1 / Math.PI );\n\n\t\tthis.computeMultiscattering( singleScattering, multiScattering );\n\n\t\tconst totalScattering = singleScattering.add( multiScattering );\n\n\t\tconst diffuse = diffuseColor.mul( totalScattering.r.max( totalScattering.g ).max( totalScattering.b ).oneMinus() );\n\n\t\treflectedLight.indirectSpecular.addAssign( radiance.mul( singleScattering ) );\n\t\treflectedLight.indirectSpecular.addAssign( multiScattering.mul( cosineWeightedIrradiance ) );\n\n\t\treflectedLight.indirectDiffuse.addAssign( diffuse.mul( cosineWeightedIrradiance ) );\n\n\t}\n\n\tambientOcclusion( { ambientOcclusion, reflectedLight } ) {\n\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\n\t\tconst aoNV = dotNV.add( ambientOcclusion );\n\t\tconst aoExp = roughness.mul( - 16.0 ).oneMinus().negate().exp2();\n\n\t\tconst aoNode = ambientOcclusion.sub( aoNV.pow( aoExp ).oneMinus() ).clamp();\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tthis.clearcoatSpecularIndirect.mulAssign( ambientOcclusion );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecularIndirect.mulAssign( ambientOcclusion );\n\n\t\t}\n\n\t\treflectedLight.indirectDiffuse.mulAssign( ambientOcclusion );\n\t\treflectedLight.indirectSpecular.mulAssign( aoNode );\n\n\t}\n\n\tfinish( context ) {\n\n\t\tconst { outgoingLight } = context;\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst Fcc = F_Schlick( {\n\t\t\t\tdotVH: dotNVcc,\n\t\t\t\tf0: clearcoatF0,\n\t\t\t\tf90: clearcoatF90\n\t\t\t} );\n\n\t\t\tconst clearcoatLight = outgoingLight.mul( clearcoat.mul( Fcc ).oneMinus() ).add( this.clearcoatSpecularDirect.add( this.clearcoatSpecularIndirect ).mul( clearcoat ) );\n\n\t\t\toutgoingLight.assign( clearcoatLight );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tconst sheenEnergyComp = sheen.r.max( sheen.g ).max( sheen.b ).mul( 0.157 ).oneMinus();\n\t\t\tconst sheenLight = outgoingLight.mul( sheenEnergyComp ).add( this.sheenSpecularDirect, this.sheenSpecularIndirect );\n\n\t\t\toutgoingLight.assign( sheenLight );\n\n\t\t}\n\n\t}\n\n}\n\nexport default PhysicalLightingModel;\n","import F_Schlick from './F_Schlick.js';\nimport V_GGX_SmithCorrelated from './V_GGX_SmithCorrelated.js';\nimport D_GGX from './D_GGX.js';\nimport { transformedNormalView } from '../../accessors/NormalNode.js';\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\nimport { iridescence } from '../../core/PropertyNode.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nconst BRDF_GGX = tslFn( ( inputs ) => {\n\n\tconst { lightDirection, f0, f90, roughness, iridescenceFresnel } = inputs;\n\n\tconst normalView = inputs.normalView || transformedNormalView;\n\n\tconst alpha = roughness.pow2(); // UE4's roughness\n\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\n\n\tconst dotNL = normalView.dot( lightDirection ).clamp();\n\tconst dotNV = normalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\tconst dotNH = normalView.dot( halfDir ).clamp();\n\tconst dotVH = positionViewDirection.dot( halfDir ).clamp();\n\n\tlet F = F_Schlick( { f0, f90, dotVH } );\n\n\tif ( iridescenceFresnel ) {\n\n\t\tF = iridescence.mix( F, iridescenceFresnel );\n\n\t}\n\n\tconst V = V_GGX_SmithCorrelated( { alpha, dotNL, dotNV } );\n\tconst D = D_GGX( { alpha, dotNH } );\n\n\treturn F.mul( V ).mul( D );\n\n} ); // validated\n\nexport default BRDF_GGX;\n","import { div } from '../../math/OperatorNode.js';\nimport { EPSILON } from '../../math/MathNode.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nconst V_GGX_SmithCorrelated = tslFn( ( inputs ) => {\n\n\tconst { alpha, dotNL, dotNV } = inputs;\n\n\tconst a2 = alpha.pow2();\n\n\tconst gv = dotNL.mul( a2.add( a2.oneMinus().mul( dotNV.pow2() ) ).sqrt() );\n\tconst gl = dotNV.mul( a2.add( a2.oneMinus().mul( dotNL.pow2() ) ).sqrt() );\n\n\treturn div( 0.5, gv.add( gl ).max( EPSILON ) );\n\n} ).setLayout( {\n\tname: 'V_GGX_SmithCorrelated',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'alpha', type: 'float' },\n\t\t{ name: 'dotNL', type: 'float' },\n\t\t{ name: 'dotNV', type: 'float' }\n\t]\n} ); // validated\n\nexport default V_GGX_SmithCorrelated;\n","import { tslFn } from '../../shadernode/ShaderNode.js';\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst D_GGX = tslFn( ( { alpha, dotNH } ) => {\n\n\tconst a2 = alpha.pow2();\n\n\tconst denom = dotNH.pow2().mul( a2.oneMinus() ).oneMinus(); // avoid alpha = 0 with dotNH = 1\n\n\treturn a2.div( denom.pow2() ).mul( 1 / Math.PI );\n\n} ).setLayout( {\n\tname: 'D_GGX',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'alpha', type: 'float' },\n\t\t{ name: 'dotNH', type: 'float' }\n\t]\n} ); // validated\n\nexport default D_GGX;\n","import { tslFn, vec2, vec4 } from '../../shadernode/ShaderNode.js';\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\nconst DFGApprox = tslFn( ( { roughness, dotNV } ) => {\n\n\tconst c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tconst r = roughness.mul( c0 ).add( c1 );\n\n\tconst a004 = r.x.mul( r.x ).min( dotNV.mul( - 9.28 ).exp2() ).mul( r.x ).add( r.y );\n\n\tconst fab = vec2( - 1.04, 1.04 ).mul( a004 ).add( r.zw );\n\n\treturn fab;\n\n} ).setLayout( {\n\tname: 'DFGApprox',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'roughness', type: 'float' },\n\t\t{ name: 'dotNV', type: 'vec3' }\n\t]\n} );\n\nexport default DFGApprox;\n","import DFGApprox from './DFGApprox.js';\nimport { tslFn } from '../../shadernode/ShaderNode.js';\n\nconst EnvironmentBRDF = tslFn( ( inputs ) => {\n\n\tconst { dotNV, specularColor, specularF90, roughness } = inputs;\n\n\tconst fab = DFGApprox( { dotNV, roughness } );\n\treturn specularColor.mul( fab.x ).add( specularF90.mul( fab.y ) );\n\n} );\n\nexport default EnvironmentBRDF;\n","import { tslFn, vec3 } from '../../shadernode/ShaderNode.js';\n\nconst Schlick_to_F0 = tslFn( ( { f, f90, dotVH } ) => {\n\n\tconst x = dotVH.oneMinus().saturate();\n\tconst x2 = x.mul( x );\n\tconst x5 = x.mul( x2, x2 ).clamp( 0, .9999 );\n\n\treturn f.sub( vec3( f90 ).mul( x5 ) ).div( x5.oneMinus() );\n\n} ).setLayout( {\n\tname: 'Schlick_to_F0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'f', type: 'vec3' },\n\t\t{ name: 'f90', type: 'float' },\n\t\t{ name: 'dotVH', type: 'float' }\n\t]\n} );\n\nexport default Schlick_to_F0;\n","import { transformedNormalView } from '../../accessors/NormalNode.js';\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\nimport { sheen, sheenRoughness } from '../../core/PropertyNode.js';\nimport { tslFn, float } from '../../shadernode/ShaderNode.js';\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nconst D_Charlie = tslFn( ( { roughness, dotNH } ) => {\n\n\tconst alpha = roughness.pow2();\n\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n\tconst invAlpha = float( 1.0 ).div( alpha );\n\tconst cos2h = dotNH.pow2();\n\tconst sin2h = cos2h.oneMinus().max( 0.0078125 ); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\n\treturn float( 2.0 ).add( invAlpha ).mul( sin2h.pow( invAlpha.mul( 0.5 ) ) ).div( 2.0 * Math.PI );\n\n} ).setLayout( {\n\tname: 'D_Charlie',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'roughness', type: 'float' },\n\t\t{ name: 'dotNH', type: 'float' }\n\t]\n} );\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nconst V_Neubelt = tslFn( ( { dotNV, dotNL } ) => {\n\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n\treturn float( 1.0 ).div( float( 4.0 ).mul( dotNL.add( dotNV ).sub( dotNL.mul( dotNV ) ) ) );\n\n} ).setLayout( {\n\tname: 'V_Neubelt',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'dotNV', type: 'float' },\n\t\t{ name: 'dotNL', type: 'float' }\n\t]\n} );\n\nconst BRDF_Sheen = tslFn( ( { lightDirection } ) => {\n\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\n\n\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\n\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp();\n\tconst dotNH = transformedNormalView.dot( halfDir ).clamp();\n\n\tconst D = D_Charlie( { roughness: sheenRoughness, dotNH } );\n\tconst V = V_Neubelt( { dotNV, dotNL } );\n\n\treturn sheen.mul( D ).mul( V );\n\n} );\n\nexport default BRDF_Sheen;\n","import { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { materialClearcoat, materialClearcoatRoughness, materialClearcoatNormal, materialSheen, materialSheenRoughness, materialIridescence, materialIridescenceIOR, materialIridescenceThickness } from '../accessors/MaterialNode.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshStandardNodeMaterial from './MeshStandardNodeMaterial.js';\n\nimport { MeshPhysicalMaterial } from 'three';\n\nconst defaultValues = new MeshPhysicalMaterial();\n\nclass MeshPhysicalNodeMaterial extends MeshStandardNodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalNodeMaterial = true;\n\n\t\tthis.clearcoatNode = null;\n\t\tthis.clearcoatRoughnessNode = null;\n\t\tthis.clearcoatNormalNode = null;\n\n\t\tthis.sheenNode = null;\n\t\tthis.sheenRoughnessNode = null;\n\n\t\tthis.iridescenceNode = null;\n\t\tthis.iridescenceIORNode = null;\n\t\tthis.iridescenceThicknessNode = null;\n\n\t\tthis.specularIntensityNode = null;\n\t\tthis.specularColorNode = null;\n\n\t\tthis.transmissionNode = null;\n\t\tthis.thicknessNode = null;\n\t\tthis.attenuationDistanceNode = null;\n\t\tthis.attenuationColorNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget useClearcoat() {\n\n\t\treturn this.clearcoat > 0 || this.clearcoatNode !== null;\n\n\t}\n\n\tget useIridescence() {\n\n\t\treturn this.iridescence > 0 || this.iridescenceNode !== null;\n\n\t}\n\n\tget useSheen() {\n\n\t\treturn this.sheen > 0 || this.sheenNode !== null;\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new PhysicalLightingModel( this.useClearcoat, this.useSheen, this.useIridescence );\n\n\t}\n\n\tsetupVariants( builder ) {\n\n\t\tsuper.setupVariants( builder );\n\n\t\t// CLEARCOAT\n\n\t\tif ( this.useClearcoat ) {\n\n\t\t\tconst clearcoatNode = this.clearcoatNode ? float( this.clearcoatNode ) : materialClearcoat;\n\t\t\tconst clearcoatRoughnessNode = this.clearcoatRoughnessNode ? float( this.clearcoatRoughnessNode ) : materialClearcoatRoughness;\n\n\t\t\tclearcoat.assign( clearcoatNode );\n\t\t\tclearcoatRoughness.assign( clearcoatRoughnessNode );\n\n\t\t}\n\n\t\t// SHEEN\n\n\t\tif ( this.useSheen ) {\n\n\t\t\tconst sheenNode = this.sheenNode ? vec3( this.sheenNode ) : materialSheen;\n\t\t\tconst sheenRoughnessNode = this.sheenRoughnessNode ? float( this.sheenRoughnessNode ) : materialSheenRoughness;\n\n\t\t\tsheen.assign( sheenNode );\n\t\t\tsheenRoughness.assign( sheenRoughnessNode );\n\n\t\t}\n\n\t\t// IRIDESCENCE\n\n\t\tif ( this.useIridescence ) {\n\n\t\t\tconst iridescenceNode = this.iridescenceNode ? float( this.iridescenceNode ) : materialIridescence;\n\t\t\tconst iridescenceIORNode = this.iridescenceIORNode ? float( this.iridescenceIORNode ) : materialIridescenceIOR;\n\t\t\tconst iridescenceThicknessNode = this.iridescenceThicknessNode ? float( this.iridescenceThicknessNode ) : materialIridescenceThickness;\n\n\t\t\tiridescence.assign( iridescenceNode );\n\t\t\tiridescenceIOR.assign( iridescenceIORNode );\n\t\t\tiridescenceThickness.assign( iridescenceThicknessNode );\n\n\t\t}\n\n\t}\n\n\tsetupNormal( builder ) {\n\n\t\tsuper.setupNormal( builder );\n\n\t\t// CLEARCOAT NORMAL\n\n\t\tconst clearcoatNormalNode = this.clearcoatNormalNode ? vec3( this.clearcoatNormalNode ) : materialClearcoatNormal;\n\n\t\ttransformedClearcoatNormalView.assign( clearcoatNormalNode );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.clearcoatNode = source.clearcoatNode;\n\t\tthis.clearcoatRoughnessNode = source.clearcoatRoughnessNode;\n\t\tthis.clearcoatNormalNode = source.clearcoatNormalNode;\n\n\t\tthis.sheenNode = source.sheenNode;\n\t\tthis.sheenRoughnessNode = source.sheenRoughnessNode;\n\n\t\tthis.iridescenceNode = source.iridescenceNode;\n\t\tthis.iridescenceIORNode = source.iridescenceIORNode;\n\t\tthis.iridescenceThicknessNode = source.iridescenceThicknessNode;\n\n\t\tthis.specularIntensityNode = source.specularIntensityNode;\n\t\tthis.specularColorNode = source.specularColorNode;\n\n\t\tthis.transmissionNode = source.transmissionNode;\n\t\tthis.thicknessNode = source.thicknessNode;\n\t\tthis.attenuationDistanceNode = source.attenuationDistanceNode;\n\t\tthis.attenuationColorNode = source.attenuationColorNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshPhysicalNodeMaterial;\n\naddNodeMaterial( 'MeshPhysicalNodeMaterial', MeshPhysicalNodeMaterial );\n","import { addNodeMaterial } from './NodeMaterial.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport PhysicalLightingModel from '../functions/PhysicalLightingModel.js';\nimport MeshPhysicalNodeMaterial from './MeshPhysicalNodeMaterial.js';\nimport { float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass SSSLightingModel extends PhysicalLightingModel {\n\n\tconstructor( useClearcoat, useSheen, useIridescence, useSSS ) {\n\n\t\tsuper( useClearcoat, useSheen, useIridescence );\n\n\t\tthis.useSSS = useSSS;\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight }, stack, builder ) {\n\n\t\tif ( this.useSSS === true ) {\n\n\t\t\tconst material = builder.material;\n\n\t\t\tconst { thicknessColorNode, thicknessDistortionNode, thicknessAmbientNode, thicknessAttenuationNode, thicknessPowerNode, thicknessScaleNode } = material;\n\n\t\t\tconst scatteringHalf = lightDirection.add( transformedNormalView.mul( thicknessDistortionNode ) ).normalize();\n\t\t\tconst scatteringDot = float( positionViewDirection.dot( scatteringHalf.negate() ).saturate().pow( thicknessPowerNode ).mul( thicknessScaleNode ) );\n\t\t\tconst scatteringIllu = vec3( scatteringDot.add( thicknessAmbientNode ).mul( thicknessColorNode ) );\n\n\t\t\treflectedLight.directDiffuse.addAssign( scatteringIllu.mul( thicknessAttenuationNode.mul( lightColor ) ) );\n\n\t\t}\n\n\t\tsuper.direct( { lightDirection, lightColor, reflectedLight }, stack, builder );\n\n\t}\n\n}\n\nclass MeshSSSNodeMaterial extends MeshPhysicalNodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.thicknessColorNode = null;\n\t\tthis.thicknessDistortionNode = float( 0.1 );\n\t\tthis.thicknessAmbientNode = float( 0.0 );\n\t\tthis.thicknessAttenuationNode = float( .1 );\n\t\tthis.thicknessPowerNode = float( 2.0 );\n\t\tthis.thicknessScaleNode = float( 10.0 );\n\n\t}\n\n\tget useSSS() {\n\n\t\treturn this.thicknessColorNode !== null;\n\n\t}\n\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new SSSLightingModel( this.useClearcoat, this.useSheen, this.useIridescence, this.useSSS );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.thicknessColorNode = source.thicknessColorNode;\n\t\tthis.thicknessDistortionNode = source.thicknessDistortionNode;\n\t\tthis.thicknessAmbientNode = source.thicknessAmbientNode;\n\t\tthis.thicknessAttenuationNode = source.thicknessAttenuationNode;\n\t\tthis.thicknessPowerNode = source.thicknessPowerNode;\n\t\tthis.thicknessScaleNode = source.thicknessScaleNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default MeshSSSNodeMaterial;\n\naddNodeMaterial( 'MeshSSSNodeMaterial', MeshSSSNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\n\nimport { PointsMaterial } from 'three';\n\nconst defaultValues = new PointsMaterial();\n\nclass PointsNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsNodeMaterial = true;\n\n\t\tthis.lights = false;\n\t\tthis.normals = false;\n\t\tthis.transparent = true;\n\n\t\tthis.sizeNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.sizeNode = source.sizeNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default PointsNodeMaterial;\n\naddNodeMaterial( 'PointsNodeMaterial', PointsNodeMaterial );\n","import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { cameraProjectionMatrix } from '../accessors/CameraNode.js';\nimport { materialRotation } from '../accessors/MaterialNode.js';\nimport { modelViewMatrix, modelWorldMatrix } from '../accessors/ModelNode.js';\nimport { positionLocal } from '../accessors/PositionNode.js';\nimport { float, vec2, vec3, vec4 } from '../shadernode/ShaderNode.js';\n\nimport { SpriteMaterial } from 'three';\n\nconst defaultValues = new SpriteMaterial();\n\nclass SpriteNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteNodeMaterial = true;\n\n\t\tthis.lights = false;\n\t\tthis.normals = false;\n\n\t\tthis.positionNode = null;\n\t\tthis.rotationNode = null;\n\t\tthis.scaleNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupPosition( { object, context } ) {\n\n\t\t// < VERTEX STAGE >\n\n\t\tconst { positionNode, rotationNode, scaleNode } = this;\n\n\t\tconst vertex = positionLocal;\n\n\t\tlet mvPosition = modelViewMatrix.mul( vec3( positionNode || 0 ) );\n\n\t\tlet scale = vec2( modelWorldMatrix[ 0 ].xyz.length(), modelWorldMatrix[ 1 ].xyz.length() );\n\n\t\tif ( scaleNode !== null ) {\n\n\t\t\tscale = scale.mul( scaleNode );\n\n\t\t}\n\n\t\tlet alignedPosition = vertex.xy;\n\n\t\tif ( object.center && object.center.isVector2 === true ) {\n\n\t\t\talignedPosition = alignedPosition.sub( uniform( object.center ).sub( 0.5 ) );\n\n\t\t}\n\n\t\talignedPosition = alignedPosition.mul( scale );\n\n\t\tconst rotation = float( rotationNode || materialRotation );\n\n\t\tconst rotatedPosition = alignedPosition.rotate( rotation );\n\n\t\tmvPosition = vec4( mvPosition.xy.add( rotatedPosition ), mvPosition.zw );\n\n\t\tconst modelViewProjection = cameraProjectionMatrix.mul( mvPosition );\n\n\t\tcontext.vertex = vertex;\n\n\t\treturn modelViewProjection;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.positionNode = source.positionNode;\n\t\tthis.rotationNode = source.rotationNode;\n\t\tthis.scaleNode = source.scaleNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default SpriteNodeMaterial;\n\naddNodeMaterial( 'SpriteNodeMaterial', SpriteNodeMaterial );\n","import NodeParser from '../core/NodeParser.js';\nimport GLSLNodeFunction from './GLSLNodeFunction.js';\n\nclass GLSLNodeParser extends NodeParser {\n\n\tparseFunction( source ) {\n\n\t\treturn new GLSLNodeFunction( source );\n\n\t}\n\n}\n\nexport default GLSLNodeParser;\n","class NodeParser {\n\n\tparseFunction( /*source*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nexport default NodeParser;\n","import NodeFunction from '../core/NodeFunction.js';\nimport NodeFunctionInput from '../core/NodeFunctionInput.js';\n\nconst declarationRegexp = /^\\s*(highp|mediump|lowp)?\\s*([a-z_0-9]+)\\s*([a-z_0-9]+)?\\s*\\(([\\s\\S]*?)\\)/i;\nconst propertiesRegexp = /[a-z_0-9]+/ig;\n\nconst pragmaMain = '#pragma main';\n\nconst parse = ( source ) => {\n\n\tsource = source.trim();\n\n\tconst pragmaMainIndex = source.indexOf( pragmaMain );\n\n\tconst mainCode = pragmaMainIndex !== - 1 ? source.slice( pragmaMainIndex + pragmaMain.length ) : source;\n\n\tconst declaration = mainCode.match( declarationRegexp );\n\n\tif ( declaration !== null && declaration.length === 5 ) {\n\n\t\t// tokenizer\n\n\t\tconst inputsCode = declaration[ 4 ];\n\t\tconst propsMatches = [];\n\n\t\tlet nameMatch = null;\n\n\t\twhile ( ( nameMatch = propertiesRegexp.exec( inputsCode ) ) !== null ) {\n\n\t\t\tpropsMatches.push( nameMatch );\n\n\t\t}\n\n\t\t// parser\n\n\t\tconst inputs = [];\n\n\t\tlet i = 0;\n\n\t\twhile ( i < propsMatches.length ) {\n\n\t\t\tconst isConst = propsMatches[ i ][ 0 ] === 'const';\n\n\t\t\tif ( isConst === true ) {\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\tlet qualifier = propsMatches[ i ][ 0 ];\n\n\t\t\tif ( qualifier === 'in' || qualifier === 'out' || qualifier === 'inout' ) {\n\n\t\t\t\ti ++;\n\n\t\t\t} else {\n\n\t\t\t\tqualifier = '';\n\n\t\t\t}\n\n\t\t\tconst type = propsMatches[ i ++ ][ 0 ];\n\n\t\t\tlet count = Number.parseInt( propsMatches[ i ][ 0 ] );\n\n\t\t\tif ( Number.isNaN( count ) === false ) i ++;\n\t\t\telse count = null;\n\n\t\t\tconst name = propsMatches[ i ++ ][ 0 ];\n\n\t\t\tinputs.push( new NodeFunctionInput( type, name, count, qualifier, isConst ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst blockCode = mainCode.substring( declaration[ 0 ].length );\n\n\t\tconst name = declaration[ 3 ] !== undefined ? declaration[ 3 ] : '';\n\t\tconst type = declaration[ 2 ];\n\n\t\tconst presicion = declaration[ 1 ] !== undefined ? declaration[ 1 ] : '';\n\n\t\tconst headerCode = pragmaMainIndex !== - 1 ? source.slice( 0, pragmaMainIndex ) : '';\n\n\t\treturn {\n\t\t\ttype,\n\t\t\tinputs,\n\t\t\tname,\n\t\t\tpresicion,\n\t\t\tinputsCode,\n\t\t\tblockCode,\n\t\t\theaderCode\n\t\t};\n\n\t} else {\n\n\t\tthrow new Error( 'FunctionNode: Function is not a GLSL code.' );\n\n\t}\n\n};\n\nclass GLSLNodeFunction extends NodeFunction {\n\n\tconstructor( source ) {\n\n\t\tconst { type, inputs, name, presicion, inputsCode, blockCode, headerCode } = parse( source );\n\n\t\tsuper( type, inputs, name, presicion );\n\n\t\tthis.inputsCode = inputsCode;\n\t\tthis.blockCode = blockCode;\n\t\tthis.headerCode = headerCode;\n\n\t}\n\n\tgetCode( name = this.name ) {\n\n\t\tlet code;\n\n\t\tconst blockCode = this.blockCode;\n\n\t\tif ( blockCode !== '' ) {\n\n\t\t\tconst { type, inputsCode, headerCode, presicion } = this;\n\n\t\t\tlet declarationCode = `${ type } ${ name } ( ${ inputsCode.trim() } )`;\n\n\t\t\tif ( presicion !== '' ) {\n\n\t\t\t\tdeclarationCode = `${ presicion } ${ declarationCode }`;\n\n\t\t\t}\n\n\t\t\tcode = headerCode + declarationCode + blockCode;\n\n\t\t} else {\n\n\t\t\t// interface function\n\n\t\t\tcode = '';\n\n\t\t}\n\n\t\treturn code;\n\n\t}\n\n}\n\nexport default GLSLNodeFunction;\n","class NodeFunction {\n\n\tconstructor( type, inputs, name = '', presicion = '' ) {\n\n\t\tthis.type = type;\n\t\tthis.inputs = inputs;\n\t\tthis.name = name;\n\t\tthis.presicion = presicion;\n\n\t}\n\n\tgetCode( /*name = this.name*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nNodeFunction.isNodeFunction = true;\n\nexport default NodeFunction;\n","import {\n\tmx_perlin_noise_float, mx_perlin_noise_vec3,\n\tmx_worley_noise_float as worley_noise_float, mx_worley_noise_vec2 as worley_noise_vec2, mx_worley_noise_vec3 as worley_noise_vec3,\n\tmx_cell_noise_float as cell_noise_float,\n\tmx_fractal_noise_float as fractal_noise_float, mx_fractal_noise_vec2 as fractal_noise_vec2, mx_fractal_noise_vec3 as fractal_noise_vec3, mx_fractal_noise_vec4 as fractal_noise_vec4\n} from './lib/mx_noise.js';\nimport { mx_hsvtorgb, mx_rgbtohsv } from './lib/mx_hsv.js';\nimport { mx_srgb_texture_to_lin_rec709 } from './lib/mx_transform_color.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { float, vec2, vec4, int } from '../shadernode/ShaderNode.js';\n\nexport const mx_aastep = ( threshold, value ) => {\n\n\tthreshold = float( threshold );\n\tvalue = float( value );\n\n\tconst afwidth = vec2( value.dFdx(), value.dFdy() ).length().mul( 0.70710678118654757 );\n\n\treturn smoothstep( threshold.sub( afwidth ), threshold.add( afwidth ), value );\n\n};\n\nconst _ramp = ( a, b, uv, p ) => mix( a, b, uv[ p ].clamp() );\nexport const mx_ramplr = ( valuel, valuer, texcoord = uv() ) => _ramp( valuel, valuer, texcoord, 'x' );\nexport const mx_ramptb = ( valuet, valueb, texcoord = uv() ) => _ramp( valuet, valueb, texcoord, 'y' );\n\nconst _split = ( a, b, center, uv, p ) => mix( a, b, mx_aastep( center, uv[ p ] ) );\nexport const mx_splitlr = ( valuel, valuer, center, texcoord = uv() ) => _split( valuel, valuer, center, texcoord, 'x' );\nexport const mx_splittb = ( valuet, valueb, center, texcoord = uv() ) => _split( valuet, valueb, center, texcoord, 'y' );\n\nexport const mx_transform_uv = ( uv_scale = 1, uv_offset = 0, uv_geo = uv() ) => uv_geo.mul( uv_scale ).add( uv_offset );\n\nexport const mx_safepower = ( in1, in2 = 1 ) => {\n\n\tin1 = float( in1 );\n\n\treturn in1.abs().pow( in2 ).mul( in1.sign() );\n\n};\n\nexport const mx_contrast = ( input, amount = 1, pivot = .5 ) => float( input ).sub( pivot ).mul( amount ).add( pivot );\n\nexport const mx_noise_float = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_float( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\n//export const mx_noise_vec2 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_vec3( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\nexport const mx_noise_vec3 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_vec3( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\nexport const mx_noise_vec4 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => {\n\n\ttexcoord = texcoord.convert( 'vec2|vec3' ); // overloading type\n\n\tconst noise_vec4 = vec4( mx_perlin_noise_vec3( texcoord ), mx_perlin_noise_float( texcoord.add( vec2( 19, 73 ) ) ) );\n\n\treturn noise_vec4.mul( amplitude ).add( pivot );\n\n};\n\nexport const mx_worley_noise_float = ( texcoord = uv(), jitter = 1 ) => worley_noise_float( texcoord.convert( 'vec2|vec3' ), jitter, int( 1 ) );\nexport const mx_worley_noise_vec2 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec2( texcoord.convert( 'vec2|vec3' ), jitter, int( 1 ) );\nexport const mx_worley_noise_vec3 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec3( texcoord.convert( 'vec2|vec3' ), jitter, int( 1 ) );\n\nexport const mx_cell_noise_float = ( texcoord = uv() ) => cell_noise_float( texcoord.convert( 'vec2|vec3' ) );\n\nexport const mx_fractal_noise_float = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_float( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\nexport const mx_fractal_noise_vec2 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec2( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\nexport const mx_fractal_noise_vec3 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec3( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\nexport const mx_fractal_noise_vec4 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec4( position, int( octaves ), lacunarity, diminish ).mul( amplitude );\n\nexport { mx_hsvtorgb, mx_rgbtohsv, mx_srgb_texture_to_lin_rec709 };\n","// Three.js Transpiler\n// https://raw.githubusercontent.com/AcademySoftwareFoundation/MaterialX/main/libraries/stdlib/genglsl/lib/mx_noise.glsl\n\nimport { int, uint, float, vec3, bool, uvec3, vec2, vec4, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { cond } from '../../math/CondNode.js';\nimport { sub, mul } from '../../math/OperatorNode.js';\nimport { floor, abs, max, dot, min, sqrt } from '../../math/MathNode.js';\nimport { overloadingFn } from '../../utils/FunctionOverloadingNode.js';\nimport { loop } from '../../utils/LoopNode.js';\n\nconst mx_select = tslFn( ( [ b_immutable, t_immutable, f_immutable ] ) => {\n\n\tconst f = float( f_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst b = bool( b_immutable ).toVar();\n\n\treturn cond( b, t, f );\n\n} );\n\nconst mx_negate_if = tslFn( ( [ val_immutable, b_immutable ] ) => {\n\n\tconst b = bool( b_immutable ).toVar();\n\tconst val = float( val_immutable ).toVar();\n\n\treturn cond( b, val.negate(), val );\n\n} );\n\nconst mx_floor = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\n\treturn int( floor( x ) );\n\n} );\n\nconst mx_floorfrac = tslFn( ( [ x_immutable, i ] ) => {\n\n\tconst x = float( x_immutable ).toVar();\n\ti.assign( mx_floor( x ) );\n\n\treturn x.sub( float( i ) );\n\n} );\n\nconst mx_bilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, s_immutable, t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\n\treturn sub( 1.0, t ).mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) );\n\n} );\n\nconst mx_bilerp = overloadingFn( [ mx_bilerp_0, mx_bilerp_1 ] );\n\nconst mx_trilerp_0 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = float( v7_immutable ).toVar();\n\tconst v6 = float( v6_immutable ).toVar();\n\tconst v5 = float( v5_immutable ).toVar();\n\tconst v4 = float( v4_immutable ).toVar();\n\tconst v3 = float( v3_immutable ).toVar();\n\tconst v2 = float( v2_immutable ).toVar();\n\tconst v1 = float( v1_immutable ).toVar();\n\tconst v0 = float( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp_1 = tslFn( ( [ v0_immutable, v1_immutable, v2_immutable, v3_immutable, v4_immutable, v5_immutable, v6_immutable, v7_immutable, s_immutable, t_immutable, r_immutable ] ) => {\n\n\tconst r = float( r_immutable ).toVar();\n\tconst t = float( t_immutable ).toVar();\n\tconst s = float( s_immutable ).toVar();\n\tconst v7 = vec3( v7_immutable ).toVar();\n\tconst v6 = vec3( v6_immutable ).toVar();\n\tconst v5 = vec3( v5_immutable ).toVar();\n\tconst v4 = vec3( v4_immutable ).toVar();\n\tconst v3 = vec3( v3_immutable ).toVar();\n\tconst v2 = vec3( v2_immutable ).toVar();\n\tconst v1 = vec3( v1_immutable ).toVar();\n\tconst v0 = vec3( v0_immutable ).toVar();\n\tconst s1 = float( sub( 1.0, s ) ).toVar();\n\tconst t1 = float( sub( 1.0, t ) ).toVar();\n\tconst r1 = float( sub( 1.0, r ) ).toVar();\n\n\treturn r1.mul( t1.mul( v0.mul( s1 ).add( v1.mul( s ) ) ).add( t.mul( v2.mul( s1 ).add( v3.mul( s ) ) ) ) ).add( r.mul( t1.mul( v4.mul( s1 ).add( v5.mul( s ) ) ).add( t.mul( v6.mul( s1 ).add( v7.mul( s ) ) ) ) ) );\n\n} );\n\nconst mx_trilerp = overloadingFn( [ mx_trilerp_0, mx_trilerp_1 ] );\n\nconst mx_gradient_float_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 7 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 4 ) ), x, y ) ).toVar();\n\tconst v = float( mul( 2.0, mx_select( h.lessThan( uint( 4 ) ), y, x ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uint( hash_immutable ).toVar();\n\tconst h = uint( hash.bitAnd( uint( 15 ) ) ).toVar();\n\tconst u = float( mx_select( h.lessThan( uint( 8 ) ), x, y ) ).toVar();\n\tconst v = float( mx_select( h.lessThan( uint( 4 ) ), y, mx_select( h.equal( uint( 12 ) ).or( h.equal( uint( 14 ) ) ), x, z ) ) ).toVar();\n\n\treturn mx_negate_if( u, bool( h.bitAnd( uint( 1 ) ) ) ).add( mx_negate_if( v, bool( h.bitAnd( uint( 2 ) ) ) ) );\n\n} );\n\nconst mx_gradient_float = overloadingFn( [ mx_gradient_float_0, mx_gradient_float_1 ] );\n\nconst mx_gradient_vec3_0 = tslFn( ( [ hash_immutable, x_immutable, y_immutable ] ) => {\n\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y ), mx_gradient_float( hash.y, x, y ), mx_gradient_float( hash.z, x, y ) );\n\n} );\n\nconst mx_gradient_vec3_1 = tslFn( ( [ hash_immutable, x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = float( z_immutable ).toVar();\n\tconst y = float( y_immutable ).toVar();\n\tconst x = float( x_immutable ).toVar();\n\tconst hash = uvec3( hash_immutable ).toVar();\n\n\treturn vec3( mx_gradient_float( hash.x, x, y, z ), mx_gradient_float( hash.y, x, y, z ), mx_gradient_float( hash.z, x, y, z ) );\n\n} );\n\nconst mx_gradient_vec3 = overloadingFn( [ mx_gradient_vec3_0, mx_gradient_vec3_1 ] );\n\nconst mx_gradient_scale2d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale3d_0 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = float( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale2d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.6616, v );\n\n} );\n\nconst mx_gradient_scale2d = overloadingFn( [ mx_gradient_scale2d_0, mx_gradient_scale2d_1 ] );\n\nconst mx_gradient_scale3d_1 = tslFn( ( [ v_immutable ] ) => {\n\n\tconst v = vec3( v_immutable ).toVar();\n\n\treturn mul( 0.9820, v );\n\n} );\n\nconst mx_gradient_scale3d = overloadingFn( [ mx_gradient_scale3d_0, mx_gradient_scale3d_1 ] );\n\nconst mx_rotl32 = tslFn( ( [ x_immutable, k_immutable ] ) => {\n\n\tconst k = int( k_immutable ).toVar();\n\tconst x = uint( x_immutable ).toVar();\n\n\treturn x.shiftLeft( k ).bitOr( x.shiftRight( int( 32 ).sub( k ) ) );\n\n} );\n\nconst mx_bjmix = tslFn( ( [ a, b, c ] ) => {\n\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 4 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 6 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 8 ) ) );\n\tb.addAssign( a );\n\ta.subAssign( c );\n\ta.bitXorAssign( mx_rotl32( c, int( 16 ) ) );\n\tc.addAssign( b );\n\tb.subAssign( a );\n\tb.bitXorAssign( mx_rotl32( a, int( 19 ) ) );\n\ta.addAssign( c );\n\tc.subAssign( b );\n\tc.bitXorAssign( mx_rotl32( b, int( 4 ) ) );\n\tb.addAssign( a );\n\n} );\n\nconst mx_bjfinal = tslFn( ( [ a_immutable, b_immutable, c_immutable ] ) => {\n\n\tconst c = uint( c_immutable ).toVar();\n\tconst b = uint( b_immutable ).toVar();\n\tconst a = uint( a_immutable ).toVar();\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 14 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 11 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 25 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 16 ) ) );\n\ta.bitXorAssign( c );\n\ta.subAssign( mx_rotl32( c, int( 4 ) ) );\n\tb.bitXorAssign( a );\n\tb.subAssign( mx_rotl32( a, int( 14 ) ) );\n\tc.bitXorAssign( b );\n\tc.subAssign( mx_rotl32( b, int( 24 ) ) );\n\n\treturn c;\n\n} );\n\nconst mx_bits_to_01 = tslFn( ( [ bits_immutable ] ) => {\n\n\tconst bits = uint( bits_immutable ).toVar();\n\n\treturn float( bits ).div( float( uint( int( 0xffffffff ) ) ) );\n\n} );\n\nconst mx_fade = tslFn( ( [ t_immutable ] ) => {\n\n\tconst t = float( t_immutable ).toVar();\n\n\treturn t.mul( t.mul( t.mul( t.mul( t.mul( 6.0 ).sub( 15.0 ) ).add( 10.0 ) ) ) );\n\n} );\n\nconst mx_hash_int_0 = tslFn( ( [ x_immutable ] ) => {\n\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 1 ) ).toVar();\n\tconst seed = uint( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ).toVar();\n\n\treturn mx_bjfinal( seed.add( uint( x ) ), seed, seed );\n\n} );\n\nconst mx_hash_int_1 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 2 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_2 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 3 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_3 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable ] ) => {\n\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 4 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int_4 = tslFn( ( [ x_immutable, y_immutable, z_immutable, xx_immutable, yy_immutable ] ) => {\n\n\tconst yy = int( yy_immutable ).toVar();\n\tconst xx = int( xx_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst len = uint( uint( 5 ) ).toVar();\n\tconst a = uint().toVar(), b = uint().toVar(), c = uint().toVar();\n\ta.assign( b.assign( c.assign( uint( int( 0xdeadbeef ) ).add( len.shiftLeft( uint( 2 ) ).add( uint( 13 ) ) ) ) ) );\n\ta.addAssign( uint( x ) );\n\tb.addAssign( uint( y ) );\n\tc.addAssign( uint( z ) );\n\tmx_bjmix( a, b, c );\n\ta.addAssign( uint( xx ) );\n\tb.addAssign( uint( yy ) );\n\n\treturn mx_bjfinal( a, b, c );\n\n} );\n\nconst mx_hash_int = overloadingFn( [ mx_hash_int_0, mx_hash_int_1, mx_hash_int_2, mx_hash_int_3, mx_hash_int_4 ] );\n\nconst mx_hash_vec3_0 = tslFn( ( [ x_immutable, y_immutable ] ) => {\n\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3_1 = tslFn( ( [ x_immutable, y_immutable, z_immutable ] ) => {\n\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst h = uint( mx_hash_int( x, y, z ) ).toVar();\n\tconst result = uvec3().toVar();\n\tresult.x.assign( h.bitAnd( int( 0xFF ) ) );\n\tresult.y.assign( h.shiftRight( int( 8 ) ).bitAnd( int( 0xFF ) ) );\n\tresult.z.assign( h.shiftRight( int( 16 ) ).bitAnd( int( 0xFF ) ) );\n\n\treturn result;\n\n} );\n\nconst mx_hash_vec3 = overloadingFn( [ mx_hash_vec3_0, mx_hash_vec3_1 ] );\n\nconst mx_perlin_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = float( mx_bilerp( mx_gradient_float( mx_hash_int( X, Y ), fx, fy ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = float( mx_trilerp( mx_gradient_float( mx_hash_int( X, Y, Z ), fx, fy, fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_float( mx_hash_int( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_float( mx_hash_int( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_float = overloadingFn( [ mx_perlin_noise_float_0, mx_perlin_noise_float_1 ] );\n\nconst mx_perlin_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst result = vec3( mx_bilerp( mx_gradient_vec3( mx_hash_vec3( X, Y ), fx, fy ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y ), fx.sub( 1.0 ), fy ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ) ), fx, fy.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ) ), u, v ) ).toVar();\n\n\treturn mx_gradient_scale2d( result );\n\n} );\n\nconst mx_perlin_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst fx = float( mx_floorfrac( p.x, X ) ).toVar();\n\tconst fy = float( mx_floorfrac( p.y, Y ) ).toVar();\n\tconst fz = float( mx_floorfrac( p.z, Z ) ).toVar();\n\tconst u = float( mx_fade( fx ) ).toVar();\n\tconst v = float( mx_fade( fy ) ).toVar();\n\tconst w = float( mx_fade( fz ) ).toVar();\n\tconst result = vec3( mx_trilerp( mx_gradient_vec3( mx_hash_vec3( X, Y, Z ), fx, fy, fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z ), fx.sub( 1.0 ), fy, fz ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z ), fx, fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz ), mx_gradient_vec3( mx_hash_vec3( X, Y, Z.add( int( 1 ) ) ), fx, fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y, Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy, fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X, Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx, fy.sub( 1.0 ), fz.sub( 1.0 ) ), mx_gradient_vec3( mx_hash_vec3( X.add( int( 1 ) ), Y.add( int( 1 ) ), Z.add( int( 1 ) ) ), fx.sub( 1.0 ), fy.sub( 1.0 ), fz.sub( 1.0 ) ), u, v, w ) ).toVar();\n\n\treturn mx_gradient_scale3d( result );\n\n} );\n\nconst mx_perlin_noise_vec3 = overloadingFn( [ mx_perlin_noise_vec3_0, mx_perlin_noise_vec3_1 ] );\n\nconst mx_cell_noise_float_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix ) );\n\n} );\n\nconst mx_cell_noise_float_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy ) );\n\n} );\n\nconst mx_cell_noise_float_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz ) );\n\n} );\n\nconst mx_cell_noise_float_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn mx_bits_to_01( mx_hash_int( ix, iy, iz, iw ) );\n\n} );\n\nconst mx_cell_noise_float = overloadingFn( [ mx_cell_noise_float_0, mx_cell_noise_float_1, mx_cell_noise_float_2, mx_cell_noise_float_3 ] );\n\nconst mx_cell_noise_vec3_0 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = float( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_1 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec2( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_2 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec3( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3_3 = tslFn( ( [ p_immutable ] ) => {\n\n\tconst p = vec4( p_immutable ).toVar();\n\tconst ix = int( mx_floor( p.x ) ).toVar();\n\tconst iy = int( mx_floor( p.y ) ).toVar();\n\tconst iz = int( mx_floor( p.z ) ).toVar();\n\tconst iw = int( mx_floor( p.w ) ).toVar();\n\n\treturn vec3( mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 0 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 1 ) ) ), mx_bits_to_01( mx_hash_int( ix, iy, iz, iw, int( 2 ) ) ) );\n\n} );\n\nconst mx_cell_noise_vec3 = overloadingFn( [ mx_cell_noise_vec3_0, mx_cell_noise_vec3_1, mx_cell_noise_vec3_2, mx_cell_noise_vec3_3 ] );\n\nconst mx_fractal_noise_float = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = float( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_float( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec3 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst result = vec3( 0.0 ).toVar();\n\tconst amplitude = float( 1.0 ).toVar();\n\n\tloop( { start: int( 0 ), end: octaves }, ( { i } ) => {\n\n\t\tresult.addAssign( amplitude.mul( mx_perlin_noise_vec3( p ) ) );\n\t\tamplitude.mulAssign( diminish );\n\t\tp.mulAssign( lacunarity );\n\n\t} );\n\n\treturn result;\n\n} );\n\nconst mx_fractal_noise_vec2 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\n\treturn vec2( mx_fractal_noise_float( p, octaves, lacunarity, diminish ), mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) );\n\n} );\n\nconst mx_fractal_noise_vec4 = tslFn( ( [ p_immutable, octaves_immutable, lacunarity_immutable, diminish_immutable ] ) => {\n\n\tconst diminish = float( diminish_immutable ).toVar();\n\tconst lacunarity = float( lacunarity_immutable ).toVar();\n\tconst octaves = int( octaves_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst c = vec3( mx_fractal_noise_vec3( p, octaves, lacunarity, diminish ) ).toVar();\n\tconst f = float( mx_fractal_noise_float( p.add( vec3( int( 19 ), int( 193 ), int( 17 ) ) ), octaves, lacunarity, diminish ) ).toVar();\n\n\treturn vec4( c, f );\n\n} );\n\nconst mx_worley_distance_0 = tslFn( ( [ p_immutable, x_immutable, y_immutable, xoff_immutable, yoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst tmp = vec3( mx_cell_noise_vec3( vec2( x.add( xoff ), y.add( yoff ) ) ) ).toVar();\n\tconst off = vec2( tmp.x, tmp.y ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec2( vec2( float( x ), float( y ) ).add( off ) ).toVar();\n\tconst diff = vec2( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( abs( diff.x ), abs( diff.y ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance_1 = tslFn( ( [ p_immutable, x_immutable, y_immutable, z_immutable, xoff_immutable, yoff_immutable, zoff_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst zoff = int( zoff_immutable ).toVar();\n\tconst yoff = int( yoff_immutable ).toVar();\n\tconst xoff = int( xoff_immutable ).toVar();\n\tconst z = int( z_immutable ).toVar();\n\tconst y = int( y_immutable ).toVar();\n\tconst x = int( x_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst off = vec3( mx_cell_noise_vec3( vec3( x.add( xoff ), y.add( yoff ), z.add( zoff ) ) ) ).toVar();\n\toff.subAssign( 0.5 );\n\toff.mulAssign( jitter );\n\toff.addAssign( 0.5 );\n\tconst cellpos = vec3( vec3( float( x ), float( y ), float( z ) ).add( off ) ).toVar();\n\tconst diff = vec3( cellpos.sub( p ) ).toVar();\n\n\tIf( metric.equal( int( 2 ) ), () => {\n\n\t\treturn abs( diff.x ).add( abs( diff.y ).add( abs( diff.z ) ) );\n\n\t} );\n\n\tIf( metric.equal( int( 3 ) ), () => {\n\n\t\treturn max( max( abs( diff.x ), abs( diff.y ) ), abs( diff.z ) );\n\n\t} );\n\n\treturn dot( diff, diff );\n\n} );\n\nconst mx_worley_distance = overloadingFn( [ mx_worley_distance_0, mx_worley_distance_1 ] );\n\nconst mx_worley_noise_float_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3_0 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec2( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar();\n\tconst localpos = vec2( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, X, Y, jitter, metric ) ).toVar();\n\n\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = float( 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\t\t\t\tsqdist.assign( min( sqdist, dist ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_float = overloadingFn( [ mx_worley_noise_float_0, mx_worley_noise_float_1 ] );\n\nconst mx_worley_noise_vec2_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec2( 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec2 = overloadingFn( [ mx_worley_noise_vec2_0, mx_worley_noise_vec2_1 ] );\n\nconst mx_worley_noise_vec3_1 = tslFn( ( [ p_immutable, jitter_immutable, metric_immutable ] ) => {\n\n\tconst metric = int( metric_immutable ).toVar();\n\tconst jitter = float( jitter_immutable ).toVar();\n\tconst p = vec3( p_immutable ).toVar();\n\tconst X = int().toVar(), Y = int().toVar(), Z = int().toVar();\n\tconst localpos = vec3( mx_floorfrac( p.x, X ), mx_floorfrac( p.y, Y ), mx_floorfrac( p.z, Z ) ).toVar();\n\tconst sqdist = vec3( 1e6, 1e6, 1e6 ).toVar();\n\n\tloop( { start: - 1, end: int( 1 ), name: 'x', condition: '<=' }, ( { x } ) => {\n\n\t\tloop( { start: - 1, end: int( 1 ), name: 'y', condition: '<=' }, ( { y } ) => {\n\n\t\t\tloop( { start: - 1, end: int( 1 ), name: 'z', condition: '<=' }, ( { z } ) => {\n\n\t\t\t\tconst dist = float( mx_worley_distance( localpos, x, y, z, X, Y, Z, jitter, metric ) ).toVar();\n\n\t\t\t\tIf( dist.lessThan( sqdist.x ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( sqdist.x );\n\t\t\t\t\tsqdist.x.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.y ), () => {\n\n\t\t\t\t\tsqdist.z.assign( sqdist.y );\n\t\t\t\t\tsqdist.y.assign( dist );\n\n\t\t\t\t} ).elseif( dist.lessThan( sqdist.z ), () => {\n\n\t\t\t\t\tsqdist.z.assign( dist );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tIf( metric.equal( int( 0 ) ), () => {\n\n\t\tsqdist.assign( sqrt( sqdist ) );\n\n\t} );\n\n\treturn sqdist;\n\n} );\n\nconst mx_worley_noise_vec3 = overloadingFn( [ mx_worley_noise_vec3_0, mx_worley_noise_vec3_1 ] );\n\n// layouts\n\nmx_select.setLayout( {\n\tname: 'mx_select',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'b', type: 'bool' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'f', type: 'float' }\n\t]\n} );\n\nmx_negate_if.setLayout( {\n\tname: 'mx_negate_if',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'val', type: 'float' },\n\t\t{ name: 'b', type: 'bool' }\n\t]\n} );\n\nmx_floor.setLayout( {\n\tname: 'mx_floor',\n\ttype: 'int',\n\tinputs: [\n\t\t{ name: 'x', type: 'float' }\n\t]\n} );\n\nmx_bilerp_0.setLayout( {\n\tname: 'mx_bilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_bilerp_1.setLayout( {\n\tname: 'mx_bilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_trilerp_0.setLayout( {\n\tname: 'mx_trilerp_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v0', type: 'float' },\n\t\t{ name: 'v1', type: 'float' },\n\t\t{ name: 'v2', type: 'float' },\n\t\t{ name: 'v3', type: 'float' },\n\t\t{ name: 'v4', type: 'float' },\n\t\t{ name: 'v5', type: 'float' },\n\t\t{ name: 'v6', type: 'float' },\n\t\t{ name: 'v7', type: 'float' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_trilerp_1.setLayout( {\n\tname: 'mx_trilerp_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v0', type: 'vec3' },\n\t\t{ name: 'v1', type: 'vec3' },\n\t\t{ name: 'v2', type: 'vec3' },\n\t\t{ name: 'v3', type: 'vec3' },\n\t\t{ name: 'v4', type: 'vec3' },\n\t\t{ name: 'v5', type: 'vec3' },\n\t\t{ name: 'v6', type: 'vec3' },\n\t\t{ name: 'v7', type: 'vec3' },\n\t\t{ name: 's', type: 'float' },\n\t\t{ name: 't', type: 'float' },\n\t\t{ name: 'r', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_0.setLayout( {\n\tname: 'mx_gradient_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_float_1.setLayout( {\n\tname: 'mx_gradient_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uint' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_0.setLayout( {\n\tname: 'mx_gradient_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' }\n\t]\n} );\n\nmx_gradient_vec3_1.setLayout( {\n\tname: 'mx_gradient_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hash', type: 'uvec3' },\n\t\t{ name: 'x', type: 'float' },\n\t\t{ name: 'y', type: 'float' },\n\t\t{ name: 'z', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_0.setLayout( {\n\tname: 'mx_gradient_scale2d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale3d_0.setLayout( {\n\tname: 'mx_gradient_scale3d_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'v', type: 'float' }\n\t]\n} );\n\nmx_gradient_scale2d_1.setLayout( {\n\tname: 'mx_gradient_scale2d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_gradient_scale3d_1.setLayout( {\n\tname: 'mx_gradient_scale3d_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'v', type: 'vec3' }\n\t]\n} );\n\nmx_rotl32.setLayout( {\n\tname: 'mx_rotl32',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'uint' },\n\t\t{ name: 'k', type: 'int' }\n\t]\n} );\n\nmx_bjfinal.setLayout( {\n\tname: 'mx_bjfinal',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'a', type: 'uint' },\n\t\t{ name: 'b', type: 'uint' },\n\t\t{ name: 'c', type: 'uint' }\n\t]\n} );\n\nmx_bits_to_01.setLayout( {\n\tname: 'mx_bits_to_01',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'bits', type: 'uint' }\n\t]\n} );\n\nmx_fade.setLayout( {\n\tname: 'mx_fade',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 't', type: 'float' }\n\t]\n} );\n\nmx_hash_int_0.setLayout( {\n\tname: 'mx_hash_int_0',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' }\n\t]\n} );\n\nmx_hash_int_1.setLayout( {\n\tname: 'mx_hash_int_1',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_int_2.setLayout( {\n\tname: 'mx_hash_int_2',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_hash_int_3.setLayout( {\n\tname: 'mx_hash_int_3',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' }\n\t]\n} );\n\nmx_hash_int_4.setLayout( {\n\tname: 'mx_hash_int_4',\n\ttype: 'uint',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xx', type: 'int' },\n\t\t{ name: 'yy', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_0.setLayout( {\n\tname: 'mx_hash_vec3_0',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' }\n\t]\n} );\n\nmx_hash_vec3_1.setLayout( {\n\tname: 'mx_hash_vec3_1',\n\ttype: 'uvec3',\n\tinputs: [\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' }\n\t]\n} );\n\nmx_perlin_noise_float_0.setLayout( {\n\tname: 'mx_perlin_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_float_1.setLayout( {\n\tname: 'mx_perlin_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_perlin_noise_vec3_0.setLayout( {\n\tname: 'mx_perlin_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_perlin_noise_vec3_1.setLayout( {\n\tname: 'mx_perlin_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_0.setLayout( {\n\tname: 'mx_cell_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_float_1.setLayout( {\n\tname: 'mx_cell_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_float_2.setLayout( {\n\tname: 'mx_cell_noise_float_2',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_float_3.setLayout( {\n\tname: 'mx_cell_noise_float_3',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_cell_noise_vec3_0.setLayout( {\n\tname: 'mx_cell_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'float' }\n\t]\n} );\n\nmx_cell_noise_vec3_1.setLayout( {\n\tname: 'mx_cell_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' }\n\t]\n} );\n\nmx_cell_noise_vec3_2.setLayout( {\n\tname: 'mx_cell_noise_vec3_2',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' }\n\t]\n} );\n\nmx_cell_noise_vec3_3.setLayout( {\n\tname: 'mx_cell_noise_vec3_3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec4' }\n\t]\n} );\n\nmx_fractal_noise_float.setLayout( {\n\tname: 'mx_fractal_noise_float',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec3.setLayout( {\n\tname: 'mx_fractal_noise_vec3',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec2.setLayout( {\n\tname: 'mx_fractal_noise_vec2',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_fractal_noise_vec4.setLayout( {\n\tname: 'mx_fractal_noise_vec4',\n\ttype: 'vec4',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'octaves', type: 'int' },\n\t\t{ name: 'lacunarity', type: 'float' },\n\t\t{ name: 'diminish', type: 'float' }\n\t]\n} );\n\nmx_worley_distance_0.setLayout( {\n\tname: 'mx_worley_distance_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_distance_1.setLayout( {\n\tname: 'mx_worley_distance_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'x', type: 'int' },\n\t\t{ name: 'y', type: 'int' },\n\t\t{ name: 'z', type: 'int' },\n\t\t{ name: 'xoff', type: 'int' },\n\t\t{ name: 'yoff', type: 'int' },\n\t\t{ name: 'zoff', type: 'int' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_0.setLayout( {\n\tname: 'mx_worley_noise_float_0',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_0.setLayout( {\n\tname: 'mx_worley_noise_vec2_0',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_0.setLayout( {\n\tname: 'mx_worley_noise_vec3_0',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec2' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_float_1.setLayout( {\n\tname: 'mx_worley_noise_float_1',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec2_1.setLayout( {\n\tname: 'mx_worley_noise_vec2_1',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nmx_worley_noise_vec3_1.setLayout( {\n\tname: 'mx_worley_noise_vec3_1',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'p', type: 'vec3' },\n\t\t{ name: 'jitter', type: 'float' },\n\t\t{ name: 'metric', type: 'int' }\n\t]\n} );\n\nexport { mx_select, mx_negate_if, mx_floor, mx_floorfrac, mx_bilerp, mx_trilerp, mx_gradient_float, mx_gradient_vec3, mx_gradient_scale2d, mx_gradient_scale3d, mx_rotl32, mx_bjmix, mx_bjfinal, mx_bits_to_01, mx_fade, mx_hash_int, mx_hash_vec3, mx_perlin_noise_float, mx_perlin_noise_vec3, mx_cell_noise_float, mx_cell_noise_vec3, mx_fractal_noise_float, mx_fractal_noise_vec3, mx_fractal_noise_vec2, mx_fractal_noise_vec4, mx_worley_distance, mx_worley_noise_float, mx_worley_noise_vec2, mx_worley_noise_vec3 };\n","// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_hsv.glsl\n\nimport { int, float, vec3, If, tslFn } from '../../shadernode/ShaderNode.js';\nimport { add, sub, mul } from '../../math/OperatorNode.js';\nimport { floor, trunc, max, min } from '../../math/MathNode.js';\n\nconst mx_hsvtorgb = tslFn( ( [ hsv_immutable ] ) => {\n\n\tconst hsv = vec3( hsv_immutable ).toVar();\n\tconst h = float( hsv.x ).toVar();\n\tconst s = float( hsv.y ).toVar();\n\tconst v = float( hsv.z ).toVar();\n\n\tIf( s.lessThan( 0.0001 ), () => {\n\n\t\treturn vec3( v, v, v );\n\n\t} ).else( () => {\n\n\t\th.assign( mul( 6.0, h.sub( floor( h ) ) ) );\n\t\tconst hi = int( trunc( h ) ).toVar();\n\t\tconst f = float( h.sub( float( hi ) ) ).toVar();\n\t\tconst p = float( v.mul( sub( 1.0, s ) ) ).toVar();\n\t\tconst q = float( v.mul( sub( 1.0, s.mul( f ) ) ) ).toVar();\n\t\tconst t = float( v.mul( sub( 1.0, s.mul( sub( 1.0, f ) ) ) ) ).toVar();\n\n\t\tIf( hi.equal( int( 0 ) ), () => {\n\n\t\t\treturn vec3( v, t, p );\n\n\t\t} ).elseif( hi.equal( int( 1 ) ), () => {\n\n\t\t\treturn vec3( q, v, p );\n\n\t\t} ).elseif( hi.equal( int( 2 ) ), () => {\n\n\t\t\treturn vec3( p, v, t );\n\n\t\t} ).elseif( hi.equal( int( 3 ) ), () => {\n\n\t\t\treturn vec3( p, q, v );\n\n\t\t} ).elseif( hi.equal( int( 4 ) ), () => {\n\n\t\t\treturn vec3( t, p, v );\n\n\t\t} );\n\n\t\treturn vec3( v, p, q );\n\n\t} );\n\n} );\n\nconst mx_rgbtohsv = tslFn( ( [ c_immutable ] ) => {\n\n\tconst c = vec3( c_immutable ).toVar();\n\tconst r = float( c.x ).toVar();\n\tconst g = float( c.y ).toVar();\n\tconst b = float( c.z ).toVar();\n\tconst mincomp = float( min( r, min( g, b ) ) ).toVar();\n\tconst maxcomp = float( max( r, max( g, b ) ) ).toVar();\n\tconst delta = float( maxcomp.sub( mincomp ) ).toVar();\n\tconst h = float().toVar(), s = float().toVar(), v = float().toVar();\n\tv.assign( maxcomp );\n\n\tIf( maxcomp.greaterThan( 0.0 ), () => {\n\n\t\ts.assign( delta.div( maxcomp ) );\n\n\t} ).else( () => {\n\n\t\ts.assign( 0.0 );\n\n\t} );\n\n\tIf( s.lessThanEqual( 0.0 ), () => {\n\n\t\th.assign( 0.0 );\n\n\t} ).else( () => {\n\n\t\tIf( r.greaterThanEqual( maxcomp ), () => {\n\n\t\t\th.assign( g.sub( b ).div( delta ) );\n\n\t\t} ).elseif( g.greaterThanEqual( maxcomp ), () => {\n\n\t\t\th.assign( add( 2.0, b.sub( r ).div( delta ) ) );\n\n\t\t} ).else( () => {\n\n\t\t\th.assign( add( 4.0, r.sub( g ).div( delta ) ) );\n\n\t\t} );\n\n\t\th.mulAssign( 1.0 / 6.0 );\n\n\t\tIf( h.lessThan( 0.0 ), () => {\n\n\t\t\th.addAssign( 1.0 );\n\n\t\t} );\n\n\t} );\n\n\treturn vec3( h, s, v );\n\n} );\n\n// layouts\n\nmx_hsvtorgb.setLayout( {\n\tname: 'mx_hsvtorgb',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'hsv', type: 'vec3' }\n\t]\n} );\n\nmx_rgbtohsv.setLayout( {\n\tname: 'mx_rgbtohsv',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'c', type: 'vec3' }\n\t]\n} );\n\nexport { mx_hsvtorgb, mx_rgbtohsv };\n","// Three.js Transpiler\n// https://github.com/AcademySoftwareFoundation/MaterialX/blob/main/libraries/stdlib/genglsl/lib/mx_transform_color.glsl\n\nimport { bvec3, vec3, tslFn } from '../../shadernode/ShaderNode.js';\nimport { greaterThan } from '../../math/OperatorNode.js';\nimport { max, pow, mix } from '../../math/MathNode.js';\n\nconst mx_srgb_texture_to_lin_rec709 = tslFn( ( [ color_immutable ] ) => {\n\n\tconst color = vec3( color_immutable ).toVar();\n\tconst isAbove = bvec3( greaterThan( color, vec3( 0.04045 ) ) ).toVar();\n\tconst linSeg = vec3( color.div( 12.92 ) ).toVar();\n\tconst powSeg = vec3( pow( max( color.add( vec3( 0.055 ) ), vec3( 0.0 ) ).div( 1.055 ), vec3( 2.4 ) ) ).toVar();\n\n\treturn mix( linSeg, powSeg, isAbove );\n\n} );\n\n// layouts\n\nmx_srgb_texture_to_lin_rec709.setLayout( {\n\tname: 'mx_srgb_texture_to_lin_rec709',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'color', type: 'vec3' }\n\t]\n} );\n\nexport { mx_srgb_texture_to_lin_rec709 };\n"],"names":["$5aad3d206b752601$var$resolution","$5aad3d206b752601$var$viewportResult","$55876c950842622b$var$discardExpression","$f06a0a82aa9331ef$var$pathTracer","$f06a0a82aa9331ef$var$renderer","$f06a0a82aa9331ef$var$controls","$f06a0a82aa9331ef$var$camera","$f06a0a82aa9331ef$var$scene","$f06a0a82aa9331ef$var$clock","$f06a0a82aa9331ef$var$mixer","$f06a0a82aa9331ef$var$mixerAction","$f06a0a82aa9331ef$var$loader","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$ac13547279de9cd0$export$13ef63fd7e562136","$ilwiq","$RPVlj","$9fZ6X","$dUUQZ","$ac13547279de9cd0$var$PMREMCopyMaterial","MaterialBase","constructor","uniforms","envMap","value","blur","vertexShader","fragmentShader","util_functions","renderer","pmremGenerator","PMREMGenerator","copyQuad","FullScreenQuad","renderTarget","WebGLRenderTarget","type","FloatType","format","RGBAFormat","dispose","generate","texture","pmremTarget","fromEquirectangular","width","height","image","setSize","material","prevRenderTarget","getRenderTarget","prevClear","autoClear","setRenderTarget","render","buffer","Uint16Array","readBuffer","Float32Array","readRenderTargetPixels","i","l","length","DataUtils","toHalfFloat","result","DataTexture","HalfFloatType","minFilter","magFilter","wrapS","wrapT","mapping","EquirectangularReflectionMapping","needsUpdate","$6bd4eb2914ee2835$export$f1ac3a587b6cbb5d","ShaderMaterial","dispatchEvent","shader","key","setDefine","name","defines","$a21c9b4177584031$export$fe1d788deccfbee3","$5ee05658f4b0e3bf$export$d076a711b55c758a","DataTextureLoader","manager","parse","data","numElements","rgbe_error","rgbe_error_code","msg","fgets","lineLimit","consume","p","pos","len","chunk","String","fromCharCode","apply","subarray","indexOf","byteLength","slice","byteArray","Uint8Array","rgbe_header_info","RGBE_ReadHeader","line","match","gamma_re","exposure_re","format_re","dimensions_re","header","valid","string","comments","programtype","gamma","exposure","charAt","parseFloat","parseInt","w","h","image_rgba_data","RGBE_ReadPixels_RLE","scanline_width","data_rgba","offset","ptr_end","rgbeStart","scanline_buffer","num_scanlines","ptr","count","isEncodedRun","byteValue","off","floatArray","j","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","scale","Math","pow","halfArray","RGBEByteToRGBHalf","min","setDataType","load","url","onLoad","onProgress","onError","texData","colorSpace","LinearSRGBColorSpace","LinearFilter","generateMipmaps","flipY","$13343f7d1c4dd8ec$export$92750171fb06fc99","dim","x","y","a","max","sqrt","xCent","xNorm","yCent","yNorm","tex","UnsignedByteType","RepeatWrapping","$934d596524c3e5a8$export$5bc756cb1c628b75","tiles","renderScale","window","devicePixelRatio","innerWidth","innerHeight","$a399336cf50451da$var$_styleElement","$a399336cf50451da$export$c2252eb3bc5ad0b7","document","createElement","textContent","head","appendChild","container","classList","add","percentageEl","samplesEl","creditsEl","loaderBarEl","descriptionEl","_description","_loaderBar","_percentage","_credits","_samples","_container","setPercentage","attach","perc","style","innerText","toFixed","remove","setSamples","compiling","floor","setCredits","credits","innerHTML","setDescription","description","$ba14a4aaa0cde19b$export$98323a006d35be35","$60fb6dc3c6495c33$export$4c711108e2e8ef5e","$7lx9d","$5Rd1x","$eLX8K","$8mHfG","$891vQ","$kp7Te","$jiuw3","$1EdOY","$cE5k3","$e2Pv4","$d70807ef9a9432a5$export$26f7a8bbd9469530","NONE","FRAME","RENDER","OBJECT","$d70807ef9a9432a5$export$1c0adcb9073b646d","$0bf48deb29103875$export$611736262b635f8d","object","force","cacheKey","property","childNode","isNode","$0bf48deb29103875$export$1f1998cc3c6b56fb","getCacheKey","node","toJSON","startsWith","Array","isArray","child","index","subProperty","$0bf48deb29103875$export$cc7ab17e03dab419","typeOf","isVector2","isVector3","isVector4","isMatrix3","isMatrix4","isColor","ArrayBuffer","$0bf48deb29103875$export$64e17ccd4a503243","params","last4","undefined","Color","Vector2","Vector3","Vector4","Matrix3","Matrix4","$0bf48deb29103875$export$a7a17e76664e3e44","$0bf48deb29103875$export$70c4ae293293ca1e","arrayBuffer","chars","array","btoa","base64","from","atob","c","charCodeAt","$ed612ca4cc02a8a6$var$NodeClasses","Map","$ed612ca4cc02a8a6$var$_nodeId","$ed612ca4cc02a8a6$var$Node","EventDispatcher","nodeType","updateType","updateBeforeType","uuid","MathUtils","generateUUID","version","_cacheKey","_cacheKeyVersion","onUpdate","callback","update","bind","getSelf","onFrameUpdate","onRenderUpdate","onObjectUpdate","self","updateReference","isGlobal","getChildren","traverse","getHash","getUpdateType","getUpdateBeforeType","getNodeType","builder","nodeProperties","getNodeProperties","outputNode","getShared","hash","nodeFromHash","getNodeFromHash","setup","construct","console","warn","increaseUsage","nodeData","getDataFromNode","usageCount","analyze","values","build","output","updateBefore","refNode","addNode","addChain","buildStage","getBuildStage","properties","initialized","context","tempRead","stackNodesBeforeSetup","stack","nodes","snippet","removeChain","getSerializeChildren","serialize","json","nodeChildren","inputNodes","Number","isInteger","meta","keys","deserialize","inputArray","push","inputObject","isRoot","textures","images","extractFromCache","cache","metadata","generator","$ed612ca4cc02a8a6$export$2e2bcd8739ae039","$ed612ca4cc02a8a6$export$4e255b694af9c429","nodeClass","has","$58313529b84a82fb$var$TempNode","isTempNode","hasDependencies","getVectorType","propertyName","tempWrite","nodeVar","getVarFromNode","getPropertyName","addLineFlowCode","$58313529b84a82fb$export$2e2bcd8739ae039","$a62d64263fea5012$var$ArrayElementNode","indexNode","isArrayElementNode","nodeSnippet","indexSnippet","$a62d64263fea5012$export$2e2bcd8739ae039","$6d38ff899a333910$var$ConvertNode","convertTo","requestType","overloadingType","split","getTypeLength","$e6961302f51f6801$var$JoinNode","getTypeFromLength","reduce","cur","primitiveType","getComponentType","snippetValues","input","inputSnippet","inputPrimitiveType","getType","join","$c5c9eb115437e129$var$stringVectorComponents","$c5c9eb115437e129$var$SplitNode","components","isSplitNode","getVectorLength","vectorLength","nodeTypeLength","$3c1a9585fc8e964e$var$SetNode","sourceNode","targetNode","sourceType","targetType","targetSnippet","sourceSnippet","component","$183d0103bf75aaa6$var$InputNode","isInputNode","precision","getInputType","setPrecision","toArray","valueType","fromArray","$183d0103bf75aaa6$export$2e2bcd8739ae039","$44c324112372fceb$var$ConstNode","isConstNode","generateConst","$64e573acaa48d904$var$currentStack","$64e573acaa48d904$var$NodeElements","$64e573acaa48d904$export$9faee53f34e0de2f","nodeElement","$64e573acaa48d904$var$parseSwizzle","props","replace","$64e573acaa48d904$var$shaderNodeHandler","NodeClosure","$64e573acaa48d904$export$773e99721425b3b3","shift","prop","nodeObj","isStackNode","assign","endsWith","test","$64e573acaa48d904$export$e97474e17004dd41","toLowerCase","sort","Reflect","$64e573acaa48d904$var$nodeObjectsCacheMap","WeakMap","$64e573acaa48d904$var$nodeBuilderFunctionsCacheMap","$64e573acaa48d904$var$ShaderNodeObject","obj","altType","nodeObject","Proxy","$64e573acaa48d904$var$getConstNode","$64e573acaa48d904$export$ab8c2ade1f37d88b","$64e573acaa48d904$var$ShaderNodeObjects","objects","$64e573acaa48d904$var$ShaderNodeArray","$64e573acaa48d904$var$ShaderNodeProxy","NodeClass","scope","factor","settings","assignNode","$64e573acaa48d904$export$34baf9226cd3d576","$64e573acaa48d904$var$ShaderNodeImmutable","$64e573acaa48d904$var$ShaderCallNodeInternal","shaderNode","layout","functionNodesCacheMap","functionNode","buildFunctionNode","currentFunctionNode","includes","jsFunc","addStack","removeStack","$64e573acaa48d904$var$ShaderNodeInternal","isArrayInput","toString","setLayout","inputs","$64e573acaa48d904$var$floats","PI","$64e573acaa48d904$var$boolsCacheMap","bool","$64e573acaa48d904$var$uintsCacheMap","uint","$64e573acaa48d904$var$intsCacheMap","map","el","int","$64e573acaa48d904$var$floatsCacheMap","float","$64e573acaa48d904$var$constNodesCacheMap","$64e573acaa48d904$var$safeGetNodeType","_","$64e573acaa48d904$var$ConvertType","cacheMap","every","param","$64e573acaa48d904$export$e11e4dd774259665","$64e573acaa48d904$export$7d95ef31865f68e8","val","$64e573acaa48d904$export$60d11c6747b7deba","$64e573acaa48d904$export$25c7ddd7ae9b45f3","fn","$64e573acaa48d904$export$50a78b1c198bcc62","$64e573acaa48d904$export$c3090653b26dfebd","$64e573acaa48d904$export$1f9ff5f4a6c9361a","if","$64e573acaa48d904$export$35e9368ef982300f","$64e573acaa48d904$export$6b5cd3983e3ee5ab","$64e573acaa48d904$export$7d260a2a5f8bc19e","$64e573acaa48d904$export$877455b195f03b92","$64e573acaa48d904$export$87b259aa03e3d267","$64e573acaa48d904$export$e9830bc863290a54","$64e573acaa48d904$export$63e666f6a33be288","$64e573acaa48d904$export$7adaa2be14210750","$64e573acaa48d904$export$c94f17737369dd81","$64e573acaa48d904$export$9100789c9d999364","$64e573acaa48d904$export$6003f6943477580f","$64e573acaa48d904$export$bffc171a9468d831","$64e573acaa48d904$export$625ee0a1e433837e","$64e573acaa48d904$export$6dba2a1f0d609415","$64e573acaa48d904$export$6b0d90284264dffe","$64e573acaa48d904$export$396e55cb3570606","$64e573acaa48d904$export$a7659f48478e8245","$64e573acaa48d904$export$f7543b5409a93c6b","$64e573acaa48d904$export$33dbb1d5a9f0dc4e","$64e573acaa48d904$export$5af364a6d577c556","$64e573acaa48d904$export$d934d7ff6a9d8a90","$64e573acaa48d904$export$e43bd9f504e4ac00","$64e573acaa48d904$export$3fd0a2bd84e974ef","$64e573acaa48d904$export$c20ae79252505186","$64e573acaa48d904$export$5f5ccafdae4e8c03","$64e573acaa48d904$export$d2b4acf069bf09f5","$64e573acaa48d904$export$6162641457085b05","$64e573acaa48d904$export$7c2c122e6d1ce8c","$64e573acaa48d904$export$997f412242703df4","types","$fd4bff88f296ab08$var$AssignNode","needsSplitAssign","isAvailable","targetLength","target","source","sourceVar","sourceProperty","targetRoot","$fd4bff88f296ab08$export$e6e34fd1f2686227","$9e2d95b0bb876d67$var$VaryingNode","isVaryingNode","nodeVarying","getVaryingFromNode","needsInterpolation","shaderStage","flowNodeFromShaderStage","$9e2d95b0bb876d67$export$3f47f02b8134ef8a","$30ecc590d6fb0411$var$AttributeNode","attributeName","_attributeName","getAttributeName","hasGeometryAttribute","attribute","geometry","getAttribute","getTypeFromAttribute","setAttributeName","geometryAttribute","attributeType","nodeAttribute","$30ecc590d6fb0411$export$2e2bcd8739ae039","$30ecc590d6fb0411$export$af4b9a83f4b00434","$034ed30ba65264d2$var$BypassNode","returnNode","callNode","isBypassNode","$034ed30ba65264d2$export$49c50429ca9c5609","$9d695fdcb6c1a113$var$id","$9d695fdcb6c1a113$export$2e2bcd8739ae039","nodesData","getNodeData","setNodeData","$4c2179587a364d28$var$CacheNode","isCacheNode","previousCache","getCache","globalCache","setCache","$4c2179587a364d28$export$69a3209f1a06c04d","$6c10098160fcd7b9$var$ContextNode","isContextNode","previousContext","getContext","setContext","$6c10098160fcd7b9$export$2e2bcd8739ae039","$6c10098160fcd7b9$export$a078c61943f9dbbe","label","$655b15d454d9aca1$var$IndexNode","isInstanceIndexNode","VERTEX","getVertexIndex","INSTANCE","getInstanceIndex","$655b15d454d9aca1$export$df3f95685a193815","$655b15d454d9aca1$export$3691cd4c77fcb2c4","$f9fd258025b318dd$export$2e2bcd8739ae039","start","finish","direct","indirectDiffuse","indirectSpecular","ambientOcclusion","$414b1568201c856d$var$VarNode","isVarNode","$414b1568201c856d$export$8d72b093afd1813e","append","$39f1d8052e434d46$var$PropertyNode","varying","isPropertyNode","$39f1d8052e434d46$export$2e2bcd8739ae039","$39f1d8052e434d46$export$d541bacb2bda4494","$39f1d8052e434d46$export$cb5f8cbf8b7bd600","$39f1d8052e434d46$export$3a790f19f33c5176","$39f1d8052e434d46$export$df3004878062a594","$39f1d8052e434d46$export$a0ae10b9403517f8","$39f1d8052e434d46$export$9b0829dedd347475","$39f1d8052e434d46$export$2747d91296dfac86","$39f1d8052e434d46$export$7cccf56baed94cee","$39f1d8052e434d46$export$40c82d21b5c7315b","$39f1d8052e434d46$export$8fa8908d67be43df","$39f1d8052e434d46$export$e8f290002a000efa","$39f1d8052e434d46$export$af4f9ca0bc04b1e","$39f1d8052e434d46$export$e1aa5ee431e11795","$39f1d8052e434d46$export$245b4c35387657dc","$39f1d8052e434d46$export$c789db2c85949867","$39f1d8052e434d46$export$c295bac1d6792172","$39f1d8052e434d46$export$146ecbc129c598d1","isParameterNode","$bb0fe926aab6f7ca$var$CodeNode","language","isCodeNode","setIncludes","getIncludes","include","nodeCode","getCodeFromNode","$bb0fe926aab6f7ca$export$2e2bcd8739ae039","keywords","getNodeFunction","getInputs","nodeFunction","parser","parseFunction","getCode","keywordsProperties","propertyRegExp","RegExp","nodeProperty","$b1a1ef0e93f7c8d5$var$UniformGroupNode","shared","isUniformGroup","$b1a1ef0e93f7c8d5$export$f3cd358870d02e31","$b1a1ef0e93f7c8d5$export$6a2a415f960d3137","$5a2c5e11c304ade5$var$UniformNode","isUniformNode","groupNode","setGroup","group","getGroup","getUniformHash","frame","sharedNode","setHashNode","sharedNodeType","nodeUniform","getUniformFromNode","$5a2c5e11c304ade5$export$2e2bcd8739ae039","$5a2c5e11c304ade5$export$379455b567eff87d","arg1","arg2","$94fcc899fcb75301$var$UVNode","isUVNode","$94fcc899fcb75301$export$c774ebbac59e31d3","$ca68d2c8539d97c1$var$TextureSizeNode","textureNode","levelNode","isTextureSizeNode","textureProperty","getMethod","$ca68d2c8539d97c1$export$a8905ccad583a116","$1a899e4dee2452c3$var$OperatorNode","op","aNode","bNode","finalBNode","typeA","typeB","getIntegerType","typeLength","isMatrix","isVector","getVectorFromMatrix","changeComponentType","b","outputLength","fnOpSnippet","getFunctionOperator","$1a899e4dee2452c3$export$e16d8520af44a096","$1a899e4dee2452c3$export$f93b5905241a7cca","$1a899e4dee2452c3$export$6e3a27864ab166fe","$1a899e4dee2452c3$export$159d9494db57879b","$1a899e4dee2452c3$export$159037f780d3415c","$1a899e4dee2452c3$export$411ce8e5a71e3069","$1a899e4dee2452c3$export$53a6892c50694894","$1a899e4dee2452c3$export$9b050841a3a1b328","$1a899e4dee2452c3$export$f517ea36c68d4644","$1a899e4dee2452c3$export$b0b8c4c49050ecd0","$1a899e4dee2452c3$export$b5f536bfcbb0f057","$1a899e4dee2452c3$export$21c0ac7fe1cef1b8","$1a899e4dee2452c3$export$252bb8b3bbdf6749","$1a899e4dee2452c3$export$6003a5f097c73977","$1a899e4dee2452c3$export$6444ef5cd411280c","$1a899e4dee2452c3$export$a74ff8d3fdef72fc","$1a899e4dee2452c3$export$aabc449fa5b5f4c0","$1a899e4dee2452c3$export$361eb278cc70bacf","$1a899e4dee2452c3$export$bfcff4501301c191","$1a899e4dee2452c3$export$f613292be21d0bc3","$1a899e4dee2452c3$export$86c449e29266e58a","$4b9f12ce87d17074$var$MathNode","method","cNode","aType","bType","cType","aLen","bLen","cLen","LENGTH","DISTANCE","DOT","CROSS","ALL","EQUALS","MOD","inputType","isWebGL","isWebGLRenderer","TRANSFORM_DIRECTION","tA","tB","$4b9f12ce87d17074$export$a3295358bff77e","xyz","NEGATE","ONE_MINUS","RECIPROCAL","DIFFERENCE","$4b9f12ce87d17074$export$2335f513bbd82c6d","STEP","MIN","MAX","REFRACT","MIX","ANY","RADIANS","DEGREES","EXP","EXP2","LOG","LOG2","SQRT","INVERSE_SQRT","FLOOR","CEIL","NORMALIZE","FRACT","SIN","COS","TAN","ASIN","ACOS","ATAN","ABS","SIGN","DFDX","DFDY","ROUND","TRUNC","FWIDTH","BITCAST","ATAN2","REFLECT","POW","CLAMP","SMOOTHSTEP","FACEFORWARD","$4b9f12ce87d17074$export$fd293b15f47e270","$4b9f12ce87d17074$export$6b5c1ceb16d01dc3","$4b9f12ce87d17074$export$84bf76cd7afc7469","$4b9f12ce87d17074$export$4154a199d7d90455","$4b9f12ce87d17074$export$e9bab7fafb253603","$4b9f12ce87d17074$export$8449e153fbd325fc","$4b9f12ce87d17074$export$41fc368e1a942b97","$4b9f12ce87d17074$export$b310ec824aaee37f","$4b9f12ce87d17074$export$4edc262d3118e986","$4b9f12ce87d17074$export$bef1f36f5486a6a3","$4b9f12ce87d17074$export$b9fae0bba9d9094d","$4b9f12ce87d17074$export$eba8049fb5020b81","$4b9f12ce87d17074$export$e13f9cec9280faf4","$4b9f12ce87d17074$export$a3fe094919f356fd","$4b9f12ce87d17074$export$803ce6b71a0a94b2","$4b9f12ce87d17074$export$a57bfe0eb79af278","$4b9f12ce87d17074$export$5de3937cb4b592ed","$4b9f12ce87d17074$export$50d414a77b60d802","$4b9f12ce87d17074$export$fcdd3b0b3246a325","$4b9f12ce87d17074$export$41726bdb1fc63f","$4b9f12ce87d17074$export$fd6306be3fde5b04","$4b9f12ce87d17074$export$628dc4eed22b0fbd","$4b9f12ce87d17074$export$c5552dfdbc7cec71","$4b9f12ce87d17074$export$f24224f1c91d8156","$4b9f12ce87d17074$export$aef51622e549b8b0","$4b9f12ce87d17074$export$854ad24922167dc9","$4b9f12ce87d17074$export$bc6322edd97b7d95","$4b9f12ce87d17074$export$2563647325add98e","$4b9f12ce87d17074$export$2077e0241d6afd3c","$4b9f12ce87d17074$export$163bc8c839a1ac04","$4b9f12ce87d17074$export$1fe87bd59b089f0","$4b9f12ce87d17074$export$44e9ddb4871448a2","$4b9f12ce87d17074$export$b8b770ee6a0d9760","$4b9f12ce87d17074$export$96ec731ed4dcb222","$4b9f12ce87d17074$export$8960430cfd85939f","$4b9f12ce87d17074$export$842a2cf37af977e1","$4b9f12ce87d17074$export$35d34bc0ed591a92","$4b9f12ce87d17074$export$9debe8cffacea23","$4b9f12ce87d17074$export$9f17032d917177de","$4b9f12ce87d17074$export$acaf96a27438246b","$4b9f12ce87d17074$export$94132a0e348806d4","$4b9f12ce87d17074$export$bb646b20bb93d339","$4b9f12ce87d17074$export$9c297f60e22e3389","$4b9f12ce87d17074$export$fa569bd808b67eef","$4b9f12ce87d17074$export$c460b8d1abb86675","$4b9f12ce87d17074$export$66864084b1797b69","$4b9f12ce87d17074$export$fff94e9792354cfa","$4b9f12ce87d17074$export$2c9e8a9632a706b2","$4b9f12ce87d17074$export$7d15b64cf5a3a4c4","low","high","$4b9f12ce87d17074$export$f49311db2be090a0","$4b9f12ce87d17074$export$4053e36566dd3d9a","$4b9f12ce87d17074$export$5d74d69f07f6f54b","t","e1","e2","$2b02af04af066f9a$var$sRGBToLinearShader","rgb","mul","lessThanEqual","$2b02af04af066f9a$var$LinearTosRGBShader","sub","$2b02af04af066f9a$var$getColorSpaceMethod","SRGBColorSpace","$2b02af04af066f9a$var$getMethod","$2b02af04af066f9a$var$ColorSpaceNode","LINEAR_TO_LINEAR","$2b02af04af066f9a$var$Methods","LINEAR_TO_sRGB","sRGB_TO_LINEAR","$2b02af04af066f9a$export$63f787070bf67ca4","$2b02af04af066f9a$export$4795885886b9b76f","$2b02af04af066f9a$export$e8dc6f1e7f22b7bf","$2d5eb7e994ba6fa4$var$ExpressionNode","$2d5eb7e994ba6fa4$export$743d82c2fd345b72","$b91ada7d1d5177ff$var$MaxMipLevelNode","log2","$b91ada7d1d5177ff$export$f004dbb349dcdceb","$1f6ba41f58cce433$var$TextureNode","uvNode","isTextureNode","compareNode","depthNode","sampler","updateMatrix","referenceNode","_value","setUpdateMatrix","isDepthTexture","getDefaultUV","channel","getTransformedUV","matrix","xy","setupUV","isFlipY","isRenderTargetTexture","isFramebufferTexture","setY","oneMinus","forceUVContext","getUV","getTextureLevel","generateUV","generateSnippet","uvSnippet","levelSnippet","depthSnippet","compareSnippet","generateTextureLevel","generateTextureCompare","generateTextureLoad","generateTexture","isTexture","isReference","needsColorSpaceToLinear","setSampler","getSampler","uv","clone","level","size","compare","depth","matrixAutoUpdate","newNode","$1f6ba41f58cce433$export$2e2bcd8739ae039","$1f6ba41f58cce433$export$ab69073b3903a075","$1f6ba41f58cce433$export$c9a2885c9238610f","$a987daf999c976be$var$BufferNode","bufferType","bufferCount","isBufferNode","$a987daf999c976be$export$2e2bcd8739ae039","$a987daf999c976be$export$ab1029bcae9ddb4a","$ba76a3875cbb82d8$var$UniformsElementNode","isArrayBufferElementNode","getElementType","$ba76a3875cbb82d8$var$UniformsNode","elementType","_elementType","_elementLength","isArrayBufferNode","getElementLength","elementLength","vector","r","g","z","element","$ba76a3875cbb82d8$export$dfbf0296e531b4e7","$bc3fcdce5f983ff8$var$ReferenceElementNode","isReferenceElementNode","uniformType","arrayType","$bc3fcdce5f983ff8$var$ReferenceNode","reference","setNodeType","getValueFromReference","state","updateValue","$bc3fcdce5f983ff8$export$2e2bcd8739ae039","$bc3fcdce5f983ff8$export$ca50aac9f3ba507f","$bc3fcdce5f983ff8$export$18088e2a413e76c6","$4bd79e1bb700e9e2$var$MaterialReferenceNode","$4bd79e1bb700e9e2$export$f503be583015cb4f","$96d95a21a7a422db$var$Object3DNode","VIEW_MATRIX","object3d","_uniformNode","WORLD_MATRIX","NORMAL_MATRIX","POSITION","VIEW_POSITION","DIRECTION","SCALE","uniformNode","modelViewMatrix","normalMatrix","matrixWorld","setFromMatrixPosition","setFromMatrixScale","getWorldDirection","camera","applyMatrix4","matrixWorldInverse","$96d95a21a7a422db$export$2e2bcd8739ae039","$96d95a21a7a422db$export$85aefaa6fa23372c","$96d95a21a7a422db$export$a7c813ba72ca1af0","$bab16494dbba4b41$var$CameraNode","PROJECTION_MATRIX","PROJECTION_MATRIX_INVERSE","NEAR","FAR","LOG_DEPTH","projectionMatrix","projectionMatrixInverse","near","far","log","LN2","$bab16494dbba4b41$export$dc8d743682f60b2d","$bab16494dbba4b41$export$81bd96ee69286580","$bab16494dbba4b41$export$21e5768aeb8c5c46","$bab16494dbba4b41$export$df9a1a0941dbc754","$bab16494dbba4b41$export$6f7d94c027189d78","$69c7546a6c9d8c2a$var$ModelNode","$69c7546a6c9d8c2a$export$57d0df277658535e","temp","$69c7546a6c9d8c2a$export$7375cd766aaa851d","$69c7546a6c9d8c2a$export$e1011125af6f8b40","$b8bdffed4c803471$var$NormalNode","LOCAL","GEOMETRY","$b8bdffed4c803471$export$2d025416a9cb464f","VIEW","$b8bdffed4c803471$export$c94af1e24aa56d8f","WORLD","$b8bdffed4c803471$export$c7d7ec78bf3ab28a","transformDirection","$b8bdffed4c803471$export$8cce2f8527757c54","$b8bdffed4c803471$export$c58d63d09d102e3c","$b8bdffed4c803471$export$add3225664ac656e","normalize","$b8bdffed4c803471$export$71a9f037ea1539e0","$1b774580ee2e7ae3$var$_propertyCache","$1b774580ee2e7ae3$var$MaterialNode","getFloat","getColor","getTexture","COLOR","colorNode","OPACITY","opacityNode","alphaMap","SPECULAR_STRENGTH","specularMap","ROUGHNESS","roughnessNode","roughnessMap","METALNESS","metalnessNode","metalnessMap","EMISSIVE","emissiveNode","emissiveMap","NORMAL","normalMap","bumpMap","CLEARCOAT","clearcoatNode","clearcoatMap","CLEARCOAT_ROUGHNESS","clearcoatRoughnessNode","clearcoatRoughnessMap","CLEARCOAT_NORMAL","clearcoatNormalMap","SHEEN","sheenNode","sheenColorMap","SHEEN_ROUGHNESS","sheenRoughnessNode","sheenRoughnessMap","clamp","IRIDESCENCE_THICKNESS","iridescenceThicknessMaximum","iridescenceThicknessRange","iridescenceThicknessMap","iridescenceThicknessMinimum","outputType","ALPHA_TEST","SHININESS","SPECULAR_COLOR","REFLECTIVITY","ROTATION","IRIDESCENCE","IRIDESCENCE_IOR","LINE_SCALE","LINE_DASH_SIZE","LINE_GAP_SIZE","LINE_WIDTH","LINE_DASH_OFFSET","POINT_WIDTH","$1b774580ee2e7ae3$export$3030330267c62589","$1b774580ee2e7ae3$export$852ee2194711a41a","$1b774580ee2e7ae3$export$e3d16a46fd4e0183","$1b774580ee2e7ae3$export$7935949e0cf72a01","$1b774580ee2e7ae3$export$a61065844a540229","$1b774580ee2e7ae3$export$5447cf3a560d2eed","$1b774580ee2e7ae3$export$aab42c7f7fd50fe","$1b774580ee2e7ae3$export$c372ad2642cfd701","$1b774580ee2e7ae3$export$ed4ec59eb9c0ad6c","$1b774580ee2e7ae3$export$c30da46075fba8bb","$1b774580ee2e7ae3$export$bcb4b1fc59604158","$1b774580ee2e7ae3$export$1deee7039751e39b","$1b774580ee2e7ae3$export$1e8c99bce15509ea","$1b774580ee2e7ae3$export$22a360a238f20723","$1b774580ee2e7ae3$export$ca8d8f9bb84c2b06","$1b774580ee2e7ae3$export$c53217b49af64201","$1b774580ee2e7ae3$export$2991d95653bddf71","$1b774580ee2e7ae3$export$4d5a92c4b0801e42","$1b774580ee2e7ae3$export$edac0c112e716da0","$1b774580ee2e7ae3$export$505058bbaa0ad019","$1b774580ee2e7ae3$export$200b8bf19a7aecc9","$1b774580ee2e7ae3$export$3154261658c8ee4b","$1b774580ee2e7ae3$export$dc06cf49d582ad47","$1b774580ee2e7ae3$export$194200c8fa44fbfb","$1b774580ee2e7ae3$export$fadc4e3375c15b33","$f38f6f7a1974ae48$var$PositionNode","$f38f6f7a1974ae48$export$a0f5007edcaeec62","$f38f6f7a1974ae48$export$78cc3a7ea225109f","VIEW_DIRECTION","$f38f6f7a1974ae48$export$3dfd735ebeac9bfd","negate","WORLD_DIRECTION","$f38f6f7a1974ae48$export$3e8de2ffef4e6f91","$f38f6f7a1974ae48$export$7a5e5a23009fd1a3","$f38f6f7a1974ae48$export$80de5077965297a8","$52dd43a5825c6027$var$ModelViewProjectionNode","positionNode","mvp","position","$52dd43a5825c6027$export$64e914589db9c49e","$a2ee15aa30b9df14$var$BufferAttributeNode","bufferStride","bufferOffset","usage","StaticDrawUsage","instanced","isBufferAttribute","isInstancedBufferAttribute","itemSize","stride","isInterleavedBuffer","InterleavedBuffer","bufferAttribute","InterleavedBufferAttribute","setUsage","getBufferAttributeFromNode","setInstanced","$a2ee15aa30b9df14$export$1a0889be1cc680b2","$a2ee15aa30b9df14$export$41a4a8837b048fd7","DynamicDrawUsage","$a2ee15aa30b9df14$export$6776ccefa3811157","$a2ee15aa30b9df14$export$35d450082ae9e736","bufferNode","$23b32bee81a3f7cb$var$InstanceNode","instanceMesh","instanceMatrixNode","instanceColorNode","instanceAttribute","instanceMatrix","InstancedInterleavedBuffer","bufferFn","instanceColorAttribute","instanceColor","InstancedBufferAttribute","instancePosition","m","transformedNormal","div","dot","instanceNormal","$23b32bee81a3f7cb$export$9544d5bb712b01ea","$cbc2a1ac0ca143f0$var$TangentNode","hasAttribute","computeTangents","$cbc2a1ac0ca143f0$export$ffefde522c47f278","$cbc2a1ac0ca143f0$export$f53a7d05db86e284","$cbc2a1ac0ca143f0$export$610e156c53541bb9","$cbc2a1ac0ca143f0$export$58a1135040e57d7d","$cbc2a1ac0ca143f0$export$c6b946ad70a6b9af","$6e65e07266b700c1$var$BatchNode","batchMesh","batchingIdNode","matriceTexture","_matricesTexture","toVar","mod","batchingMatrix","bm","batchingNormal","mulAssign","$6e65e07266b700c1$export$712ea50be43a7858","$d39f32f2d86e1d70$var$SkinningNode","skinnedMesh","useReference","bindMatrixNode","bindMatrixInverseNode","boneMatricesNode","skinIndexNode","skinWeightNode","skeleton","bones","bindMatrix","bindMatrixInverse","boneMatrices","boneMatX","boneMatY","boneMatZ","boneMatW","skinVertex","skinned","skinPosition","skinMatrix","skinNormal","$d39f32f2d86e1d70$export$a1a5c22177b275e2","$477d263401558a8d$var$LoopNode","getVarName","getProperties","stackNode","returnsNode","end","condition","internalParam","startSnippet","endSnippet","declarationSnippet","conditionalSnippet","updateSnippet","getVar","forSnippet","addFlowCode","tab","addFlowTab","stackSnippet","returnsSnippet","removeFlowTab","$477d263401558a8d$export$f9ef67375ddc185","$477d263401558a8d$export$c88190a7f68b38c0","returns","$bddcd27df2123272$var$morphTextures","$bddcd27df2123272$var$morphVec4","$bddcd27df2123272$var$getMorph","bufferMap","influence","texelIndex","bufferAttrib","$bddcd27df2123272$var$MorphNode","mesh","morphBaseInfluence","hasMorphPosition","morphAttributes","hasMorphNormals","normal","morphAttribute","color","morphTargetsCount","$bddcd27df2123272$var$getEntry","hasMorphColors","entry","morphTargets","morphNormals","morphColors","vertexDataCount","attributes","ceil","bufferTexture","DataArrayTexture","vertexDataStride","morphTarget","morphNormal","morphColor","fromBufferAttribute","addEventListener","disposeTexture","delete","removeEventListener","isInstancedMesh","morphTexture","addAssign","morphTargetsRelative","morphTargetInfluences","$bddcd27df2123272$export$1b980db58c123a7f","$01b702315b605b5f$var$ReflectVectorNode","reflectView","reflect","$01b702315b605b5f$export$ccfb4f831eb666bc","$94a9a63327e9267a$var$CubeTextureNode","isCubeTextureNode","coordinateSystem","WebGPUCoordinateSystem","yz","cubeUV","$94a9a63327e9267a$export$f8948c996a1778e8","$b355d587e7d0ea8b$var$LightingNode","$b355d587e7d0ea8b$export$2e2bcd8739ae039","$bb48a619ccab5421$var$overrideMaterial","$bb48a619ccab5421$var$AnalyticLightNode","light","rtt","shadowNode","_defaultColorNode","isAnalyticLightNode","castShadow","setupShadow","shadowCoord","createNodeMaterial","fragmentNode","isShadowNodeMaterial","shadow","createRenderTarget","mapSize","depthTexture","DepthTexture","NearestFilter","compareFunction","LessCompare","updateProjectionMatrix","bias","normalBias","frustumTest","greaterThanEqual","and","coordZ","shadowColor","mix","disposeShadow","updateShadow","scene","currentOverrideMaterial","overrideMaterial","updateMatrices","currentRenderTarget","currentRenderObjectFunction","getRenderObjectFunction","setRenderObjectFunction","renderObject","copy","multiplyScalar","intensity","$bb48a619ccab5421$export$2e2bcd8739ae039","$78e340fa4839c21a$var$LightNodes","$78e340fa4839c21a$var$sortLights","lights","$78e340fa4839c21a$export$d54a00e491588ed2","lightNodes","totalDiffuseNode","totalSpecularNode","outgoingLightNode","_hash","hasLight","lightNode","lightingModel","outgoingLight","backdrop","backdropAlpha","directDiffuse","directSpecular","reflectedLight","totalDiffuse","bypass","_getLightNodeById","fromLights","lightClass","$78e340fa4839c21a$export$505493ddf8b9d5d8","lightNodeClass","$0a5d54aad75d785f$var$AONode","aoNode","$013987772ea5ca77$var$LightingContextNode","backdropNode","backdropAlphaNode","_context","radiance","irradiance","iblIrradiance","$013987772ea5ca77$export$90120f928c96f1a6","$ab000a4873a702a9$var$CondNode","condNode","ifNode","elseNode","ifType","elseType","needsOutput","ifSnippet","elseSnippet","$ab000a4873a702a9$export$2e2bcd8739ae039","$ab000a4873a702a9$export$7ffafceb12143143","$e5ab6d927267d03a$var$cubeUV_r0","$e5ab6d927267d03a$var$cubeUV_m0","$e5ab6d927267d03a$var$cubeUV_r1","$e5ab6d927267d03a$var$cubeUV_m1","$e5ab6d927267d03a$var$cubeUV_r4","$e5ab6d927267d03a$var$cubeUV_m4","$e5ab6d927267d03a$var$cubeUV_r5","$e5ab6d927267d03a$var$cubeUV_m5","$e5ab6d927267d03a$var$cubeUV_r6","$e5ab6d927267d03a$var$cubeUV_m6","$e5ab6d927267d03a$var$cubeUV_minMipLevel","$e5ab6d927267d03a$var$cubeUV_minTileSize","$e5ab6d927267d03a$var$getFace","direction","absDirection","face","greaterThan","else","$e5ab6d927267d03a$var$getUV","equal","elseif","$e5ab6d927267d03a$var$roughnessToMip","roughness","mip","$e5ab6d927267d03a$export$fcce7887255d1c69","uv_immutable","zyx","xzy","xz","$e5ab6d927267d03a$export$4c2c653e762aa352","sampleDir_immutable","roughness_immutable","CUBEUV_TEXEL_WIDTH","CUBEUV_TEXEL_HEIGHT","CUBEUV_MAX_MIP","sampleDir","mipF","mipInt","color0","$e5ab6d927267d03a$var$bilinearCubeUV","notEqual","color1","direction_immutable","mipInt_immutable","filterInt","faceSize","subAssign","$e5ab6d927267d03a$var$getSample","outputDirection","theta","axis","cosTheta","cross","latitudinal","poleAxis","weights","samples","dTheta","equals","gl_FragColor","$38a35b7c4918d3b0$var$_generator","$38a35b7c4918d3b0$var$_cache","$38a35b7c4918d3b0$var$PMREMNode","_pmrem","_generator","_texture","_width","_height","_maxMip","updateFromTexture","cubeUVSize","$38a35b7c4918d3b0$var$_generateCubeUVSize","imageHeight","maxMip","texelWidth","texelHeight","pmrem","pmremVersion","isPMREMTexture","$38a35b7c4918d3b0$var$_getPMREMFromTexture","cacheTexture","isCubeTexture","some","fromCubemap","createPMREMGenerator","WebGLCoordinateSystem","$38a35b7c4918d3b0$export$7563f7aed5e67dc","$61f2742ccc5451d4$var$envNodeCache","$61f2742ccc5451d4$var$EnvironmentNode","envNode","cacheEnvNode","$61f2742ccc5451d4$var$createRadianceContext","$61f2742ccc5451d4$var$createIrradianceContext","isolateRadiance","clearcoatRadiance","isolateClearcoatRadiance","normalViewNode","reflectVec","normalWorldNode","$5aad3d206b752601$var$ViewportNode","isViewportNode","VIEWPORT","RESOLUTION","getViewport","getDrawingBufferSize","outX","$5aad3d206b752601$export$fd654ba033f324f0","$5aad3d206b752601$export$2f423b0da8fd0d65","outY","COORDINATE","coord","getFragCoord","resolution","TOP_LEFT","BOTTOM_LEFT","TOP_RIGHT","BOTTOM_RIGHT","$5aad3d206b752601$export$d7b7311ec04a3e8f","$5aad3d206b752601$export$76b08933cd505895","$24ec004cbc0fcec7$var$_size","$24ec004cbc0fcec7$var$ViewportTextureNode","framebufferTexture","FramebufferTexture","LinearMipmapLinearFilter","isOutputTextureNode","currentGenerateMipmaps","copyFramebufferToTexture","$24ec004cbc0fcec7$export$2e2bcd8739ae039","$24ec004cbc0fcec7$export$e3866d20de3e3579","$24ec004cbc0fcec7$export$e03dc40ba6105796","$01887dc47366e57b$var$sharedDepthbuffer","$01887dc47366e57b$var$ViewportDepthTextureNode","$01887dc47366e57b$export$8eb3800fd0750433","$17aa36cef00f0046$var$ViewportDepthNode","valueNode","isViewportDepthNode","DEPTH_PIXEL","getFragDepth","DEPTH","$17aa36cef00f0046$export$22f8344c678d1434","DEPTH_TEXTURE","$17aa36cef00f0046$export$be58bb2e0c565f9d","$17aa36cef00f0046$var$depthPixelBase","viewZ","$17aa36cef00f0046$export$69a1d6a4b34b43cb","$a41fc910d761c6c9$var$ClippingNode","DEFAULT","clippingContext","localClipIntersection","localClippingCount","globalClippingCount","numClippingPlanes","numUnionClippingPlanes","ALPHA_TO_COVERAGE","setupAlphaToCoverage","planes","setupDefault","plane","clippingPlanes","distanceToPlane","distanceGradient","clipOpacity","fwidth","discard","unionClipOpacity","clipped","$a41fc910d761c6c9$export$f25885999f2292e7","$a41fc910d761c6c9$export$f57c0807fb97f806","$2be1b52cd1acf25a$var$FrontFacingNode","isFrontFacingNode","getFrontFacing","$2be1b52cd1acf25a$export$c2922972355d19f8","$10ae8478bd7328e0$var$NodeMaterials","$10ae8478bd7328e0$var$NodeMaterial","isNodeMaterial","forceSinglePass","fog","normals","colorSpaced","lightsNode","normalNode","alphaTestNode","vertexNode","customProgramCacheKey","resultNode","setupPosition","addFlow","clippingNode","setupClipping","depthWrite","setupDepth","setupNormal","setupDiffuseColor","setupVariants","setupLighting","basicOutput","setupOutput","alphaToCoverage","logarithmicDepthBuffer","fragDepth","isSkinnedMesh","isBatchedMesh","vertex","vertexColors","alphaTest","flatShading","dFdx","dFdy","getEnvNode","environmentNode","setupLights","materialLightsNode","aoMap","lightsN","setupLightingModel","emissive","fogNode","toneMappingNode","toneMapped","outputColorSpace","currentColorSpace","NoColorSpace","linearToColorSpace","setDefaultValues","descriptors","getOwnPropertyDescriptors","prototype","getOwnPropertyDescriptor","Material","fromMaterial","nodeMaterial","$10ae8478bd7328e0$export$c8ea147e614cf837","$10ae8478bd7328e0$export$2e2bcd8739ae039","$10ae8478bd7328e0$export$319f45b172b6f79c","$97025b15d9adcd1d$var$StackNode","parent","_currentCond","boolNode","methodNode","previousStack","$f53aca0b2c61faf5$var$EquirectUVNode","dirNode","dir","atan2","asin","$e9483120aa7e8353$var$direction","weakMap","clear","Int8Array","Int16Array","Int32Array","Uint32Array","$c187e10c31223a15$var$StructTypeNode","isStructTypeNode","getMemberTypes","$c4467f4f76adbbdc$var$OutputStructNode","members","isOutputStructNode","getStructTypeFromNode","isOutputStructVar","structPrefix","$12090892b134c7d1$var$HashNode","seedNode","word","shiftRight","bitXor","$bea81d3d47df4b7c$export$b465b7f8c1ade29b","k","lessThan","$8844c17352a23ab3$export$80f38d456afce276","fract","abs","$8844c17352a23ab3$export$ac732b7bf15e2f51","$8844c17352a23ab3$export$89102c2848a0961f","p_immutable","spd","time","rz","bp","dg","$55876c950842622b$var$DiscardNode","$55876c950842622b$export$10061501166abdea","$460d92623733c4c9$var$FunctionOverloadingNode","functionNodes","parametersNodes","_candidateFnCall","candidateFnCall","candidateFn","candidateScore","score","$460d92623733c4c9$var$overloadingBaseFn","$460d92623733c4c9$export$16973c2f8bfadf46","$4759ae0a1a2b1b23$var$MatcapUVNode","$6ffb9e9f5ecc5502$var$TimerNode","deltaTime","DELTA","frameId","GLOBAL","$6ffb9e9f5ecc5502$export$f66c752b9fc69480","timeScale","$75bb1ee776998e4f$var$OscNode","SINE","timeNode","sin","SQUARE","round","TRIANGLE","SAWTOOTH","$9e302b9293f4844a$var$PackingNode","DIRECTION_TO_COLOR","COLOR_TO_DIRECTION","$9e302b9293f4844a$export$a0a884e7f644b818","$9e302b9293f4844a$export$cafa8df232264cc9","$62b5a52b673bdb12$var$RemapNode","inLowNode","inHighNode","outLowNode","outHighNode","doClamp","$62b5a52b673bdb12$export$aee1dbae5de2db9d","$62b5a52b673bdb12$export$806e65b7e825a84a","$9a3a3d2800a30984$var$RotateUVNode","rotationNode","centerNode","rotate","$ff9294daf0f794c0$var$RotateNode","cosAngle","cos","sinAngle","rotationMatrix","rotationXMatrix","rotation","rotationYMatrix","rotationZMatrix","$22637862fb1c2c60$var$SpriteSheetUVNode","countNode","frameNode","frameNum","column","row","reciprocal","uvFrameOffset","$5a421bc687dc4a68$var$StorageArrayElementNode","storageBufferNode","isStorageArrayElementNode","instanceIndex","bufferObject","setupPBO","isAssignContext","generatePBO","$5a421bc687dc4a68$export$9c4d65803fb1edd1","$fa6828b33e09c0e9$var$TriplanarTexturesNode","textureXNode","textureYNode","textureZNode","scaleNode","bf","tx","ty","zx","tz","textureX","textureY","textureZ","$fa6828b33e09c0e9$export$98913c3ae6fbe803","Plane","RenderTarget","$52ba485ef810e651$var$BitangentNode","crossNormalTangent","$52ba485ef810e651$export$d7aac59a4a8f24d4","$52ba485ef810e651$export$38ca19aed25b489d","$21ac2e218bcd6cd4$export$6b671943eab6b881","isVertexColorNode","$6cd745c2ea0d829e$var$RendererReferenceNode","$377129c2cd62e2d1$var$bC","$377129c2cd62e2d1$var$w0","$377129c2cd62e2d1$var$w1","$377129c2cd62e2d1$var$w2","$377129c2cd62e2d1$var$w3","$377129c2cd62e2d1$var$g0","$377129c2cd62e2d1$var$g1","$377129c2cd62e2d1$var$h0","$377129c2cd62e2d1$var$h1","$377129c2cd62e2d1$var$bicubic","texelSize","lod","uvScaled","zw","iuv","fuv","g0x","g1x","h0x","h1x","h0y","h1y","p0","p1","p2","p3","$377129c2cd62e2d1$var$textureBicubicMethod","lodNode","fLodSize","cLodSize","fLodSizeInv","cLodSizeInv","fSample","cSample","$377129c2cd62e2d1$var$TextureBicubicNode","blurNode","$9f5f3c10215bcabb$var$PointUVNode","isPointUVNode","$ed90125cba067264$var$SceneNode","BACKGROUND_BLURRINESS","BACKGROUND_INTENSITY","error","isStorageBufferNode","_attribute","_varying","setBufferObject","registerTransform","$589b7dbb0b726765$var$TextureStoreNode","storeNode","isStoreTextureNode","generateStore","storeSnippet","generateTextureStore","userData","$45078c8cf7199bb1$export$12868464378242d5","base","blend","cond","$45078c8cf7199bb1$export$20744c9ea7cb4182","$45078c8cf7199bb1$export$80eb8887666700bd","$45078c8cf7199bb1$export$fb5a4f9091ecd26a","$45078c8cf7199bb1$var$BlendModeNode","blendMode","baseNode","blendNode","BURN","DODGE","SCREEN","OVERLAY","$45078c8cf7199bb1$export$9c0bd85cee0180d7","$45078c8cf7199bb1$export$aff2976bcdc2c076","$45078c8cf7199bb1$export$29dd17c7f3c81c36","$45078c8cf7199bb1$export$be623a1d3e871e62","$2addaf1aca385ff6$var$dHdxy_fwd","bumpScale","texNode","Hll","sampleTexture","$2addaf1aca385ff6$var$perturbNormalArb","surf_pos","surf_norm","dHdxy","vSigmaX","R1","vSigmaY","R2","vN","fDet","vGrad","sign","$2addaf1aca385ff6$var$BumpMapNode","$9fd94097d02ed2fc$var$saturationNode","adjustment","$9fd94097d02ed2fc$export$5c6e3c2b59b7fbbe","$9fd94097d02ed2fc$var$vibranceNode","average","mx","amt","$9fd94097d02ed2fc$var$hueNode","$9fd94097d02ed2fc$var$ColorAdjustmentNode","adjustmentNode","callParams","SATURATION","VIBRANCE","HUE","$9fd94097d02ed2fc$export$c8ee7f6ff22a137e","$9fd94097d02ed2fc$export$9d69f5c452819e4","$9fd94097d02ed2fc$export$97d7b0c7ddb78dcf","$9fd94097d02ed2fc$export$7de5c0daa14eb656","luma","$9fd94097d02ed2fc$export$454d09aca5f3ea63","threshold","$dc29e1c3a610392c$var$perturbNormal2Arb","eye_pos","mapN","q0","q1","st0","st1","q1perp","q0perp","N","T","B","det","inverseSqrt","$dc29e1c3a610392c$var$NormalMapNode","normalMapType","TangentSpaceNormalMap","ObjectSpaceNormalMap","tangent","$f1d0c77778203dd9$var$PosterizeNode","stepsNode","$2fff765b3e5206cf$var$LinearToneMappingNode","$2fff765b3e5206cf$var$ReinhardToneMappingNode","$2fff765b3e5206cf$var$OptimizedCineonToneMappingNode","$2fff765b3e5206cf$var$RRTAndODTFit","$2fff765b3e5206cf$var$ACESFilmicToneMappingNode","ACESInputMat","ACESOutputMat","$2fff765b3e5206cf$var$LINEAR_REC2020_TO_LINEAR_SRGB","$2fff765b3e5206cf$var$LINEAR_SRGB_TO_LINEAR_REC2020","$2fff765b3e5206cf$var$agxDefaultContrastApprox","x_immutable","x2","x4","$2fff765b3e5206cf$var$AGXToneMappingNode","colortone","AgXInsetMatrix","AgXOutsetMatrix","AgxMinEv","AgxMaxEv","$2fff765b3e5206cf$var$toneMappingLib","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","AgXToneMapping","$2fff765b3e5206cf$var$ToneMappingNode","toneMapping","NoToneMapping","exposureNode","$2fff765b3e5206cf$export$6a4fd05fb7fdb032","toneMappingParams","$2fff765b3e5206cf$export$91d5b91df9dcddb2","$e846a19a35b3ac4d$var$_sharedFramebuffer","$e846a19a35b3ac4d$var$ViewportSharedTextureNode","$692fde6ccb23330d$var$PassTextureNode","passNode","$692fde6ccb23330d$var$PassNode","_pixelRatio","_textureNode","_depthTextureNode","_depthNode","_viewZNode","_cameraNear","_cameraFar","isPassNode","getTextureNode","getTextureDepthNode","getViewZNode","cameraNear","cameraFar","getDepthNode","getPixelRatio","getSize","currentToneMapping","currentToneMappingNode","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","$692fde6ccb23330d$export$c017166c1605c3ce","pass","$c8776e54551061c7$var$_camera","OrthographicCamera","$c8776e54551061c7$var$QuadGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","$c8776e54551061c7$var$_geometry","$c8776e54551061c7$var$QuadMesh","Mesh","renderAsync","$ef71ed4c2ca5e033$var$quadMesh1","$ef71ed4c2ca5e033$var$quadMesh2","$ef71ed4c2ca5e033$var$GaussianBlurNode","sigma","directionNode","_invSize","_passDirection","_horizontalRT","_verticalRT","currentTexture","_material","textureType","kernelSize","gaussianCoefficients","_getCoefficients","invSize","weightSum","diffuseSum","uvOffset","sample1","sample2","kernelRadius","coefficients","exp","$686a7b73ffb1f14f$var$quadMeshComp","$686a7b73ffb1f14f$var$AfterImageNode","damp","textureNodeOld","_compRT","_oldRT","when_gt","y_immutable","afterImg","texelOld","texelNew","materialComposed","_materialComposed","$f50d9b87a7a336ae$var$quadMesh","$f50d9b87a7a336ae$var$AnamorphicNode","tresholdNode","_renderTarget","anamorph","halfSamples","total","softness","$406e115494500d7a$var$FunctionCallNode","parameters","setParameters","getParameters","inputNode","functionName","func","$f447679c40dee83e$var$ScriptableValueNode","_cache","outpuType","events","isScriptableValueNode","isScriptableOutputNode","URL","revokeObjectURL","refresh","getValue","createObjectURL","Blob","$f447679c40dee83e$export$42b02b32bb931341","$3b97e526da0b8d9c$var$Resources","$3b97e526da0b8d9c$var$Parameters","scriptableNode","getLayout","getInputLayout","$3b97e526da0b8d9c$export$90b4d2ff6acb88af","$3b97e526da0b8d9c$var$ScriptableNode","codeNode","_local","_output","_outputs","_source","_method","_object","_needsOutputUpdate","onRefresh","isScriptableNode","setLocal","getLocal","_refresh","getOutputLayout","setOutput","outputs","getOutput","getParameter","setParameter","deleteParameter","getDefaultOutput","clearParameters","getObject","callAsync","getDefaultOutputNode","THREE","TSL","elements","_exec","interfaceProps","declarations","Function","$3809eb68bf73c76a$var$FogNode","factorNode","isFogNode","getViewZ","$3809eb68bf73c76a$export$2e2bcd8739ae039","$e2425efb24061140$var$FogRangeNode","nearNode","farNode","isFogRangeNode","$c729351a4eb4857e$var$FogExp2Node","densityNode","isFogExp2Node","density","$87c28f8674e7c05e$var$min","$87c28f8674e7c05e$var$max","$87c28f8674e7c05e$var$RangeNode","minNode","maxNode","minLength","maxLength","minValue","maxValue","setScalar","minElementValue","getComponent","maxElementValue","lerp","random","convert","$8390cbdc39eb8daf$var$ComputeNode","computeNode","workgroupSize","isComputeNode","dispatchCount","updateDispatchCount","onInit","compute","$a2368c5766fd8ca1$var$LightNode","TARGET_DIRECTION","$a2368c5766fd8ca1$export$bee642e950dff992","$59bf9032899d3796$export$f35276a09da0cd36","lightDistance","cutoffDistance","decayExponent","distanceFalloff","pow4","pow2","$728dd7107af8707a$var$PointLightNode","cutoffDistanceNode","decayExponentNode","distance","decay","lVector","lightDirection","lightAttenuation","lightColor","PointLight","$98665e686eef642b$var$DirectionalLightNode","DirectionalLight","$b67836d3785d959e$var$SpotLightNode","coneCosNode","penumbraCosNode","angle","penumbra","getSpotAttenuation","angleCosine","angleCos","spotAttenuation","$b67836d3785d959e$export$2e2bcd8739ae039","SpotLight","$18f320338d367599$var$IESSpotLight","iesMap","recursive","$36460bd64d9cbbe7$var$IESSpotLightNode","acos","$e14fac9aa6af7cb8$var$AmbientLightNode","AmbientLight","$cfe0d9eb45995a58$var$HemisphereLightNode","lightPositionNode","lightDirectionNode","groundColorNode","groundColor","dotNL","HemisphereLight","$b1661f52600f5bf9$var$checkerShaderNode","cx","cy","$b1661f52600f5bf9$var$CheckerNode","$084366e78c3056ee$var$defaultValues","PointsMaterial","useAlphaToCoverage","useColor","pointWidth","pointColorNode","setupShaders","setValues","mvPos","aspect","clipPos","vUv","alpha","len2","dlen","$6aed58752e28f095$var$defaultValues","LineBasicMaterial","isLineBasicNodeMaterial","$a1ab63fdcfebff2c$var$defaultValues","LineDashedMaterial","isLineDashedNodeMaterial","offsetNode","dashScaleNode","dashSizeNode","gapSizeNode","dashGapNode","vLineDistance","vLineDistanceOffset","$7bd65180ac4e97d3$var$defaultValues","useDash","dashed","useWorldUnits","dashOffset","lineWidth","lineColorNode","worldUnits","trimSegment","nearEstimate","instanceStart","instanceEnd","clipStart","clipEnd","ndcStart","ndcEnd","clip","worldDir","tmpFwd","worldUp","worldFwd","worldPos","hw","or","clipPose","closestLineToLine","p4","p13","p43","p21","d1343","d4321","d1321","d4343","denom","d2121","mua","numer","mub","offsetNodeNode","instanceDistanceStart","instanceDistanceEnd","lineDistance","worldStart","worldEnd","rayEnd","lineDir","norm","delta","dnorm","instanceColorStart","instanceColorEnd","$e744517f1f842325$var$defaultValues","MeshNormalMaterial","isMeshNormalNodeMaterial","$ea28acc48ba63a82$var$defaultValues","MeshBasicMaterial","isMeshBasicNodeMaterial","$2b7c3efb3816dd42$var$F_Schlick","f0","f90","dotVH","fresnel","exp2","$18b1e0b3f7355037$var$BRDF_Lambert","diffuseColor","$cabb4146008f1d9c$var$G_BlinnPhong_Implicit","$cabb4146008f1d9c$var$D_BlinnPhong","dotNH","$cabb4146008f1d9c$var$BRDF_BlinnPhong","halfDir","F","G","D","$cabb4146008f1d9c$export$2e2bcd8739ae039","specular","$3899d873f8f0089f$var$defaultValues","MeshLambertMaterial","isMeshLambertNodeMaterial","$9683d95a67b6c653$var$defaultValues","MeshPhongMaterial","isMeshPhongNodeMaterial","shininessNode","specularNode","$d951bb04aae6a6da$var$getGeometryRoughness","dxy","$ef578de3b1c1c38b$var$getRoughness","geometryRoughness","roughnessFactor","$a592aefd9a57443e$var$V_GGX_SmithCorrelated","dotNV","a2","gv","gl","$0656d21c7bca06e4$var$D_GGX","$39f97bfab1e53803$var$BRDF_GGX","iridescenceFresnel","normalView","V","$9e1039afc7d3407e$var$DFGApprox","c0","c1","a004","$3bfaead20e0c0358$var$EnvironmentBRDF","specularColor","specularF90","fab","$afdc49dcc398bbdc$var$Schlick_to_F0","f","saturate","x5","$25e530a9e50643cf$var$D_Charlie","invAlpha","sin2h","cos2h","$25e530a9e50643cf$var$V_Neubelt","$25e530a9e50643cf$var$BRDF_Sheen","$945901ff02126f32$var$XYZ_TO_REC709","$945901ff02126f32$var$Fresnel0ToIor","fresnel0","sqrtF0","$945901ff02126f32$var$IorToFresnel0","transmittedIor","incidentIor","$945901ff02126f32$var$evalSensitivity","OPD","phase","VAR","$945901ff02126f32$var$evalIridescence","outsideIOR","eta2","cosTheta1","thinFilmThickness","baseF0","iridescenceIOR","sinTheta2Sq","cosTheta2","cosTheta2Sq","R12","T121","phi12","phi21","baseIOR","R23","vec3","phi23","phi","R123","r123","Rs","I","Cm","Sm","$945901ff02126f32$var$IBLSheenBRDF","viewDir","r2","DG","$945901ff02126f32$var$clearcoatF0","$945901ff02126f32$var$clearcoatF90","$945901ff02126f32$export$2e2bcd8739ae039","clearcoat","sheen","iridescence","clearcoatSpecularDirect","clearcoatSpecularIndirect","sheenSpecularDirect","sheenSpecularIndirect","iridescenceF0","dotNVi","computeMultiscattering","singleScatter","multiScatter","FssEss","Fr","Ems","Ess","Favg","Fms","ccIrradiance","dotNLcc","clearcoatEnv","singleScattering","multiScattering","cosineWeightedIrradiance","totalScattering","diffuse","aoNV","aoExp","Fcc","clearcoatLight","sheenEnergyComp","sheenLight","$c36b3908a77c1e8c$var$defaultValues","MeshStandardMaterial","$c36b3908a77c1e8c$var$MeshStandardNodeMaterial","isMeshStandardNodeMaterial","specularColorNode","$c36b3908a77c1e8c$export$2e2bcd8739ae039","$035b25db3b7ff26f$var$defaultValues","MeshPhysicalMaterial","$035b25db3b7ff26f$var$MeshPhysicalNodeMaterial","isMeshPhysicalNodeMaterial","clearcoatNormalNode","iridescenceNode","iridescenceIORNode","iridescenceThicknessNode","specularIntensityNode","transmissionNode","thicknessNode","attenuationDistanceNode","attenuationColorNode","useClearcoat","useIridescence","useSheen","$035b25db3b7ff26f$export$2e2bcd8739ae039","$bf8e5fa59de1abe1$var$SSSLightingModel","useSSS","thicknessColorNode","thicknessDistortionNode","thicknessAmbientNode","thicknessAttenuationNode","thicknessPowerNode","thicknessScaleNode","scatteringHalf","scatteringIllu","scatteringDot","$e834329877aa2350$var$defaultValues","isPointsNodeMaterial","transparent","sizeNode","$6d3ee420372fd62a$var$defaultValues","SpriteMaterial","isSpriteNodeMaterial","mvPosition","alignedPosition","center","rotatedPosition","modelViewProjection","$baf74944e4f4d36f$var$superFromTypeFunction","MaterialLoader","createMaterialFromType","$43e99bbd272b419a$export$fcb3e1b8d74c8b23","b_immutable","t_immutable","f_immutable","$43e99bbd272b419a$export$806591ac4956b890","val_immutable","$43e99bbd272b419a$export$c4655eced0ba6aa5","$43e99bbd272b419a$export$2924b498742ec559","$43e99bbd272b419a$var$mx_bilerp_0","v0_immutable","v1_immutable","v2_immutable","v3_immutable","s_immutable","v3","v2","v1","v0","s1","$43e99bbd272b419a$var$mx_bilerp_1","$43e99bbd272b419a$export$d7adc3042282e3fa","$43e99bbd272b419a$var$mx_trilerp_0","v4_immutable","v5_immutable","v6_immutable","v7_immutable","r_immutable","v7","v6","v5","v4","t1","r1","$43e99bbd272b419a$var$mx_trilerp_1","$43e99bbd272b419a$export$83e686cd331bbe85","$43e99bbd272b419a$var$mx_gradient_float_0","hash_immutable","bitAnd","u","$43e99bbd272b419a$var$mx_gradient_float_1","z_immutable","$43e99bbd272b419a$export$a7c336d113e7d56e","$43e99bbd272b419a$var$mx_gradient_vec3_0","$43e99bbd272b419a$var$mx_gradient_vec3_1","$43e99bbd272b419a$export$5fad2327a2fce05","$43e99bbd272b419a$var$mx_gradient_scale2d_0","v_immutable","$43e99bbd272b419a$var$mx_gradient_scale3d_0","$43e99bbd272b419a$var$mx_gradient_scale2d_1","$43e99bbd272b419a$export$9545d7b50b8a37fa","$43e99bbd272b419a$var$mx_gradient_scale3d_1","$43e99bbd272b419a$export$de4bf689fdc55e48","$43e99bbd272b419a$export$6d9d66de1ac63983","k_immutable","shiftLeft","bitOr","$43e99bbd272b419a$export$b37358d1d465116c","bitXorAssign","$43e99bbd272b419a$export$ec469612ab433c08","a_immutable","c_immutable","$43e99bbd272b419a$export$3af44866218d463","bits_immutable","$43e99bbd272b419a$export$cebcae46bfff0866","$43e99bbd272b419a$var$mx_hash_int_0","seed","$43e99bbd272b419a$var$mx_hash_int_1","$43e99bbd272b419a$var$mx_hash_int_2","$43e99bbd272b419a$var$mx_hash_int_3","xx_immutable","xx","$43e99bbd272b419a$var$mx_hash_int_4","yy_immutable","yy","$43e99bbd272b419a$export$e3e1bc14345163b2","$43e99bbd272b419a$var$mx_hash_vec3_0","$43e99bbd272b419a$var$mx_hash_vec3_1","$43e99bbd272b419a$export$88774482b8eec1ca","$43e99bbd272b419a$var$mx_perlin_noise_float_0","X","Y","fx","fy","$43e99bbd272b419a$var$mx_perlin_noise_float_1","Z","fz","$43e99bbd272b419a$export$8156a390e7b52cb6","$43e99bbd272b419a$var$mx_perlin_noise_vec3_0","$43e99bbd272b419a$var$mx_perlin_noise_vec3_1","$43e99bbd272b419a$export$48933da469822a3e","$43e99bbd272b419a$var$mx_cell_noise_float_0","$43e99bbd272b419a$var$mx_cell_noise_float_1","$43e99bbd272b419a$var$mx_cell_noise_float_2","$43e99bbd272b419a$var$mx_cell_noise_float_3","ix","$43e99bbd272b419a$var$mx_cell_noise_vec3_0","$43e99bbd272b419a$var$mx_cell_noise_vec3_1","iy","$43e99bbd272b419a$var$mx_cell_noise_vec3_2","iz","$43e99bbd272b419a$var$mx_cell_noise_vec3_3","iw","$43e99bbd272b419a$export$f001280a89d27de0","$43e99bbd272b419a$export$2a6701b70ee390ec","octaves_immutable","lacunarity_immutable","diminish_immutable","diminish","lacunarity","octaves","amplitude","$43e99bbd272b419a$export$12ba67f6f21a3945","$43e99bbd272b419a$export$dfda353404f4bfd0","$43e99bbd272b419a$export$970ebd521f5a5812","$43e99bbd272b419a$var$mx_worley_distance_0","xoff_immutable","yoff_immutable","jitter_immutable","metric_immutable","metric","jitter","yoff","xoff","tmp","cellpos","diff","$43e99bbd272b419a$var$mx_worley_distance_1","zoff_immutable","zoff","$43e99bbd272b419a$export$6ac922b7b83e46f7","$43e99bbd272b419a$var$mx_worley_noise_float_0","localpos","sqdist","dist","$43e99bbd272b419a$var$mx_worley_noise_vec2_0","$43e99bbd272b419a$var$mx_worley_noise_vec3_0","$43e99bbd272b419a$var$mx_worley_noise_float_1","$43e99bbd272b419a$var$mx_worley_noise_vec2_1","$43e99bbd272b419a$var$mx_worley_noise_vec3_1","$8c74f20ed8829a7c$export$1c73a657835dd60c","hsv_immutable","hsv","hi","q","$8c74f20ed8829a7c$export$477554281ec906c0","mincomp","maxcomp","$87598b1df24ebe59$export$988eb684c3dd11f6","color_immutable","isAbove","$f06a0a82aa9331ef$var$counter","$f06a0a82aa9331ef$var$params","bounces","samplesPerFrame","autoPause","pause","continuous","stableNoise","getScaledSettings","$f06a0a82aa9331ef$var$setPause","paused","$f06a0a82aa9331ef$var$regenerateScene","$f06a0a82aa9331ef$var$onResize","updateCamera","setScene","$f06a0a82aa9331ef$var$init","LoaderElement","body","WebGLRenderer","antialias","domElement","WebGLPathTracer","multipleImportanceSampling","filterGlossyFactor","minSamples","renderDelay","fadeDuration","Scene","oriCamPos","PerspectiveCamera","OrbitControls","lookAt","Clock","modelUrl","location","envTexture","gltf","Promise","all","RGBELoader","loadAsync","GLTFLoader","setMeshoptDecoder","MeshoptDecoder","BlurredEnvMapGenerator","blurredTex","background","environment","animations","AnimationMixer","clipAction","play","floorTex","generateRadialFloorTexture","floorPlane","PlaneGeometry","metalness","reset","gui","GUI","onChange","listen","$f06a0a82aa9331ef$var$animate","requestAnimationFrame","getDelta","dynamicLowRes","renderSample","isCompiling"],"version":3,"file":"skinnedMesh.49d8c0b2.js.map"}